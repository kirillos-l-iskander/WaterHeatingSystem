

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Fri Apr 09 15:39:17 2021

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK3,global,class=CODE,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
    11                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,noexec
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    13                           	psect	inittext,global,class=CODE,delta=2
    14                           	psect	clrtext,global,class=CODE,delta=2
    15                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    17                           	psect	maintext,global,class=CODE,split=1,delta=2
    18                           	psect	text1,local,class=CODE,merge=1,delta=2
    19                           	psect	text2,local,class=CODE,merge=1,delta=2
    20                           	psect	text3,local,class=CODE,merge=1,delta=2
    21                           	psect	text4,local,class=CODE,merge=1,delta=2
    22                           	psect	text5,local,class=CODE,merge=1,delta=2
    23                           	psect	text6,local,class=CODE,merge=1,delta=2
    24                           	psect	text7,local,class=CODE,merge=1,delta=2
    25                           	psect	text8,local,class=CODE,merge=1,delta=2
    26                           	psect	text9,local,class=CODE,merge=1,delta=2
    27                           	psect	text10,local,class=CODE,merge=1,delta=2
    28                           	psect	text11,local,class=CODE,merge=1,delta=2
    29                           	psect	text12,local,class=CODE,merge=1,delta=2
    30                           	psect	text13,local,class=CODE,merge=1,delta=2
    31                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    32                           	psect	text15,local,class=CODE,merge=1,delta=2
    33                           	psect	text16,local,class=CODE,merge=1,delta=2
    34                           	psect	text17,local,class=CODE,merge=1,delta=2
    35                           	psect	text18,local,class=CODE,merge=1,delta=2
    36                           	psect	text19,local,class=CODE,merge=1,delta=2
    37                           	psect	text20,local,class=CODE,merge=1,delta=2
    38                           	psect	text21,local,class=CODE,merge=1,delta=2
    39                           	psect	text22,local,class=CODE,merge=1,delta=2
    40                           	psect	text23,local,class=CODE,merge=1,delta=2
    41                           	psect	text24,local,class=CODE,merge=1,delta=2
    42                           	psect	text25,local,class=CODE,merge=1,delta=2,group=1
    43                           	psect	text26,local,class=CODE,merge=1,delta=2
    44                           	psect	text27,local,class=CODE,merge=1,delta=2
    45                           	psect	text28,local,class=CODE,merge=1,delta=2
    46                           	psect	text29,local,class=CODE,merge=1,delta=2
    47                           	psect	text30,local,class=CODE,merge=1,delta=2
    48                           	psect	text31,local,class=CODE,merge=1,delta=2
    49                           	psect	text32,local,class=CODE,merge=1,delta=2
    50                           	psect	text33,local,class=CODE,merge=1,delta=2
    51                           	psect	text34,local,class=CODE,merge=1,delta=2
    52                           	psect	text35,local,class=CODE,merge=1,delta=2
    53                           	psect	text36,local,class=CODE,merge=1,delta=2
    54                           	psect	text37,local,class=CODE,merge=1,delta=2
    55                           	psect	text38,local,class=CODE,merge=1,delta=2
    56                           	psect	text39,local,class=CODE,merge=1,delta=2
    57                           	psect	text40,local,class=CODE,merge=1,delta=2
    58                           	psect	text41,local,class=CODE,merge=1,delta=2,group=1
    59                           	psect	text42,local,class=CODE,merge=1,delta=2,group=1
    60                           	psect	text43,local,class=CODE,merge=1,delta=2
    61                           	psect	text44,local,class=CODE,merge=1,delta=2
    62                           	psect	text45,local,class=CODE,merge=1,delta=2
    63                           	psect	text46,local,class=CODE,merge=1,delta=2
    64                           	psect	text47,local,class=CODE,merge=1,delta=2
    65                           	psect	text48,local,class=CODE,merge=1,delta=2
    66                           	psect	text49,local,class=CODE,merge=1,delta=2,group=1
    67                           	psect	text50,local,class=CODE,merge=1,delta=2
    68                           	psect	text51,local,class=CODE,merge=1,delta=2
    69                           	psect	text52,local,class=CODE,merge=1,delta=2
    70                           	psect	text53,local,class=CODE,merge=1,delta=2
    71                           	psect	text54,local,class=CODE,merge=1,delta=2,group=1
    72                           	psect	text55,local,class=CODE,merge=1,delta=2
    73                           	psect	text56,local,class=CODE,merge=1,delta=2
    74                           	psect	text57,local,class=CODE,merge=1,delta=2
    75                           	psect	text58,local,class=CODE,merge=1,delta=2
    76                           	psect	text59,local,class=CODE,merge=1,delta=2
    77                           	psect	text60,local,class=CODE,merge=1,delta=2
    78                           	psect	text61,local,class=CODE,merge=1,delta=2
    79                           	psect	text62,local,class=CODE,merge=1,delta=2
    80                           	psect	text63,local,class=CODE,merge=1,delta=2
    81                           	psect	text64,local,class=CODE,merge=1,delta=2
    82                           	psect	text65,local,class=CODE,merge=1,delta=2
    83                           	psect	text66,local,class=CODE,merge=1,delta=2
    84                           	psect	text67,local,class=CODE,merge=1,delta=2
    85                           	psect	text68,local,class=CODE,merge=1,delta=2
    86                           	psect	text69,local,class=CODE,merge=1,delta=2
    87                           	psect	text70,local,class=CODE,merge=1,delta=2
    88                           	psect	text71,local,class=CODE,merge=1,delta=2,group=1
    89                           	psect	text72,local,class=CODE,merge=1,delta=2
    90                           	psect	text73,local,class=CODE,merge=1,delta=2
    91                           	psect	intentry,global,class=CODE,delta=2
    92                           	psect	text74,local,class=CODE,merge=1,delta=2
    93                           	psect	text75,local,class=CODE,merge=1,delta=2
    94                           	psect	functab,global,class=ENTRY,delta=2
    95                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    96                           	dabs	1,0x7E,2
    97  0000                     
    98                           ; Version 2.20
    99                           ; Generated 12/02/2020 GMT
   100                           ; 
   101                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
   102                           ; All rights reserved.
   103                           ; 
   104                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   105                           ; 
   106                           ; Redistribution and use in source and binary forms, with or without modification, are
   107                           ; permitted provided that the following conditions are met:
   108                           ; 
   109                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   110                           ;        conditions and the following disclaimer.
   111                           ; 
   112                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   113                           ;        of conditions and the following disclaimer in the documentation and/or other
   114                           ;        materials provided with the distribution.
   115                           ; 
   116                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   117                           ;        software without specific prior written permission.
   118                           ; 
   119                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   120                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   121                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   122                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   123                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   124                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   125                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   126                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   127                           ; 
   128                           ; 
   129                           ; Code-generator required, PIC16F877A Definitions
   130                           ; 
   131                           ; SFR Addresses
   132  0000                     	;# 
   133  0001                     	;# 
   134  0002                     	;# 
   135  0003                     	;# 
   136  0004                     	;# 
   137  0005                     	;# 
   138  0006                     	;# 
   139  0007                     	;# 
   140  0008                     	;# 
   141  0009                     	;# 
   142  000A                     	;# 
   143  000B                     	;# 
   144  000C                     	;# 
   145  000D                     	;# 
   146  000E                     	;# 
   147  000E                     	;# 
   148  000F                     	;# 
   149  0010                     	;# 
   150  0011                     	;# 
   151  0012                     	;# 
   152  0013                     	;# 
   153  0014                     	;# 
   154  0015                     	;# 
   155  0015                     	;# 
   156  0016                     	;# 
   157  0017                     	;# 
   158  0018                     	;# 
   159  0019                     	;# 
   160  001A                     	;# 
   161  001B                     	;# 
   162  001B                     	;# 
   163  001C                     	;# 
   164  001D                     	;# 
   165  001E                     	;# 
   166  001F                     	;# 
   167  0081                     	;# 
   168  0085                     	;# 
   169  0086                     	;# 
   170  0087                     	;# 
   171  0088                     	;# 
   172  0089                     	;# 
   173  008C                     	;# 
   174  008D                     	;# 
   175  008E                     	;# 
   176  0091                     	;# 
   177  0092                     	;# 
   178  0093                     	;# 
   179  0094                     	;# 
   180  0098                     	;# 
   181  0099                     	;# 
   182  009C                     	;# 
   183  009D                     	;# 
   184  009E                     	;# 
   185  009F                     	;# 
   186  010C                     	;# 
   187  010D                     	;# 
   188  010E                     	;# 
   189  010F                     	;# 
   190  018C                     	;# 
   191  018D                     	;# 
   192  0000                     	;# 
   193  0001                     	;# 
   194  0002                     	;# 
   195  0003                     	;# 
   196  0004                     	;# 
   197  0005                     	;# 
   198  0006                     	;# 
   199  0007                     	;# 
   200  0008                     	;# 
   201  0009                     	;# 
   202  000A                     	;# 
   203  000B                     	;# 
   204  000C                     	;# 
   205  000D                     	;# 
   206  000E                     	;# 
   207  000E                     	;# 
   208  000F                     	;# 
   209  0010                     	;# 
   210  0011                     	;# 
   211  0012                     	;# 
   212  0013                     	;# 
   213  0014                     	;# 
   214  0015                     	;# 
   215  0015                     	;# 
   216  0016                     	;# 
   217  0017                     	;# 
   218  0018                     	;# 
   219  0019                     	;# 
   220  001A                     	;# 
   221  001B                     	;# 
   222  001B                     	;# 
   223  001C                     	;# 
   224  001D                     	;# 
   225  001E                     	;# 
   226  001F                     	;# 
   227  0081                     	;# 
   228  0085                     	;# 
   229  0086                     	;# 
   230  0087                     	;# 
   231  0088                     	;# 
   232  0089                     	;# 
   233  008C                     	;# 
   234  008D                     	;# 
   235  008E                     	;# 
   236  0091                     	;# 
   237  0092                     	;# 
   238  0093                     	;# 
   239  0094                     	;# 
   240  0098                     	;# 
   241  0099                     	;# 
   242  009C                     	;# 
   243  009D                     	;# 
   244  009E                     	;# 
   245  009F                     	;# 
   246  010C                     	;# 
   247  010D                     	;# 
   248  010E                     	;# 
   249  010F                     	;# 
   250  018C                     	;# 
   251  018D                     	;# 
   252  0000                     	;# 
   253  0001                     	;# 
   254  0002                     	;# 
   255  0003                     	;# 
   256  0004                     	;# 
   257  0005                     	;# 
   258  0006                     	;# 
   259  0007                     	;# 
   260  0008                     	;# 
   261  0009                     	;# 
   262  000A                     	;# 
   263  000B                     	;# 
   264  000C                     	;# 
   265  000D                     	;# 
   266  000E                     	;# 
   267  000E                     	;# 
   268  000F                     	;# 
   269  0010                     	;# 
   270  0011                     	;# 
   271  0012                     	;# 
   272  0013                     	;# 
   273  0014                     	;# 
   274  0015                     	;# 
   275  0015                     	;# 
   276  0016                     	;# 
   277  0017                     	;# 
   278  0018                     	;# 
   279  0019                     	;# 
   280  001A                     	;# 
   281  001B                     	;# 
   282  001B                     	;# 
   283  001C                     	;# 
   284  001D                     	;# 
   285  001E                     	;# 
   286  001F                     	;# 
   287  0081                     	;# 
   288  0085                     	;# 
   289  0086                     	;# 
   290  0087                     	;# 
   291  0088                     	;# 
   292  0089                     	;# 
   293  008C                     	;# 
   294  008D                     	;# 
   295  008E                     	;# 
   296  0091                     	;# 
   297  0092                     	;# 
   298  0093                     	;# 
   299  0094                     	;# 
   300  0098                     	;# 
   301  0099                     	;# 
   302  009C                     	;# 
   303  009D                     	;# 
   304  009E                     	;# 
   305  009F                     	;# 
   306  010C                     	;# 
   307  010D                     	;# 
   308  010E                     	;# 
   309  010F                     	;# 
   310  018C                     	;# 
   311  018D                     	;# 
   312  0000                     	;# 
   313  0001                     	;# 
   314  0002                     	;# 
   315  0003                     	;# 
   316  0004                     	;# 
   317  0005                     	;# 
   318  0006                     	;# 
   319  0007                     	;# 
   320  0008                     	;# 
   321  0009                     	;# 
   322  000A                     	;# 
   323  000B                     	;# 
   324  000C                     	;# 
   325  000D                     	;# 
   326  000E                     	;# 
   327  000E                     	;# 
   328  000F                     	;# 
   329  0010                     	;# 
   330  0011                     	;# 
   331  0012                     	;# 
   332  0013                     	;# 
   333  0014                     	;# 
   334  0015                     	;# 
   335  0015                     	;# 
   336  0016                     	;# 
   337  0017                     	;# 
   338  0018                     	;# 
   339  0019                     	;# 
   340  001A                     	;# 
   341  001B                     	;# 
   342  001B                     	;# 
   343  001C                     	;# 
   344  001D                     	;# 
   345  001E                     	;# 
   346  001F                     	;# 
   347  0081                     	;# 
   348  0085                     	;# 
   349  0086                     	;# 
   350  0087                     	;# 
   351  0088                     	;# 
   352  0089                     	;# 
   353  008C                     	;# 
   354  008D                     	;# 
   355  008E                     	;# 
   356  0091                     	;# 
   357  0092                     	;# 
   358  0093                     	;# 
   359  0094                     	;# 
   360  0098                     	;# 
   361  0099                     	;# 
   362  009C                     	;# 
   363  009D                     	;# 
   364  009E                     	;# 
   365  009F                     	;# 
   366  010C                     	;# 
   367  010D                     	;# 
   368  010E                     	;# 
   369  010F                     	;# 
   370  018C                     	;# 
   371  018D                     	;# 
   372  0000                     	;# 
   373  0001                     	;# 
   374  0002                     	;# 
   375  0003                     	;# 
   376  0004                     	;# 
   377  0005                     	;# 
   378  0006                     	;# 
   379  0007                     	;# 
   380  0008                     	;# 
   381  0009                     	;# 
   382  000A                     	;# 
   383  000B                     	;# 
   384  000C                     	;# 
   385  000D                     	;# 
   386  000E                     	;# 
   387  000E                     	;# 
   388  000F                     	;# 
   389  0010                     	;# 
   390  0011                     	;# 
   391  0012                     	;# 
   392  0013                     	;# 
   393  0014                     	;# 
   394  0015                     	;# 
   395  0015                     	;# 
   396  0016                     	;# 
   397  0017                     	;# 
   398  0018                     	;# 
   399  0019                     	;# 
   400  001A                     	;# 
   401  001B                     	;# 
   402  001B                     	;# 
   403  001C                     	;# 
   404  001D                     	;# 
   405  001E                     	;# 
   406  001F                     	;# 
   407  0081                     	;# 
   408  0085                     	;# 
   409  0086                     	;# 
   410  0087                     	;# 
   411  0088                     	;# 
   412  0089                     	;# 
   413  008C                     	;# 
   414  008D                     	;# 
   415  008E                     	;# 
   416  0091                     	;# 
   417  0092                     	;# 
   418  0093                     	;# 
   419  0094                     	;# 
   420  0098                     	;# 
   421  0099                     	;# 
   422  009C                     	;# 
   423  009D                     	;# 
   424  009E                     	;# 
   425  009F                     	;# 
   426  010C                     	;# 
   427  010D                     	;# 
   428  010E                     	;# 
   429  010F                     	;# 
   430  018C                     	;# 
   431  018D                     	;# 
   432  0000                     	;# 
   433  0001                     	;# 
   434  0002                     	;# 
   435  0003                     	;# 
   436  0004                     	;# 
   437  0005                     	;# 
   438  0006                     	;# 
   439  0007                     	;# 
   440  0008                     	;# 
   441  0009                     	;# 
   442  000A                     	;# 
   443  000B                     	;# 
   444  000C                     	;# 
   445  000D                     	;# 
   446  000E                     	;# 
   447  000E                     	;# 
   448  000F                     	;# 
   449  0010                     	;# 
   450  0011                     	;# 
   451  0012                     	;# 
   452  0013                     	;# 
   453  0014                     	;# 
   454  0015                     	;# 
   455  0015                     	;# 
   456  0016                     	;# 
   457  0017                     	;# 
   458  0018                     	;# 
   459  0019                     	;# 
   460  001A                     	;# 
   461  001B                     	;# 
   462  001B                     	;# 
   463  001C                     	;# 
   464  001D                     	;# 
   465  001E                     	;# 
   466  001F                     	;# 
   467  0081                     	;# 
   468  0085                     	;# 
   469  0086                     	;# 
   470  0087                     	;# 
   471  0088                     	;# 
   472  0089                     	;# 
   473  008C                     	;# 
   474  008D                     	;# 
   475  008E                     	;# 
   476  0091                     	;# 
   477  0092                     	;# 
   478  0093                     	;# 
   479  0094                     	;# 
   480  0098                     	;# 
   481  0099                     	;# 
   482  009C                     	;# 
   483  009D                     	;# 
   484  009E                     	;# 
   485  009F                     	;# 
   486  010C                     	;# 
   487  010D                     	;# 
   488  010E                     	;# 
   489  010F                     	;# 
   490  018C                     	;# 
   491  018D                     	;# 
   492  0000                     	;# 
   493  0001                     	;# 
   494  0002                     	;# 
   495  0003                     	;# 
   496  0004                     	;# 
   497  0005                     	;# 
   498  0006                     	;# 
   499  0007                     	;# 
   500  0008                     	;# 
   501  0009                     	;# 
   502  000A                     	;# 
   503  000B                     	;# 
   504  000C                     	;# 
   505  000D                     	;# 
   506  000E                     	;# 
   507  000E                     	;# 
   508  000F                     	;# 
   509  0010                     	;# 
   510  0011                     	;# 
   511  0012                     	;# 
   512  0013                     	;# 
   513  0014                     	;# 
   514  0015                     	;# 
   515  0015                     	;# 
   516  0016                     	;# 
   517  0017                     	;# 
   518  0018                     	;# 
   519  0019                     	;# 
   520  001A                     	;# 
   521  001B                     	;# 
   522  001B                     	;# 
   523  001C                     	;# 
   524  001D                     	;# 
   525  001E                     	;# 
   526  001F                     	;# 
   527  0081                     	;# 
   528  0085                     	;# 
   529  0086                     	;# 
   530  0087                     	;# 
   531  0088                     	;# 
   532  0089                     	;# 
   533  008C                     	;# 
   534  008D                     	;# 
   535  008E                     	;# 
   536  0091                     	;# 
   537  0092                     	;# 
   538  0093                     	;# 
   539  0094                     	;# 
   540  0098                     	;# 
   541  0099                     	;# 
   542  009C                     	;# 
   543  009D                     	;# 
   544  009E                     	;# 
   545  009F                     	;# 
   546  010C                     	;# 
   547  010D                     	;# 
   548  010E                     	;# 
   549  010F                     	;# 
   550  018C                     	;# 
   551  018D                     	;# 
   552  0000                     	;# 
   553  0001                     	;# 
   554  0002                     	;# 
   555  0003                     	;# 
   556  0004                     	;# 
   557  0005                     	;# 
   558  0006                     	;# 
   559  0007                     	;# 
   560  0008                     	;# 
   561  0009                     	;# 
   562  000A                     	;# 
   563  000B                     	;# 
   564  000C                     	;# 
   565  000D                     	;# 
   566  000E                     	;# 
   567  000E                     	;# 
   568  000F                     	;# 
   569  0010                     	;# 
   570  0011                     	;# 
   571  0012                     	;# 
   572  0013                     	;# 
   573  0014                     	;# 
   574  0015                     	;# 
   575  0015                     	;# 
   576  0016                     	;# 
   577  0017                     	;# 
   578  0018                     	;# 
   579  0019                     	;# 
   580  001A                     	;# 
   581  001B                     	;# 
   582  001B                     	;# 
   583  001C                     	;# 
   584  001D                     	;# 
   585  001E                     	;# 
   586  001F                     	;# 
   587  0081                     	;# 
   588  0085                     	;# 
   589  0086                     	;# 
   590  0087                     	;# 
   591  0088                     	;# 
   592  0089                     	;# 
   593  008C                     	;# 
   594  008D                     	;# 
   595  008E                     	;# 
   596  0091                     	;# 
   597  0092                     	;# 
   598  0093                     	;# 
   599  0094                     	;# 
   600  0098                     	;# 
   601  0099                     	;# 
   602  009C                     	;# 
   603  009D                     	;# 
   604  009E                     	;# 
   605  009F                     	;# 
   606  010C                     	;# 
   607  010D                     	;# 
   608  010E                     	;# 
   609  010F                     	;# 
   610  018C                     	;# 
   611  018D                     	;# 
   612  0000                     	;# 
   613  0001                     	;# 
   614  0002                     	;# 
   615  0003                     	;# 
   616  0004                     	;# 
   617  0005                     	;# 
   618  0006                     	;# 
   619  0007                     	;# 
   620  0008                     	;# 
   621  0009                     	;# 
   622  000A                     	;# 
   623  000B                     	;# 
   624  000C                     	;# 
   625  000D                     	;# 
   626  000E                     	;# 
   627  000E                     	;# 
   628  000F                     	;# 
   629  0010                     	;# 
   630  0011                     	;# 
   631  0012                     	;# 
   632  0013                     	;# 
   633  0014                     	;# 
   634  0015                     	;# 
   635  0015                     	;# 
   636  0016                     	;# 
   637  0017                     	;# 
   638  0018                     	;# 
   639  0019                     	;# 
   640  001A                     	;# 
   641  001B                     	;# 
   642  001B                     	;# 
   643  001C                     	;# 
   644  001D                     	;# 
   645  001E                     	;# 
   646  001F                     	;# 
   647  0081                     	;# 
   648  0085                     	;# 
   649  0086                     	;# 
   650  0087                     	;# 
   651  0088                     	;# 
   652  0089                     	;# 
   653  008C                     	;# 
   654  008D                     	;# 
   655  008E                     	;# 
   656  0091                     	;# 
   657  0092                     	;# 
   658  0093                     	;# 
   659  0094                     	;# 
   660  0098                     	;# 
   661  0099                     	;# 
   662  009C                     	;# 
   663  009D                     	;# 
   664  009E                     	;# 
   665  009F                     	;# 
   666  010C                     	;# 
   667  010D                     	;# 
   668  010E                     	;# 
   669  010F                     	;# 
   670  018C                     	;# 
   671  018D                     	;# 
   672  0000                     	;# 
   673  0001                     	;# 
   674  0002                     	;# 
   675  0003                     	;# 
   676  0004                     	;# 
   677  0005                     	;# 
   678  0006                     	;# 
   679  0007                     	;# 
   680  0008                     	;# 
   681  0009                     	;# 
   682  000A                     	;# 
   683  000B                     	;# 
   684  000C                     	;# 
   685  000D                     	;# 
   686  000E                     	;# 
   687  000E                     	;# 
   688  000F                     	;# 
   689  0010                     	;# 
   690  0011                     	;# 
   691  0012                     	;# 
   692  0013                     	;# 
   693  0014                     	;# 
   694  0015                     	;# 
   695  0015                     	;# 
   696  0016                     	;# 
   697  0017                     	;# 
   698  0018                     	;# 
   699  0019                     	;# 
   700  001A                     	;# 
   701  001B                     	;# 
   702  001B                     	;# 
   703  001C                     	;# 
   704  001D                     	;# 
   705  001E                     	;# 
   706  001F                     	;# 
   707  0081                     	;# 
   708  0085                     	;# 
   709  0086                     	;# 
   710  0087                     	;# 
   711  0088                     	;# 
   712  0089                     	;# 
   713  008C                     	;# 
   714  008D                     	;# 
   715  008E                     	;# 
   716  0091                     	;# 
   717  0092                     	;# 
   718  0093                     	;# 
   719  0094                     	;# 
   720  0098                     	;# 
   721  0099                     	;# 
   722  009C                     	;# 
   723  009D                     	;# 
   724  009E                     	;# 
   725  009F                     	;# 
   726  010C                     	;# 
   727  010D                     	;# 
   728  010E                     	;# 
   729  010F                     	;# 
   730  018C                     	;# 
   731  018D                     	;# 
   732  0000                     	;# 
   733  0001                     	;# 
   734  0002                     	;# 
   735  0003                     	;# 
   736  0004                     	;# 
   737  0005                     	;# 
   738  0006                     	;# 
   739  0007                     	;# 
   740  0008                     	;# 
   741  0009                     	;# 
   742  000A                     	;# 
   743  000B                     	;# 
   744  000C                     	;# 
   745  000D                     	;# 
   746  000E                     	;# 
   747  000E                     	;# 
   748  000F                     	;# 
   749  0010                     	;# 
   750  0011                     	;# 
   751  0012                     	;# 
   752  0013                     	;# 
   753  0014                     	;# 
   754  0015                     	;# 
   755  0015                     	;# 
   756  0016                     	;# 
   757  0017                     	;# 
   758  0018                     	;# 
   759  0019                     	;# 
   760  001A                     	;# 
   761  001B                     	;# 
   762  001B                     	;# 
   763  001C                     	;# 
   764  001D                     	;# 
   765  001E                     	;# 
   766  001F                     	;# 
   767  0081                     	;# 
   768  0085                     	;# 
   769  0086                     	;# 
   770  0087                     	;# 
   771  0088                     	;# 
   772  0089                     	;# 
   773  008C                     	;# 
   774  008D                     	;# 
   775  008E                     	;# 
   776  0091                     	;# 
   777  0092                     	;# 
   778  0093                     	;# 
   779  0094                     	;# 
   780  0098                     	;# 
   781  0099                     	;# 
   782  009C                     	;# 
   783  009D                     	;# 
   784  009E                     	;# 
   785  009F                     	;# 
   786  010C                     	;# 
   787  010D                     	;# 
   788  010E                     	;# 
   789  010F                     	;# 
   790  018C                     	;# 
   791  018D                     	;# 
   792  0000                     	;# 
   793  0001                     	;# 
   794  0002                     	;# 
   795  0003                     	;# 
   796  0004                     	;# 
   797  0005                     	;# 
   798  0006                     	;# 
   799  0007                     	;# 
   800  0008                     	;# 
   801  0009                     	;# 
   802  000A                     	;# 
   803  000B                     	;# 
   804  000C                     	;# 
   805  000D                     	;# 
   806  000E                     	;# 
   807  000E                     	;# 
   808  000F                     	;# 
   809  0010                     	;# 
   810  0011                     	;# 
   811  0012                     	;# 
   812  0013                     	;# 
   813  0014                     	;# 
   814  0015                     	;# 
   815  0015                     	;# 
   816  0016                     	;# 
   817  0017                     	;# 
   818  0018                     	;# 
   819  0019                     	;# 
   820  001A                     	;# 
   821  001B                     	;# 
   822  001B                     	;# 
   823  001C                     	;# 
   824  001D                     	;# 
   825  001E                     	;# 
   826  001F                     	;# 
   827  0081                     	;# 
   828  0085                     	;# 
   829  0086                     	;# 
   830  0087                     	;# 
   831  0088                     	;# 
   832  0089                     	;# 
   833  008C                     	;# 
   834  008D                     	;# 
   835  008E                     	;# 
   836  0091                     	;# 
   837  0092                     	;# 
   838  0093                     	;# 
   839  0094                     	;# 
   840  0098                     	;# 
   841  0099                     	;# 
   842  009C                     	;# 
   843  009D                     	;# 
   844  009E                     	;# 
   845  009F                     	;# 
   846  010C                     	;# 
   847  010D                     	;# 
   848  010E                     	;# 
   849  010F                     	;# 
   850  018C                     	;# 
   851  018D                     	;# 
   852  0000                     	;# 
   853  0001                     	;# 
   854  0002                     	;# 
   855  0003                     	;# 
   856  0004                     	;# 
   857  0005                     	;# 
   858  0006                     	;# 
   859  0007                     	;# 
   860  0008                     	;# 
   861  0009                     	;# 
   862  000A                     	;# 
   863  000B                     	;# 
   864  000C                     	;# 
   865  000D                     	;# 
   866  000E                     	;# 
   867  000E                     	;# 
   868  000F                     	;# 
   869  0010                     	;# 
   870  0011                     	;# 
   871  0012                     	;# 
   872  0013                     	;# 
   873  0014                     	;# 
   874  0015                     	;# 
   875  0015                     	;# 
   876  0016                     	;# 
   877  0017                     	;# 
   878  0018                     	;# 
   879  0019                     	;# 
   880  001A                     	;# 
   881  001B                     	;# 
   882  001B                     	;# 
   883  001C                     	;# 
   884  001D                     	;# 
   885  001E                     	;# 
   886  001F                     	;# 
   887  0081                     	;# 
   888  0085                     	;# 
   889  0086                     	;# 
   890  0087                     	;# 
   891  0088                     	;# 
   892  0089                     	;# 
   893  008C                     	;# 
   894  008D                     	;# 
   895  008E                     	;# 
   896  0091                     	;# 
   897  0092                     	;# 
   898  0093                     	;# 
   899  0094                     	;# 
   900  0098                     	;# 
   901  0099                     	;# 
   902  009C                     	;# 
   903  009D                     	;# 
   904  009E                     	;# 
   905  009F                     	;# 
   906  010C                     	;# 
   907  010D                     	;# 
   908  010E                     	;# 
   909  010F                     	;# 
   910  018C                     	;# 
   911  018D                     	;# 
   912  0000                     	;# 
   913  0001                     	;# 
   914  0002                     	;# 
   915  0003                     	;# 
   916  0004                     	;# 
   917  0005                     	;# 
   918  0006                     	;# 
   919  0007                     	;# 
   920  0008                     	;# 
   921  0009                     	;# 
   922  000A                     	;# 
   923  000B                     	;# 
   924  000C                     	;# 
   925  000D                     	;# 
   926  000E                     	;# 
   927  000E                     	;# 
   928  000F                     	;# 
   929  0010                     	;# 
   930  0011                     	;# 
   931  0012                     	;# 
   932  0013                     	;# 
   933  0014                     	;# 
   934  0015                     	;# 
   935  0015                     	;# 
   936  0016                     	;# 
   937  0017                     	;# 
   938  0018                     	;# 
   939  0019                     	;# 
   940  001A                     	;# 
   941  001B                     	;# 
   942  001B                     	;# 
   943  001C                     	;# 
   944  001D                     	;# 
   945  001E                     	;# 
   946  001F                     	;# 
   947  0081                     	;# 
   948  0085                     	;# 
   949  0086                     	;# 
   950  0087                     	;# 
   951  0088                     	;# 
   952  0089                     	;# 
   953  008C                     	;# 
   954  008D                     	;# 
   955  008E                     	;# 
   956  0091                     	;# 
   957  0092                     	;# 
   958  0093                     	;# 
   959  0094                     	;# 
   960  0098                     	;# 
   961  0099                     	;# 
   962  009C                     	;# 
   963  009D                     	;# 
   964  009E                     	;# 
   965  009F                     	;# 
   966  010C                     	;# 
   967  010D                     	;# 
   968  010E                     	;# 
   969  010F                     	;# 
   970  018C                     	;# 
   971  018D                     	;# 
   972                           
   973                           	psect	idataBANK0
   974  182A                     __pidataBANK0:
   975                           
   976                           ;initializer for _gpio
   977  182A  3405               	retlw	5
   978  182B  3400               	retlw	0
   979  182C  3406               	retlw	6
   980  182D  3400               	retlw	0
   981  182E  3407               	retlw	7
   982  182F  3400               	retlw	0
   983  1830  3408               	retlw	8
   984  1831  3400               	retlw	0
   985  1832  3409               	retlw	9
   986  1833  3400               	retlw	0
   987                           
   988                           	psect	idataBANK3
   989  1820                     __pidataBANK3:
   990                           
   991                           ;initializer for _ssdSymbolPattern
   992  1820  343F               	retlw	63
   993  1821  3406               	retlw	6
   994  1822  345B               	retlw	91
   995  1823  344F               	retlw	79
   996  1824  3466               	retlw	102
   997  1825  346D               	retlw	109
   998  1826  347D               	retlw	125
   999  1827  3407               	retlw	7
  1000  1828  347F               	retlw	127
  1001  1829  346F               	retlw	111
  1002  0015                     _CCPR1	set	21
  1003  0013                     _SSPBUF	set	19
  1004  0014                     _SSPCON	set	20
  1005  001E                     _ADRESH	set	30
  1006  001F                     _ADCON0	set	31
  1007  0010                     _T1CON	set	16
  1008  0017                     _CCP1CON	set	23
  1009  0001                     _TMR0	set	1
  1010  000B                     _INTCON	set	11
  1011  000B                     _INTCONbits	set	11
  1012  000C                     _PIR1	set	12
  1013  0009                     _PORTE	set	9
  1014  0008                     _PORTD	set	8
  1015  0007                     _PORTC	set	7
  1016  0006                     _PORTB	set	6
  1017  0005                     _PORTA	set	5
  1018  0093                     _SSPADD	set	147
  1019  0091                     _SSPCON2	set	145
  1020  0094                     _SSPSTAT	set	148
  1021  009E                     _ADRESL	set	158
  1022  009F                     _ADCON1	set	159
  1023  0081                     _OPTION_REG	set	129
  1024  008C                     _PIE1	set	140
  1025                           
  1026                           	psect	cinit
  1027  0015                     start_initialization:	
  1028                           ; #config settings
  1029                           
  1030  0015                     __initialization:
  1031                           
  1032                           ; Initialize objects allocated to BANK3
  1033  0015  1783               	bsf	3,7	;select IRP bank2
  1034  0016  30C1               	movlw	low (__pdataBANK3+10)
  1035  0017  00FD               	movwf	btemp+-1
  1036  0018  3018               	movlw	high __pidataBANK3
  1037  0019  00FE               	movwf	btemp
  1038  001A  3020               	movlw	low __pidataBANK3
  1039  001B  00FF               	movwf	btemp+1
  1040  001C  30B7               	movlw	low __pdataBANK3
  1041  001D  0084               	movwf	4
  1042  001E  160A  158A  20AF  120A  118A  	fcall	init_ram0
  1043                           
  1044                           ; Initialize objects allocated to BANK0
  1045  0023  1383               	bcf	3,7	;select IRP bank0
  1046  0024  3066               	movlw	low (__pdataBANK0+10)
  1047  0025  00FD               	movwf	btemp+-1
  1048  0026  3018               	movlw	high __pidataBANK0
  1049  0027  00FE               	movwf	btemp
  1050  0028  302A               	movlw	low __pidataBANK0
  1051  0029  00FF               	movwf	btemp+1
  1052  002A  305C               	movlw	low __pdataBANK0
  1053  002B  0084               	movwf	4
  1054  002C  160A  158A  20AF  120A  118A  	fcall	init_ram0
  1055                           
  1056                           ; Clear objects allocated to BANK3
  1057  0031  1783               	bsf	3,7	;select IRP bank2
  1058  0032  3090               	movlw	low __pbssBANK3
  1059  0033  0084               	movwf	4
  1060  0034  30B7               	movlw	low (__pbssBANK3+39)
  1061  0035  160A  158A  2018  120A  118A  	fcall	clear_ram0
  1062                           
  1063                           ; Clear objects allocated to BANK2
  1064  003A  3010               	movlw	low __pbssBANK2
  1065  003B  0084               	movwf	4
  1066  003C  304E               	movlw	low (__pbssBANK2+62)
  1067  003D  160A  158A  2018  120A  118A  	fcall	clear_ram0
  1068                           
  1069                           ; Clear objects allocated to BANK1
  1070  0042  1383               	bcf	3,7	;select IRP bank0
  1071  0043  30A0               	movlw	low __pbssBANK1
  1072  0044  0084               	movwf	4
  1073  0045  30E8               	movlw	low (__pbssBANK1+72)
  1074  0046  160A  158A  2018  120A  118A  	fcall	clear_ram0
  1075                           
  1076                           ; Clear objects allocated to BANK0
  1077  004B  01E6               	clrf	__pbssBANK0& (0+127)
  1078  004C  01E7               	clrf	(__pbssBANK0+1)& (0+127)
  1079  004D  01E8               	clrf	(__pbssBANK0+2)& (0+127)
  1080  004E  01E9               	clrf	(__pbssBANK0+3)& (0+127)
  1081  004F  01EA               	clrf	(__pbssBANK0+4)& (0+127)
  1082  0050                     end_of_initialization:	
  1083                           ;End of C runtime variable initialization code
  1084                           
  1085  0050                     __end_of__initialization:
  1086  0050  0183               	clrf	3
  1087  0051  120A  118A  2E7C   	ljmp	_main	;jump to C main() function
  1088                           
  1089                           	psect	bssBANK0
  1090  0066                     __pbssBANK0:
  1091  0066                     _tempctrl:
  1092  0066                     	ds	5
  1093                           
  1094                           	psect	dataBANK0
  1095  005C                     __pdataBANK0:
  1096  005C                     _gpio:
  1097  005C                     	ds	10
  1098                           
  1099                           	psect	bssBANK1
  1100  00A0                     __pbssBANK1:
  1101  00A0                     _tempsnsr:
  1102  00A0                     	ds	25
  1103  00B9                     _led:
  1104  00B9                     	ds	16
  1105  00C9                     _heater:
  1106  00C9                     	ds	31
  1107                           
  1108                           	psect	bssBANK3
  1109  0190                     __pbssBANK3:
  1110  0190                     _sw:
  1111  0190                     	ds	15
  1112  019F                     _ssd:
  1113  019F                     	ds	24
  1114                           
  1115                           	psect	dataBANK3
  1116  01B7                     __pdataBANK3:
  1117  01B7                     _ssdSymbolPattern:
  1118  01B7                     	ds	10
  1119                           
  1120                           	psect	bssBANK2
  1121  0110                     __pbssBANK2:
  1122  0110                     _scheduler:
  1123  0110                     	ds	62
  1124                           
  1125                           	psect	inittext
  1126  18AB                     init_fetch0:	
  1127                           ;	Called with low address in FSR and high address in W
  1128                           
  1129  18AB  087E               	movf	btemp,w
  1130  18AC  008A               	movwf	10
  1131  18AD  087F               	movf	btemp+1,w
  1132  18AE  0082               	movwf	2
  1133  18AF                     init_ram0:	
  1134                           ;Called with:
  1135                           ;	high address of idata address in btemp 
  1136                           ;	low address of idata address in btemp+1 
  1137                           ;	low address of data in FSR
  1138                           ;	high address + 1 of data in btemp-1
  1139                           
  1140  18AF  160A  158A  20AB  160A  158A  	fcall	init_fetch0
  1141  18B4  0080               	movwf	0
  1142  18B5  0A84               	incf	4,f
  1143  18B6  0804               	movf	4,w
  1144  18B7  067D               	xorwf	btemp+-1,w
  1145  18B8  1903               	btfsc	3,2
  1146  18B9  3400               	retlw	0
  1147  18BA  0AFF               	incf	btemp+1,f
  1148  18BB  1903               	btfsc	3,2
  1149  18BC  0AFE               	incf	btemp,f
  1150  18BD  28AF               	goto	init_ram0
  1151                           
  1152                           	psect	clrtext
  1153  1818                     clear_ram0:	
  1154                           ;	Called with FSR containing the base address, and
  1155                           ;	W with the last address+1
  1156                           
  1157  1818  0064               	clrwdt	;clear the watchdog before getting into this loop
  1158  1819                     clrloop0:
  1159  1819  0180               	clrf	0	;clear RAM location pointed to by FSR
  1160  181A  0A84               	incf	4,f	;increment pointer
  1161  181B  0604               	xorwf	4,w	;XOR with final address
  1162  181C  1903               	btfsc	3,2	;have we reached the end yet?
  1163  181D  3400               	retlw	0	;all done for this memory range, return
  1164  181E  0604               	xorwf	4,w	;XOR again to restore value
  1165  181F  2819               	goto	clrloop0	;do the next byte
  1166                           
  1167                           	psect	cstackCOMMON
  1168  0070                     __pcstackCOMMON:
  1169  0070                     ?_Scheduler_update:
  1170  0070                     ?_Scheduler_init:	
  1171                           ; 1 bytes @ 0x0
  1172                           
  1173  0070                     ?_Scheduler_start:	
  1174                           ; 1 bytes @ 0x0
  1175                           
  1176  0070                     ?_Scheduler_dispatchTasks:	
  1177                           ; 1 bytes @ 0x0
  1178                           
  1179  0070                     ?_Scheduler_deleteTask:	
  1180                           ; 1 bytes @ 0x0
  1181                           
  1182  0070                     ?_initLedHardware:	
  1183                           ; 1 bytes @ 0x0
  1184                           
  1185  0070                     ?_initSwitchHardware:	
  1186                           ; 1 bytes @ 0x0
  1187                           
  1188  0070                     ?_getSwitchHardwareState:	
  1189                           ; 1 bytes @ 0x0
  1190                           
  1191  0070                     ?_initSsdHardware:	
  1192                           ; 1 bytes @ 0x0
  1193                           
  1194  0070                     ?_I2c_startMaster:	
  1195                           ; 1 bytes @ 0x0
  1196                           
  1197  0070                     ?_I2c_repeatedStartMaster:	
  1198                           ; 1 bytes @ 0x0
  1199                           
  1200  0070                     ?_I2c_writeMaster:	
  1201                           ; 1 bytes @ 0x0
  1202                           
  1203  0070                     ?_I2c_stopMaster:	
  1204                           ; 1 bytes @ 0x0
  1205                           
  1206  0070                     ?_I2c_read:	
  1207                           ; 1 bytes @ 0x0
  1208                           
  1209  0070                     ?_I2c_nack:	
  1210                           ; 1 bytes @ 0x0
  1211                           
  1212  0070                     ?_I2c_ack:	
  1213                           ; 1 bytes @ 0x0
  1214                           
  1215  0070                     ?_Tempsnsr_getState:	
  1216                           ; 1 bytes @ 0x0
  1217                           
  1218  0070                     ?_initTempctrlHardware:	
  1219                           ; 1 bytes @ 0x0
  1220                           
  1221  0070                     ?_initTempsnsrHardware:	
  1222                           ; 1 bytes @ 0x0
  1223                           
  1224  0070                     ?_getTempsnsrHarwareState:	
  1225                           ; 1 bytes @ 0x0
  1226                           
  1227  0070                     ?_getAvgTemp:	
  1228                           ; 1 bytes @ 0x0
  1229                           
  1230  0070                     ?_SysTick_Handler:	
  1231                           ; 1 bytes @ 0x0
  1232                           
  1233  0070                     ?_Scheduler_displayError:	
  1234                           ; 1 bytes @ 0x0
  1235                           
  1236  0070                     ?_Scheduler_sleepHardware:	
  1237                           ; 1 bytes @ 0x0
  1238                           
  1239  0070                     ?_Scheduler_reportStatus:	
  1240                           ; 1 bytes @ 0x0
  1241                           
  1242  0070                     ?_Scheduler_goToSleep:	
  1243                           ; 1 bytes @ 0x0
  1244                           
  1245  0070                     ?_Switch_getState:	
  1246                           ; 1 bytes @ 0x0
  1247                           
  1248  0070                     ?_Adc_init:	
  1249                           ; 1 bytes @ 0x0
  1250                           
  1251  0070                     ?_Eeprom_init:	
  1252                           ; 1 bytes @ 0x0
  1253                           
  1254  0070                     ?_Eeprom_read:	
  1255                           ; 1 bytes @ 0x0
  1256                           
  1257  0070                     ?_I2c_waitMaster:	
  1258                           ; 1 bytes @ 0x0
  1259                           
  1260  0070                     ?i1___bmul:	
  1261                           ; 1 bytes @ 0x0
  1262                           
  1263  0070                     ?_main:	
  1264                           ; 1 bytes @ 0x0
  1265                           
  1266  0070                     Timer0_init@mode:	
  1267                           ; 2 bytes @ 0x0
  1268                           
  1269  0070                     Timer1_init@mode:	
  1270                           ; 1 bytes @ 0x0
  1271                           
  1272  0070                     Adc_init@id:	
  1273                           ; 1 bytes @ 0x0
  1274                           
  1275  0070                     Adc_getState@id:	
  1276                           ; 1 bytes @ 0x0
  1277                           
  1278  0070                     i1___bmul@multiplicand:	
  1279                           ; 1 bytes @ 0x0
  1280                           
  1281                           
  1282                           ; 1 bytes @ 0x0
  1283  0070                     	ds	1
  1284  0071                     ??i1___bmul:
  1285  0071                     i1___bmul@product:	
  1286                           ; 1 bytes @ 0x1
  1287                           
  1288                           
  1289                           ; 1 bytes @ 0x1
  1290  0071                     	ds	1
  1291  0072                     i1___bmul@multiplier:
  1292                           
  1293                           ; 1 bytes @ 0x2
  1294  0072                     	ds	1
  1295  0073                     ??_Scheduler_update:
  1296                           
  1297                           ; 1 bytes @ 0x3
  1298  0073                     	ds	1
  1299  0074                     Scheduler_update@index:
  1300                           
  1301                           ; 2 bytes @ 0x4
  1302  0074                     	ds	2
  1303  0076                     ??_SysTick_Handler:
  1304                           
  1305                           ; 1 bytes @ 0x6
  1306  0076                     	ds	4
  1307                           
  1308                           	psect	cstackBANK0
  1309  0020                     __pcstackBANK0:
  1310  0020                     ?_Scheduler_delaySoftwareUs:
  1311  0020                     ??_I2c_startMaster:	
  1312                           ; 1 bytes @ 0x0
  1313                           
  1314  0020                     ??_I2c_repeatedStartMaster:	
  1315                           ; 1 bytes @ 0x0
  1316                           
  1317  0020                     ??_I2c_writeMaster:	
  1318                           ; 1 bytes @ 0x0
  1319                           
  1320  0020                     ??_I2c_stopMaster:	
  1321                           ; 1 bytes @ 0x0
  1322                           
  1323  0020                     ??_I2c_read:	
  1324                           ; 1 bytes @ 0x0
  1325                           
  1326  0020                     ??_I2c_nack:	
  1327                           ; 1 bytes @ 0x0
  1328                           
  1329  0020                     ??_I2c_ack:	
  1330                           ; 1 bytes @ 0x0
  1331                           
  1332  0020                     ??_Scheduler_sleepHardware:	
  1333                           ; 1 bytes @ 0x0
  1334                           
  1335  0020                     ??_Scheduler_goToSleep:	
  1336                           ; 1 bytes @ 0x0
  1337                           
  1338  0020                     ??_Adc_init:	
  1339                           ; 1 bytes @ 0x0
  1340                           
  1341  0020                     ??_I2c_waitMaster:	
  1342                           ; 1 bytes @ 0x0
  1343                           
  1344  0020                     ?___bmul:	
  1345                           ; 1 bytes @ 0x0
  1346                           
  1347  0020                     ?___wmul:	
  1348                           ; 1 bytes @ 0x0
  1349                           
  1350  0020                     ?___lwdiv:	
  1351                           ; 2 bytes @ 0x0
  1352                           
  1353  0020                     I2c_writeMaster@buffer:	
  1354                           ; 2 bytes @ 0x0
  1355                           
  1356  0020                     ___bmul@multiplicand:	
  1357                           ; 1 bytes @ 0x0
  1358                           
  1359  0020                     ___wmul@multiplier:	
  1360                           ; 1 bytes @ 0x0
  1361                           
  1362  0020                     ___lwdiv@divisor:	
  1363                           ; 2 bytes @ 0x0
  1364                           
  1365  0020                     Scheduler_delaySoftwareUs@usDelay:	
  1366                           ; 2 bytes @ 0x0
  1367                           
  1368                           
  1369                           ; 4 bytes @ 0x0
  1370  0020                     	ds	1
  1371  0021                     ??_Eeprom_read:
  1372  0021                     ??___bmul:	
  1373                           ; 1 bytes @ 0x1
  1374                           
  1375  0021                     Eeprom_read@address:	
  1376                           ; 1 bytes @ 0x1
  1377                           
  1378  0021                     ___bmul@product:	
  1379                           ; 1 bytes @ 0x1
  1380                           
  1381                           
  1382                           ; 1 bytes @ 0x1
  1383  0021                     	ds	1
  1384  0022                     Eeprom_read@buffer:
  1385  0022                     ___bmul@multiplier:	
  1386                           ; 1 bytes @ 0x2
  1387                           
  1388  0022                     ___wmul@multiplicand:	
  1389                           ; 1 bytes @ 0x2
  1390                           
  1391  0022                     ___lwdiv@dividend:	
  1392                           ; 2 bytes @ 0x2
  1393                           
  1394                           
  1395                           ; 2 bytes @ 0x2
  1396  0022                     	ds	1
  1397  0023                     ?_Scheduler_addTask:
  1398  0023                     ??_Scheduler_deleteTask:	
  1399                           ; 1 bytes @ 0x3
  1400                           
  1401  0023                     ?_Gpio_initPin:	
  1402                           ; 1 bytes @ 0x3
  1403                           
  1404  0023                     ?_Gpio_setPinState:	
  1405                           ; 1 bytes @ 0x3
  1406                           
  1407  0023                     ?_Gpio_getPinState:	
  1408                           ; 1 bytes @ 0x3
  1409                           
  1410  0023                     ?_Gpio_setPortState:	
  1411                           ; 1 bytes @ 0x3
  1412                           
  1413  0023                     ?_Timer0_init:	
  1414                           ; 1 bytes @ 0x3
  1415                           
  1416  0023                     ??_Tempsnsr_getState:	
  1417                           ; 1 bytes @ 0x3
  1418                           
  1419  0023                     ?_Tempctrl_setState:	
  1420                           ; 1 bytes @ 0x3
  1421                           
  1422  0023                     ??_Switch_getState:	
  1423                           ; 1 bytes @ 0x3
  1424                           
  1425  0023                     ?_Eeprom_write:	
  1426                           ; 1 bytes @ 0x3
  1427                           
  1428  0023                     ?_Eeprom_writePage:	
  1429                           ; 1 bytes @ 0x3
  1430                           
  1431  0023                     ?_Eeprom_readPage:	
  1432                           ; 1 bytes @ 0x3
  1433                           
  1434  0023                     ?_Adc_getState:	
  1435                           ; 1 bytes @ 0x3
  1436                           
  1437  0023                     ?___awdiv:	
  1438                           ; 2 bytes @ 0x3
  1439                           
  1440  0023                     Scheduler_deleteTask@index:	
  1441                           ; 2 bytes @ 0x3
  1442                           
  1443  0023                     Switch_getState@buffer:	
  1444                           ; 1 bytes @ 0x3
  1445                           
  1446  0023                     Adc_getState@channel:	
  1447                           ; 1 bytes @ 0x3
  1448                           
  1449  0023                     Eeprom_write@buffer:	
  1450                           ; 1 bytes @ 0x3
  1451                           
  1452  0023                     Eeprom_writePage@buffer:	
  1453                           ; 1 bytes @ 0x3
  1454                           
  1455  0023                     Eeprom_readPage@buffer:	
  1456                           ; 1 bytes @ 0x3
  1457                           
  1458  0023                     Gpio_initPin@pin:	
  1459                           ; 1 bytes @ 0x3
  1460                           
  1461  0023                     Gpio_setPinState@pin:	
  1462                           ; 1 bytes @ 0x3
  1463                           
  1464  0023                     Gpio_getPinState@pin:	
  1465                           ; 1 bytes @ 0x3
  1466                           
  1467  0023                     Gpio_setPortState@pins:	
  1468                           ; 1 bytes @ 0x3
  1469                           
  1470  0023                     Tempctrl_setState@state:	
  1471                           ; 1 bytes @ 0x3
  1472                           
  1473  0023                     Tempsnsr_getState@id:	
  1474                           ; 1 bytes @ 0x3
  1475                           
  1476  0023                     Scheduler_addTask@paramter:	
  1477                           ; 1 bytes @ 0x3
  1478                           
  1479  0023                     Timer0_init@period:	
  1480                           ; 2 bytes @ 0x3
  1481                           
  1482  0023                     ___awdiv@divisor:	
  1483                           ; 2 bytes @ 0x3
  1484                           
  1485                           
  1486                           ; 2 bytes @ 0x3
  1487  0023                     	ds	1
  1488  0024                     ??_Scheduler_delaySoftwareUs:
  1489  0024                     ??_Scheduler_init:	
  1490                           ; 1 bytes @ 0x4
  1491                           
  1492  0024                     ??_Gpio_getPinState:	
  1493                           ; 1 bytes @ 0x4
  1494                           
  1495  0024                     ??_Tempctrl_setState:	
  1496                           ; 1 bytes @ 0x4
  1497                           
  1498  0024                     ??_Eeprom_write:	
  1499                           ; 1 bytes @ 0x4
  1500                           
  1501  0024                     ??___wmul:	
  1502                           ; 1 bytes @ 0x4
  1503                           
  1504  0024                     ??___lwdiv:	
  1505                           ; 1 bytes @ 0x4
  1506                           
  1507  0024                     Switch_getState@id:	
  1508                           ; 1 bytes @ 0x4
  1509                           
  1510  0024                     Eeprom_write@address:	
  1511                           ; 1 bytes @ 0x4
  1512                           
  1513  0024                     Eeprom_writePage@length:	
  1514                           ; 1 bytes @ 0x4
  1515                           
  1516  0024                     Eeprom_readPage@length:	
  1517                           ; 1 bytes @ 0x4
  1518                           
  1519  0024                     Gpio_initPin@mode:	
  1520                           ; 1 bytes @ 0x4
  1521                           
  1522  0024                     Gpio_setPinState@state:	
  1523                           ; 1 bytes @ 0x4
  1524                           
  1525  0024                     Gpio_setPortState@state:	
  1526                           ; 1 bytes @ 0x4
  1527                           
  1528  0024                     Tempctrl_setState@id:	
  1529                           ; 1 bytes @ 0x4
  1530                           
  1531  0024                     Scheduler_init@index:	
  1532                           ; 1 bytes @ 0x4
  1533                           
  1534  0024                     ___wmul@product:	
  1535                           ; 2 bytes @ 0x4
  1536                           
  1537  0024                     ___lwdiv@quotient:	
  1538                           ; 2 bytes @ 0x4
  1539                           
  1540                           
  1541                           ; 2 bytes @ 0x4
  1542  0024                     	ds	1
  1543  0025                     ??_Gpio_setPinState:
  1544  0025                     ??_Gpio_setPortState:	
  1545                           ; 1 bytes @ 0x5
  1546                           
  1547  0025                     ??_Eeprom_writePage:	
  1548                           ; 1 bytes @ 0x5
  1549                           
  1550  0025                     ??_Eeprom_readPage:	
  1551                           ; 1 bytes @ 0x5
  1552                           
  1553  0025                     Scheduler_addTask@delay:	
  1554                           ; 1 bytes @ 0x5
  1555                           
  1556  0025                     Timer0_init@channel:	
  1557                           ; 1 bytes @ 0x5
  1558                           
  1559  0025                     Gpio_initPin@type:	
  1560                           ; 1 bytes @ 0x5
  1561                           
  1562  0025                     ___awdiv@dividend:	
  1563                           ; 1 bytes @ 0x5
  1564                           
  1565                           
  1566                           ; 2 bytes @ 0x5
  1567  0025                     	ds	1
  1568  0026                     ??_Gpio_initPin:
  1569  0026                     ?_Timer1_init:	
  1570                           ; 1 bytes @ 0x6
  1571                           
  1572  0026                     ??_Adc_getState:	
  1573                           ; 1 bytes @ 0x6
  1574                           
  1575  0026                     ?___lmul:	
  1576                           ; 1 bytes @ 0x6
  1577                           
  1578  0026                     Scheduler_addTask@period:	
  1579                           ; 4 bytes @ 0x6
  1580                           
  1581  0026                     Timer0_init@event:	
  1582                           ; 1 bytes @ 0x6
  1583                           
  1584  0026                     ___lwdiv@counter:	
  1585                           ; 1 bytes @ 0x6
  1586                           
  1587  0026                     Timer1_init@period:	
  1588                           ; 1 bytes @ 0x6
  1589                           
  1590  0026                     ___lmul@multiplier:	
  1591                           ; 2 bytes @ 0x6
  1592                           
  1593                           
  1594                           ; 4 bytes @ 0x6
  1595  0026                     	ds	1
  1596  0027                     ??_Scheduler_addTask:
  1597  0027                     ?_Led_setState:	
  1598                           ; 1 bytes @ 0x7
  1599                           
  1600  0027                     ??_Timer0_init:	
  1601                           ; 1 bytes @ 0x7
  1602                           
  1603  0027                     ?_Ssd_setState:	
  1604                           ; 1 bytes @ 0x7
  1605                           
  1606  0027                     ??___awdiv:	
  1607                           ; 1 bytes @ 0x7
  1608                           
  1609  0027                     Scheduler_addTask@task:	
  1610                           ; 1 bytes @ 0x7
  1611                           
  1612  0027                     Led_setState@state:	
  1613                           ; 1 bytes @ 0x7
  1614                           
  1615  0027                     Ssd_setState@state:	
  1616                           ; 1 bytes @ 0x7
  1617                           
  1618  0027                     Eeprom_writePage@address:	
  1619                           ; 1 bytes @ 0x7
  1620                           
  1621  0027                     Eeprom_readPage@address:	
  1622                           ; 1 bytes @ 0x7
  1623                           
  1624  0027                     ___awdiv@counter:	
  1625                           ; 1 bytes @ 0x7
  1626                           
  1627                           
  1628                           ; 1 bytes @ 0x7
  1629  0027                     	ds	1
  1630  0028                     Scheduler_delaySoftwareUs@delay:
  1631  0028                     Timer1_init@channel:	
  1632                           ; 1 bytes @ 0x8
  1633                           
  1634  0028                     ___awdiv@sign:	
  1635                           ; 1 bytes @ 0x8
  1636                           
  1637  0028                     Scheduler_addTask@index:	
  1638                           ; 1 bytes @ 0x8
  1639                           
  1640  0028                     Led_setState@period:	
  1641                           ; 2 bytes @ 0x8
  1642                           
  1643  0028                     Ssd_setState@period:	
  1644                           ; 2 bytes @ 0x8
  1645                           
  1646  0028                     Eeprom_writePage@i:	
  1647                           ; 2 bytes @ 0x8
  1648                           
  1649  0028                     Eeprom_readPage@i:	
  1650                           ; 2 bytes @ 0x8
  1651                           
  1652                           
  1653                           ; 2 bytes @ 0x8
  1654  0028                     	ds	1
  1655  0029                     ?_Scheduler_delaySoftwareMs:
  1656  0029                     Timer1_init@event:	
  1657                           ; 1 bytes @ 0x9
  1658                           
  1659  0029                     Gpio_getPinState@id:	
  1660                           ; 1 bytes @ 0x9
  1661                           
  1662  0029                     ___awdiv@quotient:	
  1663                           ; 1 bytes @ 0x9
  1664                           
  1665  0029                     Scheduler_delaySoftwareMs@msDelay:	
  1666                           ; 2 bytes @ 0x9
  1667                           
  1668                           
  1669                           ; 4 bytes @ 0x9
  1670  0029                     	ds	1
  1671  002A                     ??_Led_setState:
  1672  002A                     ??_getSwitchHardwareState:	
  1673                           ; 1 bytes @ 0xA
  1674                           
  1675  002A                     ??_Timer1_init:	
  1676                           ; 1 bytes @ 0xA
  1677                           
  1678  002A                     ??_Ssd_setState:	
  1679                           ; 1 bytes @ 0xA
  1680                           
  1681  002A                     getSwitchHardwareState@id:	
  1682                           ; 1 bytes @ 0xA
  1683                           
  1684  002A                     Ssd_setState@id:	
  1685                           ; 1 bytes @ 0xA
  1686                           
  1687  002A                     ___lmul@multiplicand:	
  1688                           ; 1 bytes @ 0xA
  1689                           
  1690                           
  1691                           ; 4 bytes @ 0xA
  1692  002A                     	ds	1
  1693  002B                     ?___awmod:
  1694  002B                     Gpio_setPortState@id:	
  1695                           ; 2 bytes @ 0xB
  1696                           
  1697  002B                     ___awmod@divisor:	
  1698                           ; 1 bytes @ 0xB
  1699                           
  1700  002B                     _Led_setState$1877:	
  1701                           ; 2 bytes @ 0xB
  1702                           
  1703                           
  1704                           ; 2 bytes @ 0xB
  1705  002B                     	ds	1
  1706  002C                     ?_Timer_init:
  1707  002C                     ?_setSsdHardwareSymbol:	
  1708                           ; 1 bytes @ 0xC
  1709                           
  1710  002C                     setSsdHardwareSymbol@symbol:	
  1711                           ; 1 bytes @ 0xC
  1712                           
  1713  002C                     Timer_init@mode:	
  1714                           ; 1 bytes @ 0xC
  1715                           
  1716                           
  1717                           ; 1 bytes @ 0xC
  1718  002C                     	ds	1
  1719  002D                     ??_setSsdHardwareSymbol:
  1720  002D                     ??_Scheduler_delaySoftwareMs:	
  1721                           ; 1 bytes @ 0xD
  1722                           
  1723  002D                     Led_setState@id:	
  1724                           ; 1 bytes @ 0xD
  1725                           
  1726  002D                     Gpio_setPinState@id:	
  1727                           ; 1 bytes @ 0xD
  1728                           
  1729  002D                     Timer_init@period:	
  1730                           ; 1 bytes @ 0xD
  1731                           
  1732  002D                     ___awmod@dividend:	
  1733                           ; 2 bytes @ 0xD
  1734                           
  1735                           
  1736                           ; 2 bytes @ 0xD
  1737  002D                     	ds	1
  1738  002E                     ?_setLedHardwareState:
  1739  002E                     ?_setSsdHardwareState:	
  1740                           ; 1 bytes @ 0xE
  1741                           
  1742  002E                     ?_setTempctrlHardwareState:	
  1743                           ; 1 bytes @ 0xE
  1744                           
  1745  002E                     ??_Scheduler_displayError:	
  1746                           ; 1 bytes @ 0xE
  1747                           
  1748  002E                     ??___lmul:	
  1749                           ; 1 bytes @ 0xE
  1750                           
  1751  002E                     Scheduler_displayError@errorCode:	
  1752                           ; 1 bytes @ 0xE
  1753                           
  1754  002E                     setLedHardwareState@state:	
  1755                           ; 1 bytes @ 0xE
  1756                           
  1757  002E                     setSsdHardwareState@state:	
  1758                           ; 1 bytes @ 0xE
  1759                           
  1760  002E                     setSsdHardwareSymbol@id:	
  1761                           ; 1 bytes @ 0xE
  1762                           
  1763  002E                     setTempctrlHardwareState@state:	
  1764                           ; 1 bytes @ 0xE
  1765                           
  1766                           
  1767                           ; 1 bytes @ 0xE
  1768  002E                     	ds	1
  1769  002F                     ??_setLedHardwareState:
  1770  002F                     ??_setSsdHardwareState:	
  1771                           ; 1 bytes @ 0xF
  1772                           
  1773  002F                     ??_setTempctrlHardwareState:	
  1774                           ; 1 bytes @ 0xF
  1775                           
  1776  002F                     ??_Scheduler_reportStatus:	
  1777                           ; 1 bytes @ 0xF
  1778                           
  1779  002F                     ??___awmod:	
  1780                           ; 1 bytes @ 0xF
  1781                           
  1782  002F                     setSsdHardwareState@id:	
  1783                           ; 1 bytes @ 0xF
  1784                           
  1785  002F                     Timer_init@channel:	
  1786                           ; 1 bytes @ 0xF
  1787                           
  1788  002F                     setTempctrlHardwareState@id:	
  1789                           ; 1 bytes @ 0xF
  1790                           
  1791  002F                     ___awmod@counter:	
  1792                           ; 1 bytes @ 0xF
  1793                           
  1794  002F                     ___lmul@product:	
  1795                           ; 1 bytes @ 0xF
  1796                           
  1797                           
  1798                           ; 4 bytes @ 0xF
  1799  002F                     	ds	1
  1800  0030                     Timer_init@event:
  1801  0030                     ___awmod@sign:	
  1802                           ; 1 bytes @ 0x10
  1803                           
  1804                           
  1805                           ; 1 bytes @ 0x10
  1806  0030                     	ds	1
  1807  0031                     ??_Timer_init:
  1808  0031                     ?_Ssd_setSymbol:	
  1809                           ; 1 bytes @ 0x11
  1810                           
  1811  0031                     setLedHardwareState@id:	
  1812                           ; 1 bytes @ 0x11
  1813                           
  1814  0031                     Ssd_setSymbol@symbol:	
  1815                           ; 1 bytes @ 0x11
  1816                           
  1817                           
  1818                           ; 1 bytes @ 0x11
  1819  0031                     	ds	1
  1820  0032                     ??_Ssd_setSymbol:
  1821  0032                     Ssd_setSymbol@id:	
  1822                           ; 1 bytes @ 0x12
  1823                           
  1824  0032                     Gpio_initPin@id:	
  1825                           ; 1 bytes @ 0x12
  1826                           
  1827                           
  1828                           ; 1 bytes @ 0x12
  1829  0032                     	ds	1
  1830  0033                     ??_initLedHardware:
  1831  0033                     ??_initSwitchHardware:	
  1832                           ; 1 bytes @ 0x13
  1833                           
  1834  0033                     ??_initSsdHardware:	
  1835                           ; 1 bytes @ 0x13
  1836                           
  1837  0033                     ??_initTempctrlHardware:	
  1838                           ; 1 bytes @ 0x13
  1839                           
  1840  0033                     ??_initTempsnsrHardware:	
  1841                           ; 1 bytes @ 0x13
  1842                           
  1843  0033                     ?___lldiv:	
  1844                           ; 1 bytes @ 0x13
  1845                           
  1846  0033                     initSwitchHardware@id:	
  1847                           ; 4 bytes @ 0x13
  1848                           
  1849  0033                     Timer_init@id:	
  1850                           ; 1 bytes @ 0x13
  1851                           
  1852  0033                     initTempctrlHardware@id:	
  1853                           ; 1 bytes @ 0x13
  1854                           
  1855  0033                     initTempsnsrHardware@id:	
  1856                           ; 1 bytes @ 0x13
  1857                           
  1858  0033                     initSsdHardware@i:	
  1859                           ; 1 bytes @ 0x13
  1860                           
  1861  0033                     ___lldiv@divisor:	
  1862                           ; 2 bytes @ 0x13
  1863                           
  1864                           
  1865                           ; 4 bytes @ 0x13
  1866  0033                     	ds	1
  1867  0034                     ?_Switch_init:
  1868  0034                     ?_Tempsnsr_init:	
  1869                           ; 1 bytes @ 0x14
  1870                           
  1871  0034                     ?_Tempctrl_init:	
  1872                           ; 1 bytes @ 0x14
  1873                           
  1874  0034                     ?_Scheduler_initSysTick:	
  1875                           ; 1 bytes @ 0x14
  1876                           
  1877  0034                     Switch_init@gpioId:	
  1878                           ; 1 bytes @ 0x14
  1879                           
  1880  0034                     Tempctrl_init@gpioIdH:	
  1881                           ; 1 bytes @ 0x14
  1882                           
  1883  0034                     Tempsnsr_init@gpioId:	
  1884                           ; 1 bytes @ 0x14
  1885                           
  1886  0034                     Scheduler_initSysTick@systickPeriod:	
  1887                           ; 1 bytes @ 0x14
  1888                           
  1889                           
  1890                           ; 2 bytes @ 0x14
  1891  0034                     	ds	1
  1892  0035                     initLedHardware@id:
  1893  0035                     Switch_init@gpioPin:	
  1894                           ; 1 bytes @ 0x15
  1895                           
  1896  0035                     initSsdHardware@id:	
  1897                           ; 1 bytes @ 0x15
  1898                           
  1899  0035                     Tempctrl_init@gpioPinH:	
  1900                           ; 1 bytes @ 0x15
  1901                           
  1902  0035                     Tempsnsr_init@gpioPin:	
  1903                           ; 1 bytes @ 0x15
  1904                           
  1905                           
  1906                           ; 1 bytes @ 0x15
  1907  0035                     	ds	1
  1908  0036                     ??_Switch_init:
  1909  0036                     ?_Led_init:	
  1910                           ; 1 bytes @ 0x16
  1911                           
  1912  0036                     ?_Ssd_init:	
  1913                           ; 1 bytes @ 0x16
  1914                           
  1915  0036                     ??_Scheduler_start:	
  1916                           ; 1 bytes @ 0x16
  1917                           
  1918  0036                     ??_Scheduler_initSysTick:	
  1919                           ; 1 bytes @ 0x16
  1920                           
  1921  0036                     Led_init@gpioId:	
  1922                           ; 1 bytes @ 0x16
  1923                           
  1924  0036                     Switch_init@id:	
  1925                           ; 1 bytes @ 0x16
  1926                           
  1927  0036                     Ssd_init@gpioIdC:	
  1928                           ; 1 bytes @ 0x16
  1929                           
  1930  0036                     Tempctrl_init@gpioIdC:	
  1931                           ; 1 bytes @ 0x16
  1932                           
  1933  0036                     Tempsnsr_init@adcId:	
  1934                           ; 1 bytes @ 0x16
  1935                           
  1936                           
  1937                           ; 1 bytes @ 0x16
  1938  0036                     	ds	1
  1939  0037                     Led_init@gpioPin:
  1940  0037                     Ssd_init@gpioPinC:	
  1941                           ; 1 bytes @ 0x17
  1942                           
  1943  0037                     Tempctrl_init@gpioPinC:	
  1944                           ; 1 bytes @ 0x17
  1945                           
  1946  0037                     Tempsnsr_init@adcChannel:	
  1947                           ; 1 bytes @ 0x17
  1948                           
  1949  0037                     ___lldiv@dividend:	
  1950                           ; 1 bytes @ 0x17
  1951                           
  1952                           
  1953                           ; 4 bytes @ 0x17
  1954  0037                     	ds	1
  1955  0038                     ??_Tempsnsr_init:
  1956  0038                     ??_Tempctrl_init:	
  1957                           ; 1 bytes @ 0x18
  1958                           
  1959  0038                     ??_Led_init:	
  1960                           ; 1 bytes @ 0x18
  1961                           
  1962  0038                     Ssd_init@gpioIdD:	
  1963                           ; 1 bytes @ 0x18
  1964                           
  1965  0038                     Tempctrl_init@id:	
  1966                           ; 1 bytes @ 0x18
  1967                           
  1968                           
  1969                           ; 1 bytes @ 0x18
  1970  0038                     	ds	1
  1971  0039                     Led_init@id:
  1972  0039                     Ssd_init@gpioPinD:	
  1973                           ; 1 bytes @ 0x19
  1974                           
  1975  0039                     Tempsnsr_init@index:	
  1976                           ; 1 bytes @ 0x19
  1977                           
  1978                           
  1979                           ; 2 bytes @ 0x19
  1980  0039                     	ds	1
  1981  003A                     ??_Ssd_init:
  1982  003A                     Ssd_init@id:	
  1983                           ; 1 bytes @ 0x1A
  1984                           
  1985                           
  1986                           ; 1 bytes @ 0x1A
  1987  003A                     	ds	1
  1988  003B                     ??___lldiv:
  1989  003B                     Tempsnsr_init@id:	
  1990                           ; 1 bytes @ 0x1B
  1991                           
  1992                           
  1993                           ; 1 bytes @ 0x1B
  1994  003B                     	ds	1
  1995  003C                     ___lldiv@quotient:
  1996                           
  1997                           ; 4 bytes @ 0x1C
  1998  003C                     	ds	4
  1999  0040                     ___lldiv@counter:
  2000                           
  2001                           ; 1 bytes @ 0x20
  2002  0040                     	ds	1
  2003  0041                     ?_I2c_initMaster:
  2004  0041                     ??_getTempsnsrHarwareState:	
  2005                           ; 1 bytes @ 0x21
  2006                           
  2007  0041                     ??_getAvgTemp:	
  2008                           ; 1 bytes @ 0x21
  2009                           
  2010  0041                     I2c_initMaster@baudrate:	
  2011                           ; 1 bytes @ 0x21
  2012                           
  2013                           
  2014                           ; 4 bytes @ 0x21
  2015  0041                     	ds	4
  2016  0045                     ?_Heater_init:
  2017  0045                     ??_I2c_initMaster:	
  2018                           ; 1 bytes @ 0x25
  2019                           
  2020  0045                     ??_Eeprom_init:	
  2021                           ; 1 bytes @ 0x25
  2022                           
  2023  0045                     Heater_init@sSwId:	
  2024                           ; 1 bytes @ 0x25
  2025                           
  2026  0045                     getTempsnsrHarwareState@id:	
  2027                           ; 1 bytes @ 0x25
  2028                           
  2029                           
  2030                           ; 1 bytes @ 0x25
  2031  0045                     	ds	1
  2032  0046                     Heater_init@mSwId:
  2033  0046                     getAvgTemp@id:	
  2034                           ; 1 bytes @ 0x26
  2035                           
  2036                           
  2037                           ; 1 bytes @ 0x26
  2038  0046                     	ds	1
  2039  0047                     Heater_init@pSwId:
  2040  0047                     getAvgTemp@temp:	
  2041                           ; 1 bytes @ 0x27
  2042                           
  2043                           
  2044                           ; 4 bytes @ 0x27
  2045  0047                     	ds	1
  2046  0048                     Heater_init@xTempsnsrId:
  2047                           
  2048                           ; 1 bytes @ 0x28
  2049  0048                     	ds	1
  2050  0049                     Heater_init@xTempctrlId:
  2051                           
  2052                           ; 1 bytes @ 0x29
  2053  0049                     	ds	1
  2054  004A                     Heater_init@xLedId:
  2055                           
  2056                           ; 1 bytes @ 0x2A
  2057  004A                     	ds	1
  2058  004B                     Heater_init@aSsdId:
  2059  004B                     getAvgTemp@index:	
  2060                           ; 1 bytes @ 0x2B
  2061                           
  2062                           
  2063                           ; 2 bytes @ 0x2B
  2064  004B                     	ds	1
  2065  004C                     Heater_init@bSsdId:
  2066                           
  2067                           ; 1 bytes @ 0x2C
  2068  004C                     	ds	1
  2069  004D                     ??_Heater_init:
  2070  004D                     ?_Switch_update:	
  2071                           ; 1 bytes @ 0x2D
  2072                           
  2073  004D                     ?_Tempsnsr_update:	
  2074                           ; 1 bytes @ 0x2D
  2075                           
  2076  004D                     ?_Heater_update:	
  2077                           ; 1 bytes @ 0x2D
  2078                           
  2079  004D                     ?_Tempctrl_update:	
  2080                           ; 1 bytes @ 0x2D
  2081                           
  2082  004D                     ?_Led_update:	
  2083                           ; 1 bytes @ 0x2D
  2084                           
  2085  004D                     ?_Ssd_update:	
  2086                           ; 1 bytes @ 0x2D
  2087                           
  2088  004D                     Led_update@paramter:	
  2089                           ; 1 bytes @ 0x2D
  2090                           
  2091  004D                     Switch_update@paramter:	
  2092                           ; 2 bytes @ 0x2D
  2093                           
  2094  004D                     Ssd_update@paramter:	
  2095                           ; 2 bytes @ 0x2D
  2096                           
  2097  004D                     Heater_update@paramter:	
  2098                           ; 2 bytes @ 0x2D
  2099                           
  2100  004D                     Tempctrl_update@paramter:	
  2101                           ; 2 bytes @ 0x2D
  2102                           
  2103  004D                     Tempsnsr_update@paramter:	
  2104                           ; 2 bytes @ 0x2D
  2105                           
  2106                           
  2107                           ; 2 bytes @ 0x2D
  2108  004D                     	ds	2
  2109  004F                     ??_Switch_update:
  2110  004F                     ??_Tempsnsr_update:	
  2111                           ; 1 bytes @ 0x2F
  2112                           
  2113  004F                     ??_Heater_update:	
  2114                           ; 1 bytes @ 0x2F
  2115                           
  2116  004F                     ??_Tempctrl_update:	
  2117                           ; 1 bytes @ 0x2F
  2118                           
  2119  004F                     ??_Led_update:	
  2120                           ; 1 bytes @ 0x2F
  2121                           
  2122  004F                     ??_Ssd_update:	
  2123                           ; 1 bytes @ 0x2F
  2124                           
  2125  004F                     Switch_update@id:	
  2126                           ; 1 bytes @ 0x2F
  2127                           
  2128  004F                     _Tempctrl_update$1938:	
  2129                           ; 1 bytes @ 0x2F
  2130                           
  2131                           
  2132                           ; 1 bytes @ 0x2F
  2133  004F                     	ds	1
  2134  0050                     Tempctrl_update@id:
  2135  0050                     Heater_init@index:	
  2136                           ; 1 bytes @ 0x30
  2137                           
  2138                           
  2139                           ; 2 bytes @ 0x30
  2140  0050                     	ds	1
  2141  0051                     Tempsnsr_update@id:
  2142  0051                     _Ssd_update$1933:	
  2143                           ; 1 bytes @ 0x31
  2144                           
  2145                           
  2146                           ; 1 bytes @ 0x31
  2147  0051                     	ds	1
  2148  0052                     Heater_init@id:
  2149  0052                     _Ssd_update$1934:	
  2150                           ; 1 bytes @ 0x32
  2151                           
  2152  0052                     _Heater_update$1935:	
  2153                           ; 1 bytes @ 0x32
  2154                           
  2155                           
  2156                           ; 1 bytes @ 0x32
  2157  0052                     	ds	1
  2158  0053                     Led_update@id:
  2159  0053                     Ssd_update@id:	
  2160                           ; 1 bytes @ 0x33
  2161                           
  2162  0053                     _Heater_update$1937:	
  2163                           ; 1 bytes @ 0x33
  2164                           
  2165                           
  2166                           ; 1 bytes @ 0x33
  2167  0053                     	ds	1
  2168  0054                     _Heater_update$1936:
  2169                           
  2170                           ; 1 bytes @ 0x34
  2171  0054                     	ds	1
  2172  0055                     Heater_update@id:
  2173                           
  2174                           ; 1 bytes @ 0x35
  2175  0055                     	ds	1
  2176  0056                     ??_Scheduler_dispatchTasks:
  2177                           
  2178                           ; 1 bytes @ 0x36
  2179  0056                     	ds	1
  2180  0057                     _Scheduler_dispatchTasks$1932:
  2181                           
  2182                           ; 2 bytes @ 0x37
  2183  0057                     	ds	2
  2184  0059                     _Scheduler_dispatchTasks$1927:
  2185                           
  2186                           ; 1 bytes @ 0x39
  2187  0059                     	ds	1
  2188  005A                     Scheduler_dispatchTasks@index:
  2189                           
  2190                           ; 2 bytes @ 0x3A
  2191  005A                     	ds	2
  2192  005C                     ??_main:
  2193                           
  2194                           	psect	maintext
  2195  067C                     __pmaintext:	
  2196                           ; 1 bytes @ 0x3C
  2197 ;;
  2198 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2199 ;;
  2200 ;; *************** function _main *****************
  2201 ;; Defined at:
  2202 ;;		line 27 in file "main.c"
  2203 ;; Parameters:    Size  Location     Type
  2204 ;;		None
  2205 ;; Auto vars:     Size  Location     Type
  2206 ;;		None
  2207 ;; Return value:  Size  Location     Type
  2208 ;;                  2   47[None  ] int 
  2209 ;; Registers used:
  2210 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2211 ;; Tracked objects:
  2212 ;;		On entry : B00/0
  2213 ;;		On exit  : 0/0
  2214 ;;		Unchanged: 0/0
  2215 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2216 ;;      Params:         0       0       0       0       0
  2217 ;;      Locals:         0       0       0       0       0
  2218 ;;      Temps:          0       0       0       0       0
  2219 ;;      Totals:         0       0       0       0       0
  2220 ;;Total ram usage:        0 bytes
  2221 ;; Hardware stack levels required when called:    8
  2222 ;; This function calls:
  2223 ;;		_Heater_init
  2224 ;;		_Led_init
  2225 ;;		_Scheduler_addTask
  2226 ;;		_Scheduler_delaySoftwareUs
  2227 ;;		_Scheduler_dispatchTasks
  2228 ;;		_Scheduler_init
  2229 ;;		_Scheduler_start
  2230 ;;		_Ssd_init
  2231 ;;		_Switch_init
  2232 ;;		_Tempctrl_init
  2233 ;;		_Tempsnsr_init
  2234 ;; This function is called by:
  2235 ;;		Startup code after reset
  2236 ;; This function uses a non-reentrant model
  2237 ;;
  2238                           
  2239                           
  2240                           ;psect for function _main
  2241  067C                     _main:
  2242  067C                     l3002:	
  2243                           ;incstack = 0
  2244                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2245                           
  2246                           
  2247                           ;main.c: 29:     Switch_init( SWITCH_ID_1, GPIO_ID_B, GPIO_PIN_0 );
  2248  067C  1283               	bcf	3,5	;RP0=0, select bank0
  2249  067D  1303               	bcf	3,6	;RP1=0, select bank0
  2250  067E  01B4               	clrf	Switch_init@gpioId
  2251  067F  0AB4               	incf	Switch_init@gpioId,f
  2252  0680  01B5               	clrf	Switch_init@gpioPin
  2253  0681  3000               	movlw	0
  2254  0682  160A  118A  2012  120A  118A  	fcall	_Switch_init
  2255                           
  2256                           ;main.c: 30:     Switch_init( SWITCH_ID_2, GPIO_ID_B, GPIO_PIN_1 );
  2257  0687  1283               	bcf	3,5	;RP0=0, select bank0
  2258  0688  1303               	bcf	3,6	;RP1=0, select bank0
  2259  0689  01B4               	clrf	Switch_init@gpioId
  2260  068A  0AB4               	incf	Switch_init@gpioId,f
  2261  068B  01B5               	clrf	Switch_init@gpioPin
  2262  068C  0AB5               	incf	Switch_init@gpioPin,f
  2263  068D  3001               	movlw	1
  2264  068E  160A  118A  2012  120A  118A  	fcall	_Switch_init
  2265                           
  2266                           ;main.c: 31:     Switch_init( SWITCH_ID_3, GPIO_ID_B, GPIO_PIN_2 );
  2267  0693  1283               	bcf	3,5	;RP0=0, select bank0
  2268  0694  1303               	bcf	3,6	;RP1=0, select bank0
  2269  0695  01B4               	clrf	Switch_init@gpioId
  2270  0696  0AB4               	incf	Switch_init@gpioId,f
  2271  0697  3002               	movlw	2
  2272  0698  00FF               	movwf	btemp+1
  2273  0699  087F               	movf	btemp+1,w
  2274  069A  00B5               	movwf	Switch_init@gpioPin
  2275  069B  3002               	movlw	2
  2276  069C  160A  118A  2012  120A  118A  	fcall	_Switch_init
  2277                           
  2278                           ;main.c: 32:     Tempsnsr_init( TEMPSNSR_ID_1, GPIO_ID_A, GPIO_PIN_2, ADC_ID_0, ADC_CHAN
      +                          NEL_1 );
  2279  06A1  1283               	bcf	3,5	;RP0=0, select bank0
  2280  06A2  1303               	bcf	3,6	;RP1=0, select bank0
  2281  06A3  01B4               	clrf	Tempsnsr_init@gpioId
  2282  06A4  3002               	movlw	2
  2283  06A5  00FF               	movwf	btemp+1
  2284  06A6  087F               	movf	btemp+1,w
  2285  06A7  00B5               	movwf	Tempsnsr_init@gpioPin
  2286  06A8  01B6               	clrf	Tempsnsr_init@adcId
  2287  06A9  01B7               	clrf	Tempsnsr_init@adcChannel
  2288  06AA  3000               	movlw	0
  2289  06AB  120A  158A  21B6  120A  118A  	fcall	_Tempsnsr_init
  2290                           
  2291                           ;main.c: 33:     Tempctrl_init( TEMPCTRL_ID_1, GPIO_ID_C, GPIO_PIN_5, GPIO_ID_C, GPIO_PI
      +                          N_2 );
  2292  06B0  3002               	movlw	2
  2293  06B1  00FF               	movwf	btemp+1
  2294  06B2  087F               	movf	btemp+1,w
  2295  06B3  1283               	bcf	3,5	;RP0=0, select bank0
  2296  06B4  1303               	bcf	3,6	;RP1=0, select bank0
  2297  06B5  00B4               	movwf	Tempctrl_init@gpioIdH
  2298  06B6  3005               	movlw	5
  2299  06B7  00FF               	movwf	btemp+1
  2300  06B8  087F               	movf	btemp+1,w
  2301  06B9  00B5               	movwf	Tempctrl_init@gpioPinH
  2302  06BA  3002               	movlw	2
  2303  06BB  00FF               	movwf	btemp+1
  2304  06BC  087F               	movf	btemp+1,w
  2305  06BD  00B6               	movwf	Tempctrl_init@gpioIdC
  2306  06BE  3002               	movlw	2
  2307  06BF  00FF               	movwf	btemp+1
  2308  06C0  087F               	movf	btemp+1,w
  2309  06C1  00B7               	movwf	Tempctrl_init@gpioPinC
  2310  06C2  3000               	movlw	0
  2311  06C3  160A  118A  2197  120A  118A  	fcall	_Tempctrl_init
  2312                           
  2313                           ;main.c: 34:     Led_init( LED_ID_1, GPIO_ID_B, GPIO_PIN_7 );
  2314  06C8  1283               	bcf	3,5	;RP0=0, select bank0
  2315  06C9  1303               	bcf	3,6	;RP1=0, select bank0
  2316  06CA  01B6               	clrf	Led_init@gpioId
  2317  06CB  0AB6               	incf	Led_init@gpioId,f
  2318  06CC  3007               	movlw	7
  2319  06CD  00FF               	movwf	btemp+1
  2320  06CE  087F               	movf	btemp+1,w
  2321  06CF  00B7               	movwf	Led_init@gpioPin
  2322  06D0  3000               	movlw	0
  2323  06D1  160A  118A  2134  120A  118A  	fcall	_Led_init
  2324                           
  2325                           ;main.c: 35:     Led_init( LED_ID_2, GPIO_ID_B, GPIO_PIN_6 );
  2326  06D6  1283               	bcf	3,5	;RP0=0, select bank0
  2327  06D7  1303               	bcf	3,6	;RP1=0, select bank0
  2328  06D8  01B6               	clrf	Led_init@gpioId
  2329  06D9  0AB6               	incf	Led_init@gpioId,f
  2330  06DA  3006               	movlw	6
  2331  06DB  00FF               	movwf	btemp+1
  2332  06DC  087F               	movf	btemp+1,w
  2333  06DD  00B7               	movwf	Led_init@gpioPin
  2334  06DE  3001               	movlw	1
  2335  06DF  160A  118A  2134  120A  118A  	fcall	_Led_init
  2336                           
  2337                           ;main.c: 36:     Ssd_init( SSD_ID_1, GPIO_ID_A, GPIO_PIN_5, GPIO_ID_D, GPIO_PIN_0 );
  2338  06E4  1283               	bcf	3,5	;RP0=0, select bank0
  2339  06E5  1303               	bcf	3,6	;RP1=0, select bank0
  2340  06E6  01B6               	clrf	Ssd_init@gpioIdC
  2341  06E7  3005               	movlw	5
  2342  06E8  00FF               	movwf	btemp+1
  2343  06E9  087F               	movf	btemp+1,w
  2344  06EA  00B7               	movwf	Ssd_init@gpioPinC
  2345  06EB  3003               	movlw	3
  2346  06EC  00FF               	movwf	btemp+1
  2347  06ED  087F               	movf	btemp+1,w
  2348  06EE  00B8               	movwf	Ssd_init@gpioIdD
  2349  06EF  01B9               	clrf	Ssd_init@gpioPinD
  2350  06F0  3000               	movlw	0
  2351  06F1  120A  158A  2037  120A  118A  	fcall	_Ssd_init
  2352                           
  2353                           ;main.c: 37:     Ssd_init( SSD_ID_2, GPIO_ID_A, GPIO_PIN_4, GPIO_ID_D, GPIO_PIN_0 );
  2354  06F6  1283               	bcf	3,5	;RP0=0, select bank0
  2355  06F7  1303               	bcf	3,6	;RP1=0, select bank0
  2356  06F8  01B6               	clrf	Ssd_init@gpioIdC
  2357  06F9  3004               	movlw	4
  2358  06FA  00FF               	movwf	btemp+1
  2359  06FB  087F               	movf	btemp+1,w
  2360  06FC  00B7               	movwf	Ssd_init@gpioPinC
  2361  06FD  3003               	movlw	3
  2362  06FE  00FF               	movwf	btemp+1
  2363  06FF  087F               	movf	btemp+1,w
  2364  0700  00B8               	movwf	Ssd_init@gpioIdD
  2365  0701  01B9               	clrf	Ssd_init@gpioPinD
  2366  0702  3001               	movlw	1
  2367  0703  120A  158A  2037  120A  118A  	fcall	_Ssd_init
  2368                           
  2369                           ;main.c: 38:     Heater_init( HEATER_ID_1, SWITCH_ID_1, SWITCH_ID_2, SWITCH_ID_3, TEMPSN
      +                          SR_ID_1,
  2370  0708  1283               	bcf	3,5	;RP0=0, select bank0
  2371  0709  1303               	bcf	3,6	;RP1=0, select bank0
  2372  070A  01C5               	clrf	Heater_init@sSwId
  2373  070B  01C6               	clrf	Heater_init@mSwId
  2374  070C  0AC6               	incf	Heater_init@mSwId,f
  2375  070D  3002               	movlw	2
  2376  070E  00FF               	movwf	btemp+1
  2377  070F  087F               	movf	btemp+1,w
  2378  0710  00C7               	movwf	Heater_init@pSwId
  2379  0711  01C8               	clrf	Heater_init@xTempsnsrId
  2380  0712  01C9               	clrf	Heater_init@xTempctrlId
  2381  0713  01CA               	clrf	Heater_init@xLedId
  2382  0714  0ACA               	incf	Heater_init@xLedId,f
  2383  0715  01CB               	clrf	Heater_init@aSsdId
  2384  0716  01CC               	clrf	Heater_init@bSsdId
  2385  0717  0ACC               	incf	Heater_init@bSsdId,f
  2386  0718  3000               	movlw	0
  2387  0719  120A  158A  24F2  120A  118A  	fcall	_Heater_init
  2388  071E                     l3004:
  2389                           
  2390                           ;main.c: 41:     Scheduler_delaySoftwareUs( 1000 );
  2391  071E  3000               	movlw	0
  2392  071F  1283               	bcf	3,5	;RP0=0, select bank0
  2393  0720  1303               	bcf	3,6	;RP1=0, select bank0
  2394  0721  00A3               	movwf	Scheduler_delaySoftwareUs@usDelay+3
  2395  0722  3000               	movlw	0
  2396  0723  00A2               	movwf	Scheduler_delaySoftwareUs@usDelay+2
  2397  0724  3003               	movlw	3
  2398  0725  00A1               	movwf	Scheduler_delaySoftwareUs@usDelay+1
  2399  0726  30E8               	movlw	232
  2400  0727  00A0               	movwf	Scheduler_delaySoftwareUs@usDelay
  2401  0728  160A  158A  2385  120A  118A  	fcall	_Scheduler_delaySoftwareUs
  2402  072D                     l3006:
  2403                           
  2404                           ;main.c: 43:     Scheduler_init();
  2405  072D  160A  158A  21C2  120A  118A  	fcall	_Scheduler_init
  2406  0732                     l3008:
  2407                           
  2408                           ;main.c: 44:     Scheduler_addTask( Switch_update, (void *) SWITCH_ID_1, 0, ( 10 / ( ( T
      +                          ickType_t ) 5 ) ) );
  2409  0732  3000               	movlw	0
  2410  0733  1283               	bcf	3,5	;RP0=0, select bank0
  2411  0734  1303               	bcf	3,6	;RP1=0, select bank0
  2412  0735  00A3               	movwf	Scheduler_addTask@paramter
  2413  0736  3000               	movlw	0
  2414  0737  00A4               	movwf	Scheduler_addTask@paramter+1
  2415  0738  01A5               	clrf	Scheduler_addTask@delay
  2416  0739  3002               	movlw	2
  2417  073A  00FF               	movwf	btemp+1
  2418  073B  087F               	movf	btemp+1,w
  2419  073C  00A6               	movwf	Scheduler_addTask@period
  2420  073D  3004               	movlw	(low (fp__Switch_update-fpbase))& (0+255)
  2421  073E  160A  118A  258D  120A  118A  	fcall	_Scheduler_addTask
  2422  0743                     l3010:
  2423                           
  2424                           ;main.c: 45:     Scheduler_addTask( Switch_update, (void *) SWITCH_ID_2, 0, ( 10 / ( ( T
      +                          ickType_t ) 5 ) ) );
  2425  0743  3001               	movlw	1
  2426  0744  1283               	bcf	3,5	;RP0=0, select bank0
  2427  0745  1303               	bcf	3,6	;RP1=0, select bank0
  2428  0746  00A3               	movwf	Scheduler_addTask@paramter
  2429  0747  3000               	movlw	0
  2430  0748  00A4               	movwf	Scheduler_addTask@paramter+1
  2431  0749  01A5               	clrf	Scheduler_addTask@delay
  2432  074A  3002               	movlw	2
  2433  074B  00FF               	movwf	btemp+1
  2434  074C  087F               	movf	btemp+1,w
  2435  074D  00A6               	movwf	Scheduler_addTask@period
  2436  074E  3004               	movlw	(low (fp__Switch_update-fpbase))& (0+255)
  2437  074F  160A  118A  258D  120A  118A  	fcall	_Scheduler_addTask
  2438  0754                     l3012:
  2439                           
  2440                           ;main.c: 46:     Scheduler_addTask( Switch_update, (void *) SWITCH_ID_3, 0, ( 10 / ( ( T
      +                          ickType_t ) 5 ) ) );
  2441  0754  3002               	movlw	2
  2442  0755  1283               	bcf	3,5	;RP0=0, select bank0
  2443  0756  1303               	bcf	3,6	;RP1=0, select bank0
  2444  0757  00A3               	movwf	Scheduler_addTask@paramter
  2445  0758  3000               	movlw	0
  2446  0759  00A4               	movwf	Scheduler_addTask@paramter+1
  2447  075A  01A5               	clrf	Scheduler_addTask@delay
  2448  075B  3002               	movlw	2
  2449  075C  00FF               	movwf	btemp+1
  2450  075D  087F               	movf	btemp+1,w
  2451  075E  00A6               	movwf	Scheduler_addTask@period
  2452  075F  3004               	movlw	(low (fp__Switch_update-fpbase))& (0+255)
  2453  0760  160A  118A  258D  120A  118A  	fcall	_Scheduler_addTask
  2454  0765                     l3014:
  2455                           
  2456                           ;main.c: 47:     Scheduler_addTask( Tempsnsr_update, (void *) TEMPSNSR_ID_1, 0, ( 100 / 
      +                          ( ( TickType_t ) 5 ) ) );
  2457  0765  3000               	movlw	0
  2458  0766  1283               	bcf	3,5	;RP0=0, select bank0
  2459  0767  1303               	bcf	3,6	;RP1=0, select bank0
  2460  0768  00A3               	movwf	Scheduler_addTask@paramter
  2461  0769  3000               	movlw	0
  2462  076A  00A4               	movwf	Scheduler_addTask@paramter+1
  2463  076B  01A5               	clrf	Scheduler_addTask@delay
  2464  076C  3014               	movlw	20
  2465  076D  00FF               	movwf	btemp+1
  2466  076E  087F               	movf	btemp+1,w
  2467  076F  00A6               	movwf	Scheduler_addTask@period
  2468  0770  3001               	movlw	(low (fp__Tempsnsr_update-fpbase))& (0+255)
  2469  0771  160A  118A  258D  120A  118A  	fcall	_Scheduler_addTask
  2470  0776                     l3016:
  2471                           
  2472                           ;main.c: 48:     Scheduler_addTask( Heater_update, (void *) HEATER_ID_1, 1, ( 100 / ( ( 
      +                          TickType_t ) 5 ) ) );
  2473  0776  3000               	movlw	0
  2474  0777  1283               	bcf	3,5	;RP0=0, select bank0
  2475  0778  1303               	bcf	3,6	;RP1=0, select bank0
  2476  0779  00A3               	movwf	Scheduler_addTask@paramter
  2477  077A  3000               	movlw	0
  2478  077B  00A4               	movwf	Scheduler_addTask@paramter+1
  2479  077C  01A5               	clrf	Scheduler_addTask@delay
  2480  077D  0AA5               	incf	Scheduler_addTask@delay,f
  2481  077E  3014               	movlw	20
  2482  077F  00FF               	movwf	btemp+1
  2483  0780  087F               	movf	btemp+1,w
  2484  0781  00A6               	movwf	Scheduler_addTask@period
  2485  0782  3007               	movlw	(low (fp__Heater_update-fpbase))& (0+255)
  2486  0783  160A  118A  258D  120A  118A  	fcall	_Scheduler_addTask
  2487  0788                     l3018:
  2488                           
  2489                           ;main.c: 49:     Scheduler_addTask( Tempctrl_update, (void *) TEMPCTRL_ID_1, 1, ( 100 / 
      +                          ( ( TickType_t ) 5 ) ) );
  2490  0788  3000               	movlw	0
  2491  0789  1283               	bcf	3,5	;RP0=0, select bank0
  2492  078A  1303               	bcf	3,6	;RP1=0, select bank0
  2493  078B  00A3               	movwf	Scheduler_addTask@paramter
  2494  078C  3000               	movlw	0
  2495  078D  00A4               	movwf	Scheduler_addTask@paramter+1
  2496  078E  01A5               	clrf	Scheduler_addTask@delay
  2497  078F  0AA5               	incf	Scheduler_addTask@delay,f
  2498  0790  3014               	movlw	20
  2499  0791  00FF               	movwf	btemp+1
  2500  0792  087F               	movf	btemp+1,w
  2501  0793  00A6               	movwf	Scheduler_addTask@period
  2502  0794  300A               	movlw	(low (fp__Tempctrl_update-fpbase))& (0+255)
  2503  0795  160A  118A  258D  120A  118A  	fcall	_Scheduler_addTask
  2504  079A                     l3020:
  2505                           
  2506                           ;main.c: 50:     Scheduler_addTask( Led_update, (void *) LED_ID_1, 1, ( 100 / ( ( TickTy
      +                          pe_t ) 5 ) ) );
  2507  079A  3000               	movlw	0
  2508  079B  1283               	bcf	3,5	;RP0=0, select bank0
  2509  079C  1303               	bcf	3,6	;RP1=0, select bank0
  2510  079D  00A3               	movwf	Scheduler_addTask@paramter
  2511  079E  3000               	movlw	0
  2512  079F  00A4               	movwf	Scheduler_addTask@paramter+1
  2513  07A0  01A5               	clrf	Scheduler_addTask@delay
  2514  07A1  0AA5               	incf	Scheduler_addTask@delay,f
  2515  07A2  3014               	movlw	20
  2516  07A3  00FF               	movwf	btemp+1
  2517  07A4  087F               	movf	btemp+1,w
  2518  07A5  00A6               	movwf	Scheduler_addTask@period
  2519  07A6  300D               	movlw	(low (fp__Led_update-fpbase))& (0+255)
  2520  07A7  160A  118A  258D  120A  118A  	fcall	_Scheduler_addTask
  2521  07AC                     l3022:
  2522                           
  2523                           ;main.c: 51:     Scheduler_addTask( Led_update, (void *) LED_ID_2, 1, ( 100 / ( ( TickTy
      +                          pe_t ) 5 ) ) );
  2524  07AC  3001               	movlw	1
  2525  07AD  1283               	bcf	3,5	;RP0=0, select bank0
  2526  07AE  1303               	bcf	3,6	;RP1=0, select bank0
  2527  07AF  00A3               	movwf	Scheduler_addTask@paramter
  2528  07B0  3000               	movlw	0
  2529  07B1  00A4               	movwf	Scheduler_addTask@paramter+1
  2530  07B2  01A5               	clrf	Scheduler_addTask@delay
  2531  07B3  0AA5               	incf	Scheduler_addTask@delay,f
  2532  07B4  3014               	movlw	20
  2533  07B5  00FF               	movwf	btemp+1
  2534  07B6  087F               	movf	btemp+1,w
  2535  07B7  00A6               	movwf	Scheduler_addTask@period
  2536  07B8  300D               	movlw	(low (fp__Led_update-fpbase))& (0+255)
  2537  07B9  160A  118A  258D  120A  118A  	fcall	_Scheduler_addTask
  2538  07BE                     l3024:
  2539                           
  2540                           ;main.c: 52:     Scheduler_addTask( Ssd_update, (void *) SSD_ID_1, 1, ( 5 / ( ( TickType
      +                          _t ) 5 ) ) );
  2541  07BE  3000               	movlw	0
  2542  07BF  1283               	bcf	3,5	;RP0=0, select bank0
  2543  07C0  1303               	bcf	3,6	;RP1=0, select bank0
  2544  07C1  00A3               	movwf	Scheduler_addTask@paramter
  2545  07C2  3000               	movlw	0
  2546  07C3  00A4               	movwf	Scheduler_addTask@paramter+1
  2547  07C4  01A5               	clrf	Scheduler_addTask@delay
  2548  07C5  0AA5               	incf	Scheduler_addTask@delay,f
  2549  07C6  01A6               	clrf	Scheduler_addTask@period
  2550  07C7  0AA6               	incf	Scheduler_addTask@period,f
  2551  07C8  3010               	movlw	(low (fp__Ssd_update-fpbase))& (0+255)
  2552  07C9  160A  118A  258D  120A  118A  	fcall	_Scheduler_addTask
  2553  07CE                     l3026:
  2554                           
  2555                           ;main.c: 53:     Scheduler_addTask( Ssd_update, (void *) SSD_ID_2, 1, ( 5 / ( ( TickType
      +                          _t ) 5 ) ) );
  2556  07CE  3001               	movlw	1
  2557  07CF  1283               	bcf	3,5	;RP0=0, select bank0
  2558  07D0  1303               	bcf	3,6	;RP1=0, select bank0
  2559  07D1  00A3               	movwf	Scheduler_addTask@paramter
  2560  07D2  3000               	movlw	0
  2561  07D3  00A4               	movwf	Scheduler_addTask@paramter+1
  2562  07D4  01A5               	clrf	Scheduler_addTask@delay
  2563  07D5  0AA5               	incf	Scheduler_addTask@delay,f
  2564  07D6  01A6               	clrf	Scheduler_addTask@period
  2565  07D7  0AA6               	incf	Scheduler_addTask@period,f
  2566  07D8  3010               	movlw	(low (fp__Ssd_update-fpbase))& (0+255)
  2567  07D9  160A  118A  258D  120A  118A  	fcall	_Scheduler_addTask
  2568  07DE                     l3028:
  2569                           
  2570                           ;main.c: 55:     Scheduler_start();
  2571  07DE  160A  158A  2060  120A  118A  	fcall	_Scheduler_start
  2572  07E3                     l3030:
  2573                           
  2574                           ;main.c: 57:     {;main.c: 58:         Scheduler_dispatchTasks();
  2575  07E3  160A  118A  261E  120A  118A  	fcall	_Scheduler_dispatchTasks
  2576  07E8  2FE3               	goto	l3030
  2577  07E9  120A  118A  2812   	ljmp	start
  2578  07EC                     __end_of_main:
  2579                           
  2580                           	psect	text1
  2581  09B6                     __ptext1:	
  2582 ;; *************** function _Tempsnsr_init *****************
  2583 ;; Defined at:
  2584 ;;		line 23 in file "Tempsnsr.c"
  2585 ;; Parameters:    Size  Location     Type
  2586 ;;  id              1    wreg     enum E1244
  2587 ;;  gpioId          1   20[BANK0 ] enum E1172
  2588 ;;  gpioPin         1   21[BANK0 ] enum E1180
  2589 ;;  adcId           1   22[BANK0 ] enum E1226
  2590 ;;  adcChannel      1   23[BANK0 ] enum E1229
  2591 ;; Auto vars:     Size  Location     Type
  2592 ;;  id              1   27[BANK0 ] enum E1244
  2593 ;;  index           2   25[BANK0 ] unsigned int 
  2594 ;; Return value:  Size  Location     Type
  2595 ;;                  1    wreg      void 
  2596 ;; Registers used:
  2597 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2598 ;; Tracked objects:
  2599 ;;		On entry : 0/0
  2600 ;;		On exit  : 0/0
  2601 ;;		Unchanged: 0/0
  2602 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2603 ;;      Params:         0       4       0       0       0
  2604 ;;      Locals:         0       3       0       0       0
  2605 ;;      Temps:          0       1       0       0       0
  2606 ;;      Totals:         0       8       0       0       0
  2607 ;;Total ram usage:        8 bytes
  2608 ;; Hardware stack levels used:    1
  2609 ;; Hardware stack levels required when called:    5
  2610 ;; This function calls:
  2611 ;;		___bmul
  2612 ;;		_initTempsnsrHardware
  2613 ;; This function is called by:
  2614 ;;		_main
  2615 ;; This function uses a non-reentrant model
  2616 ;;
  2617                           
  2618                           
  2619                           ;psect for function _Tempsnsr_init
  2620  09B6                     _Tempsnsr_init:
  2621                           
  2622                           ;incstack = 0
  2623                           ; Regs used in _Tempsnsr_init: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2624                           ;Tempsnsr_init@id stored from wreg
  2625  09B6  1283               	bcf	3,5	;RP0=0, select bank0
  2626  09B7  1303               	bcf	3,6	;RP1=0, select bank0
  2627  09B8  00BB               	movwf	Tempsnsr_init@id
  2628  09B9                     l2814:
  2629  09B9                     l2816:
  2630                           
  2631                           ;Tempsnsr.c: 26:     tempsnsr[ id ].gpioId = gpioId;
  2632  09B9  3019               	movlw	25
  2633  09BA  00FF               	movwf	btemp+1
  2634  09BB  087F               	movf	btemp+1,w
  2635  09BC  00A0               	movwf	___bmul@multiplicand
  2636  09BD  083B               	movf	Tempsnsr_init@id,w
  2637  09BE  160A  158A  20FD  120A  158A  	fcall	___bmul
  2638  09C3  3EA0               	addlw	(low (_tempsnsr| 0))& (0+255)
  2639  09C4  0084               	movwf	4
  2640  09C5  1283               	bcf	3,5	;RP0=0, select bank0
  2641  09C6  1303               	bcf	3,6	;RP1=0, select bank0
  2642  09C7  0834               	movf	Tempsnsr_init@gpioId,w
  2643  09C8  00FF               	movwf	btemp+1
  2644  09C9  087F               	movf	btemp+1,w
  2645  09CA  1383               	bcf	3,7	;select IRP bank1
  2646  09CB  0080               	movwf	0
  2647  09CC                     l2818:
  2648                           
  2649                           ;Tempsnsr.c: 27:     tempsnsr[ id ].gpioPin = gpioPin;
  2650  09CC  3019               	movlw	25
  2651  09CD  00FF               	movwf	btemp+1
  2652  09CE  087F               	movf	btemp+1,w
  2653  09CF  00A0               	movwf	___bmul@multiplicand
  2654  09D0  083B               	movf	Tempsnsr_init@id,w
  2655  09D1  160A  158A  20FD  120A  158A  	fcall	___bmul
  2656  09D6  3EA1               	addlw	(low ((_tempsnsr| 0+1)))& (0+255)
  2657  09D7  0084               	movwf	4
  2658  09D8  1283               	bcf	3,5	;RP0=0, select bank0
  2659  09D9  1303               	bcf	3,6	;RP1=0, select bank0
  2660  09DA  0835               	movf	Tempsnsr_init@gpioPin,w
  2661  09DB  00FF               	movwf	btemp+1
  2662  09DC  087F               	movf	btemp+1,w
  2663  09DD  1383               	bcf	3,7	;select IRP bank1
  2664  09DE  0080               	movwf	0
  2665  09DF                     l2820:
  2666                           
  2667                           ;Tempsnsr.c: 28:     tempsnsr[ id ].adcId = adcId;
  2668  09DF  3019               	movlw	25
  2669  09E0  00FF               	movwf	btemp+1
  2670  09E1  087F               	movf	btemp+1,w
  2671  09E2  00A0               	movwf	___bmul@multiplicand
  2672  09E3  083B               	movf	Tempsnsr_init@id,w
  2673  09E4  160A  158A  20FD  120A  158A  	fcall	___bmul
  2674  09E9  3EA2               	addlw	(low ((_tempsnsr| 0+2)))& (0+255)
  2675  09EA  0084               	movwf	4
  2676  09EB  1283               	bcf	3,5	;RP0=0, select bank0
  2677  09EC  1303               	bcf	3,6	;RP1=0, select bank0
  2678  09ED  0836               	movf	Tempsnsr_init@adcId,w
  2679  09EE  00FF               	movwf	btemp+1
  2680  09EF  087F               	movf	btemp+1,w
  2681  09F0  1383               	bcf	3,7	;select IRP bank1
  2682  09F1  0080               	movwf	0
  2683  09F2                     l2822:
  2684                           
  2685                           ;Tempsnsr.c: 29:     tempsnsr[ id ].adcChannel = adcChannel;
  2686  09F2  3019               	movlw	25
  2687  09F3  00FF               	movwf	btemp+1
  2688  09F4  087F               	movf	btemp+1,w
  2689  09F5  00A0               	movwf	___bmul@multiplicand
  2690  09F6  083B               	movf	Tempsnsr_init@id,w
  2691  09F7  160A  158A  20FD  120A  158A  	fcall	___bmul
  2692  09FC  3EA3               	addlw	(low ((_tempsnsr| 0+3)))& (0+255)
  2693  09FD  0084               	movwf	4
  2694  09FE  1283               	bcf	3,5	;RP0=0, select bank0
  2695  09FF  1303               	bcf	3,6	;RP1=0, select bank0
  2696  0A00  0837               	movf	Tempsnsr_init@adcChannel,w
  2697  0A01  00FF               	movwf	btemp+1
  2698  0A02  087F               	movf	btemp+1,w
  2699  0A03  1383               	bcf	3,7	;select IRP bank1
  2700  0A04  0080               	movwf	0
  2701  0A05                     l2824:
  2702                           
  2703                           ;Tempsnsr.c: 30:     tempsnsr[ id ].voltMulti = 488281;
  2704  0A05  3019               	movlw	25
  2705  0A06  00FF               	movwf	btemp+1
  2706  0A07  087F               	movf	btemp+1,w
  2707  0A08  00A0               	movwf	___bmul@multiplicand
  2708  0A09  083B               	movf	Tempsnsr_init@id,w
  2709  0A0A  160A  158A  20FD  120A  158A  	fcall	___bmul
  2710  0A0F  3EA4               	addlw	(low ((_tempsnsr| 0+4)))& (0+255)
  2711  0A10  0084               	movwf	4
  2712  0A11  3059               	movlw	89
  2713  0A12  1383               	bcf	3,7	;select IRP bank1
  2714  0A13  0080               	movwf	0
  2715  0A14  0A84               	incf	4,f
  2716  0A15  3073               	movlw	115
  2717  0A16  0080               	movwf	0
  2718  0A17  0A84               	incf	4,f
  2719  0A18  3007               	movlw	7
  2720  0A19  0080               	movwf	0
  2721  0A1A  0A84               	incf	4,f
  2722  0A1B  3000               	movlw	0
  2723  0A1C  0080               	movwf	0
  2724  0A1D                     l2826:
  2725                           
  2726                           ;Tempsnsr.c: 31:     tempsnsr[ id ].voltDivide = 1000000;
  2727  0A1D  3019               	movlw	25
  2728  0A1E  00FF               	movwf	btemp+1
  2729  0A1F  087F               	movf	btemp+1,w
  2730  0A20  1283               	bcf	3,5	;RP0=0, select bank0
  2731  0A21  1303               	bcf	3,6	;RP1=0, select bank0
  2732  0A22  00A0               	movwf	___bmul@multiplicand
  2733  0A23  083B               	movf	Tempsnsr_init@id,w
  2734  0A24  160A  158A  20FD  120A  158A  	fcall	___bmul
  2735  0A29  3EA8               	addlw	(low ((_tempsnsr| 0+8)))& (0+255)
  2736  0A2A  0084               	movwf	4
  2737  0A2B  3040               	movlw	64
  2738  0A2C  1383               	bcf	3,7	;select IRP bank1
  2739  0A2D  0080               	movwf	0
  2740  0A2E  0A84               	incf	4,f
  2741  0A2F  3042               	movlw	66
  2742  0A30  0080               	movwf	0
  2743  0A31  0A84               	incf	4,f
  2744  0A32  300F               	movlw	15
  2745  0A33  0080               	movwf	0
  2746  0A34  0A84               	incf	4,f
  2747  0A35  3000               	movlw	0
  2748  0A36  0080               	movwf	0
  2749                           
  2750                           ;Tempsnsr.c: 32:     for( index = 0; index < 10; index++ )
  2751  0A37  1283               	bcf	3,5	;RP0=0, select bank0
  2752  0A38  1303               	bcf	3,6	;RP1=0, select bank0
  2753  0A39  01B9               	clrf	Tempsnsr_init@index
  2754  0A3A  01BA               	clrf	Tempsnsr_init@index+1
  2755  0A3B                     l2832:
  2756                           
  2757                           ;Tempsnsr.c: 33:     {;Tempsnsr.c: 34:         tempsnsr[ id ].array[ index ] = 0;
  2758  0A3B  3019               	movlw	25
  2759  0A3C  00FF               	movwf	btemp+1
  2760  0A3D  087F               	movf	btemp+1,w
  2761  0A3E  00A0               	movwf	___bmul@multiplicand
  2762  0A3F  083B               	movf	Tempsnsr_init@id,w
  2763  0A40  160A  158A  20FD  120A  158A  	fcall	___bmul
  2764  0A45  3EAC               	addlw	(low ((_tempsnsr| 0+12)))& (0+255)
  2765  0A46  1283               	bcf	3,5	;RP0=0, select bank0
  2766  0A47  1303               	bcf	3,6	;RP1=0, select bank0
  2767  0A48  0739               	addwf	Tempsnsr_init@index,w
  2768  0A49  00B8               	movwf	??_Tempsnsr_init
  2769  0A4A  0838               	movf	??_Tempsnsr_init,w
  2770  0A4B  0084               	movwf	4
  2771  0A4C  1383               	bcf	3,7	;select IRP bank1
  2772  0A4D  0180               	clrf	0
  2773  0A4E                     l2834:
  2774                           
  2775                           ;Tempsnsr.c: 35:     }
  2776  0A4E  3001               	movlw	1
  2777  0A4F  07B9               	addwf	Tempsnsr_init@index,f
  2778  0A50  1803               	skipnc
  2779  0A51  0ABA               	incf	Tempsnsr_init@index+1,f
  2780  0A52  3000               	movlw	0
  2781  0A53  07BA               	addwf	Tempsnsr_init@index+1,f
  2782  0A54                     l2836:
  2783  0A54  3000               	movlw	0
  2784  0A55  023A               	subwf	Tempsnsr_init@index+1,w
  2785  0A56  300A               	movlw	10
  2786  0A57  1903               	skipnz
  2787  0A58  0239               	subwf	Tempsnsr_init@index,w
  2788  0A59  1C03               	skipc
  2789  0A5A  2A5C               	goto	u2961
  2790  0A5B  2A5D               	goto	u2960
  2791  0A5C                     u2961:
  2792  0A5C  2A3B               	goto	l2832
  2793  0A5D                     u2960:
  2794  0A5D                     l2838:
  2795                           
  2796                           ;Tempsnsr.c: 36:     tempsnsr[ id ].index = 0;
  2797  0A5D  3019               	movlw	25
  2798  0A5E  00FF               	movwf	btemp+1
  2799  0A5F  087F               	movf	btemp+1,w
  2800  0A60  00A0               	movwf	___bmul@multiplicand
  2801  0A61  083B               	movf	Tempsnsr_init@id,w
  2802  0A62  160A  158A  20FD  120A  158A  	fcall	___bmul
  2803  0A67  3EB6               	addlw	(low ((_tempsnsr| 0+22)))& (0+255)
  2804  0A68  0084               	movwf	4
  2805  0A69  1383               	bcf	3,7	;select IRP bank1
  2806  0A6A  0180               	clrf	0
  2807                           
  2808                           ;Tempsnsr.c: 37:     tempsnsr[ id ].avgFlag = 0;
  2809  0A6B  3019               	movlw	25
  2810  0A6C  00FF               	movwf	btemp+1
  2811  0A6D  087F               	movf	btemp+1,w
  2812  0A6E  1283               	bcf	3,5	;RP0=0, select bank0
  2813  0A6F  1303               	bcf	3,6	;RP1=0, select bank0
  2814  0A70  00A0               	movwf	___bmul@multiplicand
  2815  0A71  083B               	movf	Tempsnsr_init@id,w
  2816  0A72  160A  158A  20FD  120A  158A  	fcall	___bmul
  2817  0A77  3EB7               	addlw	(low ((_tempsnsr| 0+23)))& (0+255)
  2818  0A78  0084               	movwf	4
  2819  0A79  1383               	bcf	3,7	;select IRP bank1
  2820  0A7A  0180               	clrf	0
  2821                           
  2822                           ;Tempsnsr.c: 38:     tempsnsr[ id ].avgTemp = 0;
  2823  0A7B  3019               	movlw	25
  2824  0A7C  00FF               	movwf	btemp+1
  2825  0A7D  087F               	movf	btemp+1,w
  2826  0A7E  1283               	bcf	3,5	;RP0=0, select bank0
  2827  0A7F  1303               	bcf	3,6	;RP1=0, select bank0
  2828  0A80  00A0               	movwf	___bmul@multiplicand
  2829  0A81  083B               	movf	Tempsnsr_init@id,w
  2830  0A82  160A  158A  20FD  120A  158A  	fcall	___bmul
  2831  0A87  3EB8               	addlw	(low ((_tempsnsr| 0+24)))& (0+255)
  2832  0A88  0084               	movwf	4
  2833  0A89  1383               	bcf	3,7	;select IRP bank1
  2834  0A8A  0180               	clrf	0
  2835                           
  2836                           ;Tempsnsr.c: 39:     initTempsnsrHardware( id );
  2837  0A8B  1283               	bcf	3,5	;RP0=0, select bank0
  2838  0A8C  1303               	bcf	3,6	;RP1=0, select bank0
  2839  0A8D  083B               	movf	Tempsnsr_init@id,w
  2840  0A8E  160A  158A  24EC  120A  158A  	fcall	_initTempsnsrHardware
  2841  0A93                     l561:
  2842  0A93  0008               	return
  2843  0A94                     __end_of_Tempsnsr_init:
  2844                           
  2845                           	psect	text2
  2846  1CEC                     __ptext2:	
  2847 ;; *************** function _initTempsnsrHardware *****************
  2848 ;; Defined at:
  2849 ;;		line 63 in file "Tempsnsr.c"
  2850 ;; Parameters:    Size  Location     Type
  2851 ;;  id              1    wreg     enum E1244
  2852 ;; Auto vars:     Size  Location     Type
  2853 ;;  id              1   19[BANK0 ] enum E1244
  2854 ;; Return value:  Size  Location     Type
  2855 ;;                  1    wreg      void 
  2856 ;; Registers used:
  2857 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2858 ;; Tracked objects:
  2859 ;;		On entry : 0/0
  2860 ;;		On exit  : 0/0
  2861 ;;		Unchanged: 0/0
  2862 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2863 ;;      Params:         0       0       0       0       0
  2864 ;;      Locals:         0       1       0       0       0
  2865 ;;      Temps:          0       0       0       0       0
  2866 ;;      Totals:         0       1       0       0       0
  2867 ;;Total ram usage:        1 bytes
  2868 ;; Hardware stack levels used:    1
  2869 ;; Hardware stack levels required when called:    4
  2870 ;; This function calls:
  2871 ;;		_Adc_init
  2872 ;;		_Gpio_initPin
  2873 ;;		___bmul
  2874 ;; This function is called by:
  2875 ;;		_Tempsnsr_init
  2876 ;; This function uses a non-reentrant model
  2877 ;;
  2878                           
  2879                           
  2880                           ;psect for function _initTempsnsrHardware
  2881  1CEC                     _initTempsnsrHardware:
  2882                           
  2883                           ;incstack = 0
  2884                           ; Regs used in _initTempsnsrHardware: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstac
      +                          k]
  2885                           ;initTempsnsrHardware@id stored from wreg
  2886  1CEC  1283               	bcf	3,5	;RP0=0, select bank0
  2887  1CED  1303               	bcf	3,6	;RP1=0, select bank0
  2888  1CEE  00B3               	movwf	initTempsnsrHardware@id
  2889  1CEF                     l2762:
  2890                           
  2891                           ;Tempsnsr.c: 63: void initTempsnsrHardware( TEMPSNSR_ID_t id );Tempsnsr.c: 64: {;Tempsns
      +                          r.c: 65:     Gpio_initPin( tempsnsr[ id ].gpioId, tempsnsr[ id ].gpioPin, GPIO_MODE_INPU
      +                          T, GPIO_TYPE_FLOATING );
  2892  1CEF  3019               	movlw	25
  2893  1CF0  00FF               	movwf	btemp+1
  2894  1CF1  087F               	movf	btemp+1,w
  2895  1CF2  00A0               	movwf	___bmul@multiplicand
  2896  1CF3  0833               	movf	initTempsnsrHardware@id,w
  2897  1CF4  160A  158A  20FD  160A  158A  	fcall	___bmul
  2898  1CF9  3EA1               	addlw	(low ((_tempsnsr| 0+1)))& (0+255)
  2899  1CFA  0084               	movwf	4
  2900  1CFB  1383               	bcf	3,7	;select IRP bank1
  2901  1CFC  0800               	movf	0,w
  2902  1CFD  00FF               	movwf	btemp+1
  2903  1CFE  087F               	movf	btemp+1,w
  2904  1CFF  1283               	bcf	3,5	;RP0=0, select bank0
  2905  1D00  1303               	bcf	3,6	;RP1=0, select bank0
  2906  1D01  00A3               	movwf	Gpio_initPin@pin
  2907  1D02  01A4               	clrf	Gpio_initPin@mode
  2908  1D03  0AA4               	incf	Gpio_initPin@mode,f
  2909  1D04  01A5               	clrf	Gpio_initPin@type
  2910  1D05  0AA5               	incf	Gpio_initPin@type,f
  2911  1D06  3019               	movlw	25
  2912  1D07  00FF               	movwf	btemp+1
  2913  1D08  087F               	movf	btemp+1,w
  2914  1D09  00A0               	movwf	___bmul@multiplicand
  2915  1D0A  0833               	movf	initTempsnsrHardware@id,w
  2916  1D0B  160A  158A  20FD  160A  158A  	fcall	___bmul
  2917  1D10  3EA0               	addlw	(low (_tempsnsr| 0))& (0+255)
  2918  1D11  0084               	movwf	4
  2919  1D12  1383               	bcf	3,7	;select IRP bank1
  2920  1D13  0800               	movf	0,w
  2921  1D14  160A  118A  23A2  160A  158A  	fcall	_Gpio_initPin
  2922                           
  2923                           ;Tempsnsr.c: 66:     Adc_init( tempsnsr[ id ].adcId );
  2924  1D19  3019               	movlw	25
  2925  1D1A  00FF               	movwf	btemp+1
  2926  1D1B  087F               	movf	btemp+1,w
  2927  1D1C  1283               	bcf	3,5	;RP0=0, select bank0
  2928  1D1D  1303               	bcf	3,6	;RP1=0, select bank0
  2929  1D1E  00A0               	movwf	___bmul@multiplicand
  2930  1D1F  0833               	movf	initTempsnsrHardware@id,w
  2931  1D20  160A  158A  20FD  160A  158A  	fcall	___bmul
  2932  1D25  3EA2               	addlw	(low ((_tempsnsr| 0+2)))& (0+255)
  2933  1D26  0084               	movwf	4
  2934  1D27  1383               	bcf	3,7	;select IRP bank1
  2935  1D28  0800               	movf	0,w
  2936  1D29  160A  158A  2055  160A  158A  	fcall	_Adc_init
  2937  1D2E                     l572:
  2938  1D2E  0008               	return
  2939  1D2F                     __end_of_initTempsnsrHardware:
  2940                           
  2941                           	psect	text3
  2942  1855                     __ptext3:	
  2943 ;; *************** function _Adc_init *****************
  2944 ;; Defined at:
  2945 ;;		line 3 in file "Adc.c"
  2946 ;; Parameters:    Size  Location     Type
  2947 ;;  id              1    wreg     enum E1172
  2948 ;; Auto vars:     Size  Location     Type
  2949 ;;  id              1    0[COMMON] enum E1172
  2950 ;; Return value:  Size  Location     Type
  2951 ;;                  1    wreg      void 
  2952 ;; Registers used:
  2953 ;;		wreg, status,2
  2954 ;; Tracked objects:
  2955 ;;		On entry : 0/0
  2956 ;;		On exit  : 0/0
  2957 ;;		Unchanged: 0/0
  2958 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2959 ;;      Params:         0       0       0       0       0
  2960 ;;      Locals:         0       0       0       0       0
  2961 ;;      Temps:          0       0       0       0       0
  2962 ;;      Totals:         0       0       0       0       0
  2963 ;;Total ram usage:        0 bytes
  2964 ;; Hardware stack levels used:    1
  2965 ;; Hardware stack levels required when called:    3
  2966 ;; This function calls:
  2967 ;;		Nothing
  2968 ;; This function is called by:
  2969 ;;		_initTempsnsrHardware
  2970 ;; This function uses a non-reentrant model
  2971 ;;
  2972                           
  2973                           
  2974                           ;psect for function _Adc_init
  2975  1855                     _Adc_init:
  2976  1855                     l2380:	
  2977                           ;incstack = 0
  2978                           ; Regs used in _Adc_init: [wreg+status,2]
  2979                           
  2980                           
  2981                           ;Adc.c: 3: void Adc_init( ADC_ID_t id );Adc.c: 4: {;Adc.c: 5:     ADCON0 = ADCON0 | 0x41
      +                          ;
  2982  1855  1283               	bcf	3,5	;RP0=0, select bank0
  2983  1856  1303               	bcf	3,6	;RP1=0, select bank0
  2984  1857  081F               	movf	31,w	;volatile
  2985  1858  3841               	iorlw	65
  2986  1859  009F               	movwf	31	;volatile
  2987                           
  2988                           ;Adc.c: 6:     ADCON1 = ADCON1 | 0xC0;
  2989  185A  1683               	bsf	3,5	;RP0=1, select bank1
  2990  185B  1303               	bcf	3,6	;RP1=0, select bank1
  2991  185C  081F               	movf	31,w	;volatile
  2992  185D  38C0               	iorlw	192
  2993  185E  009F               	movwf	31	;volatile
  2994  185F                     l315:
  2995  185F  0008               	return
  2996  1860                     __end_of_Adc_init:
  2997                           
  2998                           	psect	text4
  2999  1197                     __ptext4:	
  3000 ;; *************** function _Tempctrl_init *****************
  3001 ;; Defined at:
  3002 ;;		line 17 in file "Tempctrl.c"
  3003 ;; Parameters:    Size  Location     Type
  3004 ;;  id              1    wreg     enum E1226
  3005 ;;  gpioIdH         1   20[BANK0 ] enum E1172
  3006 ;;  gpioPinH        1   21[BANK0 ] enum E1180
  3007 ;;  gpioIdC         1   22[BANK0 ] enum E1172
  3008 ;;  gpioPinC        1   23[BANK0 ] enum E1180
  3009 ;; Auto vars:     Size  Location     Type
  3010 ;;  id              1   24[BANK0 ] enum E1226
  3011 ;; Return value:  Size  Location     Type
  3012 ;;                  1    wreg      void 
  3013 ;; Registers used:
  3014 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3015 ;; Tracked objects:
  3016 ;;		On entry : 0/0
  3017 ;;		On exit  : 0/0
  3018 ;;		Unchanged: 0/0
  3019 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3020 ;;      Params:         0       4       0       0       0
  3021 ;;      Locals:         0       1       0       0       0
  3022 ;;      Temps:          0       0       0       0       0
  3023 ;;      Totals:         0       5       0       0       0
  3024 ;;Total ram usage:        5 bytes
  3025 ;; Hardware stack levels used:    1
  3026 ;; Hardware stack levels required when called:    5
  3027 ;; This function calls:
  3028 ;;		___bmul
  3029 ;;		_initTempctrlHardware
  3030 ;; This function is called by:
  3031 ;;		_main
  3032 ;; This function uses a non-reentrant model
  3033 ;;
  3034                           
  3035                           
  3036                           ;psect for function _Tempctrl_init
  3037  1197                     _Tempctrl_init:
  3038                           
  3039                           ;incstack = 0
  3040                           ; Regs used in _Tempctrl_init: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3041                           ;Tempctrl_init@id stored from wreg
  3042  1197  1283               	bcf	3,5	;RP0=0, select bank0
  3043  1198  1303               	bcf	3,6	;RP1=0, select bank0
  3044  1199  00B8               	movwf	Tempctrl_init@id
  3045  119A                     l2840:
  3046                           
  3047                           ;Tempctrl.c: 17: void Tempctrl_init( TEMPCTRL_ID_t id, GPIO_ID_t gpioIdH, GPIO_PIN_t gpi
      +                          oPinH, GPIO_ID_t gpioIdC, GPIO_PIN_t gpioPinC );Tempctrl.c: 18: {;Tempctrl.c: 19:     te
      +                          mpctrl[ id ].gpioIdH = gpioIdH;
  3048  119A  3005               	movlw	5
  3049  119B  00FF               	movwf	btemp+1
  3050  119C  087F               	movf	btemp+1,w
  3051  119D  00A0               	movwf	___bmul@multiplicand
  3052  119E  0838               	movf	Tempctrl_init@id,w
  3053  119F  160A  158A  20FD  160A  118A  	fcall	___bmul
  3054  11A4  3E66               	addlw	(low (_tempctrl| 0))& (0+255)
  3055  11A5  0084               	movwf	4
  3056  11A6  1283               	bcf	3,5	;RP0=0, select bank0
  3057  11A7  1303               	bcf	3,6	;RP1=0, select bank0
  3058  11A8  0834               	movf	Tempctrl_init@gpioIdH,w
  3059  11A9  00FF               	movwf	btemp+1
  3060  11AA  087F               	movf	btemp+1,w
  3061  11AB  1383               	bcf	3,7	;select IRP bank0
  3062  11AC  0080               	movwf	0
  3063                           
  3064                           ;Tempctrl.c: 20:     tempctrl[ id ].gpioPinH = gpioPinH;
  3065  11AD  3005               	movlw	5
  3066  11AE  00FF               	movwf	btemp+1
  3067  11AF  087F               	movf	btemp+1,w
  3068  11B0  00A0               	movwf	___bmul@multiplicand
  3069  11B1  0838               	movf	Tempctrl_init@id,w
  3070  11B2  160A  158A  20FD  160A  118A  	fcall	___bmul
  3071  11B7  3E67               	addlw	(low ((_tempctrl| 0+1)))& (0+255)
  3072  11B8  0084               	movwf	4
  3073  11B9  1283               	bcf	3,5	;RP0=0, select bank0
  3074  11BA  1303               	bcf	3,6	;RP1=0, select bank0
  3075  11BB  0835               	movf	Tempctrl_init@gpioPinH,w
  3076  11BC  00FF               	movwf	btemp+1
  3077  11BD  087F               	movf	btemp+1,w
  3078  11BE  1383               	bcf	3,7	;select IRP bank0
  3079  11BF  0080               	movwf	0
  3080                           
  3081                           ;Tempctrl.c: 21:     tempctrl[ id ].gpioIdC = gpioIdC;
  3082  11C0  3005               	movlw	5
  3083  11C1  00FF               	movwf	btemp+1
  3084  11C2  087F               	movf	btemp+1,w
  3085  11C3  00A0               	movwf	___bmul@multiplicand
  3086  11C4  0838               	movf	Tempctrl_init@id,w
  3087  11C5  160A  158A  20FD  160A  118A  	fcall	___bmul
  3088  11CA  3E68               	addlw	(low ((_tempctrl| 0+2)))& (0+255)
  3089  11CB  0084               	movwf	4
  3090  11CC  1283               	bcf	3,5	;RP0=0, select bank0
  3091  11CD  1303               	bcf	3,6	;RP1=0, select bank0
  3092  11CE  0836               	movf	Tempctrl_init@gpioIdC,w
  3093  11CF  00FF               	movwf	btemp+1
  3094  11D0  087F               	movf	btemp+1,w
  3095  11D1  1383               	bcf	3,7	;select IRP bank0
  3096  11D2  0080               	movwf	0
  3097                           
  3098                           ;Tempctrl.c: 22:     tempctrl[ id ].gpioPinC = gpioPinC;
  3099  11D3  3005               	movlw	5
  3100  11D4  00FF               	movwf	btemp+1
  3101  11D5  087F               	movf	btemp+1,w
  3102  11D6  00A0               	movwf	___bmul@multiplicand
  3103  11D7  0838               	movf	Tempctrl_init@id,w
  3104  11D8  160A  158A  20FD  160A  118A  	fcall	___bmul
  3105  11DD  3E69               	addlw	(low ((_tempctrl| 0+3)))& (0+255)
  3106  11DE  0084               	movwf	4
  3107  11DF  1283               	bcf	3,5	;RP0=0, select bank0
  3108  11E0  1303               	bcf	3,6	;RP1=0, select bank0
  3109  11E1  0837               	movf	Tempctrl_init@gpioPinC,w
  3110  11E2  00FF               	movwf	btemp+1
  3111  11E3  087F               	movf	btemp+1,w
  3112  11E4  1383               	bcf	3,7	;select IRP bank0
  3113  11E5  0080               	movwf	0
  3114                           
  3115                           ;Tempctrl.c: 23:     tempctrl[ id ].state = TEMPCTRL_STATE_OFF;
  3116  11E6  3005               	movlw	5
  3117  11E7  00FF               	movwf	btemp+1
  3118  11E8  087F               	movf	btemp+1,w
  3119  11E9  00A0               	movwf	___bmul@multiplicand
  3120  11EA  0838               	movf	Tempctrl_init@id,w
  3121  11EB  160A  158A  20FD  160A  118A  	fcall	___bmul
  3122  11F0  3E6A               	addlw	(low ((_tempctrl| 0+4)))& (0+255)
  3123  11F1  0084               	movwf	4
  3124  11F2  1383               	bcf	3,7	;select IRP bank0
  3125  11F3  0180               	clrf	0
  3126                           
  3127                           ;Tempctrl.c: 24:     initTempctrlHardware( id );
  3128  11F4  1283               	bcf	3,5	;RP0=0, select bank0
  3129  11F5  1303               	bcf	3,6	;RP1=0, select bank0
  3130  11F6  0838               	movf	Tempctrl_init@id,w
  3131  11F7  160A  158A  26EF  160A  118A  	fcall	_initTempctrlHardware
  3132  11FC                     l524:
  3133  11FC  0008               	return
  3134  11FD                     __end_of_Tempctrl_init:
  3135                           
  3136                           	psect	text5
  3137  1EEF                     __ptext5:	
  3138 ;; *************** function _initTempctrlHardware *****************
  3139 ;; Defined at:
  3140 ;;		line 38 in file "Tempctrl.c"
  3141 ;; Parameters:    Size  Location     Type
  3142 ;;  id              1    wreg     enum E1226
  3143 ;; Auto vars:     Size  Location     Type
  3144 ;;  id              1   19[BANK0 ] enum E1226
  3145 ;; Return value:  Size  Location     Type
  3146 ;;                  1    wreg      void 
  3147 ;; Registers used:
  3148 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3149 ;; Tracked objects:
  3150 ;;		On entry : 0/0
  3151 ;;		On exit  : 0/0
  3152 ;;		Unchanged: 0/0
  3153 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3154 ;;      Params:         0       0       0       0       0
  3155 ;;      Locals:         0       1       0       0       0
  3156 ;;      Temps:          0       0       0       0       0
  3157 ;;      Totals:         0       1       0       0       0
  3158 ;;Total ram usage:        1 bytes
  3159 ;; Hardware stack levels used:    1
  3160 ;; Hardware stack levels required when called:    4
  3161 ;; This function calls:
  3162 ;;		_Gpio_initPin
  3163 ;;		___bmul
  3164 ;; This function is called by:
  3165 ;;		_Tempctrl_init
  3166 ;; This function uses a non-reentrant model
  3167 ;;
  3168                           
  3169                           
  3170                           ;psect for function _initTempctrlHardware
  3171  1EEF                     _initTempctrlHardware:
  3172                           
  3173                           ;incstack = 0
  3174                           ; Regs used in _initTempctrlHardware: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstac
      +                          k]
  3175                           ;initTempctrlHardware@id stored from wreg
  3176  1EEF  1283               	bcf	3,5	;RP0=0, select bank0
  3177  1EF0  1303               	bcf	3,6	;RP1=0, select bank0
  3178  1EF1  00B3               	movwf	initTempctrlHardware@id
  3179  1EF2                     l2754:
  3180                           
  3181                           ;Tempctrl.c: 38: void initTempctrlHardware( TEMPCTRL_ID_t id );Tempctrl.c: 39: {;Tempctr
      +                          l.c: 40:     Gpio_initPin( tempctrl[ id ].gpioIdH, tempctrl[ id ].gpioPinH, GPIO_MODE_OU
      +                          TPUT_DHZ, GPIO_TYPE_GP_PP );
  3182  1EF2  3005               	movlw	5
  3183  1EF3  00FF               	movwf	btemp+1
  3184  1EF4  087F               	movf	btemp+1,w
  3185  1EF5  00A0               	movwf	___bmul@multiplicand
  3186  1EF6  0833               	movf	initTempctrlHardware@id,w
  3187  1EF7  160A  158A  20FD  160A  158A  	fcall	___bmul
  3188  1EFC  3E67               	addlw	(low ((_tempctrl| 0+1)))& (0+255)
  3189  1EFD  0084               	movwf	4
  3190  1EFE  1383               	bcf	3,7	;select IRP bank0
  3191  1EFF  0800               	movf	0,w
  3192  1F00  00FF               	movwf	btemp+1
  3193  1F01  087F               	movf	btemp+1,w
  3194  1F02  1283               	bcf	3,5	;RP0=0, select bank0
  3195  1F03  1303               	bcf	3,6	;RP1=0, select bank0
  3196  1F04  00A3               	movwf	Gpio_initPin@pin
  3197  1F05  01A4               	clrf	Gpio_initPin@mode
  3198  1F06  01A5               	clrf	Gpio_initPin@type
  3199  1F07  0AA5               	incf	Gpio_initPin@type,f
  3200  1F08  3005               	movlw	5
  3201  1F09  00FF               	movwf	btemp+1
  3202  1F0A  087F               	movf	btemp+1,w
  3203  1F0B  00A0               	movwf	___bmul@multiplicand
  3204  1F0C  0833               	movf	initTempctrlHardware@id,w
  3205  1F0D  160A  158A  20FD  160A  158A  	fcall	___bmul
  3206  1F12  3E66               	addlw	(low (_tempctrl| 0))& (0+255)
  3207  1F13  0084               	movwf	4
  3208  1F14  1383               	bcf	3,7	;select IRP bank0
  3209  1F15  0800               	movf	0,w
  3210  1F16  160A  118A  23A2  160A  158A  	fcall	_Gpio_initPin
  3211                           
  3212                           ;Tempctrl.c: 41:     Gpio_initPin( tempctrl[ id ].gpioIdC, tempctrl[ id ].gpioPinC, GPIO
      +                          _MODE_OUTPUT_DHZ, GPIO_TYPE_GP_PP );
  3213  1F1B  3005               	movlw	5
  3214  1F1C  00FF               	movwf	btemp+1
  3215  1F1D  087F               	movf	btemp+1,w
  3216  1F1E  1283               	bcf	3,5	;RP0=0, select bank0
  3217  1F1F  1303               	bcf	3,6	;RP1=0, select bank0
  3218  1F20  00A0               	movwf	___bmul@multiplicand
  3219  1F21  0833               	movf	initTempctrlHardware@id,w
  3220  1F22  160A  158A  20FD  160A  158A  	fcall	___bmul
  3221  1F27  3E69               	addlw	(low ((_tempctrl| 0+3)))& (0+255)
  3222  1F28  0084               	movwf	4
  3223  1F29  1383               	bcf	3,7	;select IRP bank0
  3224  1F2A  0800               	movf	0,w
  3225  1F2B  00FF               	movwf	btemp+1
  3226  1F2C  087F               	movf	btemp+1,w
  3227  1F2D  1283               	bcf	3,5	;RP0=0, select bank0
  3228  1F2E  1303               	bcf	3,6	;RP1=0, select bank0
  3229  1F2F  00A3               	movwf	Gpio_initPin@pin
  3230  1F30  01A4               	clrf	Gpio_initPin@mode
  3231  1F31  01A5               	clrf	Gpio_initPin@type
  3232  1F32  0AA5               	incf	Gpio_initPin@type,f
  3233  1F33  3005               	movlw	5
  3234  1F34  00FF               	movwf	btemp+1
  3235  1F35  087F               	movf	btemp+1,w
  3236  1F36  00A0               	movwf	___bmul@multiplicand
  3237  1F37  0833               	movf	initTempctrlHardware@id,w
  3238  1F38  160A  158A  20FD  160A  158A  	fcall	___bmul
  3239  1F3D  3E68               	addlw	(low ((_tempctrl| 0+2)))& (0+255)
  3240  1F3E  0084               	movwf	4
  3241  1F3F  1383               	bcf	3,7	;select IRP bank0
  3242  1F40  0800               	movf	0,w
  3243  1F41  160A  118A  23A2  160A  158A  	fcall	_Gpio_initPin
  3244  1F46                     l533:
  3245  1F46  0008               	return
  3246  1F47                     __end_of_initTempctrlHardware:
  3247                           
  3248                           	psect	text6
  3249  1012                     __ptext6:	
  3250 ;; *************** function _Switch_init *****************
  3251 ;; Defined at:
  3252 ;;		line 17 in file "Switch.c"
  3253 ;; Parameters:    Size  Location     Type
  3254 ;;  id              1    wreg     enum E1226
  3255 ;;  gpioId          1   20[BANK0 ] enum E1172
  3256 ;;  gpioPin         1   21[BANK0 ] enum E1180
  3257 ;; Auto vars:     Size  Location     Type
  3258 ;;  id              1   22[BANK0 ] enum E1226
  3259 ;; Return value:  Size  Location     Type
  3260 ;;                  1    wreg      void 
  3261 ;; Registers used:
  3262 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3263 ;; Tracked objects:
  3264 ;;		On entry : 0/0
  3265 ;;		On exit  : 0/0
  3266 ;;		Unchanged: 0/0
  3267 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3268 ;;      Params:         0       2       0       0       0
  3269 ;;      Locals:         0       1       0       0       0
  3270 ;;      Temps:          0       0       0       0       0
  3271 ;;      Totals:         0       3       0       0       0
  3272 ;;Total ram usage:        3 bytes
  3273 ;; Hardware stack levels used:    1
  3274 ;; Hardware stack levels required when called:    5
  3275 ;; This function calls:
  3276 ;;		___bmul
  3277 ;;		_initSwitchHardware
  3278 ;; This function is called by:
  3279 ;;		_main
  3280 ;; This function uses a non-reentrant model
  3281 ;;
  3282                           
  3283                           
  3284                           ;psect for function _Switch_init
  3285  1012                     _Switch_init:
  3286                           
  3287                           ;incstack = 0
  3288                           ; Regs used in _Switch_init: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3289                           ;Switch_init@id stored from wreg
  3290  1012  1283               	bcf	3,5	;RP0=0, select bank0
  3291  1013  1303               	bcf	3,6	;RP1=0, select bank0
  3292  1014  00B6               	movwf	Switch_init@id
  3293  1015                     l2812:
  3294                           
  3295                           ;Switch.c: 17: void Switch_init( SW_ID_t id, GPIO_ID_t gpioId, GPIO_PIN_t gpioPin );Swit
      +                          ch.c: 18: {;Switch.c: 19:     sw[ id ].gpioId = gpioId;
  3296  1015  3005               	movlw	5
  3297  1016  00FF               	movwf	btemp+1
  3298  1017  087F               	movf	btemp+1,w
  3299  1018  00A0               	movwf	___bmul@multiplicand
  3300  1019  0836               	movf	Switch_init@id,w
  3301  101A  160A  158A  20FD  160A  118A  	fcall	___bmul
  3302  101F  3E90               	addlw	(low (_sw| (0+256)))& (0+255)
  3303  1020  0084               	movwf	4
  3304  1021  1283               	bcf	3,5	;RP0=0, select bank0
  3305  1022  1303               	bcf	3,6	;RP1=0, select bank0
  3306  1023  0834               	movf	Switch_init@gpioId,w
  3307  1024  00FF               	movwf	btemp+1
  3308  1025  087F               	movf	btemp+1,w
  3309  1026  1783               	bsf	3,7	;select IRP bank3
  3310  1027  0080               	movwf	0
  3311                           
  3312                           ;Switch.c: 20:     sw[ id ].gpioPin = gpioPin;
  3313  1028  3005               	movlw	5
  3314  1029  00FF               	movwf	btemp+1
  3315  102A  087F               	movf	btemp+1,w
  3316  102B  00A0               	movwf	___bmul@multiplicand
  3317  102C  0836               	movf	Switch_init@id,w
  3318  102D  160A  158A  20FD  160A  118A  	fcall	___bmul
  3319  1032  3E91               	addlw	(low ((_sw| (0+256)+1)))& (0+255)
  3320  1033  0084               	movwf	4
  3321  1034  1283               	bcf	3,5	;RP0=0, select bank0
  3322  1035  1303               	bcf	3,6	;RP1=0, select bank0
  3323  1036  0835               	movf	Switch_init@gpioPin,w
  3324  1037  00FF               	movwf	btemp+1
  3325  1038  087F               	movf	btemp+1,w
  3326  1039  1783               	bsf	3,7	;select IRP bank3
  3327  103A  0080               	movwf	0
  3328                           
  3329                           ;Switch.c: 21:     sw[ id ].state = SWITCH_STATE_RELEASED;
  3330  103B  3005               	movlw	5
  3331  103C  00FF               	movwf	btemp+1
  3332  103D  087F               	movf	btemp+1,w
  3333  103E  00A0               	movwf	___bmul@multiplicand
  3334  103F  0836               	movf	Switch_init@id,w
  3335  1040  160A  158A  20FD  160A  118A  	fcall	___bmul
  3336  1045  3E92               	addlw	(low ((_sw| (0+256)+2)))& (0+255)
  3337  1046  0084               	movwf	4
  3338  1047  1783               	bsf	3,7	;select IRP bank3
  3339  1048  0180               	clrf	0
  3340                           
  3341                           ;Switch.c: 22:     sw[ id ].lock = 0;
  3342  1049  3005               	movlw	5
  3343  104A  00FF               	movwf	btemp+1
  3344  104B  087F               	movf	btemp+1,w
  3345  104C  1283               	bcf	3,5	;RP0=0, select bank0
  3346  104D  1303               	bcf	3,6	;RP1=0, select bank0
  3347  104E  00A0               	movwf	___bmul@multiplicand
  3348  104F  0836               	movf	Switch_init@id,w
  3349  1050  160A  158A  20FD  160A  118A  	fcall	___bmul
  3350  1055  3E93               	addlw	(low ((_sw| (0+256)+3)))& (0+255)
  3351  1056  0084               	movwf	4
  3352  1057  1783               	bsf	3,7	;select IRP bank3
  3353  1058  0180               	clrf	0
  3354                           
  3355                           ;Switch.c: 23:     sw[ id ].counter = 0;
  3356  1059  3005               	movlw	5
  3357  105A  00FF               	movwf	btemp+1
  3358  105B  087F               	movf	btemp+1,w
  3359  105C  1283               	bcf	3,5	;RP0=0, select bank0
  3360  105D  1303               	bcf	3,6	;RP1=0, select bank0
  3361  105E  00A0               	movwf	___bmul@multiplicand
  3362  105F  0836               	movf	Switch_init@id,w
  3363  1060  160A  158A  20FD  160A  118A  	fcall	___bmul
  3364  1065  3E94               	addlw	(low ((_sw| (0+256)+4)))& (0+255)
  3365  1066  0084               	movwf	4
  3366  1067  1783               	bsf	3,7	;select IRP bank3
  3367  1068  0180               	clrf	0
  3368                           
  3369                           ;Switch.c: 24:     initSwitchHardware( id );
  3370  1069  1283               	bcf	3,5	;RP0=0, select bank0
  3371  106A  1303               	bcf	3,6	;RP1=0, select bank0
  3372  106B  0836               	movf	Switch_init@id,w
  3373  106C  160A  158A  2328  160A  118A  	fcall	_initSwitchHardware
  3374  1071                     l192:
  3375  1071  0008               	return
  3376  1072                     __end_of_Switch_init:
  3377                           
  3378                           	psect	text7
  3379  1B28                     __ptext7:	
  3380 ;; *************** function _initSwitchHardware *****************
  3381 ;; Defined at:
  3382 ;;		line 55 in file "Switch.c"
  3383 ;; Parameters:    Size  Location     Type
  3384 ;;  id              1    wreg     enum E1226
  3385 ;; Auto vars:     Size  Location     Type
  3386 ;;  id              1   19[BANK0 ] enum E1226
  3387 ;; Return value:  Size  Location     Type
  3388 ;;                  1    wreg      void 
  3389 ;; Registers used:
  3390 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3391 ;; Tracked objects:
  3392 ;;		On entry : 0/0
  3393 ;;		On exit  : 0/0
  3394 ;;		Unchanged: 0/0
  3395 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3396 ;;      Params:         0       0       0       0       0
  3397 ;;      Locals:         0       1       0       0       0
  3398 ;;      Temps:          0       0       0       0       0
  3399 ;;      Totals:         0       1       0       0       0
  3400 ;;Total ram usage:        1 bytes
  3401 ;; Hardware stack levels used:    1
  3402 ;; Hardware stack levels required when called:    4
  3403 ;; This function calls:
  3404 ;;		_Gpio_initPin
  3405 ;;		___bmul
  3406 ;; This function is called by:
  3407 ;;		_Switch_init
  3408 ;; This function uses a non-reentrant model
  3409 ;;
  3410                           
  3411                           
  3412                           ;psect for function _initSwitchHardware
  3413  1B28                     _initSwitchHardware:
  3414                           
  3415                           ;incstack = 0
  3416                           ; Regs used in _initSwitchHardware: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3417                           ;initSwitchHardware@id stored from wreg
  3418  1B28  1283               	bcf	3,5	;RP0=0, select bank0
  3419  1B29  1303               	bcf	3,6	;RP1=0, select bank0
  3420  1B2A  00B3               	movwf	initSwitchHardware@id
  3421  1B2B                     l2596:
  3422                           
  3423                           ;Switch.c: 55: void initSwitchHardware( SW_ID_t id );Switch.c: 56: {;Switch.c: 57:     G
      +                          pio_initPin( sw[ id ].gpioId, sw[ id ].gpioPin, GPIO_MODE_INPUT, GPIO_TYPE_FLOATING );
  3424  1B2B  3005               	movlw	5
  3425  1B2C  00FF               	movwf	btemp+1
  3426  1B2D  087F               	movf	btemp+1,w
  3427  1B2E  00A0               	movwf	___bmul@multiplicand
  3428  1B2F  0833               	movf	initSwitchHardware@id,w
  3429  1B30  160A  158A  20FD  160A  158A  	fcall	___bmul
  3430  1B35  3E91               	addlw	(low ((_sw| (0+256)+1)))& (0+255)
  3431  1B36  0084               	movwf	4
  3432  1B37  1783               	bsf	3,7	;select IRP bank3
  3433  1B38  0800               	movf	0,w
  3434  1B39  00FF               	movwf	btemp+1
  3435  1B3A  087F               	movf	btemp+1,w
  3436  1B3B  1283               	bcf	3,5	;RP0=0, select bank0
  3437  1B3C  1303               	bcf	3,6	;RP1=0, select bank0
  3438  1B3D  00A3               	movwf	Gpio_initPin@pin
  3439  1B3E  01A4               	clrf	Gpio_initPin@mode
  3440  1B3F  0AA4               	incf	Gpio_initPin@mode,f
  3441  1B40  01A5               	clrf	Gpio_initPin@type
  3442  1B41  0AA5               	incf	Gpio_initPin@type,f
  3443  1B42  3005               	movlw	5
  3444  1B43  00FF               	movwf	btemp+1
  3445  1B44  087F               	movf	btemp+1,w
  3446  1B45  00A0               	movwf	___bmul@multiplicand
  3447  1B46  0833               	movf	initSwitchHardware@id,w
  3448  1B47  160A  158A  20FD  160A  158A  	fcall	___bmul
  3449  1B4C  3E90               	addlw	(low (_sw| (0+256)))& (0+255)
  3450  1B4D  0084               	movwf	4
  3451  1B4E  1783               	bsf	3,7	;select IRP bank3
  3452  1B4F  0800               	movf	0,w
  3453  1B50  160A  118A  23A2  160A  158A  	fcall	_Gpio_initPin
  3454  1B55                     l206:
  3455  1B55  0008               	return
  3456  1B56                     __end_of_initSwitchHardware:
  3457                           
  3458                           	psect	text8
  3459  0837                     __ptext8:	
  3460 ;; *************** function _Ssd_init *****************
  3461 ;; Defined at:
  3462 ;;		line 24 in file "Ssd.c"
  3463 ;; Parameters:    Size  Location     Type
  3464 ;;  id              1    wreg     enum E1226
  3465 ;;  gpioIdC         1   22[BANK0 ] enum E1172
  3466 ;;  gpioPinC        1   23[BANK0 ] enum E1180
  3467 ;;  gpioIdD         1   24[BANK0 ] enum E1172
  3468 ;;  gpioPinD        1   25[BANK0 ] enum E1180
  3469 ;; Auto vars:     Size  Location     Type
  3470 ;;  id              1   26[BANK0 ] enum E1226
  3471 ;; Return value:  Size  Location     Type
  3472 ;;                  1    wreg      void 
  3473 ;; Registers used:
  3474 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3475 ;; Tracked objects:
  3476 ;;		On entry : 0/0
  3477 ;;		On exit  : 0/0
  3478 ;;		Unchanged: 0/0
  3479 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3480 ;;      Params:         0       4       0       0       0
  3481 ;;      Locals:         0       1       0       0       0
  3482 ;;      Temps:          0       0       0       0       0
  3483 ;;      Totals:         0       5       0       0       0
  3484 ;;Total ram usage:        5 bytes
  3485 ;; Hardware stack levels used:    1
  3486 ;; Hardware stack levels required when called:    5
  3487 ;; This function calls:
  3488 ;;		___bmul
  3489 ;;		_initSsdHardware
  3490 ;; This function is called by:
  3491 ;;		_main
  3492 ;; This function uses a non-reentrant model
  3493 ;;
  3494                           
  3495                           
  3496                           ;psect for function _Ssd_init
  3497  0837                     _Ssd_init:
  3498                           
  3499                           ;incstack = 0
  3500                           ; Regs used in _Ssd_init: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3501                           ;Ssd_init@id stored from wreg
  3502  0837  1283               	bcf	3,5	;RP0=0, select bank0
  3503  0838  1303               	bcf	3,6	;RP1=0, select bank0
  3504  0839  00BA               	movwf	Ssd_init@id
  3505  083A                     l2854:
  3506                           
  3507                           ;Ssd.c: 24: void Ssd_init( SSD_ID_t id, GPIO_ID_t gpioIdC, GPIO_PIN_t gpioPinC, GPIO_ID_
      +                          t gpioIdD, GPIO_PIN_t gpioPinD );Ssd.c: 25: {;Ssd.c: 26:     ssd[ id ].gpioIdC = gpioIdC
      +                          ;
  3508  083A  300C               	movlw	12
  3509  083B  00FF               	movwf	btemp+1
  3510  083C  087F               	movf	btemp+1,w
  3511  083D  00A0               	movwf	___bmul@multiplicand
  3512  083E  083A               	movf	Ssd_init@id,w
  3513  083F  160A  158A  20FD  120A  158A  	fcall	___bmul
  3514  0844  3E9F               	addlw	(low (_ssd| (0+256)))& (0+255)
  3515  0845  0084               	movwf	4
  3516  0846  1283               	bcf	3,5	;RP0=0, select bank0
  3517  0847  1303               	bcf	3,6	;RP1=0, select bank0
  3518  0848  0836               	movf	Ssd_init@gpioIdC,w
  3519  0849  00FF               	movwf	btemp+1
  3520  084A  087F               	movf	btemp+1,w
  3521  084B  1783               	bsf	3,7	;select IRP bank3
  3522  084C  0080               	movwf	0
  3523                           
  3524                           ;Ssd.c: 27:     ssd[ id ].gpioPinC = gpioPinC;
  3525  084D  300C               	movlw	12
  3526  084E  00FF               	movwf	btemp+1
  3527  084F  087F               	movf	btemp+1,w
  3528  0850  00A0               	movwf	___bmul@multiplicand
  3529  0851  083A               	movf	Ssd_init@id,w
  3530  0852  160A  158A  20FD  120A  158A  	fcall	___bmul
  3531  0857  3EA0               	addlw	(low ((_ssd| (0+256)+1)))& (0+255)
  3532  0858  0084               	movwf	4
  3533  0859  1283               	bcf	3,5	;RP0=0, select bank0
  3534  085A  1303               	bcf	3,6	;RP1=0, select bank0
  3535  085B  0837               	movf	Ssd_init@gpioPinC,w
  3536  085C  00FF               	movwf	btemp+1
  3537  085D  087F               	movf	btemp+1,w
  3538  085E  1783               	bsf	3,7	;select IRP bank3
  3539  085F  0080               	movwf	0
  3540                           
  3541                           ;Ssd.c: 28:     ssd[ id ].gpioIdD = gpioIdD;
  3542  0860  300C               	movlw	12
  3543  0861  00FF               	movwf	btemp+1
  3544  0862  087F               	movf	btemp+1,w
  3545  0863  00A0               	movwf	___bmul@multiplicand
  3546  0864  083A               	movf	Ssd_init@id,w
  3547  0865  160A  158A  20FD  120A  158A  	fcall	___bmul
  3548  086A  3EA1               	addlw	(low ((_ssd| (0+256)+2)))& (0+255)
  3549  086B  0084               	movwf	4
  3550  086C  1283               	bcf	3,5	;RP0=0, select bank0
  3551  086D  1303               	bcf	3,6	;RP1=0, select bank0
  3552  086E  0838               	movf	Ssd_init@gpioIdD,w
  3553  086F  00FF               	movwf	btemp+1
  3554  0870  087F               	movf	btemp+1,w
  3555  0871  1783               	bsf	3,7	;select IRP bank3
  3556  0872  0080               	movwf	0
  3557                           
  3558                           ;Ssd.c: 29:     ssd[ id ].gpioPinD = gpioPinD;
  3559  0873  300C               	movlw	12
  3560  0874  00FF               	movwf	btemp+1
  3561  0875  087F               	movf	btemp+1,w
  3562  0876  00A0               	movwf	___bmul@multiplicand
  3563  0877  083A               	movf	Ssd_init@id,w
  3564  0878  160A  158A  20FD  120A  158A  	fcall	___bmul
  3565  087D  3EA2               	addlw	(low ((_ssd| (0+256)+3)))& (0+255)
  3566  087E  0084               	movwf	4
  3567  087F  1283               	bcf	3,5	;RP0=0, select bank0
  3568  0880  1303               	bcf	3,6	;RP1=0, select bank0
  3569  0881  0839               	movf	Ssd_init@gpioPinD,w
  3570  0882  00FF               	movwf	btemp+1
  3571  0883  087F               	movf	btemp+1,w
  3572  0884  1783               	bsf	3,7	;select IRP bank3
  3573  0885  0080               	movwf	0
  3574                           
  3575                           ;Ssd.c: 30:     ssd[ id ].counter = id;
  3576  0886  300C               	movlw	12
  3577  0887  00FF               	movwf	btemp+1
  3578  0888  087F               	movf	btemp+1,w
  3579  0889  00A0               	movwf	___bmul@multiplicand
  3580  088A  083A               	movf	Ssd_init@id,w
  3581  088B  160A  158A  20FD  120A  158A  	fcall	___bmul
  3582  0890  3EA3               	addlw	(low ((_ssd| (0+256)+4)))& (0+255)
  3583  0891  0084               	movwf	4
  3584  0892  1283               	bcf	3,5	;RP0=0, select bank0
  3585  0893  1303               	bcf	3,6	;RP1=0, select bank0
  3586  0894  083A               	movf	Ssd_init@id,w
  3587  0895  00FF               	movwf	btemp+1
  3588  0896  087F               	movf	btemp+1,w
  3589  0897  1783               	bsf	3,7	;select IRP bank3
  3590  0898  0080               	movwf	0
  3591                           
  3592                           ;Ssd.c: 31:     ssd[ id ].symbol = 0;
  3593  0899  300C               	movlw	12
  3594  089A  00FF               	movwf	btemp+1
  3595  089B  087F               	movf	btemp+1,w
  3596  089C  00A0               	movwf	___bmul@multiplicand
  3597  089D  083A               	movf	Ssd_init@id,w
  3598  089E  160A  158A  20FD  120A  158A  	fcall	___bmul
  3599  08A3  3EA4               	addlw	(low ((_ssd| (0+256)+5)))& (0+255)
  3600  08A4  0084               	movwf	4
  3601  08A5  1783               	bsf	3,7	;select IRP bank3
  3602  08A6  0180               	clrf	0
  3603                           
  3604                           ;Ssd.c: 32:     ssd[ id ].state = SSD_STATE_OFF;
  3605  08A7  300C               	movlw	12
  3606  08A8  00FF               	movwf	btemp+1
  3607  08A9  087F               	movf	btemp+1,w
  3608  08AA  1283               	bcf	3,5	;RP0=0, select bank0
  3609  08AB  1303               	bcf	3,6	;RP1=0, select bank0
  3610  08AC  00A0               	movwf	___bmul@multiplicand
  3611  08AD  083A               	movf	Ssd_init@id,w
  3612  08AE  160A  158A  20FD  120A  158A  	fcall	___bmul
  3613  08B3  3EA5               	addlw	(low ((_ssd| (0+256)+6)))& (0+255)
  3614  08B4  0084               	movwf	4
  3615  08B5  1783               	bsf	3,7	;select IRP bank3
  3616  08B6  0180               	clrf	0
  3617                           
  3618                           ;Ssd.c: 33:     ssd[ id ].blink = 0;
  3619  08B7  300C               	movlw	12
  3620  08B8  00FF               	movwf	btemp+1
  3621  08B9  087F               	movf	btemp+1,w
  3622  08BA  1283               	bcf	3,5	;RP0=0, select bank0
  3623  08BB  1303               	bcf	3,6	;RP1=0, select bank0
  3624  08BC  00A0               	movwf	___bmul@multiplicand
  3625  08BD  083A               	movf	Ssd_init@id,w
  3626  08BE  160A  158A  20FD  120A  158A  	fcall	___bmul
  3627  08C3  3EA6               	addlw	(low ((_ssd| (0+256)+7)))& (0+255)
  3628  08C4  0084               	movwf	4
  3629  08C5  1783               	bsf	3,7	;select IRP bank3
  3630  08C6  0180               	clrf	0
  3631                           
  3632                           ;Ssd.c: 34:     ssd[ id ].period = 0;
  3633  08C7  300C               	movlw	12
  3634  08C8  00FF               	movwf	btemp+1
  3635  08C9  087F               	movf	btemp+1,w
  3636  08CA  1283               	bcf	3,5	;RP0=0, select bank0
  3637  08CB  1303               	bcf	3,6	;RP1=0, select bank0
  3638  08CC  00A0               	movwf	___bmul@multiplicand
  3639  08CD  083A               	movf	Ssd_init@id,w
  3640  08CE  160A  158A  20FD  120A  158A  	fcall	___bmul
  3641  08D3  3EA7               	addlw	(low ((_ssd| (0+256)+8)))& (0+255)
  3642  08D4  0084               	movwf	4
  3643  08D5  1783               	bsf	3,7	;select IRP bank3
  3644  08D6  0180               	clrf	0
  3645  08D7  0A84               	incf	4,f
  3646  08D8  0180               	clrf	0
  3647                           
  3648                           ;Ssd.c: 35:     ssd[ id ].delay = 0;
  3649  08D9  300C               	movlw	12
  3650  08DA  00FF               	movwf	btemp+1
  3651  08DB  087F               	movf	btemp+1,w
  3652  08DC  1283               	bcf	3,5	;RP0=0, select bank0
  3653  08DD  1303               	bcf	3,6	;RP1=0, select bank0
  3654  08DE  00A0               	movwf	___bmul@multiplicand
  3655  08DF  083A               	movf	Ssd_init@id,w
  3656  08E0  160A  158A  20FD  120A  158A  	fcall	___bmul
  3657  08E5  3EA9               	addlw	(low ((_ssd| (0+256)+10)))& (0+255)
  3658  08E6  0084               	movwf	4
  3659  08E7  1783               	bsf	3,7	;select IRP bank3
  3660  08E8  0180               	clrf	0
  3661  08E9  0A84               	incf	4,f
  3662  08EA  0180               	clrf	0
  3663                           
  3664                           ;Ssd.c: 36:     initSsdHardware( id );
  3665  08EB  1283               	bcf	3,5	;RP0=0, select bank0
  3666  08EC  1303               	bcf	3,6	;RP1=0, select bank0
  3667  08ED  083A               	movf	Ssd_init@id,w
  3668  08EE  160A  118A  240E  120A  158A  	fcall	_initSsdHardware
  3669  08F3                     l232:
  3670  08F3  0008               	return
  3671  08F4                     __end_of_Ssd_init:
  3672                           
  3673                           	psect	text9
  3674  140E                     __ptext9:	
  3675 ;; *************** function _initSsdHardware *****************
  3676 ;; Defined at:
  3677 ;;		line 77 in file "Ssd.c"
  3678 ;; Parameters:    Size  Location     Type
  3679 ;;  id              1    wreg     enum E1226
  3680 ;; Auto vars:     Size  Location     Type
  3681 ;;  id              1   21[BANK0 ] enum E1226
  3682 ;;  i               2   19[BANK0 ] unsigned int 
  3683 ;; Return value:  Size  Location     Type
  3684 ;;                  1    wreg      void 
  3685 ;; Registers used:
  3686 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3687 ;; Tracked objects:
  3688 ;;		On entry : 0/0
  3689 ;;		On exit  : 0/0
  3690 ;;		Unchanged: 0/0
  3691 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3692 ;;      Params:         0       0       0       0       0
  3693 ;;      Locals:         0       3       0       0       0
  3694 ;;      Temps:          0       0       0       0       0
  3695 ;;      Totals:         0       3       0       0       0
  3696 ;;Total ram usage:        3 bytes
  3697 ;; Hardware stack levels used:    1
  3698 ;; Hardware stack levels required when called:    4
  3699 ;; This function calls:
  3700 ;;		_Gpio_initPin
  3701 ;;		___bmul
  3702 ;; This function is called by:
  3703 ;;		_Ssd_init
  3704 ;; This function uses a non-reentrant model
  3705 ;;
  3706                           
  3707                           
  3708                           ;psect for function _initSsdHardware
  3709  140E                     _initSsdHardware:
  3710                           
  3711                           ;incstack = 0
  3712                           ; Regs used in _initSsdHardware: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3713                           ;initSsdHardware@id stored from wreg
  3714  140E  1283               	bcf	3,5	;RP0=0, select bank0
  3715  140F  1303               	bcf	3,6	;RP1=0, select bank0
  3716  1410  00B5               	movwf	initSsdHardware@id
  3717  1411                     l2612:
  3718                           
  3719                           ;Ssd.c: 77: void initSsdHardware( SSD_ID_t id );Ssd.c: 78: {;Ssd.c: 79:     Gpio_initPin
      +                          ( ssd[ id ].gpioIdC, ssd[ id ].gpioPinC, GPIO_MODE_OUTPUT_DHZ, GPIO_TYPE_GP_PP );
  3720  1411  300C               	movlw	12
  3721  1412  00FF               	movwf	btemp+1
  3722  1413  087F               	movf	btemp+1,w
  3723  1414  00A0               	movwf	___bmul@multiplicand
  3724  1415  0835               	movf	initSsdHardware@id,w
  3725  1416  160A  158A  20FD  160A  118A  	fcall	___bmul
  3726  141B  3EA0               	addlw	(low ((_ssd| (0+256)+1)))& (0+255)
  3727  141C  0084               	movwf	4
  3728  141D  1783               	bsf	3,7	;select IRP bank3
  3729  141E  0800               	movf	0,w
  3730  141F  00FF               	movwf	btemp+1
  3731  1420  087F               	movf	btemp+1,w
  3732  1421  1283               	bcf	3,5	;RP0=0, select bank0
  3733  1422  1303               	bcf	3,6	;RP1=0, select bank0
  3734  1423  00A3               	movwf	Gpio_initPin@pin
  3735  1424  01A4               	clrf	Gpio_initPin@mode
  3736  1425  01A5               	clrf	Gpio_initPin@type
  3737  1426  0AA5               	incf	Gpio_initPin@type,f
  3738  1427  300C               	movlw	12
  3739  1428  00FF               	movwf	btemp+1
  3740  1429  087F               	movf	btemp+1,w
  3741  142A  00A0               	movwf	___bmul@multiplicand
  3742  142B  0835               	movf	initSsdHardware@id,w
  3743  142C  160A  158A  20FD  160A  118A  	fcall	___bmul
  3744  1431  3E9F               	addlw	(low (_ssd| (0+256)))& (0+255)
  3745  1432  0084               	movwf	4
  3746  1433  1783               	bsf	3,7	;select IRP bank3
  3747  1434  0800               	movf	0,w
  3748  1435  160A  118A  23A2  160A  118A  	fcall	_Gpio_initPin
  3749  143A                     l2614:
  3750                           
  3751                           ;Ssd.c: 80:     for( size_t i = 0; i < 8; i++ )
  3752  143A  1283               	bcf	3,5	;RP0=0, select bank0
  3753  143B  1303               	bcf	3,6	;RP1=0, select bank0
  3754  143C  01B3               	clrf	initSsdHardware@i
  3755  143D  01B4               	clrf	initSsdHardware@i+1
  3756  143E                     l2620:
  3757                           
  3758                           ;Ssd.c: 81:     {;Ssd.c: 82:         Gpio_initPin( ssd[ id ].gpioIdD, ssd[ id ].gpioPinD
      +                           + i, GPIO_MODE_OUTPUT_DHZ, GPIO_TYPE_GP_PP );
  3759  143E  300C               	movlw	12
  3760  143F  00FF               	movwf	btemp+1
  3761  1440  087F               	movf	btemp+1,w
  3762  1441  00A0               	movwf	___bmul@multiplicand
  3763  1442  0835               	movf	initSsdHardware@id,w
  3764  1443  160A  158A  20FD  160A  118A  	fcall	___bmul
  3765  1448  3EA2               	addlw	(low ((_ssd| (0+256)+3)))& (0+255)
  3766  1449  0084               	movwf	4
  3767  144A  1283               	bcf	3,5	;RP0=0, select bank0
  3768  144B  1303               	bcf	3,6	;RP1=0, select bank0
  3769  144C  0833               	movf	initSsdHardware@i,w
  3770  144D  1783               	bsf	3,7	;select IRP bank3
  3771  144E  0700               	addwf	0,w
  3772  144F  00FF               	movwf	btemp+1
  3773  1450  087F               	movf	btemp+1,w
  3774  1451  00A3               	movwf	Gpio_initPin@pin
  3775  1452  01A4               	clrf	Gpio_initPin@mode
  3776  1453  01A5               	clrf	Gpio_initPin@type
  3777  1454  0AA5               	incf	Gpio_initPin@type,f
  3778  1455  300C               	movlw	12
  3779  1456  00FF               	movwf	btemp+1
  3780  1457  087F               	movf	btemp+1,w
  3781  1458  00A0               	movwf	___bmul@multiplicand
  3782  1459  0835               	movf	initSsdHardware@id,w
  3783  145A  160A  158A  20FD  160A  118A  	fcall	___bmul
  3784  145F  3EA1               	addlw	(low ((_ssd| (0+256)+2)))& (0+255)
  3785  1460  0084               	movwf	4
  3786  1461  1783               	bsf	3,7	;select IRP bank3
  3787  1462  0800               	movf	0,w
  3788  1463  160A  118A  23A2  160A  118A  	fcall	_Gpio_initPin
  3789  1468                     l2622:
  3790                           
  3791                           ;Ssd.c: 83:     }
  3792  1468  3001               	movlw	1
  3793  1469  1283               	bcf	3,5	;RP0=0, select bank0
  3794  146A  1303               	bcf	3,6	;RP1=0, select bank0
  3795  146B  07B3               	addwf	initSsdHardware@i,f
  3796  146C  1803               	skipnc
  3797  146D  0AB4               	incf	initSsdHardware@i+1,f
  3798  146E  3000               	movlw	0
  3799  146F  07B4               	addwf	initSsdHardware@i+1,f
  3800  1470                     l2624:
  3801  1470  3000               	movlw	0
  3802  1471  0234               	subwf	initSsdHardware@i+1,w
  3803  1472  3008               	movlw	8
  3804  1473  1903               	skipnz
  3805  1474  0233               	subwf	initSsdHardware@i,w
  3806  1475  1C03               	skipc
  3807  1476  2C78               	goto	u2631
  3808  1477  2C79               	goto	u2630
  3809  1478                     u2631:
  3810  1478  2C3E               	goto	l2620
  3811  1479                     u2630:
  3812  1479                     l252:
  3813  1479  0008               	return
  3814  147A                     __end_of_initSsdHardware:
  3815                           
  3816                           	psect	text10
  3817  1860                     __ptext10:	
  3818 ;; *************** function _Scheduler_start *****************
  3819 ;; Defined at:
  3820 ;;		line 68 in file "Scheduler.c"
  3821 ;; Parameters:    Size  Location     Type
  3822 ;;		None
  3823 ;; Auto vars:     Size  Location     Type
  3824 ;;		None
  3825 ;; Return value:  Size  Location     Type
  3826 ;;                  1    wreg      void 
  3827 ;; Registers used:
  3828 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3829 ;; Tracked objects:
  3830 ;;		On entry : 0/0
  3831 ;;		On exit  : 0/0
  3832 ;;		Unchanged: 0/0
  3833 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3834 ;;      Params:         0       0       0       0       0
  3835 ;;      Locals:         0       0       0       0       0
  3836 ;;      Temps:          0       0       0       0       0
  3837 ;;      Totals:         0       0       0       0       0
  3838 ;;Total ram usage:        0 bytes
  3839 ;; Hardware stack levels used:    1
  3840 ;; Hardware stack levels required when called:    7
  3841 ;; This function calls:
  3842 ;;		_Scheduler_initSysTick
  3843 ;; This function is called by:
  3844 ;;		_main
  3845 ;; This function uses a non-reentrant model
  3846 ;;
  3847                           
  3848                           
  3849                           ;psect for function _Scheduler_start
  3850  1860                     _Scheduler_start:
  3851  1860                     l2976:	
  3852                           ;incstack = 0
  3853                           ; Regs used in _Scheduler_start: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3854                           
  3855                           
  3856                           ;Scheduler.c: 70:  Scheduler_initSysTick( ( ( TickType_t ) 5 ) );
  3857  1860  3005               	movlw	5
  3858  1861  1283               	bcf	3,5	;RP0=0, select bank0
  3859  1862  1303               	bcf	3,6	;RP1=0, select bank0
  3860  1863  00B4               	movwf	Scheduler_initSysTick@systickPeriod
  3861  1864  3000               	movlw	0
  3862  1865  00B5               	movwf	Scheduler_initSysTick@systickPeriod+1
  3863  1866  120A  118A  27EC  160A  158A  	fcall	_Scheduler_initSysTick
  3864  186B                     l120:
  3865  186B  0008               	return
  3866  186C                     __end_of_Scheduler_start:
  3867                           
  3868                           	psect	text11
  3869  07EC                     __ptext11:	
  3870 ;; *************** function _Scheduler_initSysTick *****************
  3871 ;; Defined at:
  3872 ;;		line 5 in file "SchedulerConfig.c"
  3873 ;; Parameters:    Size  Location     Type
  3874 ;;  systickPerio    2   20[BANK0 ] unsigned int 
  3875 ;; Auto vars:     Size  Location     Type
  3876 ;;		None
  3877 ;; Return value:  Size  Location     Type
  3878 ;;                  1    wreg      void 
  3879 ;; Registers used:
  3880 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3881 ;; Tracked objects:
  3882 ;;		On entry : 0/0
  3883 ;;		On exit  : 0/0
  3884 ;;		Unchanged: 0/0
  3885 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3886 ;;      Params:         0       2       0       0       0
  3887 ;;      Locals:         0       0       0       0       0
  3888 ;;      Temps:          0       0       0       0       0
  3889 ;;      Totals:         0       2       0       0       0
  3890 ;;Total ram usage:        2 bytes
  3891 ;; Hardware stack levels used:    1
  3892 ;; Hardware stack levels required when called:    6
  3893 ;; This function calls:
  3894 ;;		_Timer_init
  3895 ;; This function is called by:
  3896 ;;		_Scheduler_start
  3897 ;; This function uses a non-reentrant model
  3898 ;;
  3899                           
  3900                           
  3901                           ;psect for function _Scheduler_initSysTick
  3902  07EC                     _Scheduler_initSysTick:
  3903  07EC                     l2544:	
  3904                           ;incstack = 0
  3905                           ; Regs used in _Scheduler_initSysTick: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+csta
      +                          ck]
  3906                           
  3907                           
  3908                           ;SchedulerConfig.c: 5: void Scheduler_initSysTick( TickType_t systickPeriod );SchedulerC
      +                          onfig.c: 6: {;SchedulerConfig.c: 7:     Timer_init( TIMER_ID_1, TIMER_MODE_NORMAL, systi
      +                          ckPeriod, TIMER_CHANNEL_NORMAL, TIMER_EVENT_NORMAL );
  3909  07EC  1283               	bcf	3,5	;RP0=0, select bank0
  3910  07ED  1303               	bcf	3,6	;RP1=0, select bank0
  3911  07EE  01AC               	clrf	Timer_init@mode
  3912  07EF  0835               	movf	Scheduler_initSysTick@systickPeriod+1,w
  3913  07F0  00AE               	movwf	Timer_init@period+1
  3914  07F1  0834               	movf	Scheduler_initSysTick@systickPeriod,w
  3915  07F2  00AD               	movwf	Timer_init@period
  3916  07F3  01AF               	clrf	Timer_init@channel
  3917  07F4  300B               	movlw	11
  3918  07F5  00FF               	movwf	btemp+1
  3919  07F6  087F               	movf	btemp+1,w
  3920  07F7  00B0               	movwf	Timer_init@event
  3921  07F8  3001               	movlw	1
  3922  07F9  160A  158A  246D  120A  118A  	fcall	_Timer_init
  3923  07FE                     l2546:
  3924                           
  3925                           ;SchedulerConfig.c: 8:     (INTCONbits.GIE = 1);
  3926  07FE  178B               	bsf	11,7	;volatile
  3927  07FF                     l62:
  3928  07FF  0008               	return
  3929  0800                     __end_of_Scheduler_initSysTick:
  3930                           
  3931                           	psect	text12
  3932  1C6D                     __ptext12:	
  3933 ;; *************** function _Timer_init *****************
  3934 ;; Defined at:
  3935 ;;		line 7 in file "Timer.c"
  3936 ;; Parameters:    Size  Location     Type
  3937 ;;  id              1    wreg     enum E1172
  3938 ;;  mode            1   12[BANK0 ] enum E1178
  3939 ;;  period          2   13[BANK0 ] enum E1197
  3940 ;;  channel         1   15[BANK0 ] enum E1182
  3941 ;;  event           1   16[BANK0 ] enum E1186
  3942 ;; Auto vars:     Size  Location     Type
  3943 ;;  id              1   19[BANK0 ] enum E1172
  3944 ;; Return value:  Size  Location     Type
  3945 ;;                  1    wreg      void 
  3946 ;; Registers used:
  3947 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3948 ;; Tracked objects:
  3949 ;;		On entry : 0/0
  3950 ;;		On exit  : 0/0
  3951 ;;		Unchanged: 0/0
  3952 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3953 ;;      Params:         0       5       0       0       0
  3954 ;;      Locals:         0       1       0       0       0
  3955 ;;      Temps:          0       2       0       0       0
  3956 ;;      Totals:         0       8       0       0       0
  3957 ;;Total ram usage:        8 bytes
  3958 ;; Hardware stack levels used:    1
  3959 ;; Hardware stack levels required when called:    5
  3960 ;; This function calls:
  3961 ;;		_Timer0_init
  3962 ;;		_Timer1_init
  3963 ;; This function is called by:
  3964 ;;		_Scheduler_initSysTick
  3965 ;; This function uses a non-reentrant model
  3966 ;;
  3967                           
  3968                           
  3969                           ;psect for function _Timer_init
  3970  1C6D                     _Timer_init:
  3971                           
  3972                           ;incstack = 0
  3973                           ; Regs used in _Timer_init: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3974                           ;Timer_init@id stored from wreg
  3975  1C6D  1283               	bcf	3,5	;RP0=0, select bank0
  3976  1C6E  1303               	bcf	3,6	;RP1=0, select bank0
  3977  1C6F  00B3               	movwf	Timer_init@id
  3978  1C70                     l2300:
  3979                           
  3980                           ;Timer.c: 7: void Timer_init( TIMER_ID_t id, TIMER_MODE_t mode, TIMER_PERIOD_t period, T
      +                          IMER_CHANNEL_t channel, TIMER_EVENT_t event );Timer.c: 8: {;Timer.c: 9:     switch( id )
  3981  1C70  2C97               	goto	l2308
  3982  1C71                     l2302:
  3983                           
  3984                           ;Timer.c: 12:             Timer0_init( mode, period, channel, event );
  3985  1C71  082E               	movf	Timer_init@period+1,w
  3986  1C72  00A4               	movwf	Timer0_init@period+1
  3987  1C73  082D               	movf	Timer_init@period,w
  3988  1C74  00A3               	movwf	Timer0_init@period
  3989  1C75  082F               	movf	Timer_init@channel,w
  3990  1C76  00FF               	movwf	btemp+1
  3991  1C77  087F               	movf	btemp+1,w
  3992  1C78  00A5               	movwf	Timer0_init@channel
  3993  1C79  0830               	movf	Timer_init@event,w
  3994  1C7A  00FF               	movwf	btemp+1
  3995  1C7B  087F               	movf	btemp+1,w
  3996  1C7C  00A6               	movwf	Timer0_init@event
  3997  1C7D  082C               	movf	Timer_init@mode,w
  3998  1C7E  160A  158A  2159  160A  158A  	fcall	_Timer0_init
  3999                           
  4000                           ;Timer.c: 13:             break;
  4001  1C83  2CAA               	goto	l289
  4002  1C84                     l2304:
  4003                           
  4004                           ;Timer.c: 15:             Timer1_init( mode, period, channel, event );
  4005  1C84  082E               	movf	Timer_init@period+1,w
  4006  1C85  00A7               	movwf	Timer1_init@period+1
  4007  1C86  082D               	movf	Timer_init@period,w
  4008  1C87  00A6               	movwf	Timer1_init@period
  4009  1C88  082F               	movf	Timer_init@channel,w
  4010  1C89  00FF               	movwf	btemp+1
  4011  1C8A  087F               	movf	btemp+1,w
  4012  1C8B  00A8               	movwf	Timer1_init@channel
  4013  1C8C  0830               	movf	Timer_init@event,w
  4014  1C8D  00FF               	movwf	btemp+1
  4015  1C8E  087F               	movf	btemp+1,w
  4016  1C8F  00A9               	movwf	Timer1_init@event
  4017  1C90  082C               	movf	Timer_init@mode,w
  4018  1C91  160A  158A  222F  160A  158A  	fcall	_Timer1_init
  4019                           
  4020                           ;Timer.c: 16:             break;
  4021  1C96  2CAA               	goto	l289
  4022  1C97                     l2308:
  4023  1C97  0833               	movf	Timer_init@id,w
  4024  1C98  00B1               	movwf	??_Timer_init
  4025  1C99  01B2               	clrf	??_Timer_init+1
  4026                           
  4027                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4028                           ; Switch size 1, requested type "simple"
  4029                           ; Number of cases is 1, Range of values is 0 to 0
  4030                           ; switch strategies available:
  4031                           ; Name         Instructions Cycles
  4032                           ; simple_byte            4     3 (average)
  4033                           ; direct_byte           11     8 (fixed)
  4034                           ; jumptable            260     6 (fixed)
  4035                           ;	Chosen strategy is simple_byte
  4036  1C9A  0832               	movf	??_Timer_init+1,w
  4037  1C9B  3A00               	xorlw	0	; case 0
  4038  1C9C  1903               	skipnz
  4039  1C9D  2C9F               	goto	l3082
  4040  1C9E  2CAA               	goto	l289
  4041  1C9F                     l3082:
  4042                           
  4043                           ; Switch size 1, requested type "simple"
  4044                           ; Number of cases is 3, Range of values is 0 to 2
  4045                           ; switch strategies available:
  4046                           ; Name         Instructions Cycles
  4047                           ; simple_byte           10     6 (average)
  4048                           ; direct_byte           17     8 (fixed)
  4049                           ; jumptable            260     6 (fixed)
  4050                           ;	Chosen strategy is simple_byte
  4051  1C9F  0831               	movf	??_Timer_init,w
  4052  1CA0  3A00               	xorlw	0	; case 0
  4053  1CA1  1903               	skipnz
  4054  1CA2  2C71               	goto	l2302
  4055  1CA3  3A01               	xorlw	1	; case 1
  4056  1CA4  1903               	skipnz
  4057  1CA5  2C84               	goto	l2304
  4058  1CA6  3A03               	xorlw	3	; case 2
  4059  1CA7  1903               	skipnz
  4060  1CA8  2CAA               	goto	l289
  4061  1CA9  2CAA               	goto	l289
  4062  1CAA                     l289:
  4063  1CAA  0008               	return
  4064  1CAB                     __end_of_Timer_init:
  4065                           
  4066                           	psect	text13
  4067  1A2F                     __ptext13:	
  4068 ;; *************** function _Timer1_init *****************
  4069 ;; Defined at:
  4070 ;;		line 52 in file "Timer.c"
  4071 ;; Parameters:    Size  Location     Type
  4072 ;;  mode            1    wreg     enum E1178
  4073 ;;  period          2    6[BANK0 ] enum E1197
  4074 ;;  channel         1    8[BANK0 ] enum E1182
  4075 ;;  event           1    9[BANK0 ] enum E1186
  4076 ;; Auto vars:     Size  Location     Type
  4077 ;;  mode            1    0[COMMON] enum E1178
  4078 ;; Return value:  Size  Location     Type
  4079 ;;                  1    wreg      void 
  4080 ;; Registers used:
  4081 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4082 ;; Tracked objects:
  4083 ;;		On entry : 0/0
  4084 ;;		On exit  : 0/0
  4085 ;;		Unchanged: 0/0
  4086 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4087 ;;      Params:         0       4       0       0       0
  4088 ;;      Locals:         0       0       0       0       0
  4089 ;;      Temps:          0       2       0       0       0
  4090 ;;      Totals:         0       6       0       0       0
  4091 ;;Total ram usage:        6 bytes
  4092 ;; Hardware stack levels used:    1
  4093 ;; Hardware stack levels required when called:    4
  4094 ;; This function calls:
  4095 ;;		___wmul
  4096 ;; This function is called by:
  4097 ;;		_Timer_init
  4098 ;; This function uses a non-reentrant model
  4099 ;;
  4100                           
  4101                           
  4102                           ;psect for function _Timer1_init
  4103  1A2F                     _Timer1_init:
  4104  1A2F                     l2216:	
  4105                           ;incstack = 0
  4106                           ; Regs used in _Timer1_init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4107                           
  4108                           
  4109                           ;Timer.c: 52: void Timer1_init( TIMER_MODE_t mode, TIMER_PERIOD_t period, TIMER_CHANNEL_
      +                          t channel, TIMER_EVENT_t event );Timer.c: 53: {;Timer.c: 57:     CCPR1 = ( uint16_t )( (
      +                           ( ( ( ( 16000000 ) / ( 4 ) ) / 1 ) / 1000 ) * period ) - 1 );
  4110  1A2F  1283               	bcf	3,5	;RP0=0, select bank0
  4111  1A30  1303               	bcf	3,6	;RP1=0, select bank0
  4112  1A31  0827               	movf	Timer1_init@period+1,w
  4113  1A32  00A1               	movwf	___wmul@multiplier+1
  4114  1A33  0826               	movf	Timer1_init@period,w
  4115  1A34  00A0               	movwf	___wmul@multiplier
  4116  1A35  30A0               	movlw	160
  4117  1A36  00A2               	movwf	___wmul@multiplicand
  4118  1A37  300F               	movlw	15
  4119  1A38  00A3               	movwf	___wmul@multiplicand+1
  4120  1A39  160A  158A  2208  160A  158A  	fcall	___wmul
  4121  1A3E  1283               	bcf	3,5	;RP0=0, select bank0
  4122  1A3F  1303               	bcf	3,6	;RP1=0, select bank0
  4123  1A40  0820               	movf	?___wmul,w
  4124  1A41  3EFF               	addlw	255
  4125  1A42  00AA               	movwf	??_Timer1_init
  4126  1A43  0821               	movf	?___wmul+1,w
  4127  1A44  1803               	skipnc
  4128  1A45  3E01               	addlw	1
  4129  1A46  3EFF               	addlw	255
  4130  1A47  00AB               	movwf	??_Timer1_init+1
  4131  1A48  082A               	movf	??_Timer1_init,w
  4132  1A49  0095               	movwf	21	;volatile
  4133  1A4A  082B               	movf	??_Timer1_init+1,w
  4134  1A4B  0096               	movwf	22	;volatile
  4135  1A4C                     l2218:
  4136                           
  4137                           ;Timer.c: 60:     CCP1CON |= event;
  4138  1A4C  0829               	movf	Timer1_init@event,w	;volatile
  4139  1A4D  00FF               	movwf	btemp+1
  4140  1A4E  087F               	movf	btemp+1,w
  4141  1A4F  0497               	iorwf	23,f	;volatile
  4142  1A50                     l2220:
  4143                           
  4144                           ;Timer.c: 62:     T1CON |= 0x01;
  4145  1A50  1410               	bsf	16,0	;volatile
  4146  1A51                     l2222:
  4147                           
  4148                           ;Timer.c: 64:     INTCON |= 0x40;
  4149  1A51  170B               	bsf	11,6	;volatile
  4150  1A52                     l2224:
  4151                           
  4152                           ;Timer.c: 65:     PIE1 |= 0x04;
  4153  1A52  1683               	bsf	3,5	;RP0=1, select bank1
  4154  1A53  1303               	bcf	3,6	;RP1=0, select bank1
  4155  1A54  150C               	bsf	12,2	;volatile
  4156  1A55                     l304:
  4157  1A55  0008               	return
  4158  1A56                     __end_of_Timer1_init:
  4159                           
  4160                           	psect	text14
  4161  1A08                     __ptext14:	
  4162 ;; *************** function ___wmul *****************
  4163 ;; Defined at:
  4164 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\Umul16.c"
  4165 ;; Parameters:    Size  Location     Type
  4166 ;;  multiplier      2    0[BANK0 ] unsigned int 
  4167 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  4168 ;; Auto vars:     Size  Location     Type
  4169 ;;  product         2    4[BANK0 ] unsigned int 
  4170 ;; Return value:  Size  Location     Type
  4171 ;;                  2    0[BANK0 ] unsigned int 
  4172 ;; Registers used:
  4173 ;;		wreg, status,2, status,0
  4174 ;; Tracked objects:
  4175 ;;		On entry : 0/0
  4176 ;;		On exit  : 0/0
  4177 ;;		Unchanged: 0/0
  4178 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4179 ;;      Params:         0       4       0       0       0
  4180 ;;      Locals:         0       2       0       0       0
  4181 ;;      Temps:          0       0       0       0       0
  4182 ;;      Totals:         0       6       0       0       0
  4183 ;;Total ram usage:        6 bytes
  4184 ;; Hardware stack levels used:    1
  4185 ;; Hardware stack levels required when called:    3
  4186 ;; This function calls:
  4187 ;;		Nothing
  4188 ;; This function is called by:
  4189 ;;		_Timer1_init
  4190 ;; This function uses a non-reentrant model
  4191 ;;
  4192                           
  4193                           
  4194                           ;psect for function ___wmul
  4195  1A08                     ___wmul:
  4196  1A08                     l2138:	
  4197                           ;incstack = 0
  4198                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  4199                           
  4200  1A08  1283               	bcf	3,5	;RP0=0, select bank0
  4201  1A09  1303               	bcf	3,6	;RP1=0, select bank0
  4202  1A0A  01A4               	clrf	___wmul@product
  4203  1A0B  01A5               	clrf	___wmul@product+1
  4204  1A0C                     l2140:
  4205  1A0C  1C20               	btfss	___wmul@multiplier,0
  4206  1A0D  2A0F               	goto	u1591
  4207  1A0E  2A10               	goto	u1590
  4208  1A0F                     u1591:
  4209  1A0F  2A16               	goto	l666
  4210  1A10                     u1590:
  4211  1A10                     l2142:
  4212  1A10  0822               	movf	___wmul@multiplicand,w
  4213  1A11  07A4               	addwf	___wmul@product,f
  4214  1A12  1803               	skipnc
  4215  1A13  0AA5               	incf	___wmul@product+1,f
  4216  1A14  0823               	movf	___wmul@multiplicand+1,w
  4217  1A15  07A5               	addwf	___wmul@product+1,f
  4218  1A16                     l666:
  4219  1A16  3001               	movlw	1
  4220  1A17                     u1605:
  4221  1A17  1003               	clrc
  4222  1A18  0DA2               	rlf	___wmul@multiplicand,f
  4223  1A19  0DA3               	rlf	___wmul@multiplicand+1,f
  4224  1A1A  3EFF               	addlw	-1
  4225  1A1B  1D03               	skipz
  4226  1A1C  2A17               	goto	u1605
  4227  1A1D                     l2144:
  4228  1A1D  3001               	movlw	1
  4229  1A1E                     u1615:
  4230  1A1E  1003               	clrc
  4231  1A1F  0CA1               	rrf	___wmul@multiplier+1,f
  4232  1A20  0CA0               	rrf	___wmul@multiplier,f
  4233  1A21  3EFF               	addlw	-1
  4234  1A22  1D03               	skipz
  4235  1A23  2A1E               	goto	u1615
  4236  1A24                     l2146:
  4237  1A24  0820               	movf	___wmul@multiplier,w
  4238  1A25  0421               	iorwf	___wmul@multiplier+1,w
  4239  1A26  1D03               	btfss	3,2
  4240  1A27  2A29               	goto	u1621
  4241  1A28  2A2A               	goto	u1620
  4242  1A29                     u1621:
  4243  1A29  2A0C               	goto	l2140
  4244  1A2A                     u1620:
  4245  1A2A                     l2148:
  4246  1A2A  0825               	movf	___wmul@product+1,w
  4247  1A2B  00A1               	movwf	?___wmul+1
  4248  1A2C  0824               	movf	___wmul@product,w
  4249  1A2D  00A0               	movwf	?___wmul
  4250  1A2E                     l668:
  4251  1A2E  0008               	return
  4252  1A2F                     __end_of___wmul:
  4253                           
  4254                           	psect	text15
  4255  1959                     __ptext15:	
  4256 ;; *************** function _Timer0_init *****************
  4257 ;; Defined at:
  4258 ;;		line 43 in file "Timer.c"
  4259 ;; Parameters:    Size  Location     Type
  4260 ;;  mode            1    wreg     enum E1178
  4261 ;;  period          2    3[BANK0 ] enum E1197
  4262 ;;  channel         1    5[BANK0 ] enum E1182
  4263 ;;  event           1    6[BANK0 ] enum E1186
  4264 ;; Auto vars:     Size  Location     Type
  4265 ;;  mode            1    0[COMMON] enum E1178
  4266 ;; Return value:  Size  Location     Type
  4267 ;;                  1    wreg      void 
  4268 ;; Registers used:
  4269 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4270 ;; Tracked objects:
  4271 ;;		On entry : 0/0
  4272 ;;		On exit  : 0/0
  4273 ;;		Unchanged: 0/0
  4274 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4275 ;;      Params:         0       4       0       0       0
  4276 ;;      Locals:         0       0       0       0       0
  4277 ;;      Temps:          0       0       0       0       0
  4278 ;;      Totals:         0       4       0       0       0
  4279 ;;Total ram usage:        4 bytes
  4280 ;; Hardware stack levels used:    1
  4281 ;; Hardware stack levels required when called:    4
  4282 ;; This function calls:
  4283 ;;		___bmul
  4284 ;; This function is called by:
  4285 ;;		_Timer_init
  4286 ;; This function uses a non-reentrant model
  4287 ;;
  4288                           
  4289                           
  4290                           ;psect for function _Timer0_init
  4291  1959                     _Timer0_init:
  4292  1959                     l2212:	
  4293                           ;incstack = 0
  4294                           ; Regs used in _Timer0_init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4295                           
  4296                           
  4297                           ;Timer.c: 43: void Timer0_init( TIMER_MODE_t mode, TIMER_PERIOD_t period, TIMER_CHANNEL_
      +                          t channel, TIMER_EVENT_t event );Timer.c: 44: {;Timer.c: 47:     TMR0 = ( uint8_t )( ( (
      +                           ( ( ( 16000000 ) / ( 4 ) ) / 256 ) / 1000 ) * period ) - 1 );
  4298  1959  300F               	movlw	15
  4299  195A  00FF               	movwf	btemp+1
  4300  195B  087F               	movf	btemp+1,w
  4301  195C  1283               	bcf	3,5	;RP0=0, select bank0
  4302  195D  1303               	bcf	3,6	;RP1=0, select bank0
  4303  195E  00A0               	movwf	___bmul@multiplicand
  4304  195F  0823               	movf	Timer0_init@period,w
  4305  1960  160A  158A  20FD  160A  158A  	fcall	___bmul
  4306  1965  3EFF               	addlw	255
  4307  1966  1283               	bcf	3,5	;RP0=0, select bank0
  4308  1967  1303               	bcf	3,6	;RP1=0, select bank0
  4309  1968  0081               	movwf	1	;volatile
  4310  1969                     l2214:
  4311                           
  4312                           ;Timer.c: 49:     OPTION_REG |= 0x07;
  4313  1969  3007               	movlw	7
  4314  196A  00FF               	movwf	btemp+1
  4315  196B  087F               	movf	btemp+1,w
  4316  196C  1683               	bsf	3,5	;RP0=1, select bank1
  4317  196D  1303               	bcf	3,6	;RP1=0, select bank1
  4318  196E  0481               	iorwf	1,f	;volatile
  4319  196F                     l301:
  4320  196F  0008               	return
  4321  1970                     __end_of_Timer0_init:
  4322                           
  4323                           	psect	text16
  4324  19C2                     __ptext16:	
  4325 ;; *************** function _Scheduler_init *****************
  4326 ;; Defined at:
  4327 ;;		line 21 in file "Scheduler.c"
  4328 ;; Parameters:    Size  Location     Type
  4329 ;;		None
  4330 ;; Auto vars:     Size  Location     Type
  4331 ;;  index           2    4[BANK0 ] unsigned int 
  4332 ;; Return value:  Size  Location     Type
  4333 ;;                  1    wreg      void 
  4334 ;; Registers used:
  4335 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4336 ;; Tracked objects:
  4337 ;;		On entry : 0/0
  4338 ;;		On exit  : 0/0
  4339 ;;		Unchanged: 0/0
  4340 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4341 ;;      Params:         0       0       0       0       0
  4342 ;;      Locals:         0       2       0       0       0
  4343 ;;      Temps:          0       0       0       0       0
  4344 ;;      Totals:         0       2       0       0       0
  4345 ;;Total ram usage:        2 bytes
  4346 ;; Hardware stack levels used:    1
  4347 ;; Hardware stack levels required when called:    5
  4348 ;; This function calls:
  4349 ;;		_Scheduler_deleteTask
  4350 ;; This function is called by:
  4351 ;;		_main
  4352 ;; This function uses a non-reentrant model
  4353 ;;
  4354                           
  4355                           
  4356                           ;psect for function _Scheduler_init
  4357  19C2                     _Scheduler_init:
  4358  19C2                     l2942:	
  4359                           ;incstack = 0
  4360                           ; Regs used in _Scheduler_init: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4361                           
  4362                           
  4363                           ;Scheduler.c: 23:  size_t index = 0;
  4364  19C2  1283               	bcf	3,5	;RP0=0, select bank0
  4365  19C3  1303               	bcf	3,6	;RP1=0, select bank0
  4366  19C4  01A4               	clrf	Scheduler_init@index
  4367  19C5  01A5               	clrf	Scheduler_init@index+1
  4368                           
  4369                           ;Scheduler.c: 24:  for( index = 0; index < ( ( UBaseType_t ) 10 ); index++ )
  4370  19C6  01A4               	clrf	Scheduler_init@index
  4371  19C7  01A5               	clrf	Scheduler_init@index+1
  4372  19C8                     l2948:
  4373                           
  4374                           ;Scheduler.c: 25:  {;Scheduler.c: 26:   Scheduler_deleteTask( index );
  4375  19C8  0824               	movf	Scheduler_init@index,w
  4376  19C9  160A  118A  22CE  160A  158A  	fcall	_Scheduler_deleteTask
  4377  19CE                     l2950:
  4378                           
  4379                           ;Scheduler.c: 27:  }
  4380  19CE  3001               	movlw	1
  4381  19CF  1283               	bcf	3,5	;RP0=0, select bank0
  4382  19D0  1303               	bcf	3,6	;RP1=0, select bank0
  4383  19D1  07A4               	addwf	Scheduler_init@index,f
  4384  19D2  1803               	skipnc
  4385  19D3  0AA5               	incf	Scheduler_init@index+1,f
  4386  19D4  3000               	movlw	0
  4387  19D5  07A5               	addwf	Scheduler_init@index+1,f
  4388  19D6                     l2952:
  4389  19D6  3000               	movlw	0
  4390  19D7  0225               	subwf	Scheduler_init@index+1,w
  4391  19D8  300A               	movlw	10
  4392  19D9  1903               	skipnz
  4393  19DA  0224               	subwf	Scheduler_init@index,w
  4394  19DB  1C03               	skipc
  4395  19DC  29DE               	goto	u3061
  4396  19DD  29DF               	goto	u3060
  4397  19DE                     u3061:
  4398  19DE  29C8               	goto	l2948
  4399  19DF                     u3060:
  4400  19DF                     l2954:
  4401                           
  4402                           ;Scheduler.c: 28:  scheduler.errorCode = 0;
  4403  19DF  1283               	bcf	3,5	;RP0=0, select bank2
  4404  19E0  1703               	bsf	3,6	;RP1=1, select bank2
  4405  19E1  01CC               	clrf	(_scheduler^(0+256)+60)	;volatile
  4406                           
  4407                           ;Scheduler.c: 29:  scheduler.interruptFlag = 0;
  4408  19E2  01CD               	clrf	(_scheduler^(0+256)+61)	;volatile
  4409  19E3                     l106:
  4410  19E3  0008               	return
  4411  19E4                     __end_of_Scheduler_init:
  4412                           
  4413                           	psect	text17
  4414  161E                     __ptext17:	
  4415 ;; *************** function _Scheduler_dispatchTasks *****************
  4416 ;; Defined at:
  4417 ;;		line 116 in file "Scheduler.c"
  4418 ;; Parameters:    Size  Location     Type
  4419 ;;		None
  4420 ;; Auto vars:     Size  Location     Type
  4421 ;;  index           2   58[BANK0 ] unsigned int 
  4422 ;; Return value:  Size  Location     Type
  4423 ;;                  1    wreg      void 
  4424 ;; Registers used:
  4425 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4426 ;; Tracked objects:
  4427 ;;		On entry : 0/0
  4428 ;;		On exit  : 0/0
  4429 ;;		Unchanged: 0/0
  4430 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4431 ;;      Params:         0       0       0       0       0
  4432 ;;      Locals:         0       5       0       0       0
  4433 ;;      Temps:          0       1       0       0       0
  4434 ;;      Totals:         0       6       0       0       0
  4435 ;;Total ram usage:        6 bytes
  4436 ;; Hardware stack levels used:    1
  4437 ;; Hardware stack levels required when called:    7
  4438 ;; This function calls:
  4439 ;;		Absolute function
  4440 ;;		_Heater_update
  4441 ;;		_Led_update
  4442 ;;		_Scheduler_deleteTask
  4443 ;;		_Scheduler_goToSleep
  4444 ;;		_Scheduler_reportStatus
  4445 ;;		_Ssd_update
  4446 ;;		_Switch_update
  4447 ;;		_Tempctrl_update
  4448 ;;		_Tempsnsr_update
  4449 ;;		___bmul
  4450 ;; This function is called by:
  4451 ;;		_main
  4452 ;; This function uses a non-reentrant model
  4453 ;;
  4454                           
  4455                           
  4456                           ;psect for function _Scheduler_dispatchTasks
  4457  161E                     _Scheduler_dispatchTasks:
  4458  161E                     l2978:	
  4459                           ;incstack = 0
  4460                           ; Regs used in _Scheduler_dispatchTasks: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cs
      +                          tack]
  4461                           
  4462                           
  4463                           ;Scheduler.c: 118:  size_t index = 0;
  4464  161E  1283               	bcf	3,5	;RP0=0, select bank0
  4465  161F  1303               	bcf	3,6	;RP1=0, select bank0
  4466  1620  01DA               	clrf	Scheduler_dispatchTasks@index
  4467  1621  01DB               	clrf	Scheduler_dispatchTasks@index+1
  4468                           
  4469                           ;Scheduler.c: 119:  for( index = 0; index < ( ( UBaseType_t ) 10 ); index++ )
  4470  1622  01DA               	clrf	Scheduler_dispatchTasks@index
  4471  1623  01DB               	clrf	Scheduler_dispatchTasks@index+1
  4472  1624                     l2984:
  4473                           
  4474                           ;Scheduler.c: 120:  {;Scheduler.c: 121:   if( scheduler.task[ index ].runMe != 0 )
  4475  1624  3006               	movlw	6
  4476  1625  00FF               	movwf	btemp+1
  4477  1626  087F               	movf	btemp+1,w
  4478  1627  00A0               	movwf	___bmul@multiplicand
  4479  1628  085A               	movf	Scheduler_dispatchTasks@index,w
  4480  1629  160A  158A  20FD  160A  118A  	fcall	___bmul
  4481  162E  3E15               	addlw	(low ((_scheduler| (0+256)+5)))& (0+255)
  4482  162F  0084               	movwf	4
  4483  1630  1783               	bsf	3,7	;select IRP bank2
  4484  1631  0800               	movf	0,w
  4485  1632  1903               	btfsc	3,2
  4486  1633  2E35               	goto	u3101
  4487  1634  2E36               	goto	u3100
  4488  1635                     u3101:
  4489  1635  2E96               	goto	l2990
  4490  1636                     u3100:
  4491  1636                     l2986:
  4492                           
  4493                           ;Scheduler.c: 122:   {;Scheduler.c: 123:    (*scheduler.task[ index ].pointer)( schedule
      +                          r.task[ index ].paramter );
  4494  1636  3006               	movlw	6
  4495  1637  00FF               	movwf	btemp+1
  4496  1638  087F               	movf	btemp+1,w
  4497  1639  1283               	bcf	3,5	;RP0=0, select bank0
  4498  163A  1303               	bcf	3,6	;RP1=0, select bank0
  4499  163B  00A0               	movwf	___bmul@multiplicand
  4500  163C  085A               	movf	Scheduler_dispatchTasks@index,w
  4501  163D  160A  158A  20FD  160A  118A  	fcall	___bmul
  4502  1642  3E10               	addlw	(low (_scheduler| (0+256)))& (0+255)
  4503  1643  0084               	movwf	4
  4504  1644  1783               	bsf	3,7	;select IRP bank2
  4505  1645  0800               	movf	0,w
  4506  1646  00FF               	movwf	btemp+1
  4507  1647  087F               	movf	btemp+1,w
  4508  1648  1283               	bcf	3,5	;RP0=0, select bank0
  4509  1649  1303               	bcf	3,6	;RP1=0, select bank0
  4510  164A  00D9               	movwf	_Scheduler_dispatchTasks$1927	;volatile
  4511                           
  4512                           ;Scheduler.c: 122:   {;Scheduler.c: 123:    (*scheduler.task[ index ].pointer)( schedule
      +                          r.task[ index ].paramter );
  4513  164B  3006               	movlw	6
  4514  164C  00FF               	movwf	btemp+1
  4515  164D  087F               	movf	btemp+1,w
  4516  164E  00A0               	movwf	___bmul@multiplicand
  4517  164F  085A               	movf	Scheduler_dispatchTasks@index,w
  4518  1650  160A  158A  20FD  160A  118A  	fcall	___bmul
  4519  1655  3E11               	addlw	(low ((_scheduler| (0+256)+1)))& (0+255)
  4520  1656  0084               	movwf	4
  4521  1657  1783               	bsf	3,7	;select IRP bank2
  4522  1658  0800               	movf	0,w
  4523  1659  1283               	bcf	3,5	;RP0=0, select bank0
  4524  165A  1303               	bcf	3,6	;RP1=0, select bank0
  4525  165B  00D7               	movwf	_Scheduler_dispatchTasks$1932	;volatile
  4526  165C  0A84               	incf	4,f
  4527  165D  0800               	movf	0,w
  4528  165E  0384               	decf	4,f
  4529  165F  00D8               	movwf	_Scheduler_dispatchTasks$1932+1	;volatile
  4530                           
  4531                           ;Scheduler.c: 122:   {;Scheduler.c: 123:    (*scheduler.task[ index ].pointer)( schedule
      +                          r.task[ index ].paramter );
  4532  1660  0857               	movf	_Scheduler_dispatchTasks$1932,w	;volatile
  4533  1661  00CD               	movwf	Ssd_update@paramter
  4534  1662  0858               	movf	_Scheduler_dispatchTasks$1932+1,w	;volatile
  4535  1663  00CE               	movwf	Ssd_update@paramter+1
  4536  1664  0859               	movf	_Scheduler_dispatchTasks$1927,w	;volatile
  4537  1665  120A  118A  2054  160A  118A  	fcall	fptable
  4538                           
  4539                           ;Scheduler.c: 124:    scheduler.task[ index ].runMe = 0;
  4540  166A  3006               	movlw	6
  4541  166B  00FF               	movwf	btemp+1
  4542  166C  087F               	movf	btemp+1,w
  4543  166D  1283               	bcf	3,5	;RP0=0, select bank0
  4544  166E  1303               	bcf	3,6	;RP1=0, select bank0
  4545  166F  00A0               	movwf	___bmul@multiplicand
  4546  1670  085A               	movf	Scheduler_dispatchTasks@index,w
  4547  1671  160A  158A  20FD  160A  118A  	fcall	___bmul
  4548  1676  3E15               	addlw	(low ((_scheduler| (0+256)+5)))& (0+255)
  4549  1677  0084               	movwf	4
  4550  1678  1783               	bsf	3,7	;select IRP bank2
  4551  1679  0180               	clrf	0
  4552                           
  4553                           ;Scheduler.c: 125:    if( scheduler.task[ index ].period == 0 )
  4554  167A  3006               	movlw	6
  4555  167B  00FF               	movwf	btemp+1
  4556  167C  087F               	movf	btemp+1,w
  4557  167D  1283               	bcf	3,5	;RP0=0, select bank0
  4558  167E  1303               	bcf	3,6	;RP1=0, select bank0
  4559  167F  00A0               	movwf	___bmul@multiplicand
  4560  1680  085A               	movf	Scheduler_dispatchTasks@index,w
  4561  1681  160A  158A  20FD  160A  118A  	fcall	___bmul
  4562  1686  3E14               	addlw	(low ((_scheduler| (0+256)+4)))& (0+255)
  4563  1687  0084               	movwf	4
  4564  1688  1783               	bsf	3,7	;select IRP bank2
  4565  1689  0800               	movf	0,w
  4566  168A  1D03               	btfss	3,2
  4567  168B  2E8D               	goto	u3111
  4568  168C  2E8E               	goto	u3110
  4569  168D                     u3111:
  4570  168D  2E96               	goto	l2990
  4571  168E                     u3110:
  4572  168E                     l2988:
  4573                           
  4574                           ;Scheduler.c: 126:    {;Scheduler.c: 127:     Scheduler_deleteTask( index );
  4575  168E  1283               	bcf	3,5	;RP0=0, select bank0
  4576  168F  1303               	bcf	3,6	;RP1=0, select bank0
  4577  1690  085A               	movf	Scheduler_dispatchTasks@index,w
  4578  1691  160A  118A  22CE  160A  118A  	fcall	_Scheduler_deleteTask
  4579  1696                     l2990:
  4580                           
  4581                           ;Scheduler.c: 130:  }
  4582  1696  3001               	movlw	1
  4583  1697  1283               	bcf	3,5	;RP0=0, select bank0
  4584  1698  1303               	bcf	3,6	;RP1=0, select bank0
  4585  1699  07DA               	addwf	Scheduler_dispatchTasks@index,f
  4586  169A  1803               	skipnc
  4587  169B  0ADB               	incf	Scheduler_dispatchTasks@index+1,f
  4588  169C  3000               	movlw	0
  4589  169D  07DB               	addwf	Scheduler_dispatchTasks@index+1,f
  4590  169E                     l2992:
  4591  169E  3000               	movlw	0
  4592  169F  025B               	subwf	Scheduler_dispatchTasks@index+1,w
  4593  16A0  300A               	movlw	10
  4594  16A1  1903               	skipnz
  4595  16A2  025A               	subwf	Scheduler_dispatchTasks@index,w
  4596  16A3  1C03               	skipc
  4597  16A4  2EA6               	goto	u3121
  4598  16A5  2EA7               	goto	u3120
  4599  16A6                     u3121:
  4600  16A6  2E24               	goto	l2984
  4601  16A7                     u3120:
  4602  16A7                     l2994:
  4603                           
  4604                           ;Scheduler.c: 131:  Scheduler_reportStatus();
  4605  16A7  160A  118A  2000  160A  118A  	fcall	_Scheduler_reportStatus
  4606  16AC                     l2996:
  4607                           
  4608                           ;Scheduler.c: 132:  Scheduler_goToSleep();
  4609  16AC  160A  158A  2142  160A  118A  	fcall	_Scheduler_goToSleep
  4610  16B1                     l146:
  4611  16B1  0008               	return
  4612  16B2                     __end_of_Scheduler_dispatchTasks:
  4613                           
  4614                           	psect	text18
  4615  0B9D                     __ptext18:	
  4616 ;; *************** function _Ssd_update *****************
  4617 ;; Defined at:
  4618 ;;		line 39 in file "Ssd.c"
  4619 ;; Parameters:    Size  Location     Type
  4620 ;;  paramter        2   45[BANK0 ] PTR void 
  4621 ;;		 -> RAM(512), RAM(512), NULL(0), 
  4622 ;; Auto vars:     Size  Location     Type
  4623 ;;  id              1   51[BANK0 ] enum E1226
  4624 ;; Return value:  Size  Location     Type
  4625 ;;                  1    wreg      void 
  4626 ;; Registers used:
  4627 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4628 ;; Tracked objects:
  4629 ;;		On entry : 0/0
  4630 ;;		On exit  : 0/0
  4631 ;;		Unchanged: 0/0
  4632 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4633 ;;      Params:         0       2       0       0       0
  4634 ;;      Locals:         0       3       0       0       0
  4635 ;;      Temps:          0       2       0       0       0
  4636 ;;      Totals:         0       7       0       0       0
  4637 ;;Total ram usage:        7 bytes
  4638 ;; Hardware stack levels used:    1
  4639 ;; Hardware stack levels required when called:    5
  4640 ;; This function calls:
  4641 ;;		___bmul
  4642 ;;		_setSsdHardwareState
  4643 ;;		_setSsdHardwareSymbol
  4644 ;; This function is called by:
  4645 ;;		_main
  4646 ;;		_Scheduler_dispatchTasks
  4647 ;; This function uses a non-reentrant model
  4648 ;;
  4649                           
  4650                           
  4651                           ;psect for function _Ssd_update
  4652  0B9D                     _Ssd_update:
  4653  0B9D                     l2626:	
  4654                           ;incstack = 0
  4655                           ; Regs used in _Ssd_update: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4656                           
  4657                           
  4658                           ;Ssd.c: 39: void Ssd_update( void *paramter );Ssd.c: 40: {;Ssd.c: 41:     SSD_ID_t id = 
      +                          (SSD_ID_t) paramter;
  4659  0B9D  1283               	bcf	3,5	;RP0=0, select bank0
  4660  0B9E  1303               	bcf	3,6	;RP1=0, select bank0
  4661  0B9F  084D               	movf	Ssd_update@paramter,w
  4662  0BA0  00FF               	movwf	btemp+1
  4663  0BA1  087F               	movf	btemp+1,w
  4664  0BA2  00D3               	movwf	Ssd_update@id
  4665  0BA3                     l2628:
  4666                           
  4667                           ;Ssd.c: 42:     if( ssd[ id ].delay )
  4668  0BA3  300C               	movlw	12
  4669  0BA4  00FF               	movwf	btemp+1
  4670  0BA5  087F               	movf	btemp+1,w
  4671  0BA6  00A0               	movwf	___bmul@multiplicand
  4672  0BA7  0853               	movf	Ssd_update@id,w
  4673  0BA8  160A  158A  20FD  120A  158A  	fcall	___bmul
  4674  0BAD  3EA9               	addlw	(low ((_ssd| (0+256)+10)))& (0+255)
  4675  0BAE  0084               	movwf	4
  4676  0BAF  1783               	bsf	3,7	;select IRP bank3
  4677  0BB0  0800               	movf	0,w
  4678  0BB1  1283               	bcf	3,5	;RP0=0, select bank0
  4679  0BB2  1303               	bcf	3,6	;RP1=0, select bank0
  4680  0BB3  00CF               	movwf	??_Ssd_update
  4681  0BB4  0A84               	incf	4,f
  4682  0BB5  0800               	movf	0,w
  4683  0BB6  00D0               	movwf	??_Ssd_update+1
  4684  0BB7  084F               	movf	??_Ssd_update,w
  4685  0BB8  0450               	iorwf	??_Ssd_update+1,w
  4686  0BB9  1903               	btfsc	3,2
  4687  0BBA  2BBC               	goto	u2641
  4688  0BBB  2BBD               	goto	u2640
  4689  0BBC                     u2641:
  4690  0BBC  2BD3               	goto	l2632
  4691  0BBD                     u2640:
  4692  0BBD                     l2630:
  4693                           
  4694                           ;Ssd.c: 43:     {;Ssd.c: 44:         ssd[ id ].delay--;
  4695  0BBD  300C               	movlw	12
  4696  0BBE  00FF               	movwf	btemp+1
  4697  0BBF  087F               	movf	btemp+1,w
  4698  0BC0  00A0               	movwf	___bmul@multiplicand
  4699  0BC1  0853               	movf	Ssd_update@id,w
  4700  0BC2  160A  158A  20FD  120A  158A  	fcall	___bmul
  4701  0BC7  3EA9               	addlw	(low ((_ssd| (0+256)+10)))& (0+255)
  4702  0BC8  0084               	movwf	4
  4703  0BC9  3001               	movlw	1
  4704  0BCA  1783               	bsf	3,7	;select IRP bank3
  4705  0BCB  0280               	subwf	0,f
  4706  0BCC  0F84               	incfsz	4,f
  4707  0BCD  3000               	movlw	0
  4708  0BCE  1C03               	skipc
  4709  0BCF  0380               	decf	0,f
  4710  0BD0  0280               	subwf	0,f
  4711  0BD1  0384               	decf	4,f
  4712                           
  4713                           ;Ssd.c: 45:     }else if( ssd[ id ].period )
  4714  0BD2  2C46               	goto	l236
  4715  0BD3                     l2632:
  4716  0BD3  300C               	movlw	12
  4717  0BD4  00FF               	movwf	btemp+1
  4718  0BD5  087F               	movf	btemp+1,w
  4719  0BD6  00A0               	movwf	___bmul@multiplicand
  4720  0BD7  0853               	movf	Ssd_update@id,w
  4721  0BD8  160A  158A  20FD  120A  158A  	fcall	___bmul
  4722  0BDD  3EA7               	addlw	(low ((_ssd| (0+256)+8)))& (0+255)
  4723  0BDE  0084               	movwf	4
  4724  0BDF  1783               	bsf	3,7	;select IRP bank3
  4725  0BE0  0800               	movf	0,w
  4726  0BE1  1283               	bcf	3,5	;RP0=0, select bank0
  4727  0BE2  1303               	bcf	3,6	;RP1=0, select bank0
  4728  0BE3  00CF               	movwf	??_Ssd_update
  4729  0BE4  0A84               	incf	4,f
  4730  0BE5  0800               	movf	0,w
  4731  0BE6  00D0               	movwf	??_Ssd_update+1
  4732  0BE7  084F               	movf	??_Ssd_update,w
  4733  0BE8  0450               	iorwf	??_Ssd_update+1,w
  4734  0BE9  1903               	btfsc	3,2
  4735  0BEA  2BEC               	goto	u2651
  4736  0BEB  2BED               	goto	u2650
  4737  0BEC                     u2651:
  4738  0BEC  2C38               	goto	l2636
  4739  0BED                     u2650:
  4740  0BED                     l2634:
  4741                           
  4742                           ;Ssd.c: 46:     {;Ssd.c: 47:         ssd[ id ].blink ^= ssd[ id ].state;
  4743  0BED  300C               	movlw	12
  4744  0BEE  00FF               	movwf	btemp+1
  4745  0BEF  087F               	movf	btemp+1,w
  4746  0BF0  00A0               	movwf	___bmul@multiplicand
  4747  0BF1  0853               	movf	Ssd_update@id,w
  4748  0BF2  160A  158A  20FD  120A  158A  	fcall	___bmul
  4749  0BF7  3EA5               	addlw	(low ((_ssd| (0+256)+6)))& (0+255)
  4750  0BF8  0084               	movwf	4
  4751  0BF9  1783               	bsf	3,7	;select IRP bank3
  4752  0BFA  0800               	movf	0,w
  4753  0BFB  1283               	bcf	3,5	;RP0=0, select bank0
  4754  0BFC  1303               	bcf	3,6	;RP1=0, select bank0
  4755  0BFD  00CF               	movwf	??_Ssd_update
  4756  0BFE  300C               	movlw	12
  4757  0BFF  00FF               	movwf	btemp+1
  4758  0C00  087F               	movf	btemp+1,w
  4759  0C01  00A0               	movwf	___bmul@multiplicand
  4760  0C02  0853               	movf	Ssd_update@id,w
  4761  0C03  160A  158A  20FD  120A  158A  	fcall	___bmul
  4762  0C08  3EA6               	addlw	(low ((_ssd| (0+256)+7)))& (0+255)
  4763  0C09  0084               	movwf	4
  4764  0C0A  1283               	bcf	3,5	;RP0=0, select bank0
  4765  0C0B  1303               	bcf	3,6	;RP1=0, select bank0
  4766  0C0C  084F               	movf	??_Ssd_update,w
  4767  0C0D  1783               	bsf	3,7	;select IRP bank3
  4768  0C0E  0680               	xorwf	0,f
  4769                           
  4770                           ;Ssd.c: 48:         ssd[ id ].delay = ssd[ id ].period;
  4771  0C0F  300C               	movlw	12
  4772  0C10  00FF               	movwf	btemp+1
  4773  0C11  087F               	movf	btemp+1,w
  4774  0C12  00A0               	movwf	___bmul@multiplicand
  4775  0C13  0853               	movf	Ssd_update@id,w
  4776  0C14  160A  158A  20FD  120A  158A  	fcall	___bmul
  4777  0C19  3EA7               	addlw	(low ((_ssd| (0+256)+8)))& (0+255)
  4778  0C1A  0084               	movwf	4
  4779  0C1B  1783               	bsf	3,7	;select IRP bank3
  4780  0C1C  0800               	movf	0,w
  4781  0C1D  1283               	bcf	3,5	;RP0=0, select bank0
  4782  0C1E  1303               	bcf	3,6	;RP1=0, select bank0
  4783  0C1F  00CF               	movwf	??_Ssd_update
  4784  0C20  0A84               	incf	4,f
  4785  0C21  0800               	movf	0,w
  4786  0C22  00D0               	movwf	??_Ssd_update+1
  4787  0C23  300C               	movlw	12
  4788  0C24  00FF               	movwf	btemp+1
  4789  0C25  087F               	movf	btemp+1,w
  4790  0C26  00A0               	movwf	___bmul@multiplicand
  4791  0C27  0853               	movf	Ssd_update@id,w
  4792  0C28  160A  158A  20FD  120A  158A  	fcall	___bmul
  4793  0C2D  3EA9               	addlw	(low ((_ssd| (0+256)+10)))& (0+255)
  4794  0C2E  0084               	movwf	4
  4795  0C2F  1283               	bcf	3,5	;RP0=0, select bank0
  4796  0C30  1303               	bcf	3,6	;RP1=0, select bank0
  4797  0C31  084F               	movf	??_Ssd_update,w
  4798  0C32  1783               	bsf	3,7	;select IRP bank3
  4799  0C33  0080               	movwf	0
  4800  0C34  0A84               	incf	4,f
  4801  0C35  0850               	movf	??_Ssd_update+1,w
  4802  0C36  0080               	movwf	0
  4803                           
  4804                           ;Ssd.c: 49:     }else
  4805  0C37  2C46               	goto	l236
  4806  0C38                     l2636:
  4807                           
  4808                           ;Ssd.c: 50:     {;Ssd.c: 51:         ssd[ id ].blink = 0;
  4809  0C38  300C               	movlw	12
  4810  0C39  00FF               	movwf	btemp+1
  4811  0C3A  087F               	movf	btemp+1,w
  4812  0C3B  00A0               	movwf	___bmul@multiplicand
  4813  0C3C  0853               	movf	Ssd_update@id,w
  4814  0C3D  160A  158A  20FD  120A  158A  	fcall	___bmul
  4815  0C42  3EA6               	addlw	(low ((_ssd| (0+256)+7)))& (0+255)
  4816  0C43  0084               	movwf	4
  4817  0C44  1783               	bsf	3,7	;select IRP bank3
  4818  0C45  0180               	clrf	0
  4819  0C46                     l236:
  4820                           
  4821                           ;Ssd.c: 53:     setSsdHardwareState( id, SSD_STATE_OFF );
  4822  0C46  1283               	bcf	3,5	;RP0=0, select bank0
  4823  0C47  1303               	bcf	3,6	;RP1=0, select bank0
  4824  0C48  01AE               	clrf	setSsdHardwareState@state
  4825  0C49  0853               	movf	Ssd_update@id,w
  4826  0C4A  160A  158A  27A2  120A  158A  	fcall	_setSsdHardwareState
  4827                           
  4828                           ;Ssd.c: 54:     if( ssd[ id ].counter == 0 )
  4829  0C4F  300C               	movlw	12
  4830  0C50  00FF               	movwf	btemp+1
  4831  0C51  087F               	movf	btemp+1,w
  4832  0C52  1283               	bcf	3,5	;RP0=0, select bank0
  4833  0C53  1303               	bcf	3,6	;RP1=0, select bank0
  4834  0C54  00A0               	movwf	___bmul@multiplicand
  4835  0C55  0853               	movf	Ssd_update@id,w
  4836  0C56  160A  158A  20FD  120A  158A  	fcall	___bmul
  4837  0C5B  3EA3               	addlw	(low ((_ssd| (0+256)+4)))& (0+255)
  4838  0C5C  0084               	movwf	4
  4839  0C5D  1783               	bsf	3,7	;select IRP bank3
  4840  0C5E  0800               	movf	0,w
  4841  0C5F  1D03               	btfss	3,2
  4842  0C60  2C62               	goto	u2661
  4843  0C61  2C63               	goto	u2660
  4844  0C62                     u2661:
  4845  0C62  2CB9               	goto	l239
  4846  0C63                     u2660:
  4847  0C63                     l2638:
  4848                           
  4849                           ;Ssd.c: 55:     {;Ssd.c: 56:         setSsdHardwareSymbol( id, ssd[ id ].symbol );
  4850  0C63  300C               	movlw	12
  4851  0C64  00FF               	movwf	btemp+1
  4852  0C65  087F               	movf	btemp+1,w
  4853  0C66  1283               	bcf	3,5	;RP0=0, select bank0
  4854  0C67  1303               	bcf	3,6	;RP1=0, select bank0
  4855  0C68  00A0               	movwf	___bmul@multiplicand
  4856  0C69  0853               	movf	Ssd_update@id,w
  4857  0C6A  160A  158A  20FD  120A  158A  	fcall	___bmul
  4858  0C6F  3EA4               	addlw	(low ((_ssd| (0+256)+5)))& (0+255)
  4859  0C70  0084               	movwf	4
  4860  0C71  1783               	bsf	3,7	;select IRP bank3
  4861  0C72  0800               	movf	0,w
  4862  0C73  00FF               	movwf	btemp+1
  4863  0C74  087F               	movf	btemp+1,w
  4864  0C75  1283               	bcf	3,5	;RP0=0, select bank0
  4865  0C76  1303               	bcf	3,6	;RP1=0, select bank0
  4866  0C77  00D1               	movwf	_Ssd_update$1933
  4867                           
  4868                           ;Ssd.c: 55:     {;Ssd.c: 56:         setSsdHardwareSymbol( id, ssd[ id ].symbol );
  4869  0C78  0851               	movf	_Ssd_update$1933,w
  4870  0C79  00FF               	movwf	btemp+1
  4871  0C7A  087F               	movf	btemp+1,w
  4872  0C7B  00AC               	movwf	setSsdHardwareSymbol@symbol
  4873  0C7C  0853               	movf	Ssd_update@id,w
  4874  0C7D  160A  158A  23F8  120A  158A  	fcall	_setSsdHardwareSymbol
  4875                           
  4876                           ;Ssd.c: 57:         setSsdHardwareState( id, ssd[ id ].state & !ssd[ id ].blink );
  4877  0C82  300C               	movlw	12
  4878  0C83  00FF               	movwf	btemp+1
  4879  0C84  087F               	movf	btemp+1,w
  4880  0C85  1283               	bcf	3,5	;RP0=0, select bank0
  4881  0C86  1303               	bcf	3,6	;RP1=0, select bank0
  4882  0C87  00A0               	movwf	___bmul@multiplicand
  4883  0C88  0853               	movf	Ssd_update@id,w
  4884  0C89  160A  158A  20FD  120A  158A  	fcall	___bmul
  4885  0C8E  3EA5               	addlw	(low ((_ssd| (0+256)+6)))& (0+255)
  4886  0C8F  0084               	movwf	4
  4887  0C90  1783               	bsf	3,7	;select IRP bank3
  4888  0C91  0800               	movf	0,w
  4889  0C92  1283               	bcf	3,5	;RP0=0, select bank0
  4890  0C93  1303               	bcf	3,6	;RP1=0, select bank0
  4891  0C94  00CF               	movwf	??_Ssd_update
  4892  0C95  300C               	movlw	12
  4893  0C96  00FF               	movwf	btemp+1
  4894  0C97  087F               	movf	btemp+1,w
  4895  0C98  00A0               	movwf	___bmul@multiplicand
  4896  0C99  0853               	movf	Ssd_update@id,w
  4897  0C9A  160A  158A  20FD  120A  158A  	fcall	___bmul
  4898  0C9F  3EA6               	addlw	(low ((_ssd| (0+256)+7)))& (0+255)
  4899  0CA0  0084               	movwf	4
  4900  0CA1  1783               	bsf	3,7	;select IRP bank3
  4901  0CA2  0800               	movf	0,w
  4902  0CA3  1903               	btfsc	3,2
  4903  0CA4  2CA6               	goto	u2671
  4904  0CA5  2CA8               	goto	u2670
  4905  0CA6                     u2671:
  4906  0CA6  3001               	movlw	1
  4907  0CA7  2CA9               	goto	u2680
  4908  0CA8                     u2670:
  4909  0CA8  3000               	movlw	0
  4910  0CA9                     u2680:
  4911  0CA9  1283               	bcf	3,5	;RP0=0, select bank0
  4912  0CAA  1303               	bcf	3,6	;RP1=0, select bank0
  4913  0CAB  054F               	andwf	??_Ssd_update,w
  4914  0CAC  00FF               	movwf	btemp+1
  4915  0CAD  087F               	movf	btemp+1,w
  4916  0CAE  00D2               	movwf	_Ssd_update$1934
  4917                           
  4918                           ;Ssd.c: 57:         setSsdHardwareState( id, ssd[ id ].state & !ssd[ id ].blink );
  4919  0CAF  0852               	movf	_Ssd_update$1934,w
  4920  0CB0  00FF               	movwf	btemp+1
  4921  0CB1  087F               	movf	btemp+1,w
  4922  0CB2  00AE               	movwf	setSsdHardwareState@state
  4923  0CB3  0853               	movf	Ssd_update@id,w
  4924  0CB4  160A  158A  27A2  120A  158A  	fcall	_setSsdHardwareState
  4925  0CB9                     l239:	
  4926                           ;Ssd.c: 58:     }
  4927                           
  4928                           
  4929                           ;Ssd.c: 59:     ssd[ id ].counter++;
  4930  0CB9  300C               	movlw	12
  4931  0CBA  00FF               	movwf	btemp+1
  4932  0CBB  087F               	movf	btemp+1,w
  4933  0CBC  1283               	bcf	3,5	;RP0=0, select bank0
  4934  0CBD  1303               	bcf	3,6	;RP1=0, select bank0
  4935  0CBE  00A0               	movwf	___bmul@multiplicand
  4936  0CBF  0853               	movf	Ssd_update@id,w
  4937  0CC0  160A  158A  20FD  120A  158A  	fcall	___bmul
  4938  0CC5  3EA3               	addlw	(low ((_ssd| (0+256)+4)))& (0+255)
  4939  0CC6  0084               	movwf	4
  4940  0CC7  3001               	movlw	1
  4941  0CC8  00FF               	movwf	btemp+1
  4942  0CC9  087F               	movf	btemp+1,w
  4943  0CCA  1783               	bsf	3,7	;select IRP bank3
  4944  0CCB  0780               	addwf	0,f
  4945                           
  4946                           ;Ssd.c: 60:     if( ssd[ id ].counter == SSD_ID_MAX )
  4947  0CCC  300C               	movlw	12
  4948  0CCD  00FF               	movwf	btemp+1
  4949  0CCE  087F               	movf	btemp+1,w
  4950  0CCF  1283               	bcf	3,5	;RP0=0, select bank0
  4951  0CD0  1303               	bcf	3,6	;RP1=0, select bank0
  4952  0CD1  00A0               	movwf	___bmul@multiplicand
  4953  0CD2  0853               	movf	Ssd_update@id,w
  4954  0CD3  160A  158A  20FD  120A  158A  	fcall	___bmul
  4955  0CD8  3EA3               	addlw	(low ((_ssd| (0+256)+4)))& (0+255)
  4956  0CD9  0084               	movwf	4
  4957  0CDA  3002               	movlw	2
  4958  0CDB  1783               	bsf	3,7	;select IRP bank3
  4959  0CDC  0600               	xorwf	0,w
  4960  0CDD  1D03               	btfss	3,2
  4961  0CDE  2CE0               	goto	u2691
  4962  0CDF  2CE1               	goto	u2690
  4963  0CE0                     u2691:
  4964  0CE0  2CF1               	goto	l241
  4965  0CE1                     u2690:
  4966  0CE1                     l2640:
  4967                           
  4968                           ;Ssd.c: 61:     {;Ssd.c: 62:         ssd[ id ].counter = 0;
  4969  0CE1  300C               	movlw	12
  4970  0CE2  00FF               	movwf	btemp+1
  4971  0CE3  087F               	movf	btemp+1,w
  4972  0CE4  1283               	bcf	3,5	;RP0=0, select bank0
  4973  0CE5  1303               	bcf	3,6	;RP1=0, select bank0
  4974  0CE6  00A0               	movwf	___bmul@multiplicand
  4975  0CE7  0853               	movf	Ssd_update@id,w
  4976  0CE8  160A  158A  20FD  120A  158A  	fcall	___bmul
  4977  0CED  3EA3               	addlw	(low ((_ssd| (0+256)+4)))& (0+255)
  4978  0CEE  0084               	movwf	4
  4979  0CEF  1783               	bsf	3,7	;select IRP bank3
  4980  0CF0  0180               	clrf	0
  4981  0CF1                     l241:
  4982  0CF1  0008               	return
  4983  0CF2                     __end_of_Ssd_update:
  4984                           
  4985                           	psect	text19
  4986  08F4                     __ptext19:	
  4987 ;; *************** function _Led_update *****************
  4988 ;; Defined at:
  4989 ;;		line 29 in file "Led.c"
  4990 ;; Parameters:    Size  Location     Type
  4991 ;;  paramter        2   45[BANK0 ] PTR void 
  4992 ;;		 -> RAM(512), RAM(512), NULL(0), 
  4993 ;; Auto vars:     Size  Location     Type
  4994 ;;  id              1   51[BANK0 ] enum E1226
  4995 ;; Return value:  Size  Location     Type
  4996 ;;                  1    wreg      void 
  4997 ;; Registers used:
  4998 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4999 ;; Tracked objects:
  5000 ;;		On entry : 0/0
  5001 ;;		On exit  : 0/0
  5002 ;;		Unchanged: 0/0
  5003 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5004 ;;      Params:         0       2       0       0       0
  5005 ;;      Locals:         0       1       0       0       0
  5006 ;;      Temps:          0       4       0       0       0
  5007 ;;      Totals:         0       7       0       0       0
  5008 ;;Total ram usage:        7 bytes
  5009 ;; Hardware stack levels used:    1
  5010 ;; Hardware stack levels required when called:    5
  5011 ;; This function calls:
  5012 ;;		_setLedHardwareState
  5013 ;; This function is called by:
  5014 ;;		_main
  5015 ;;		_Scheduler_dispatchTasks
  5016 ;; This function uses a non-reentrant model
  5017 ;;
  5018                           
  5019                           
  5020                           ;psect for function _Led_update
  5021  08F4                     _Led_update:
  5022  08F4                     l2580:	
  5023                           ;incstack = 0
  5024                           ; Regs used in _Led_update: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5025                           
  5026                           
  5027                           ;Led.c: 29: void Led_update( void *paramter );Led.c: 30: {;Led.c: 31:  LED_ID_t id = (LE
      +                          D_ID_t) paramter;
  5028  08F4  1283               	bcf	3,5	;RP0=0, select bank0
  5029  08F5  1303               	bcf	3,6	;RP1=0, select bank0
  5030  08F6  084D               	movf	Led_update@paramter,w
  5031  08F7  00FF               	movwf	btemp+1
  5032  08F8  087F               	movf	btemp+1,w
  5033  08F9  00D3               	movwf	Led_update@id
  5034  08FA                     l2582:
  5035                           
  5036                           ;Led.c: 32:  if( led[ id ].delay )
  5037  08FA  0853               	movf	Led_update@id,w
  5038  08FB  00CF               	movwf	??_Led_update
  5039  08FC  3002               	movlw	2
  5040  08FD                     u2465:
  5041  08FD  1003               	clrc
  5042  08FE  0DCF               	rlf	??_Led_update,f
  5043  08FF  3EFF               	addlw	-1
  5044  0900  1D03               	skipz
  5045  0901  28FD               	goto	u2465
  5046  0902  1003               	clrc
  5047  0903  0D4F               	rlf	??_Led_update,w
  5048  0904  3EBF               	addlw	(low ((_led| 0+6)))& (0+255)
  5049  0905  0084               	movwf	4
  5050  0906  1383               	bcf	3,7	;select IRP bank1
  5051  0907  0800               	movf	0,w
  5052  0908  00D0               	movwf	??_Led_update+1
  5053  0909  0A84               	incf	4,f
  5054  090A  0800               	movf	0,w
  5055  090B  00D1               	movwf	??_Led_update+2
  5056  090C  0850               	movf	??_Led_update+1,w
  5057  090D  0451               	iorwf	??_Led_update+2,w
  5058  090E  1903               	btfsc	3,2
  5059  090F  2911               	goto	u2471
  5060  0910  2912               	goto	u2470
  5061  0911                     u2471:
  5062  0911  2927               	goto	l2586
  5063  0912                     u2470:
  5064  0912                     l2584:
  5065                           
  5066                           ;Led.c: 33:  {;Led.c: 34:   led[ id ].delay--;
  5067  0912  0853               	movf	Led_update@id,w
  5068  0913  00CF               	movwf	??_Led_update
  5069  0914  3002               	movlw	2
  5070  0915                     u2485:
  5071  0915  1003               	clrc
  5072  0916  0DCF               	rlf	??_Led_update,f
  5073  0917  3EFF               	addlw	-1
  5074  0918  1D03               	skipz
  5075  0919  2915               	goto	u2485
  5076  091A  1003               	clrc
  5077  091B  0D4F               	rlf	??_Led_update,w
  5078  091C  3EBF               	addlw	(low ((_led| 0+6)))& (0+255)
  5079  091D  0084               	movwf	4
  5080  091E  3001               	movlw	1
  5081  091F  0280               	subwf	0,f
  5082  0920  0F84               	incfsz	4,f
  5083  0921  3000               	movlw	0
  5084  0922  1C03               	skipc
  5085  0923  0380               	decf	0,f
  5086  0924  0280               	subwf	0,f
  5087  0925  0384               	decf	4,f
  5088                           
  5089                           ;Led.c: 35:  }else if( led[ id ].period )
  5090  0926  298A               	goto	l2594
  5091  0927                     l2586:
  5092  0927  0853               	movf	Led_update@id,w
  5093  0928  00CF               	movwf	??_Led_update
  5094  0929  3002               	movlw	2
  5095  092A                     u2495:
  5096  092A  1003               	clrc
  5097  092B  0DCF               	rlf	??_Led_update,f
  5098  092C  3EFF               	addlw	-1
  5099  092D  1D03               	skipz
  5100  092E  292A               	goto	u2495
  5101  092F  1003               	clrc
  5102  0930  0D4F               	rlf	??_Led_update,w
  5103  0931  3EBD               	addlw	(low ((_led| 0+4)))& (0+255)
  5104  0932  0084               	movwf	4
  5105  0933  0800               	movf	0,w
  5106  0934  00D0               	movwf	??_Led_update+1
  5107  0935  0A84               	incf	4,f
  5108  0936  0800               	movf	0,w
  5109  0937  00D1               	movwf	??_Led_update+2
  5110  0938  0850               	movf	??_Led_update+1,w
  5111  0939  0451               	iorwf	??_Led_update+2,w
  5112  093A  1903               	btfsc	3,2
  5113  093B  293D               	goto	u2501
  5114  093C  293E               	goto	u2500
  5115  093D                     u2501:
  5116  093D  297D               	goto	l2592
  5117  093E                     u2500:
  5118  093E                     l2588:
  5119                           
  5120                           ;Led.c: 36:  {;Led.c: 37:   led[ id ].blink ^= led[ id ].state;
  5121  093E  0853               	movf	Led_update@id,w
  5122  093F  00CF               	movwf	??_Led_update
  5123  0940  3002               	movlw	2
  5124  0941                     u2515:
  5125  0941  1003               	clrc
  5126  0942  0DCF               	rlf	??_Led_update,f
  5127  0943  3EFF               	addlw	-1
  5128  0944  1D03               	skipz
  5129  0945  2941               	goto	u2515
  5130  0946  1003               	clrc
  5131  0947  0D4F               	rlf	??_Led_update,w
  5132  0948  3EBB               	addlw	(low ((_led| 0+2)))& (0+255)
  5133  0949  0084               	movwf	4
  5134  094A  0800               	movf	0,w
  5135  094B  00FF               	movwf	btemp+1
  5136  094C  0853               	movf	Led_update@id,w
  5137  094D  00D0               	movwf	??_Led_update+1
  5138  094E  3002               	movlw	2
  5139  094F                     u2525:
  5140  094F  1003               	clrc
  5141  0950  0DD0               	rlf	??_Led_update+1,f
  5142  0951  3EFF               	addlw	-1
  5143  0952  1D03               	skipz
  5144  0953  294F               	goto	u2525
  5145  0954  1003               	clrc
  5146  0955  0D50               	rlf	??_Led_update+1,w
  5147  0956  3EBC               	addlw	(low ((_led| 0+3)))& (0+255)
  5148  0957  0084               	movwf	4
  5149  0958  087F               	movf	btemp+1,w
  5150  0959  0680               	xorwf	0,f
  5151  095A                     l2590:
  5152                           
  5153                           ;Led.c: 38:   led[ id ].delay = led[ id ].period;
  5154  095A  0853               	movf	Led_update@id,w
  5155  095B  00CF               	movwf	??_Led_update
  5156  095C  3002               	movlw	2
  5157  095D                     u2535:
  5158  095D  1003               	clrc
  5159  095E  0DCF               	rlf	??_Led_update,f
  5160  095F  3EFF               	addlw	-1
  5161  0960  1D03               	skipz
  5162  0961  295D               	goto	u2535
  5163  0962  1003               	clrc
  5164  0963  0D4F               	rlf	??_Led_update,w
  5165  0964  3EBD               	addlw	(low ((_led| 0+4)))& (0+255)
  5166  0965  0084               	movwf	4
  5167  0966  0800               	movf	0,w
  5168  0967  00D0               	movwf	??_Led_update+1
  5169  0968  0A84               	incf	4,f
  5170  0969  0800               	movf	0,w
  5171  096A  00D1               	movwf	??_Led_update+2
  5172  096B  0853               	movf	Led_update@id,w
  5173  096C  00D2               	movwf	??_Led_update+3
  5174  096D  3002               	movlw	2
  5175  096E                     u2545:
  5176  096E  1003               	clrc
  5177  096F  0DD2               	rlf	??_Led_update+3,f
  5178  0970  3EFF               	addlw	-1
  5179  0971  1D03               	skipz
  5180  0972  296E               	goto	u2545
  5181  0973  1003               	clrc
  5182  0974  0D52               	rlf	??_Led_update+3,w
  5183  0975  3EBF               	addlw	(low ((_led| 0+6)))& (0+255)
  5184  0976  0084               	movwf	4
  5185  0977  0850               	movf	??_Led_update+1,w
  5186  0978  0080               	movwf	0
  5187  0979  0A84               	incf	4,f
  5188  097A  0851               	movf	??_Led_update+2,w
  5189  097B  0080               	movwf	0
  5190                           
  5191                           ;Led.c: 39:  }else
  5192  097C  298A               	goto	l2594
  5193  097D                     l2592:
  5194                           
  5195                           ;Led.c: 40:  {;Led.c: 41:   led[ id ].blink = 0;
  5196  097D  0853               	movf	Led_update@id,w
  5197  097E  00CF               	movwf	??_Led_update
  5198  097F  3002               	movlw	2
  5199  0980                     u2555:
  5200  0980  1003               	clrc
  5201  0981  0DCF               	rlf	??_Led_update,f
  5202  0982  3EFF               	addlw	-1
  5203  0983  1D03               	skipz
  5204  0984  2980               	goto	u2555
  5205  0985  1003               	clrc
  5206  0986  0D4F               	rlf	??_Led_update,w
  5207  0987  3EBC               	addlw	(low ((_led| 0+3)))& (0+255)
  5208  0988  0084               	movwf	4
  5209  0989  0180               	clrf	0
  5210  098A                     l2594:
  5211                           
  5212                           ;Led.c: 43:  setLedHardwareState( id, led[ id ].state & !led[ id ].blink );
  5213  098A  0853               	movf	Led_update@id,w
  5214  098B  00CF               	movwf	??_Led_update
  5215  098C  3002               	movlw	2
  5216  098D                     u2565:
  5217  098D  1003               	clrc
  5218  098E  0DCF               	rlf	??_Led_update,f
  5219  098F  3EFF               	addlw	-1
  5220  0990  1D03               	skipz
  5221  0991  298D               	goto	u2565
  5222  0992  1003               	clrc
  5223  0993  0D4F               	rlf	??_Led_update,w
  5224  0994  3EBB               	addlw	(low ((_led| 0+2)))& (0+255)
  5225  0995  0084               	movwf	4
  5226  0996  0800               	movf	0,w
  5227  0997  00D0               	movwf	??_Led_update+1
  5228  0998  0853               	movf	Led_update@id,w
  5229  0999  00D1               	movwf	??_Led_update+2
  5230  099A  3002               	movlw	2
  5231  099B                     u2575:
  5232  099B  1003               	clrc
  5233  099C  0DD1               	rlf	??_Led_update+2,f
  5234  099D  3EFF               	addlw	-1
  5235  099E  1D03               	skipz
  5236  099F  299B               	goto	u2575
  5237  09A0  1003               	clrc
  5238  09A1  0D51               	rlf	??_Led_update+2,w
  5239  09A2  3EBC               	addlw	(low ((_led| 0+3)))& (0+255)
  5240  09A3  0084               	movwf	4
  5241  09A4  0800               	movf	0,w
  5242  09A5  1903               	btfsc	3,2
  5243  09A6  29A8               	goto	u2581
  5244  09A7  29AA               	goto	u2580
  5245  09A8                     u2581:
  5246  09A8  3001               	movlw	1
  5247  09A9  29AB               	goto	u2590
  5248  09AA                     u2580:
  5249  09AA  3000               	movlw	0
  5250  09AB                     u2590:
  5251  09AB  0550               	andwf	??_Led_update+1,w
  5252  09AC  00FF               	movwf	btemp+1
  5253  09AD  087F               	movf	btemp+1,w
  5254  09AE  00AE               	movwf	setLedHardwareState@state
  5255  09AF  0853               	movf	Led_update@id,w
  5256  09B0  160A  158A  2697  120A  158A  	fcall	_setLedHardwareState
  5257  09B5                     l166:
  5258  09B5  0008               	return
  5259  09B6                     __end_of_Led_update:
  5260                           
  5261                           	psect	text20
  5262  19E4                     __ptext20:	
  5263 ;; *************** function _Tempctrl_update *****************
  5264 ;; Defined at:
  5265 ;;		line 27 in file "Tempctrl.c"
  5266 ;; Parameters:    Size  Location     Type
  5267 ;;  paramter        2   45[BANK0 ] PTR void 
  5268 ;;		 -> RAM(512), RAM(512), NULL(0), 
  5269 ;; Auto vars:     Size  Location     Type
  5270 ;;  id              1   48[BANK0 ] enum E1226
  5271 ;; Return value:  Size  Location     Type
  5272 ;;                  1    wreg      void 
  5273 ;; Registers used:
  5274 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5275 ;; Tracked objects:
  5276 ;;		On entry : 0/0
  5277 ;;		On exit  : 0/0
  5278 ;;		Unchanged: 0/0
  5279 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5280 ;;      Params:         0       2       0       0       0
  5281 ;;      Locals:         0       2       0       0       0
  5282 ;;      Temps:          0       0       0       0       0
  5283 ;;      Totals:         0       4       0       0       0
  5284 ;;Total ram usage:        4 bytes
  5285 ;; Hardware stack levels used:    1
  5286 ;; Hardware stack levels required when called:    5
  5287 ;; This function calls:
  5288 ;;		___bmul
  5289 ;;		_setTempctrlHardwareState
  5290 ;; This function is called by:
  5291 ;;		_main
  5292 ;;		_Scheduler_dispatchTasks
  5293 ;; This function uses a non-reentrant model
  5294 ;;
  5295                           
  5296                           
  5297                           ;psect for function _Tempctrl_update
  5298  19E4                     _Tempctrl_update:
  5299  19E4                     l2756:	
  5300                           ;incstack = 0
  5301                           ; Regs used in _Tempctrl_update: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5302                           
  5303                           
  5304                           ;Tempctrl.c: 27: void Tempctrl_update( void *paramter );Tempctrl.c: 28: {;Tempctrl.c: 29
      +                          :     TEMPCTRL_ID_t id = (TEMPCTRL_ID_t) paramter;
  5305  19E4  1283               	bcf	3,5	;RP0=0, select bank0
  5306  19E5  1303               	bcf	3,6	;RP1=0, select bank0
  5307  19E6  084D               	movf	Tempctrl_update@paramter,w
  5308  19E7  00FF               	movwf	btemp+1
  5309  19E8  087F               	movf	btemp+1,w
  5310  19E9  00D0               	movwf	Tempctrl_update@id
  5311  19EA                     l2758:
  5312                           
  5313                           ;Tempctrl.c: 30:     setTempctrlHardwareState( id, tempctrl[ id ].state );
  5314  19EA  3005               	movlw	5
  5315  19EB  00FF               	movwf	btemp+1
  5316  19EC  087F               	movf	btemp+1,w
  5317  19ED  00A0               	movwf	___bmul@multiplicand
  5318  19EE  0850               	movf	Tempctrl_update@id,w
  5319  19EF  160A  158A  20FD  160A  158A  	fcall	___bmul
  5320  19F4  3E6A               	addlw	(low ((_tempctrl| 0+4)))& (0+255)
  5321  19F5  0084               	movwf	4
  5322  19F6  1383               	bcf	3,7	;select IRP bank0
  5323  19F7  0800               	movf	0,w
  5324  19F8  00FF               	movwf	btemp+1
  5325  19F9  087F               	movf	btemp+1,w
  5326  19FA  1283               	bcf	3,5	;RP0=0, select bank0
  5327  19FB  1303               	bcf	3,6	;RP1=0, select bank0
  5328  19FC  00CF               	movwf	_Tempctrl_update$1938
  5329  19FD                     l2760:
  5330                           
  5331                           ;Tempctrl.c: 30:     setTempctrlHardwareState( id, tempctrl[ id ].state );
  5332  19FD  084F               	movf	_Tempctrl_update$1938,w
  5333  19FE  00FF               	movwf	btemp+1
  5334  19FF  087F               	movf	btemp+1,w
  5335  1A00  00AE               	movwf	setTempctrlHardwareState@state
  5336  1A01  0850               	movf	Tempctrl_update@id,w
  5337  1A02  120A  158A  2294  160A  158A  	fcall	_setTempctrlHardwareState
  5338  1A07                     l527:
  5339  1A07  0008               	return
  5340  1A08                     __end_of_Tempctrl_update:
  5341                           
  5342                           	psect	text21
  5343  006C                     __ptext21:	
  5344 ;; *************** function _Heater_update *****************
  5345 ;; Defined at:
  5346 ;;		line 91 in file "WaterHeater.c"
  5347 ;; Parameters:    Size  Location     Type
  5348 ;;  paramter        2   45[BANK0 ] PTR void 
  5349 ;;		 -> RAM(512), RAM(512), NULL(0), 
  5350 ;; Auto vars:     Size  Location     Type
  5351 ;;  id              1   53[BANK0 ] enum E1438
  5352 ;; Return value:  Size  Location     Type
  5353 ;;                  1    wreg      void 
  5354 ;; Registers used:
  5355 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5356 ;; Tracked objects:
  5357 ;;		On entry : 0/0
  5358 ;;		On exit  : 0/0
  5359 ;;		Unchanged: 0/0
  5360 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5361 ;;      Params:         0       2       0       0       0
  5362 ;;      Locals:         0       4       0       0       0
  5363 ;;      Temps:          0       3       0       0       0
  5364 ;;      Totals:         0       9       0       0       0
  5365 ;;Total ram usage:        9 bytes
  5366 ;; Hardware stack levels used:    1
  5367 ;; Hardware stack levels required when called:    6
  5368 ;; This function calls:
  5369 ;;		_Eeprom_write
  5370 ;;		_Led_setState
  5371 ;;		_Ssd_setState
  5372 ;;		_Ssd_setSymbol
  5373 ;;		_Switch_getState
  5374 ;;		_Tempctrl_setState
  5375 ;;		_Tempsnsr_getState
  5376 ;;		___awdiv
  5377 ;;		___awmod
  5378 ;;		___bmul
  5379 ;; This function is called by:
  5380 ;;		_main
  5381 ;;		_Scheduler_dispatchTasks
  5382 ;; This function uses a non-reentrant model
  5383 ;;
  5384                           
  5385                           
  5386                           ;psect for function _Heater_update
  5387  006C                     _Heater_update:
  5388  006C                     l2698:	
  5389                           ;incstack = 0
  5390                           ; Regs used in _Heater_update: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5391                           
  5392                           
  5393                           ;WaterHeater.c: 91: void Heater_update( void *paramter );WaterHeater.c: 92: {;WaterHeate
      +                          r.c: 93:     HEATER_ID_t id = (HEATER_ID_t) paramter;
  5394  006C  1283               	bcf	3,5	;RP0=0, select bank0
  5395  006D  1303               	bcf	3,6	;RP1=0, select bank0
  5396  006E  084D               	movf	Heater_update@paramter,w
  5397  006F  00FF               	movwf	btemp+1
  5398  0070  087F               	movf	btemp+1,w
  5399  0071  00D5               	movwf	Heater_update@id
  5400                           
  5401                           ;WaterHeater.c: 94:     switch( heater[ id ].state )
  5402  0072  2E53               	goto	l2748
  5403  0073                     l2700:
  5404                           
  5405                           ;WaterHeater.c: 97:         {;WaterHeater.c: 98:             if( Switch_getState( heater
      +                          [ id ].sSwId ) == SWITCH_STATE_PRESSED )
  5406  0073  301F               	movlw	31
  5407  0074  00FF               	movwf	btemp+1
  5408  0075  087F               	movf	btemp+1,w
  5409  0076  00A0               	movwf	___bmul@multiplicand
  5410  0077  0855               	movf	Heater_update@id,w
  5411  0078  160A  158A  20FD  120A  118A  	fcall	___bmul
  5412  007D  3EC9               	addlw	(low (_heater| 0))& (0+255)
  5413  007E  0084               	movwf	4
  5414  007F  1383               	bcf	3,7	;select IRP bank1
  5415  0080  0800               	movf	0,w
  5416  0081  160A  158A  2256  120A  118A  	fcall	_Switch_getState
  5417  0086  3A01               	xorlw	1
  5418  0087  1D03               	skipz
  5419  0088  288A               	goto	u2751
  5420  0089  288B               	goto	u2750
  5421  008A                     u2751:
  5422  008A  2E7B               	goto	l433
  5423  008B                     u2750:
  5424  008B                     l2702:
  5425                           
  5426                           ;WaterHeater.c: 99:             {;WaterHeater.c: 100:                 heater[ id ].state
      +                           = OperationMode;
  5427  008B  301F               	movlw	31
  5428  008C  00FF               	movwf	btemp+1
  5429  008D  087F               	movf	btemp+1,w
  5430  008E  1283               	bcf	3,5	;RP0=0, select bank0
  5431  008F  1303               	bcf	3,6	;RP1=0, select bank0
  5432  0090  00A0               	movwf	___bmul@multiplicand
  5433  0091  0855               	movf	Heater_update@id,w
  5434  0092  160A  158A  20FD  120A  118A  	fcall	___bmul
  5435  0097  3ED1               	addlw	(low ((_heater| 0+8)))& (0+255)
  5436  0098  0084               	movwf	4
  5437  0099  1383               	bcf	3,7	;select IRP bank1
  5438  009A  0180               	clrf	0
  5439  009B  0A80               	incf	0,f
  5440  009C  2E7B               	goto	l433
  5441  009D                     l2704:
  5442                           
  5443                           ;WaterHeater.c: 105:         {;WaterHeater.c: 106:             heater[ id ].avgTemp = Te
      +                          mpsnsr_getState( heater[ id ].xTempsnsrId );
  5444  009D  301F               	movlw	31
  5445  009E  00FF               	movwf	btemp+1
  5446  009F  087F               	movf	btemp+1,w
  5447  00A0  00A0               	movwf	___bmul@multiplicand
  5448  00A1  0855               	movf	Heater_update@id,w
  5449  00A2  160A  158A  20FD  120A  118A  	fcall	___bmul
  5450  00A7  3ECC               	addlw	(low ((_heater| 0+3)))& (0+255)
  5451  00A8  0084               	movwf	4
  5452  00A9  1383               	bcf	3,7	;select IRP bank1
  5453  00AA  0800               	movf	0,w
  5454  00AB  160A  158A  2099  120A  118A  	fcall	_Tempsnsr_getState
  5455  00B0  1283               	bcf	3,5	;RP0=0, select bank0
  5456  00B1  1303               	bcf	3,6	;RP1=0, select bank0
  5457  00B2  00CF               	movwf	??_Heater_update
  5458  00B3  301F               	movlw	31
  5459  00B4  00FF               	movwf	btemp+1
  5460  00B5  087F               	movf	btemp+1,w
  5461  00B6  00A0               	movwf	___bmul@multiplicand
  5462  00B7  0855               	movf	Heater_update@id,w
  5463  00B8  160A  158A  20FD  120A  118A  	fcall	___bmul
  5464  00BD  3ED3               	addlw	(low ((_heater| 0+10)))& (0+255)
  5465  00BE  0084               	movwf	4
  5466  00BF  1283               	bcf	3,5	;RP0=0, select bank0
  5467  00C0  1303               	bcf	3,6	;RP1=0, select bank0
  5468  00C1  084F               	movf	??_Heater_update,w
  5469  00C2  1383               	bcf	3,7	;select IRP bank1
  5470  00C3  0080               	movwf	0
  5471                           
  5472                           ;WaterHeater.c: 107:             if( heater[ id ].avgTemp <= ( heater[ id ].targetTemp -
      +                           5 ) )
  5473  00C4  301F               	movlw	31
  5474  00C5  00FF               	movwf	btemp+1
  5475  00C6  087F               	movf	btemp+1,w
  5476  00C7  00A0               	movwf	___bmul@multiplicand
  5477  00C8  0855               	movf	Heater_update@id,w
  5478  00C9  160A  158A  20FD  120A  118A  	fcall	___bmul
  5479  00CE  3ED4               	addlw	(low ((_heater| 0+11)))& (0+255)
  5480  00CF  0084               	movwf	4
  5481  00D0  1383               	bcf	3,7	;select IRP bank1
  5482  00D1  0800               	movf	0,w
  5483  00D2  3EFB               	addlw	251
  5484  00D3  1283               	bcf	3,5	;RP0=0, select bank0
  5485  00D4  1303               	bcf	3,6	;RP1=0, select bank0
  5486  00D5  00CF               	movwf	??_Heater_update
  5487  00D6  30FF               	movlw	255
  5488  00D7  1803               	skipnc
  5489  00D8  3000               	movlw	0
  5490  00D9  00D0               	movwf	??_Heater_update+1
  5491  00DA  301F               	movlw	31
  5492  00DB  00FF               	movwf	btemp+1
  5493  00DC  087F               	movf	btemp+1,w
  5494  00DD  00A0               	movwf	___bmul@multiplicand
  5495  00DE  0855               	movf	Heater_update@id,w
  5496  00DF  160A  158A  20FD  120A  118A  	fcall	___bmul
  5497  00E4  3ED3               	addlw	(low ((_heater| 0+10)))& (0+255)
  5498  00E5  0084               	movwf	4
  5499  00E6  1283               	bcf	3,5	;RP0=0, select bank0
  5500  00E7  1303               	bcf	3,6	;RP1=0, select bank0
  5501  00E8  0850               	movf	??_Heater_update+1,w
  5502  00E9  3A80               	xorlw	128
  5503  00EA  00D1               	movwf	??_Heater_update+2
  5504  00EB  3080               	movlw	128
  5505  00EC  0251               	subwf	??_Heater_update+2,w
  5506  00ED  1D03               	skipz
  5507  00EE  28F2               	goto	u2765
  5508  00EF  1383               	bcf	3,7	;select IRP bank1
  5509  00F0  0800               	movf	0,w
  5510  00F1  024F               	subwf	??_Heater_update,w
  5511  00F2                     u2765:
  5512  00F2  1C03               	skipc
  5513  00F3  28F5               	goto	u2761
  5514  00F4  28F6               	goto	u2760
  5515  00F5                     u2761:
  5516  00F5  292F               	goto	l2708
  5517  00F6                     u2760:
  5518  00F6                     l2706:
  5519                           
  5520                           ;WaterHeater.c: 108:             {;WaterHeater.c: 109:                 Tempctrl_setState
      +                          ( heater[ id ].xTempctrlId, TEMPCTRL_STATE_HEAT );
  5521  00F6  301F               	movlw	31
  5522  00F7  00FF               	movwf	btemp+1
  5523  00F8  087F               	movf	btemp+1,w
  5524  00F9  1283               	bcf	3,5	;RP0=0, select bank0
  5525  00FA  1303               	bcf	3,6	;RP1=0, select bank0
  5526  00FB  00A0               	movwf	___bmul@multiplicand
  5527  00FC  0855               	movf	Heater_update@id,w
  5528  00FD  160A  158A  20FD  120A  118A  	fcall	___bmul
  5529  0102  3ECD               	addlw	(low ((_heater| 0+4)))& (0+255)
  5530  0103  0084               	movwf	4
  5531  0104  1383               	bcf	3,7	;select IRP bank1
  5532  0105  0800               	movf	0,w
  5533  0106  00FF               	movwf	btemp+1
  5534  0107  087F               	movf	btemp+1,w
  5535  0108  1283               	bcf	3,5	;RP0=0, select bank0
  5536  0109  1303               	bcf	3,6	;RP1=0, select bank0
  5537  010A  00D2               	movwf	_Heater_update$1935
  5538                           
  5539                           ;WaterHeater.c: 108:             {;WaterHeater.c: 109:                 Tempctrl_setState
      +                          ( heater[ id ].xTempctrlId, TEMPCTRL_STATE_HEAT );
  5540  010B  01A3               	clrf	Tempctrl_setState@state
  5541  010C  0AA3               	incf	Tempctrl_setState@state,f
  5542  010D  0852               	movf	_Heater_update$1935,w
  5543  010E  160A  158A  212B  120A  118A  	fcall	_Tempctrl_setState
  5544                           
  5545                           ;WaterHeater.c: 110:                 Led_setState( heater[ id ].xLedId, LED_STATE_ON, LE
      +                          D_BLINK_1000MS );
  5546  0113  1283               	bcf	3,5	;RP0=0, select bank0
  5547  0114  1303               	bcf	3,6	;RP1=0, select bank0
  5548  0115  01A7               	clrf	Led_setState@state
  5549  0116  0AA7               	incf	Led_setState@state,f
  5550  0117  30E8               	movlw	232
  5551  0118  00A8               	movwf	Led_setState@period
  5552  0119  3003               	movlw	3
  5553  011A  00A9               	movwf	Led_setState@period+1
  5554  011B  301F               	movlw	31
  5555  011C  00FF               	movwf	btemp+1
  5556  011D  087F               	movf	btemp+1,w
  5557  011E  00A0               	movwf	___bmul@multiplicand
  5558  011F  0855               	movf	Heater_update@id,w
  5559  0120  160A  158A  20FD  120A  118A  	fcall	___bmul
  5560  0125  3ECE               	addlw	(low ((_heater| 0+5)))& (0+255)
  5561  0126  0084               	movwf	4
  5562  0127  1383               	bcf	3,7	;select IRP bank1
  5563  0128  0800               	movf	0,w
  5564  0129  160A  158A  2601  120A  118A  	fcall	_Led_setState
  5565                           
  5566                           ;WaterHeater.c: 111:             }else if( heater[ id ].avgTemp >= ( heater[ id ].target
      +                          Temp + 5 ) )
  5567  012E  299A               	goto	l415
  5568  012F                     l2708:
  5569  012F  301F               	movlw	31
  5570  0130  00FF               	movwf	btemp+1
  5571  0131  087F               	movf	btemp+1,w
  5572  0132  1283               	bcf	3,5	;RP0=0, select bank0
  5573  0133  1303               	bcf	3,6	;RP1=0, select bank0
  5574  0134  00A0               	movwf	___bmul@multiplicand
  5575  0135  0855               	movf	Heater_update@id,w
  5576  0136  160A  158A  20FD  120A  118A  	fcall	___bmul
  5577  013B  3ED4               	addlw	(low ((_heater| 0+11)))& (0+255)
  5578  013C  0084               	movwf	4
  5579  013D  1383               	bcf	3,7	;select IRP bank1
  5580  013E  0800               	movf	0,w
  5581  013F  3E05               	addlw	5
  5582  0140  1283               	bcf	3,5	;RP0=0, select bank0
  5583  0141  1303               	bcf	3,6	;RP1=0, select bank0
  5584  0142  00CF               	movwf	??_Heater_update
  5585  0143  3000               	movlw	0
  5586  0144  1803               	skipnc
  5587  0145  3001               	movlw	1
  5588  0146  00D0               	movwf	??_Heater_update+1
  5589  0147  301F               	movlw	31
  5590  0148  00FF               	movwf	btemp+1
  5591  0149  087F               	movf	btemp+1,w
  5592  014A  00A0               	movwf	___bmul@multiplicand
  5593  014B  0855               	movf	Heater_update@id,w
  5594  014C  160A  158A  20FD  120A  118A  	fcall	___bmul
  5595  0151  3ED3               	addlw	(low ((_heater| 0+10)))& (0+255)
  5596  0152  0084               	movwf	4
  5597  0153  1283               	bcf	3,5	;RP0=0, select bank0
  5598  0154  1303               	bcf	3,6	;RP1=0, select bank0
  5599  0155  0850               	movf	??_Heater_update+1,w
  5600  0156  3A80               	xorlw	128
  5601  0157  3C80               	sublw	128
  5602  0158  1D03               	skipz
  5603  0159  295D               	goto	u2775
  5604  015A  084F               	movf	??_Heater_update,w
  5605  015B  1383               	bcf	3,7	;select IRP bank1
  5606  015C  0200               	subwf	0,w
  5607  015D                     u2775:
  5608  015D  1C03               	skipc
  5609  015E  2960               	goto	u2771
  5610  015F  2961               	goto	u2770
  5611  0160                     u2771:
  5612  0160  299A               	goto	l415
  5613  0161                     u2770:
  5614  0161                     l2710:
  5615                           
  5616                           ;WaterHeater.c: 112:             {;WaterHeater.c: 113:                 Tempctrl_setState
      +                          ( heater[ id ].xTempctrlId, TEMPCTRL_STATE_COOL );
  5617  0161  301F               	movlw	31
  5618  0162  00FF               	movwf	btemp+1
  5619  0163  087F               	movf	btemp+1,w
  5620  0164  1283               	bcf	3,5	;RP0=0, select bank0
  5621  0165  1303               	bcf	3,6	;RP1=0, select bank0
  5622  0166  00A0               	movwf	___bmul@multiplicand
  5623  0167  0855               	movf	Heater_update@id,w
  5624  0168  160A  158A  20FD  120A  118A  	fcall	___bmul
  5625  016D  3ECD               	addlw	(low ((_heater| 0+4)))& (0+255)
  5626  016E  0084               	movwf	4
  5627  016F  1383               	bcf	3,7	;select IRP bank1
  5628  0170  0800               	movf	0,w
  5629  0171  00FF               	movwf	btemp+1
  5630  0172  087F               	movf	btemp+1,w
  5631  0173  1283               	bcf	3,5	;RP0=0, select bank0
  5632  0174  1303               	bcf	3,6	;RP1=0, select bank0
  5633  0175  00D2               	movwf	_Heater_update$1935
  5634                           
  5635                           ;WaterHeater.c: 112:             {;WaterHeater.c: 113:                 Tempctrl_setState
      +                          ( heater[ id ].xTempctrlId, TEMPCTRL_STATE_COOL );
  5636  0176  3002               	movlw	2
  5637  0177  00FF               	movwf	btemp+1
  5638  0178  087F               	movf	btemp+1,w
  5639  0179  00A3               	movwf	Tempctrl_setState@state
  5640  017A  0852               	movf	_Heater_update$1935,w
  5641  017B  160A  158A  212B  120A  118A  	fcall	_Tempctrl_setState
  5642                           
  5643                           ;WaterHeater.c: 114:                 Led_setState( heater[ id ].xLedId, LED_STATE_ON, LE
      +                          D_BLINK_0MS );
  5644  0180  1283               	bcf	3,5	;RP0=0, select bank0
  5645  0181  1303               	bcf	3,6	;RP1=0, select bank0
  5646  0182  01A7               	clrf	Led_setState@state
  5647  0183  0AA7               	incf	Led_setState@state,f
  5648  0184  3000               	movlw	0
  5649  0185  00A8               	movwf	Led_setState@period
  5650  0186  00A9               	movwf	Led_setState@period+1
  5651  0187  301F               	movlw	31
  5652  0188  00FF               	movwf	btemp+1
  5653  0189  087F               	movf	btemp+1,w
  5654  018A  00A0               	movwf	___bmul@multiplicand
  5655  018B  0855               	movf	Heater_update@id,w
  5656  018C  160A  158A  20FD  120A  118A  	fcall	___bmul
  5657  0191  3ECE               	addlw	(low ((_heater| 0+5)))& (0+255)
  5658  0192  0084               	movwf	4
  5659  0193  1383               	bcf	3,7	;select IRP bank1
  5660  0194  0800               	movf	0,w
  5661  0195  160A  158A  2601  120A  118A  	fcall	_Led_setState
  5662  019A                     l415:
  5663                           
  5664                           ;WaterHeater.c: 116:             if( heater[ id ].preState == TempSetMode )
  5665  019A  301F               	movlw	31
  5666  019B  00FF               	movwf	btemp+1
  5667  019C  087F               	movf	btemp+1,w
  5668  019D  1283               	bcf	3,5	;RP0=0, select bank0
  5669  019E  1303               	bcf	3,6	;RP1=0, select bank0
  5670  019F  00A0               	movwf	___bmul@multiplicand
  5671  01A0  0855               	movf	Heater_update@id,w
  5672  01A1  160A  158A  20FD  120A  118A  	fcall	___bmul
  5673  01A6  3ED2               	addlw	(low ((_heater| 0+9)))& (0+255)
  5674  01A7  0084               	movwf	4
  5675  01A8  3003               	movlw	3
  5676  01A9  1383               	bcf	3,7	;select IRP bank1
  5677  01AA  0600               	xorwf	0,w
  5678  01AB  1D03               	btfss	3,2
  5679  01AC  29AE               	goto	u2781
  5680  01AD  29AF               	goto	u2780
  5681  01AE                     u2781:
  5682  01AE  29C3               	goto	l2714
  5683  01AF                     u2780:
  5684  01AF                     l2712:
  5685                           
  5686                           ;WaterHeater.c: 117:             {;WaterHeater.c: 118:                 heater[ id ].stat
      +                          e = TempSetMode;
  5687  01AF  301F               	movlw	31
  5688  01B0  00FF               	movwf	btemp+1
  5689  01B1  087F               	movf	btemp+1,w
  5690  01B2  1283               	bcf	3,5	;RP0=0, select bank0
  5691  01B3  1303               	bcf	3,6	;RP1=0, select bank0
  5692  01B4  00A0               	movwf	___bmul@multiplicand
  5693  01B5  0855               	movf	Heater_update@id,w
  5694  01B6  160A  158A  20FD  120A  118A  	fcall	___bmul
  5695  01BB  3ED1               	addlw	(low ((_heater| 0+8)))& (0+255)
  5696  01BC  0084               	movwf	4
  5697  01BD  3003               	movlw	3
  5698  01BE  00FF               	movwf	btemp+1
  5699  01BF  087F               	movf	btemp+1,w
  5700  01C0  1383               	bcf	3,7	;select IRP bank1
  5701  01C1  0080               	movwf	0
  5702                           
  5703                           ;WaterHeater.c: 119:             }else
  5704  01C2  2E7B               	goto	l433
  5705  01C3                     l2714:
  5706                           
  5707                           ;WaterHeater.c: 120:             {;WaterHeater.c: 121:                 heater[ id ].stat
      +                          e = NormalMode;
  5708  01C3  301F               	movlw	31
  5709  01C4  00FF               	movwf	btemp+1
  5710  01C5  087F               	movf	btemp+1,w
  5711  01C6  1283               	bcf	3,5	;RP0=0, select bank0
  5712  01C7  1303               	bcf	3,6	;RP1=0, select bank0
  5713  01C8  00A0               	movwf	___bmul@multiplicand
  5714  01C9  0855               	movf	Heater_update@id,w
  5715  01CA  160A  158A  20FD  120A  118A  	fcall	___bmul
  5716  01CF  3ED1               	addlw	(low ((_heater| 0+8)))& (0+255)
  5717  01D0  0084               	movwf	4
  5718  01D1  3002               	movlw	2
  5719  01D2  00FF               	movwf	btemp+1
  5720  01D3  087F               	movf	btemp+1,w
  5721  01D4  1383               	bcf	3,7	;select IRP bank1
  5722  01D5  0080               	movwf	0
  5723  01D6  2E7B               	goto	l433
  5724  01D7                     l2716:
  5725                           
  5726                           ;WaterHeater.c: 126:         {;WaterHeater.c: 127:             heater[ id ].preState = h
      +                          eater[ id ].state;
  5727  01D7  301F               	movlw	31
  5728  01D8  00FF               	movwf	btemp+1
  5729  01D9  087F               	movf	btemp+1,w
  5730  01DA  00A0               	movwf	___bmul@multiplicand
  5731  01DB  0855               	movf	Heater_update@id,w
  5732  01DC  160A  158A  20FD  120A  118A  	fcall	___bmul
  5733  01E1  3ED1               	addlw	(low ((_heater| 0+8)))& (0+255)
  5734  01E2  0084               	movwf	4
  5735  01E3  1383               	bcf	3,7	;select IRP bank1
  5736  01E4  0800               	movf	0,w
  5737  01E5  1283               	bcf	3,5	;RP0=0, select bank0
  5738  01E6  1303               	bcf	3,6	;RP1=0, select bank0
  5739  01E7  00CF               	movwf	??_Heater_update
  5740  01E8  301F               	movlw	31
  5741  01E9  00FF               	movwf	btemp+1
  5742  01EA  087F               	movf	btemp+1,w
  5743  01EB  00A0               	movwf	___bmul@multiplicand
  5744  01EC  0855               	movf	Heater_update@id,w
  5745  01ED  160A  158A  20FD  120A  118A  	fcall	___bmul
  5746  01F2  3ED2               	addlw	(low ((_heater| 0+9)))& (0+255)
  5747  01F3  0084               	movwf	4
  5748  01F4  1283               	bcf	3,5	;RP0=0, select bank0
  5749  01F5  1303               	bcf	3,6	;RP1=0, select bank0
  5750  01F6  084F               	movf	??_Heater_update,w
  5751  01F7  1383               	bcf	3,7	;select IRP bank1
  5752  01F8  0080               	movwf	0
  5753                           
  5754                           ;WaterHeater.c: 128:             Ssd_setState( heater[ id ].aSsdId, SSD_STATE_ON, SSD_BL
      +                          INK_0MS );
  5755  01F9  301F               	movlw	31
  5756  01FA  00FF               	movwf	btemp+1
  5757  01FB  087F               	movf	btemp+1,w
  5758  01FC  00A0               	movwf	___bmul@multiplicand
  5759  01FD  0855               	movf	Heater_update@id,w
  5760  01FE  160A  158A  20FD  120A  118A  	fcall	___bmul
  5761  0203  3ECF               	addlw	(low ((_heater| 0+6)))& (0+255)
  5762  0204  0084               	movwf	4
  5763  0205  1383               	bcf	3,7	;select IRP bank1
  5764  0206  0800               	movf	0,w
  5765  0207  00FF               	movwf	btemp+1
  5766  0208  087F               	movf	btemp+1,w
  5767  0209  1283               	bcf	3,5	;RP0=0, select bank0
  5768  020A  1303               	bcf	3,6	;RP1=0, select bank0
  5769  020B  00D4               	movwf	_Heater_update$1936
  5770                           
  5771                           ;WaterHeater.c: 128:             Ssd_setState( heater[ id ].aSsdId, SSD_STATE_ON, SSD_BL
      +                          INK_0MS );
  5772  020C  01A7               	clrf	Ssd_setState@state
  5773  020D  0AA7               	incf	Ssd_setState@state,f
  5774  020E  3000               	movlw	0
  5775  020F  00A8               	movwf	Ssd_setState@period
  5776  0210  00A9               	movwf	Ssd_setState@period+1
  5777  0211  0854               	movf	_Heater_update$1936,w
  5778  0212  160A  158A  23BE  120A  118A  	fcall	_Ssd_setState
  5779                           
  5780                           ;WaterHeater.c: 129:             Ssd_setState( heater[ id ].bSsdId, SSD_STATE_ON, SSD_BL
      +                          INK_0MS );
  5781  0217  301F               	movlw	31
  5782  0218  00FF               	movwf	btemp+1
  5783  0219  087F               	movf	btemp+1,w
  5784  021A  1283               	bcf	3,5	;RP0=0, select bank0
  5785  021B  1303               	bcf	3,6	;RP1=0, select bank0
  5786  021C  00A0               	movwf	___bmul@multiplicand
  5787  021D  0855               	movf	Heater_update@id,w
  5788  021E  160A  158A  20FD  120A  118A  	fcall	___bmul
  5789  0223  3ED0               	addlw	(low ((_heater| 0+7)))& (0+255)
  5790  0224  0084               	movwf	4
  5791  0225  1383               	bcf	3,7	;select IRP bank1
  5792  0226  0800               	movf	0,w
  5793  0227  00FF               	movwf	btemp+1
  5794  0228  087F               	movf	btemp+1,w
  5795  0229  1283               	bcf	3,5	;RP0=0, select bank0
  5796  022A  1303               	bcf	3,6	;RP1=0, select bank0
  5797  022B  00D4               	movwf	_Heater_update$1936
  5798                           
  5799                           ;WaterHeater.c: 129:             Ssd_setState( heater[ id ].bSsdId, SSD_STATE_ON, SSD_BL
      +                          INK_0MS );
  5800  022C  01A7               	clrf	Ssd_setState@state
  5801  022D  0AA7               	incf	Ssd_setState@state,f
  5802  022E  3000               	movlw	0
  5803  022F  00A8               	movwf	Ssd_setState@period
  5804  0230  00A9               	movwf	Ssd_setState@period+1
  5805  0231  0854               	movf	_Heater_update$1936,w
  5806  0232  160A  158A  23BE  120A  118A  	fcall	_Ssd_setState
  5807                           
  5808                           ;WaterHeater.c: 130:             Ssd_setSymbol( heater[ id ].aSsdId, heater[ id ].avgTem
      +                          p % 10 );
  5809  0237  300A               	movlw	10
  5810  0238  1283               	bcf	3,5	;RP0=0, select bank0
  5811  0239  1303               	bcf	3,6	;RP1=0, select bank0
  5812  023A  00AB               	movwf	___awmod@divisor
  5813  023B  3000               	movlw	0
  5814  023C  00AC               	movwf	___awmod@divisor+1
  5815  023D  301F               	movlw	31
  5816  023E  00FF               	movwf	btemp+1
  5817  023F  087F               	movf	btemp+1,w
  5818  0240  00A0               	movwf	___bmul@multiplicand
  5819  0241  0855               	movf	Heater_update@id,w
  5820  0242  160A  158A  20FD  120A  118A  	fcall	___bmul
  5821  0247  3ED3               	addlw	(low ((_heater| 0+10)))& (0+255)
  5822  0248  0084               	movwf	4
  5823  0249  1383               	bcf	3,7	;select IRP bank1
  5824  024A  0800               	movf	0,w
  5825  024B  1283               	bcf	3,5	;RP0=0, select bank0
  5826  024C  1303               	bcf	3,6	;RP1=0, select bank0
  5827  024D  00CF               	movwf	??_Heater_update
  5828  024E  01D0               	clrf	??_Heater_update+1
  5829  024F  084F               	movf	??_Heater_update,w
  5830  0250  00AD               	movwf	___awmod@dividend
  5831  0251  0850               	movf	??_Heater_update+1,w
  5832  0252  00AE               	movwf	___awmod@dividend+1
  5833  0253  160A  158A  2747  120A  118A  	fcall	___awmod
  5834  0258  1283               	bcf	3,5	;RP0=0, select bank0
  5835  0259  1303               	bcf	3,6	;RP1=0, select bank0
  5836  025A  082B               	movf	?___awmod,w
  5837  025B  00FF               	movwf	btemp+1
  5838  025C  087F               	movf	btemp+1,w
  5839  025D  00D3               	movwf	_Heater_update$1937
  5840                           
  5841                           ;WaterHeater.c: 130:             Ssd_setSymbol( heater[ id ].aSsdId, heater[ id ].avgTem
      +                          p % 10 );
  5842  025E  0853               	movf	_Heater_update$1937,w
  5843  025F  00FF               	movwf	btemp+1
  5844  0260  087F               	movf	btemp+1,w
  5845  0261  00B1               	movwf	Ssd_setSymbol@symbol
  5846  0262  301F               	movlw	31
  5847  0263  00FF               	movwf	btemp+1
  5848  0264  087F               	movf	btemp+1,w
  5849  0265  00A0               	movwf	___bmul@multiplicand
  5850  0266  0855               	movf	Heater_update@id,w
  5851  0267  160A  158A  20FD  120A  118A  	fcall	___bmul
  5852  026C  3ECF               	addlw	(low ((_heater| 0+6)))& (0+255)
  5853  026D  0084               	movwf	4
  5854  026E  1383               	bcf	3,7	;select IRP bank1
  5855  026F  0800               	movf	0,w
  5856  0270  160A  158A  2114  120A  118A  	fcall	_Ssd_setSymbol
  5857                           
  5858                           ;WaterHeater.c: 131:             Ssd_setSymbol( heater[ id ].bSsdId, ( heater[ id ].avgT
      +                          emp / 10 ) % 10 );
  5859  0275  300A               	movlw	10
  5860  0276  1283               	bcf	3,5	;RP0=0, select bank0
  5861  0277  1303               	bcf	3,6	;RP1=0, select bank0
  5862  0278  00AB               	movwf	___awmod@divisor
  5863  0279  3000               	movlw	0
  5864  027A  00AC               	movwf	___awmod@divisor+1
  5865  027B  300A               	movlw	10
  5866  027C  00A3               	movwf	___awdiv@divisor
  5867  027D  3000               	movlw	0
  5868  027E  00A4               	movwf	___awdiv@divisor+1
  5869  027F  301F               	movlw	31
  5870  0280  00FF               	movwf	btemp+1
  5871  0281  087F               	movf	btemp+1,w
  5872  0282  00A0               	movwf	___bmul@multiplicand
  5873  0283  0855               	movf	Heater_update@id,w
  5874  0284  160A  158A  20FD  120A  118A  	fcall	___bmul
  5875  0289  3ED3               	addlw	(low ((_heater| 0+10)))& (0+255)
  5876  028A  0084               	movwf	4
  5877  028B  1383               	bcf	3,7	;select IRP bank1
  5878  028C  0800               	movf	0,w
  5879  028D  1283               	bcf	3,5	;RP0=0, select bank0
  5880  028E  1303               	bcf	3,6	;RP1=0, select bank0
  5881  028F  00CF               	movwf	??_Heater_update
  5882  0290  01D0               	clrf	??_Heater_update+1
  5883  0291  084F               	movf	??_Heater_update,w
  5884  0292  00A5               	movwf	___awdiv@dividend
  5885  0293  0850               	movf	??_Heater_update+1,w
  5886  0294  00A6               	movwf	___awdiv@dividend+1
  5887  0295  160A  118A  2265  120A  118A  	fcall	___awdiv
  5888  029A  1283               	bcf	3,5	;RP0=0, select bank0
  5889  029B  1303               	bcf	3,6	;RP1=0, select bank0
  5890  029C  0824               	movf	?___awdiv+1,w
  5891  029D  00AE               	movwf	___awmod@dividend+1
  5892  029E  0823               	movf	?___awdiv,w
  5893  029F  00AD               	movwf	___awmod@dividend
  5894  02A0  160A  158A  2747  120A  118A  	fcall	___awmod
  5895  02A5  1283               	bcf	3,5	;RP0=0, select bank0
  5896  02A6  1303               	bcf	3,6	;RP1=0, select bank0
  5897  02A7  082B               	movf	?___awmod,w
  5898  02A8  00FF               	movwf	btemp+1
  5899  02A9  087F               	movf	btemp+1,w
  5900  02AA  00D3               	movwf	_Heater_update$1937
  5901                           
  5902                           ;WaterHeater.c: 131:             Ssd_setSymbol( heater[ id ].bSsdId, ( heater[ id ].avgT
      +                          emp / 10 ) % 10 );
  5903  02AB  0853               	movf	_Heater_update$1937,w
  5904  02AC  00FF               	movwf	btemp+1
  5905  02AD  087F               	movf	btemp+1,w
  5906  02AE  00B1               	movwf	Ssd_setSymbol@symbol
  5907  02AF  301F               	movlw	31
  5908  02B0  00FF               	movwf	btemp+1
  5909  02B1  087F               	movf	btemp+1,w
  5910  02B2  00A0               	movwf	___bmul@multiplicand
  5911  02B3  0855               	movf	Heater_update@id,w
  5912  02B4  160A  158A  20FD  120A  118A  	fcall	___bmul
  5913  02B9  3ED0               	addlw	(low ((_heater| 0+7)))& (0+255)
  5914  02BA  0084               	movwf	4
  5915  02BB  1383               	bcf	3,7	;select IRP bank1
  5916  02BC  0800               	movf	0,w
  5917  02BD  160A  158A  2114  120A  118A  	fcall	_Ssd_setSymbol
  5918                           
  5919                           ;WaterHeater.c: 132:             if( Switch_getState( heater[ id ].mSwId ) || Switch_get
      +                          State( heater[ id ].pSwId ) )
  5920  02C2  301F               	movlw	31
  5921  02C3  00FF               	movwf	btemp+1
  5922  02C4  087F               	movf	btemp+1,w
  5923  02C5  1283               	bcf	3,5	;RP0=0, select bank0
  5924  02C6  1303               	bcf	3,6	;RP1=0, select bank0
  5925  02C7  00A0               	movwf	___bmul@multiplicand
  5926  02C8  0855               	movf	Heater_update@id,w
  5927  02C9  160A  158A  20FD  120A  118A  	fcall	___bmul
  5928  02CE  3ECA               	addlw	(low ((_heater| 0+1)))& (0+255)
  5929  02CF  0084               	movwf	4
  5930  02D0  1383               	bcf	3,7	;select IRP bank1
  5931  02D1  0800               	movf	0,w
  5932  02D2  160A  158A  2256  120A  118A  	fcall	_Switch_getState
  5933  02D7  3A00               	xorlw	0
  5934  02D8  1D03               	skipz
  5935  02D9  2ADB               	goto	u2791
  5936  02DA  2ADC               	goto	u2790
  5937  02DB                     u2791:
  5938  02DB  2AF6               	goto	l2720
  5939  02DC                     u2790:
  5940  02DC                     l2718:
  5941  02DC  301F               	movlw	31
  5942  02DD  00FF               	movwf	btemp+1
  5943  02DE  087F               	movf	btemp+1,w
  5944  02DF  1283               	bcf	3,5	;RP0=0, select bank0
  5945  02E0  1303               	bcf	3,6	;RP1=0, select bank0
  5946  02E1  00A0               	movwf	___bmul@multiplicand
  5947  02E2  0855               	movf	Heater_update@id,w
  5948  02E3  160A  158A  20FD  120A  118A  	fcall	___bmul
  5949  02E8  3ECB               	addlw	(low ((_heater| 0+2)))& (0+255)
  5950  02E9  0084               	movwf	4
  5951  02EA  1383               	bcf	3,7	;select IRP bank1
  5952  02EB  0800               	movf	0,w
  5953  02EC  160A  158A  2256  120A  118A  	fcall	_Switch_getState
  5954  02F1  3A00               	xorlw	0
  5955  02F2  1903               	skipnz
  5956  02F3  2AF5               	goto	u2801
  5957  02F4  2AF6               	goto	u2800
  5958  02F5                     u2801:
  5959  02F5  2B0A               	goto	l2722
  5960  02F6                     u2800:
  5961  02F6                     l2720:
  5962                           
  5963                           ;WaterHeater.c: 133:             {;WaterHeater.c: 134:                 heater[ id ].stat
      +                          e = TempSetMode;
  5964  02F6  301F               	movlw	31
  5965  02F7  00FF               	movwf	btemp+1
  5966  02F8  087F               	movf	btemp+1,w
  5967  02F9  1283               	bcf	3,5	;RP0=0, select bank0
  5968  02FA  1303               	bcf	3,6	;RP1=0, select bank0
  5969  02FB  00A0               	movwf	___bmul@multiplicand
  5970  02FC  0855               	movf	Heater_update@id,w
  5971  02FD  160A  158A  20FD  120A  118A  	fcall	___bmul
  5972  0302  3ED1               	addlw	(low ((_heater| 0+8)))& (0+255)
  5973  0303  0084               	movwf	4
  5974  0304  3003               	movlw	3
  5975  0305  00FF               	movwf	btemp+1
  5976  0306  087F               	movf	btemp+1,w
  5977  0307  1383               	bcf	3,7	;select IRP bank1
  5978  0308  0080               	movwf	0
  5979                           
  5980                           ;WaterHeater.c: 135:             }else if( Switch_getState( heater[ id ].sSwId ) )
  5981  0309  2E7B               	goto	l433
  5982  030A                     l2722:
  5983  030A  301F               	movlw	31
  5984  030B  00FF               	movwf	btemp+1
  5985  030C  087F               	movf	btemp+1,w
  5986  030D  1283               	bcf	3,5	;RP0=0, select bank0
  5987  030E  1303               	bcf	3,6	;RP1=0, select bank0
  5988  030F  00A0               	movwf	___bmul@multiplicand
  5989  0310  0855               	movf	Heater_update@id,w
  5990  0311  160A  158A  20FD  120A  118A  	fcall	___bmul
  5991  0316  3EC9               	addlw	(low (_heater| 0))& (0+255)
  5992  0317  0084               	movwf	4
  5993  0318  1383               	bcf	3,7	;select IRP bank1
  5994  0319  0800               	movf	0,w
  5995  031A  160A  158A  2256  120A  118A  	fcall	_Switch_getState
  5996  031F  3A00               	xorlw	0
  5997  0320  1903               	skipnz
  5998  0321  2B23               	goto	u2811
  5999  0322  2B24               	goto	u2810
  6000  0323                     u2811:
  6001  0323  2B38               	goto	l2726
  6002  0324                     u2810:
  6003  0324                     l2724:
  6004                           
  6005                           ;WaterHeater.c: 136:             {;WaterHeater.c: 137:                 heater[ id ].stat
      +                          e = ResetMode;
  6006  0324  301F               	movlw	31
  6007  0325  00FF               	movwf	btemp+1
  6008  0326  087F               	movf	btemp+1,w
  6009  0327  1283               	bcf	3,5	;RP0=0, select bank0
  6010  0328  1303               	bcf	3,6	;RP1=0, select bank0
  6011  0329  00A0               	movwf	___bmul@multiplicand
  6012  032A  0855               	movf	Heater_update@id,w
  6013  032B  160A  158A  20FD  120A  118A  	fcall	___bmul
  6014  0330  3ED1               	addlw	(low ((_heater| 0+8)))& (0+255)
  6015  0331  0084               	movwf	4
  6016  0332  3004               	movlw	4
  6017  0333  00FF               	movwf	btemp+1
  6018  0334  087F               	movf	btemp+1,w
  6019  0335  1383               	bcf	3,7	;select IRP bank1
  6020  0336  0080               	movwf	0
  6021                           
  6022                           ;WaterHeater.c: 138:             }else
  6023  0337  2E7B               	goto	l433
  6024  0338                     l2726:
  6025                           
  6026                           ;WaterHeater.c: 139:             {;WaterHeater.c: 140:                 heater[ id ].stat
      +                          e = OperationMode;
  6027  0338  301F               	movlw	31
  6028  0339  00FF               	movwf	btemp+1
  6029  033A  087F               	movf	btemp+1,w
  6030  033B  1283               	bcf	3,5	;RP0=0, select bank0
  6031  033C  1303               	bcf	3,6	;RP1=0, select bank0
  6032  033D  00A0               	movwf	___bmul@multiplicand
  6033  033E  0855               	movf	Heater_update@id,w
  6034  033F  160A  158A  20FD  120A  118A  	fcall	___bmul
  6035  0344  3ED1               	addlw	(low ((_heater| 0+8)))& (0+255)
  6036  0345  0084               	movwf	4
  6037  0346  1383               	bcf	3,7	;select IRP bank1
  6038  0347  0180               	clrf	0
  6039  0348  0A80               	incf	0,f
  6040  0349  2E7B               	goto	l433
  6041  034A                     l2728:
  6042                           
  6043                           ;WaterHeater.c: 145:         {;WaterHeater.c: 146:             heater[ id ].preState = h
      +                          eater[ id ].state;
  6044  034A  301F               	movlw	31
  6045  034B  00FF               	movwf	btemp+1
  6046  034C  087F               	movf	btemp+1,w
  6047  034D  00A0               	movwf	___bmul@multiplicand
  6048  034E  0855               	movf	Heater_update@id,w
  6049  034F  160A  158A  20FD  120A  118A  	fcall	___bmul
  6050  0354  3ED1               	addlw	(low ((_heater| 0+8)))& (0+255)
  6051  0355  0084               	movwf	4
  6052  0356  1383               	bcf	3,7	;select IRP bank1
  6053  0357  0800               	movf	0,w
  6054  0358  1283               	bcf	3,5	;RP0=0, select bank0
  6055  0359  1303               	bcf	3,6	;RP1=0, select bank0
  6056  035A  00CF               	movwf	??_Heater_update
  6057  035B  301F               	movlw	31
  6058  035C  00FF               	movwf	btemp+1
  6059  035D  087F               	movf	btemp+1,w
  6060  035E  00A0               	movwf	___bmul@multiplicand
  6061  035F  0855               	movf	Heater_update@id,w
  6062  0360  160A  158A  20FD  120A  118A  	fcall	___bmul
  6063  0365  3ED2               	addlw	(low ((_heater| 0+9)))& (0+255)
  6064  0366  0084               	movwf	4
  6065  0367  1283               	bcf	3,5	;RP0=0, select bank0
  6066  0368  1303               	bcf	3,6	;RP1=0, select bank0
  6067  0369  084F               	movf	??_Heater_update,w
  6068  036A  1383               	bcf	3,7	;select IRP bank1
  6069  036B  0080               	movwf	0
  6070                           
  6071                           ;WaterHeater.c: 147:             Ssd_setState( heater[ id ].aSsdId, SSD_STATE_ON, SSD_BL
      +                          INK_1000MS );
  6072  036C  301F               	movlw	31
  6073  036D  00FF               	movwf	btemp+1
  6074  036E  087F               	movf	btemp+1,w
  6075  036F  00A0               	movwf	___bmul@multiplicand
  6076  0370  0855               	movf	Heater_update@id,w
  6077  0371  160A  158A  20FD  120A  118A  	fcall	___bmul
  6078  0376  3ECF               	addlw	(low ((_heater| 0+6)))& (0+255)
  6079  0377  0084               	movwf	4
  6080  0378  1383               	bcf	3,7	;select IRP bank1
  6081  0379  0800               	movf	0,w
  6082  037A  00FF               	movwf	btemp+1
  6083  037B  087F               	movf	btemp+1,w
  6084  037C  1283               	bcf	3,5	;RP0=0, select bank0
  6085  037D  1303               	bcf	3,6	;RP1=0, select bank0
  6086  037E  00D4               	movwf	_Heater_update$1936
  6087                           
  6088                           ;WaterHeater.c: 147:             Ssd_setState( heater[ id ].aSsdId, SSD_STATE_ON, SSD_BL
      +                          INK_1000MS );
  6089  037F  01A7               	clrf	Ssd_setState@state
  6090  0380  0AA7               	incf	Ssd_setState@state,f
  6091  0381  30E8               	movlw	232
  6092  0382  00A8               	movwf	Ssd_setState@period
  6093  0383  3003               	movlw	3
  6094  0384  00A9               	movwf	Ssd_setState@period+1
  6095  0385  0854               	movf	_Heater_update$1936,w
  6096  0386  160A  158A  23BE  120A  118A  	fcall	_Ssd_setState
  6097                           
  6098                           ;WaterHeater.c: 148:             Ssd_setState( heater[ id ].bSsdId, SSD_STATE_ON, SSD_BL
      +                          INK_1000MS );
  6099  038B  301F               	movlw	31
  6100  038C  00FF               	movwf	btemp+1
  6101  038D  087F               	movf	btemp+1,w
  6102  038E  1283               	bcf	3,5	;RP0=0, select bank0
  6103  038F  1303               	bcf	3,6	;RP1=0, select bank0
  6104  0390  00A0               	movwf	___bmul@multiplicand
  6105  0391  0855               	movf	Heater_update@id,w
  6106  0392  160A  158A  20FD  120A  118A  	fcall	___bmul
  6107  0397  3ED0               	addlw	(low ((_heater| 0+7)))& (0+255)
  6108  0398  0084               	movwf	4
  6109  0399  1383               	bcf	3,7	;select IRP bank1
  6110  039A  0800               	movf	0,w
  6111  039B  00FF               	movwf	btemp+1
  6112  039C  087F               	movf	btemp+1,w
  6113  039D  1283               	bcf	3,5	;RP0=0, select bank0
  6114  039E  1303               	bcf	3,6	;RP1=0, select bank0
  6115  039F  00D4               	movwf	_Heater_update$1936
  6116                           
  6117                           ;WaterHeater.c: 148:             Ssd_setState( heater[ id ].bSsdId, SSD_STATE_ON, SSD_BL
      +                          INK_1000MS );
  6118  03A0  01A7               	clrf	Ssd_setState@state
  6119  03A1  0AA7               	incf	Ssd_setState@state,f
  6120  03A2  30E8               	movlw	232
  6121  03A3  00A8               	movwf	Ssd_setState@period
  6122  03A4  3003               	movlw	3
  6123  03A5  00A9               	movwf	Ssd_setState@period+1
  6124  03A6  0854               	movf	_Heater_update$1936,w
  6125  03A7  160A  158A  23BE  120A  118A  	fcall	_Ssd_setState
  6126                           
  6127                           ;WaterHeater.c: 149:             Ssd_setSymbol( heater[ id ].aSsdId, heater[ id ].target
      +                          Temp % 10 );
  6128  03AC  300A               	movlw	10
  6129  03AD  1283               	bcf	3,5	;RP0=0, select bank0
  6130  03AE  1303               	bcf	3,6	;RP1=0, select bank0
  6131  03AF  00AB               	movwf	___awmod@divisor
  6132  03B0  3000               	movlw	0
  6133  03B1  00AC               	movwf	___awmod@divisor+1
  6134  03B2  301F               	movlw	31
  6135  03B3  00FF               	movwf	btemp+1
  6136  03B4  087F               	movf	btemp+1,w
  6137  03B5  00A0               	movwf	___bmul@multiplicand
  6138  03B6  0855               	movf	Heater_update@id,w
  6139  03B7  160A  158A  20FD  120A  118A  	fcall	___bmul
  6140  03BC  3ED4               	addlw	(low ((_heater| 0+11)))& (0+255)
  6141  03BD  0084               	movwf	4
  6142  03BE  1383               	bcf	3,7	;select IRP bank1
  6143  03BF  0800               	movf	0,w
  6144  03C0  1283               	bcf	3,5	;RP0=0, select bank0
  6145  03C1  1303               	bcf	3,6	;RP1=0, select bank0
  6146  03C2  00CF               	movwf	??_Heater_update
  6147  03C3  01D0               	clrf	??_Heater_update+1
  6148  03C4  084F               	movf	??_Heater_update,w
  6149  03C5  00AD               	movwf	___awmod@dividend
  6150  03C6  0850               	movf	??_Heater_update+1,w
  6151  03C7  00AE               	movwf	___awmod@dividend+1
  6152  03C8  160A  158A  2747  120A  118A  	fcall	___awmod
  6153  03CD  1283               	bcf	3,5	;RP0=0, select bank0
  6154  03CE  1303               	bcf	3,6	;RP1=0, select bank0
  6155  03CF  082B               	movf	?___awmod,w
  6156  03D0  00FF               	movwf	btemp+1
  6157  03D1  087F               	movf	btemp+1,w
  6158  03D2  00D3               	movwf	_Heater_update$1937
  6159                           
  6160                           ;WaterHeater.c: 149:             Ssd_setSymbol( heater[ id ].aSsdId, heater[ id ].target
      +                          Temp % 10 );
  6161  03D3  0853               	movf	_Heater_update$1937,w
  6162  03D4  00FF               	movwf	btemp+1
  6163  03D5  087F               	movf	btemp+1,w
  6164  03D6  00B1               	movwf	Ssd_setSymbol@symbol
  6165  03D7  301F               	movlw	31
  6166  03D8  00FF               	movwf	btemp+1
  6167  03D9  087F               	movf	btemp+1,w
  6168  03DA  00A0               	movwf	___bmul@multiplicand
  6169  03DB  0855               	movf	Heater_update@id,w
  6170  03DC  160A  158A  20FD  120A  118A  	fcall	___bmul
  6171  03E1  3ECF               	addlw	(low ((_heater| 0+6)))& (0+255)
  6172  03E2  0084               	movwf	4
  6173  03E3  1383               	bcf	3,7	;select IRP bank1
  6174  03E4  0800               	movf	0,w
  6175  03E5  160A  158A  2114  120A  118A  	fcall	_Ssd_setSymbol
  6176                           
  6177                           ;WaterHeater.c: 150:             Ssd_setSymbol( heater[ id ].bSsdId, ( heater[ id ].targ
      +                          etTemp / 10 ) % 10 );
  6178  03EA  300A               	movlw	10
  6179  03EB  1283               	bcf	3,5	;RP0=0, select bank0
  6180  03EC  1303               	bcf	3,6	;RP1=0, select bank0
  6181  03ED  00AB               	movwf	___awmod@divisor
  6182  03EE  3000               	movlw	0
  6183  03EF  00AC               	movwf	___awmod@divisor+1
  6184  03F0  300A               	movlw	10
  6185  03F1  00A3               	movwf	___awdiv@divisor
  6186  03F2  3000               	movlw	0
  6187  03F3  00A4               	movwf	___awdiv@divisor+1
  6188  03F4  301F               	movlw	31
  6189  03F5  00FF               	movwf	btemp+1
  6190  03F6  087F               	movf	btemp+1,w
  6191  03F7  00A0               	movwf	___bmul@multiplicand
  6192  03F8  0855               	movf	Heater_update@id,w
  6193  03F9  160A  158A  20FD  120A  118A  	fcall	___bmul
  6194  03FE  3ED4               	addlw	(low ((_heater| 0+11)))& (0+255)
  6195  03FF  0084               	movwf	4
  6196  0400  1383               	bcf	3,7	;select IRP bank1
  6197  0401  0800               	movf	0,w
  6198  0402  1283               	bcf	3,5	;RP0=0, select bank0
  6199  0403  1303               	bcf	3,6	;RP1=0, select bank0
  6200  0404  00CF               	movwf	??_Heater_update
  6201  0405  01D0               	clrf	??_Heater_update+1
  6202  0406  084F               	movf	??_Heater_update,w
  6203  0407  00A5               	movwf	___awdiv@dividend
  6204  0408  0850               	movf	??_Heater_update+1,w
  6205  0409  00A6               	movwf	___awdiv@dividend+1
  6206  040A  160A  118A  2265  120A  118A  	fcall	___awdiv
  6207  040F  1283               	bcf	3,5	;RP0=0, select bank0
  6208  0410  1303               	bcf	3,6	;RP1=0, select bank0
  6209  0411  0824               	movf	?___awdiv+1,w
  6210  0412  00AE               	movwf	___awmod@dividend+1
  6211  0413  0823               	movf	?___awdiv,w
  6212  0414  00AD               	movwf	___awmod@dividend
  6213  0415  160A  158A  2747  120A  118A  	fcall	___awmod
  6214  041A  1283               	bcf	3,5	;RP0=0, select bank0
  6215  041B  1303               	bcf	3,6	;RP1=0, select bank0
  6216  041C  082B               	movf	?___awmod,w
  6217  041D  00FF               	movwf	btemp+1
  6218  041E  087F               	movf	btemp+1,w
  6219  041F  00D3               	movwf	_Heater_update$1937
  6220                           
  6221                           ;WaterHeater.c: 150:             Ssd_setSymbol( heater[ id ].bSsdId, ( heater[ id ].targ
      +                          etTemp / 10 ) % 10 );
  6222  0420  0853               	movf	_Heater_update$1937,w
  6223  0421  00FF               	movwf	btemp+1
  6224  0422  087F               	movf	btemp+1,w
  6225  0423  00B1               	movwf	Ssd_setSymbol@symbol
  6226  0424  301F               	movlw	31
  6227  0425  00FF               	movwf	btemp+1
  6228  0426  087F               	movf	btemp+1,w
  6229  0427  00A0               	movwf	___bmul@multiplicand
  6230  0428  0855               	movf	Heater_update@id,w
  6231  0429  160A  158A  20FD  120A  118A  	fcall	___bmul
  6232  042E  3ED0               	addlw	(low ((_heater| 0+7)))& (0+255)
  6233  042F  0084               	movwf	4
  6234  0430  1383               	bcf	3,7	;select IRP bank1
  6235  0431  0800               	movf	0,w
  6236  0432  160A  158A  2114  120A  118A  	fcall	_Ssd_setSymbol
  6237                           
  6238                           ;WaterHeater.c: 151:             if( Switch_getState( heater[ id ].pSwId ) && heater[ id
      +                           ].targetTemp <= 70 )
  6239  0437  301F               	movlw	31
  6240  0438  00FF               	movwf	btemp+1
  6241  0439  087F               	movf	btemp+1,w
  6242  043A  1283               	bcf	3,5	;RP0=0, select bank0
  6243  043B  1303               	bcf	3,6	;RP1=0, select bank0
  6244  043C  00A0               	movwf	___bmul@multiplicand
  6245  043D  0855               	movf	Heater_update@id,w
  6246  043E  160A  158A  20FD  120A  118A  	fcall	___bmul
  6247  0443  3ECB               	addlw	(low ((_heater| 0+2)))& (0+255)
  6248  0444  0084               	movwf	4
  6249  0445  1383               	bcf	3,7	;select IRP bank1
  6250  0446  0800               	movf	0,w
  6251  0447  160A  158A  2256  120A  118A  	fcall	_Switch_getState
  6252  044C  3A00               	xorlw	0
  6253  044D  1903               	skipnz
  6254  044E  2C50               	goto	u2821
  6255  044F  2C51               	goto	u2820
  6256  0450                     u2821:
  6257  0450  2C8B               	goto	l427
  6258  0451                     u2820:
  6259  0451                     l2730:
  6260  0451  301F               	movlw	31
  6261  0452  00FF               	movwf	btemp+1
  6262  0453  087F               	movf	btemp+1,w
  6263  0454  1283               	bcf	3,5	;RP0=0, select bank0
  6264  0455  1303               	bcf	3,6	;RP1=0, select bank0
  6265  0456  00A0               	movwf	___bmul@multiplicand
  6266  0457  0855               	movf	Heater_update@id,w
  6267  0458  160A  158A  20FD  120A  118A  	fcall	___bmul
  6268  045D  3ED4               	addlw	(low ((_heater| 0+11)))& (0+255)
  6269  045E  0084               	movwf	4
  6270  045F  3047               	movlw	71
  6271  0460  1383               	bcf	3,7	;select IRP bank1
  6272  0461  0200               	subwf	0,w
  6273  0462  1803               	skipnc
  6274  0463  2C65               	goto	u2831
  6275  0464  2C66               	goto	u2830
  6276  0465                     u2831:
  6277  0465  2C8B               	goto	l427
  6278  0466                     u2830:
  6279  0466                     l2732:
  6280                           
  6281                           ;WaterHeater.c: 152:             {;WaterHeater.c: 153:                 heater[ id ].targ
      +                          etTemp += 5;
  6282  0466  301F               	movlw	31
  6283  0467  00FF               	movwf	btemp+1
  6284  0468  087F               	movf	btemp+1,w
  6285  0469  1283               	bcf	3,5	;RP0=0, select bank0
  6286  046A  1303               	bcf	3,6	;RP1=0, select bank0
  6287  046B  00A0               	movwf	___bmul@multiplicand
  6288  046C  0855               	movf	Heater_update@id,w
  6289  046D  160A  158A  20FD  120A  118A  	fcall	___bmul
  6290  0472  3ED4               	addlw	(low ((_heater| 0+11)))& (0+255)
  6291  0473  0084               	movwf	4
  6292  0474  3005               	movlw	5
  6293  0475  00FF               	movwf	btemp+1
  6294  0476  087F               	movf	btemp+1,w
  6295  0477  1383               	bcf	3,7	;select IRP bank1
  6296  0478  0780               	addwf	0,f
  6297                           
  6298                           ;WaterHeater.c: 154:                 heater[ id ].counter = 0;
  6299  0479  301F               	movlw	31
  6300  047A  00FF               	movwf	btemp+1
  6301  047B  087F               	movf	btemp+1,w
  6302  047C  1283               	bcf	3,5	;RP0=0, select bank0
  6303  047D  1303               	bcf	3,6	;RP1=0, select bank0
  6304  047E  00A0               	movwf	___bmul@multiplicand
  6305  047F  0855               	movf	Heater_update@id,w
  6306  0480  160A  158A  20FD  120A  118A  	fcall	___bmul
  6307  0485  3ED5               	addlw	(low ((_heater| 0+12)))& (0+255)
  6308  0486  0084               	movwf	4
  6309  0487  1383               	bcf	3,7	;select IRP bank1
  6310  0488  0180               	clrf	0
  6311  0489  0A84               	incf	4,f
  6312  048A  0180               	clrf	0
  6313  048B                     l427:	
  6314                           ;WaterHeater.c: 155:             }
  6315                           
  6316                           
  6317                           ;WaterHeater.c: 156:             if( Switch_getState( heater[ id ].mSwId ) && heater[ id
      +                           ].targetTemp >= 40 )
  6318  048B  301F               	movlw	31
  6319  048C  00FF               	movwf	btemp+1
  6320  048D  087F               	movf	btemp+1,w
  6321  048E  1283               	bcf	3,5	;RP0=0, select bank0
  6322  048F  1303               	bcf	3,6	;RP1=0, select bank0
  6323  0490  00A0               	movwf	___bmul@multiplicand
  6324  0491  0855               	movf	Heater_update@id,w
  6325  0492  160A  158A  20FD  120A  118A  	fcall	___bmul
  6326  0497  3ECA               	addlw	(low ((_heater| 0+1)))& (0+255)
  6327  0498  0084               	movwf	4
  6328  0499  1383               	bcf	3,7	;select IRP bank1
  6329  049A  0800               	movf	0,w
  6330  049B  160A  158A  2256  120A  118A  	fcall	_Switch_getState
  6331  04A0  3A00               	xorlw	0
  6332  04A1  1903               	skipnz
  6333  04A2  2CA4               	goto	u2841
  6334  04A3  2CA5               	goto	u2840
  6335  04A4                     u2841:
  6336  04A4  2CDD               	goto	l428
  6337  04A5                     u2840:
  6338  04A5                     l2734:
  6339  04A5  301F               	movlw	31
  6340  04A6  00FF               	movwf	btemp+1
  6341  04A7  087F               	movf	btemp+1,w
  6342  04A8  1283               	bcf	3,5	;RP0=0, select bank0
  6343  04A9  1303               	bcf	3,6	;RP1=0, select bank0
  6344  04AA  00A0               	movwf	___bmul@multiplicand
  6345  04AB  0855               	movf	Heater_update@id,w
  6346  04AC  160A  158A  20FD  120A  118A  	fcall	___bmul
  6347  04B1  3ED4               	addlw	(low ((_heater| 0+11)))& (0+255)
  6348  04B2  0084               	movwf	4
  6349  04B3  3028               	movlw	40
  6350  04B4  1383               	bcf	3,7	;select IRP bank1
  6351  04B5  0200               	subwf	0,w
  6352  04B6  1C03               	skipc
  6353  04B7  2CB9               	goto	u2851
  6354  04B8  2CBA               	goto	u2850
  6355  04B9                     u2851:
  6356  04B9  2CDD               	goto	l428
  6357  04BA                     u2850:
  6358  04BA                     l2736:
  6359                           
  6360                           ;WaterHeater.c: 157:             {;WaterHeater.c: 158:                 heater[ id ].targ
      +                          etTemp -= 5;
  6361  04BA  301F               	movlw	31
  6362  04BB  00FF               	movwf	btemp+1
  6363  04BC  087F               	movf	btemp+1,w
  6364  04BD  1283               	bcf	3,5	;RP0=0, select bank0
  6365  04BE  1303               	bcf	3,6	;RP1=0, select bank0
  6366  04BF  00A0               	movwf	___bmul@multiplicand
  6367  04C0  0855               	movf	Heater_update@id,w
  6368  04C1  160A  158A  20FD  120A  118A  	fcall	___bmul
  6369  04C6  3ED4               	addlw	(low ((_heater| 0+11)))& (0+255)
  6370  04C7  0084               	movwf	4
  6371  04C8  3005               	movlw	5
  6372  04C9  1383               	bcf	3,7	;select IRP bank1
  6373  04CA  0280               	subwf	0,f
  6374                           
  6375                           ;WaterHeater.c: 159:                 heater[ id ].counter = 0;
  6376  04CB  301F               	movlw	31
  6377  04CC  00FF               	movwf	btemp+1
  6378  04CD  087F               	movf	btemp+1,w
  6379  04CE  1283               	bcf	3,5	;RP0=0, select bank0
  6380  04CF  1303               	bcf	3,6	;RP1=0, select bank0
  6381  04D0  00A0               	movwf	___bmul@multiplicand
  6382  04D1  0855               	movf	Heater_update@id,w
  6383  04D2  160A  158A  20FD  120A  118A  	fcall	___bmul
  6384  04D7  3ED5               	addlw	(low ((_heater| 0+12)))& (0+255)
  6385  04D8  0084               	movwf	4
  6386  04D9  1383               	bcf	3,7	;select IRP bank1
  6387  04DA  0180               	clrf	0
  6388  04DB  0A84               	incf	4,f
  6389  04DC  0180               	clrf	0
  6390  04DD                     l428:	
  6391                           ;WaterHeater.c: 160:             }
  6392                           
  6393                           
  6394                           ;WaterHeater.c: 161:             if( Switch_getState( heater[ id ].sSwId ) )
  6395  04DD  301F               	movlw	31
  6396  04DE  00FF               	movwf	btemp+1
  6397  04DF  087F               	movf	btemp+1,w
  6398  04E0  1283               	bcf	3,5	;RP0=0, select bank0
  6399  04E1  1303               	bcf	3,6	;RP1=0, select bank0
  6400  04E2  00A0               	movwf	___bmul@multiplicand
  6401  04E3  0855               	movf	Heater_update@id,w
  6402  04E4  160A  158A  20FD  120A  118A  	fcall	___bmul
  6403  04E9  3EC9               	addlw	(low (_heater| 0))& (0+255)
  6404  04EA  0084               	movwf	4
  6405  04EB  1383               	bcf	3,7	;select IRP bank1
  6406  04EC  0800               	movf	0,w
  6407  04ED  160A  158A  2256  120A  118A  	fcall	_Switch_getState
  6408  04F2  3A00               	xorlw	0
  6409  04F3  1903               	skipnz
  6410  04F4  2CF6               	goto	u2861
  6411  04F5  2CF7               	goto	u2860
  6412  04F6                     u2861:
  6413  04F6  2D0B               	goto	l2740
  6414  04F7                     u2860:
  6415  04F7                     l2738:
  6416                           
  6417                           ;WaterHeater.c: 162:             {;WaterHeater.c: 163:                 heater[ id ].stat
      +                          e = ResetMode;
  6418  04F7  301F               	movlw	31
  6419  04F8  00FF               	movwf	btemp+1
  6420  04F9  087F               	movf	btemp+1,w
  6421  04FA  1283               	bcf	3,5	;RP0=0, select bank0
  6422  04FB  1303               	bcf	3,6	;RP1=0, select bank0
  6423  04FC  00A0               	movwf	___bmul@multiplicand
  6424  04FD  0855               	movf	Heater_update@id,w
  6425  04FE  160A  158A  20FD  120A  118A  	fcall	___bmul
  6426  0503  3ED1               	addlw	(low ((_heater| 0+8)))& (0+255)
  6427  0504  0084               	movwf	4
  6428  0505  3004               	movlw	4
  6429  0506  00FF               	movwf	btemp+1
  6430  0507  087F               	movf	btemp+1,w
  6431  0508  1383               	bcf	3,7	;select IRP bank1
  6432  0509  0080               	movwf	0
  6433                           
  6434                           ;WaterHeater.c: 164:             }else
  6435  050A  2D1C               	goto	l430
  6436  050B                     l2740:
  6437                           
  6438                           ;WaterHeater.c: 165:             {;WaterHeater.c: 166:                 heater[ id ].stat
      +                          e = OperationMode;
  6439  050B  301F               	movlw	31
  6440  050C  00FF               	movwf	btemp+1
  6441  050D  087F               	movf	btemp+1,w
  6442  050E  1283               	bcf	3,5	;RP0=0, select bank0
  6443  050F  1303               	bcf	3,6	;RP1=0, select bank0
  6444  0510  00A0               	movwf	___bmul@multiplicand
  6445  0511  0855               	movf	Heater_update@id,w
  6446  0512  160A  158A  20FD  120A  118A  	fcall	___bmul
  6447  0517  3ED1               	addlw	(low ((_heater| 0+8)))& (0+255)
  6448  0518  0084               	movwf	4
  6449  0519  1383               	bcf	3,7	;select IRP bank1
  6450  051A  0180               	clrf	0
  6451  051B  0A80               	incf	0,f
  6452  051C                     l430:	
  6453                           ;WaterHeater.c: 167:             }
  6454                           
  6455                           
  6456                           ;WaterHeater.c: 168:             if( heater[ id ].counter++ >= ( ( 5000 / ( ( TickType_t
      +                           ) 5 ) ) / ( 200 / ( ( TickType_t ) 5 ) ) ) )
  6457  051C  301F               	movlw	31
  6458  051D  00FF               	movwf	btemp+1
  6459  051E  087F               	movf	btemp+1,w
  6460  051F  1283               	bcf	3,5	;RP0=0, select bank0
  6461  0520  1303               	bcf	3,6	;RP1=0, select bank0
  6462  0521  00A0               	movwf	___bmul@multiplicand
  6463  0522  0855               	movf	Heater_update@id,w
  6464  0523  160A  158A  20FD  120A  118A  	fcall	___bmul
  6465  0528  3ED5               	addlw	(low ((_heater| 0+12)))& (0+255)
  6466  0529  0084               	movwf	4
  6467  052A  1383               	bcf	3,7	;select IRP bank1
  6468  052B  0800               	movf	0,w
  6469  052C  1283               	bcf	3,5	;RP0=0, select bank0
  6470  052D  1303               	bcf	3,6	;RP1=0, select bank0
  6471  052E  00CF               	movwf	??_Heater_update
  6472  052F  3001               	movlw	1
  6473  0530  0780               	addwf	0,f
  6474  0531  0A84               	incf	4,f
  6475  0532  0800               	movf	0,w
  6476  0533  00D0               	movwf	??_Heater_update+1
  6477  0534  3000               	movlw	0
  6478  0535  1803               	skipnc
  6479  0536  0A80               	incf	0,f
  6480  0537  0780               	addwf	0,f
  6481  0538  3000               	movlw	0
  6482  0539  0250               	subwf	??_Heater_update+1,w
  6483  053A  3019               	movlw	25
  6484  053B  1903               	skipnz
  6485  053C  024F               	subwf	??_Heater_update,w
  6486  053D  1C03               	skipc
  6487  053E  2D40               	goto	u2871
  6488  053F  2D41               	goto	u2870
  6489  0540                     u2871:
  6490  0540  2E7B               	goto	l433
  6491  0541                     u2870:
  6492  0541                     l2742:
  6493                           
  6494                           ;WaterHeater.c: 169:             {;WaterHeater.c: 170:                 heater[ id ].coun
      +                          ter = 0;
  6495  0541  301F               	movlw	31
  6496  0542  00FF               	movwf	btemp+1
  6497  0543  087F               	movf	btemp+1,w
  6498  0544  00A0               	movwf	___bmul@multiplicand
  6499  0545  0855               	movf	Heater_update@id,w
  6500  0546  160A  158A  20FD  120A  118A  	fcall	___bmul
  6501  054B  3ED5               	addlw	(low ((_heater| 0+12)))& (0+255)
  6502  054C  0084               	movwf	4
  6503  054D  1383               	bcf	3,7	;select IRP bank1
  6504  054E  0180               	clrf	0
  6505  054F  0A84               	incf	4,f
  6506  0550  0180               	clrf	0
  6507                           
  6508                           ;WaterHeater.c: 171:                 Eeprom_write( 8, heater[ id ].targetTemp );
  6509  0551  301F               	movlw	31
  6510  0552  00FF               	movwf	btemp+1
  6511  0553  087F               	movf	btemp+1,w
  6512  0554  1283               	bcf	3,5	;RP0=0, select bank0
  6513  0555  1303               	bcf	3,6	;RP1=0, select bank0
  6514  0556  00A0               	movwf	___bmul@multiplicand
  6515  0557  0855               	movf	Heater_update@id,w
  6516  0558  160A  158A  20FD  120A  118A  	fcall	___bmul
  6517  055D  3ED4               	addlw	(low ((_heater| 0+11)))& (0+255)
  6518  055E  0084               	movwf	4
  6519  055F  1383               	bcf	3,7	;select IRP bank1
  6520  0560  0800               	movf	0,w
  6521  0561  00FF               	movwf	btemp+1
  6522  0562  087F               	movf	btemp+1,w
  6523  0563  1283               	bcf	3,5	;RP0=0, select bank0
  6524  0564  1303               	bcf	3,6	;RP1=0, select bank0
  6525  0565  00A3               	movwf	Eeprom_write@buffer
  6526  0566  3008               	movlw	8
  6527  0567  160A  158A  2356  120A  118A  	fcall	_Eeprom_write
  6528                           
  6529                           ;WaterHeater.c: 172:                 heater[ id ].state = NormalMode;
  6530  056C  301F               	movlw	31
  6531  056D  00FF               	movwf	btemp+1
  6532  056E  087F               	movf	btemp+1,w
  6533  056F  1283               	bcf	3,5	;RP0=0, select bank0
  6534  0570  1303               	bcf	3,6	;RP1=0, select bank0
  6535  0571  00A0               	movwf	___bmul@multiplicand
  6536  0572  0855               	movf	Heater_update@id,w
  6537  0573  160A  158A  20FD  120A  118A  	fcall	___bmul
  6538  0578  3ED1               	addlw	(low ((_heater| 0+8)))& (0+255)
  6539  0579  0084               	movwf	4
  6540  057A  3002               	movlw	2
  6541  057B  00FF               	movwf	btemp+1
  6542  057C  087F               	movf	btemp+1,w
  6543  057D  1383               	bcf	3,7	;select IRP bank1
  6544  057E  0080               	movwf	0
  6545  057F  2E7B               	goto	l433
  6546  0580                     l2744:
  6547                           
  6548                           ;WaterHeater.c: 177:         {;WaterHeater.c: 178:             Tempctrl_setState( heater
      +                          [ id ].xTempctrlId, TEMPCTRL_STATE_OFF );
  6549  0580  301F               	movlw	31
  6550  0581  00FF               	movwf	btemp+1
  6551  0582  087F               	movf	btemp+1,w
  6552  0583  00A0               	movwf	___bmul@multiplicand
  6553  0584  0855               	movf	Heater_update@id,w
  6554  0585  160A  158A  20FD  120A  118A  	fcall	___bmul
  6555  058A  3ECD               	addlw	(low ((_heater| 0+4)))& (0+255)
  6556  058B  0084               	movwf	4
  6557  058C  1383               	bcf	3,7	;select IRP bank1
  6558  058D  0800               	movf	0,w
  6559  058E  00FF               	movwf	btemp+1
  6560  058F  087F               	movf	btemp+1,w
  6561  0590  1283               	bcf	3,5	;RP0=0, select bank0
  6562  0591  1303               	bcf	3,6	;RP1=0, select bank0
  6563  0592  00D2               	movwf	_Heater_update$1935
  6564                           
  6565                           ;WaterHeater.c: 177:         {;WaterHeater.c: 178:             Tempctrl_setState( heater
      +                          [ id ].xTempctrlId, TEMPCTRL_STATE_OFF );
  6566  0593  01A3               	clrf	Tempctrl_setState@state
  6567  0594  0852               	movf	_Heater_update$1935,w
  6568  0595  160A  158A  212B  120A  118A  	fcall	_Tempctrl_setState
  6569                           
  6570                           ;WaterHeater.c: 179:             Led_setState( heater[ id ].xLedId, LED_STATE_OFF, LED_B
      +                          LINK_0MS );
  6571  059A  1283               	bcf	3,5	;RP0=0, select bank0
  6572  059B  1303               	bcf	3,6	;RP1=0, select bank0
  6573  059C  01A7               	clrf	Led_setState@state
  6574  059D  3000               	movlw	0
  6575  059E  00A8               	movwf	Led_setState@period
  6576  059F  00A9               	movwf	Led_setState@period+1
  6577  05A0  301F               	movlw	31
  6578  05A1  00FF               	movwf	btemp+1
  6579  05A2  087F               	movf	btemp+1,w
  6580  05A3  00A0               	movwf	___bmul@multiplicand
  6581  05A4  0855               	movf	Heater_update@id,w
  6582  05A5  160A  158A  20FD  120A  118A  	fcall	___bmul
  6583  05AA  3ECE               	addlw	(low ((_heater| 0+5)))& (0+255)
  6584  05AB  0084               	movwf	4
  6585  05AC  1383               	bcf	3,7	;select IRP bank1
  6586  05AD  0800               	movf	0,w
  6587  05AE  160A  158A  2601  120A  118A  	fcall	_Led_setState
  6588                           
  6589                           ;WaterHeater.c: 180:             Ssd_setState( heater[ id ].aSsdId, SSD_STATE_OFF, SSD_B
      +                          LINK_0MS );
  6590  05B3  301F               	movlw	31
  6591  05B4  00FF               	movwf	btemp+1
  6592  05B5  087F               	movf	btemp+1,w
  6593  05B6  1283               	bcf	3,5	;RP0=0, select bank0
  6594  05B7  1303               	bcf	3,6	;RP1=0, select bank0
  6595  05B8  00A0               	movwf	___bmul@multiplicand
  6596  05B9  0855               	movf	Heater_update@id,w
  6597  05BA  160A  158A  20FD  120A  118A  	fcall	___bmul
  6598  05BF  3ECF               	addlw	(low ((_heater| 0+6)))& (0+255)
  6599  05C0  0084               	movwf	4
  6600  05C1  1383               	bcf	3,7	;select IRP bank1
  6601  05C2  0800               	movf	0,w
  6602  05C3  00FF               	movwf	btemp+1
  6603  05C4  087F               	movf	btemp+1,w
  6604  05C5  1283               	bcf	3,5	;RP0=0, select bank0
  6605  05C6  1303               	bcf	3,6	;RP1=0, select bank0
  6606  05C7  00D4               	movwf	_Heater_update$1936
  6607                           
  6608                           ;WaterHeater.c: 180:             Ssd_setState( heater[ id ].aSsdId, SSD_STATE_OFF, SSD_B
      +                          LINK_0MS );
  6609  05C8  01A7               	clrf	Ssd_setState@state
  6610  05C9  3000               	movlw	0
  6611  05CA  00A8               	movwf	Ssd_setState@period
  6612  05CB  00A9               	movwf	Ssd_setState@period+1
  6613  05CC  0854               	movf	_Heater_update$1936,w
  6614  05CD  160A  158A  23BE  120A  118A  	fcall	_Ssd_setState
  6615                           
  6616                           ;WaterHeater.c: 181:             Ssd_setState( heater[ id ].bSsdId, SSD_STATE_OFF, SSD_B
      +                          LINK_0MS );
  6617  05D2  301F               	movlw	31
  6618  05D3  00FF               	movwf	btemp+1
  6619  05D4  087F               	movf	btemp+1,w
  6620  05D5  1283               	bcf	3,5	;RP0=0, select bank0
  6621  05D6  1303               	bcf	3,6	;RP1=0, select bank0
  6622  05D7  00A0               	movwf	___bmul@multiplicand
  6623  05D8  0855               	movf	Heater_update@id,w
  6624  05D9  160A  158A  20FD  120A  118A  	fcall	___bmul
  6625  05DE  3ED0               	addlw	(low ((_heater| 0+7)))& (0+255)
  6626  05DF  0084               	movwf	4
  6627  05E0  1383               	bcf	3,7	;select IRP bank1
  6628  05E1  0800               	movf	0,w
  6629  05E2  00FF               	movwf	btemp+1
  6630  05E3  087F               	movf	btemp+1,w
  6631  05E4  1283               	bcf	3,5	;RP0=0, select bank0
  6632  05E5  1303               	bcf	3,6	;RP1=0, select bank0
  6633  05E6  00D4               	movwf	_Heater_update$1936
  6634                           
  6635                           ;WaterHeater.c: 181:             Ssd_setState( heater[ id ].bSsdId, SSD_STATE_OFF, SSD_B
      +                          LINK_0MS );
  6636  05E7  01A7               	clrf	Ssd_setState@state
  6637  05E8  3000               	movlw	0
  6638  05E9  00A8               	movwf	Ssd_setState@period
  6639  05EA  00A9               	movwf	Ssd_setState@period+1
  6640  05EB  0854               	movf	_Heater_update$1936,w
  6641  05EC  160A  158A  23BE  120A  118A  	fcall	_Ssd_setState
  6642                           
  6643                           ;WaterHeater.c: 182:             Eeprom_write( 8, heater[ id ].targetTemp );
  6644  05F1  301F               	movlw	31
  6645  05F2  00FF               	movwf	btemp+1
  6646  05F3  087F               	movf	btemp+1,w
  6647  05F4  1283               	bcf	3,5	;RP0=0, select bank0
  6648  05F5  1303               	bcf	3,6	;RP1=0, select bank0
  6649  05F6  00A0               	movwf	___bmul@multiplicand
  6650  05F7  0855               	movf	Heater_update@id,w
  6651  05F8  160A  158A  20FD  120A  118A  	fcall	___bmul
  6652  05FD  3ED4               	addlw	(low ((_heater| 0+11)))& (0+255)
  6653  05FE  0084               	movwf	4
  6654  05FF  1383               	bcf	3,7	;select IRP bank1
  6655  0600  0800               	movf	0,w
  6656  0601  00FF               	movwf	btemp+1
  6657  0602  087F               	movf	btemp+1,w
  6658  0603  1283               	bcf	3,5	;RP0=0, select bank0
  6659  0604  1303               	bcf	3,6	;RP1=0, select bank0
  6660  0605  00A3               	movwf	Eeprom_write@buffer
  6661  0606  3008               	movlw	8
  6662  0607  160A  158A  2356  120A  118A  	fcall	_Eeprom_write
  6663                           
  6664                           ;WaterHeater.c: 183:             heater[ id ].counter = 0;
  6665  060C  301F               	movlw	31
  6666  060D  00FF               	movwf	btemp+1
  6667  060E  087F               	movf	btemp+1,w
  6668  060F  1283               	bcf	3,5	;RP0=0, select bank0
  6669  0610  1303               	bcf	3,6	;RP1=0, select bank0
  6670  0611  00A0               	movwf	___bmul@multiplicand
  6671  0612  0855               	movf	Heater_update@id,w
  6672  0613  160A  158A  20FD  120A  118A  	fcall	___bmul
  6673  0618  3ED5               	addlw	(low ((_heater| 0+12)))& (0+255)
  6674  0619  0084               	movwf	4
  6675  061A  1383               	bcf	3,7	;select IRP bank1
  6676  061B  0180               	clrf	0
  6677  061C  0A84               	incf	4,f
  6678  061D  0180               	clrf	0
  6679                           
  6680                           ;WaterHeater.c: 184:             heater[ id ].state = OffMode;
  6681  061E  301F               	movlw	31
  6682  061F  00FF               	movwf	btemp+1
  6683  0620  087F               	movf	btemp+1,w
  6684  0621  1283               	bcf	3,5	;RP0=0, select bank0
  6685  0622  1303               	bcf	3,6	;RP1=0, select bank0
  6686  0623  00A0               	movwf	___bmul@multiplicand
  6687  0624  0855               	movf	Heater_update@id,w
  6688  0625  160A  158A  20FD  120A  118A  	fcall	___bmul
  6689  062A  3ED1               	addlw	(low ((_heater| 0+8)))& (0+255)
  6690  062B  0084               	movwf	4
  6691  062C  1383               	bcf	3,7	;select IRP bank1
  6692  062D  0180               	clrf	0
  6693                           
  6694                           ;WaterHeater.c: 185:             heater[ id ].preState = heater[ id ].state;
  6695  062E  301F               	movlw	31
  6696  062F  00FF               	movwf	btemp+1
  6697  0630  087F               	movf	btemp+1,w
  6698  0631  1283               	bcf	3,5	;RP0=0, select bank0
  6699  0632  1303               	bcf	3,6	;RP1=0, select bank0
  6700  0633  00A0               	movwf	___bmul@multiplicand
  6701  0634  0855               	movf	Heater_update@id,w
  6702  0635  160A  158A  20FD  120A  118A  	fcall	___bmul
  6703  063A  3ED1               	addlw	(low ((_heater| 0+8)))& (0+255)
  6704  063B  0084               	movwf	4
  6705  063C  1383               	bcf	3,7	;select IRP bank1
  6706  063D  0800               	movf	0,w
  6707  063E  1283               	bcf	3,5	;RP0=0, select bank0
  6708  063F  1303               	bcf	3,6	;RP1=0, select bank0
  6709  0640  00CF               	movwf	??_Heater_update
  6710  0641  301F               	movlw	31
  6711  0642  00FF               	movwf	btemp+1
  6712  0643  087F               	movf	btemp+1,w
  6713  0644  00A0               	movwf	___bmul@multiplicand
  6714  0645  0855               	movf	Heater_update@id,w
  6715  0646  160A  158A  20FD  120A  118A  	fcall	___bmul
  6716  064B  3ED2               	addlw	(low ((_heater| 0+9)))& (0+255)
  6717  064C  0084               	movwf	4
  6718  064D  1283               	bcf	3,5	;RP0=0, select bank0
  6719  064E  1303               	bcf	3,6	;RP1=0, select bank0
  6720  064F  084F               	movf	??_Heater_update,w
  6721  0650  1383               	bcf	3,7	;select IRP bank1
  6722  0651  0080               	movwf	0
  6723                           
  6724                           ;WaterHeater.c: 186:             break;
  6725  0652  2E7B               	goto	l433
  6726  0653                     l2748:
  6727  0653  301F               	movlw	31
  6728  0654  00FF               	movwf	btemp+1
  6729  0655  087F               	movf	btemp+1,w
  6730  0656  00A0               	movwf	___bmul@multiplicand
  6731  0657  0855               	movf	Heater_update@id,w
  6732  0658  160A  158A  20FD  120A  118A  	fcall	___bmul
  6733  065D  3ED1               	addlw	(low ((_heater| 0+8)))& (0+255)
  6734  065E  0084               	movwf	4
  6735  065F  1383               	bcf	3,7	;select IRP bank1
  6736  0660  0800               	movf	0,w
  6737  0661  1283               	bcf	3,5	;RP0=0, select bank0
  6738  0662  1303               	bcf	3,6	;RP1=0, select bank0
  6739  0663  00CF               	movwf	??_Heater_update
  6740  0664  01D0               	clrf	??_Heater_update+1
  6741                           
  6742                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6743                           ; Switch size 1, requested type "simple"
  6744                           ; Number of cases is 1, Range of values is 0 to 0
  6745                           ; switch strategies available:
  6746                           ; Name         Instructions Cycles
  6747                           ; simple_byte            4     3 (average)
  6748                           ; direct_byte           11     8 (fixed)
  6749                           ; jumptable            260     6 (fixed)
  6750                           ;	Chosen strategy is simple_byte
  6751  0665  0850               	movf	??_Heater_update+1,w
  6752  0666  3A00               	xorlw	0	; case 0
  6753  0667  1903               	skipnz
  6754  0668  2E6A               	goto	l3084
  6755  0669  2E7B               	goto	l433
  6756  066A                     l3084:
  6757                           
  6758                           ; Switch size 1, requested type "simple"
  6759                           ; Number of cases is 5, Range of values is 0 to 4
  6760                           ; switch strategies available:
  6761                           ; Name         Instructions Cycles
  6762                           ; simple_byte           16     9 (average)
  6763                           ; direct_byte           23     8 (fixed)
  6764                           ; jumptable            260     6 (fixed)
  6765                           ;	Chosen strategy is simple_byte
  6766  066A  084F               	movf	??_Heater_update,w
  6767  066B  3A00               	xorlw	0	; case 0
  6768  066C  1903               	skipnz
  6769  066D  2873               	goto	l2700
  6770  066E  3A01               	xorlw	1	; case 1
  6771  066F  1903               	skipnz
  6772  0670  289D               	goto	l2704
  6773  0671  3A03               	xorlw	3	; case 2
  6774  0672  1903               	skipnz
  6775  0673  29D7               	goto	l2716
  6776  0674  3A01               	xorlw	1	; case 3
  6777  0675  1903               	skipnz
  6778  0676  2B4A               	goto	l2728
  6779  0677  3A07               	xorlw	7	; case 4
  6780  0678  1903               	skipnz
  6781  0679  2D80               	goto	l2744
  6782  067A  2E7B               	goto	l433
  6783  067B                     l433:
  6784  067B  0008               	return
  6785  067C                     __end_of_Heater_update:
  6786                           
  6787                           	psect	text22
  6788  16B2                     __ptext22:	
  6789 ;; *************** function _Switch_update *****************
  6790 ;; Defined at:
  6791 ;;		line 27 in file "Switch.c"
  6792 ;; Parameters:    Size  Location     Type
  6793 ;;  paramter        2   45[BANK0 ] PTR void 
  6794 ;;		 -> RAM(512), RAM(512), NULL(0), 
  6795 ;; Auto vars:     Size  Location     Type
  6796 ;;  id              1   47[BANK0 ] enum E1226
  6797 ;; Return value:  Size  Location     Type
  6798 ;;                  1    wreg      void 
  6799 ;; Registers used:
  6800 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6801 ;; Tracked objects:
  6802 ;;		On entry : 0/0
  6803 ;;		On exit  : 0/0
  6804 ;;		Unchanged: 0/0
  6805 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6806 ;;      Params:         0       2       0       0       0
  6807 ;;      Locals:         0       1       0       0       0
  6808 ;;      Temps:          0       0       0       0       0
  6809 ;;      Totals:         0       3       0       0       0
  6810 ;;Total ram usage:        3 bytes
  6811 ;; Hardware stack levels used:    1
  6812 ;; Hardware stack levels required when called:    5
  6813 ;; This function calls:
  6814 ;;		___bmul
  6815 ;;		_getSwitchHardwareState
  6816 ;; This function is called by:
  6817 ;;		_main
  6818 ;;		_Scheduler_dispatchTasks
  6819 ;; This function uses a non-reentrant model
  6820 ;;
  6821                           
  6822                           
  6823                           ;psect for function _Switch_update
  6824  16B2                     _Switch_update:
  6825  16B2                     l2598:	
  6826                           ;incstack = 0
  6827                           ; Regs used in _Switch_update: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6828                           
  6829                           
  6830                           ;Switch.c: 27: void Switch_update( void *paramter );Switch.c: 28: {;Switch.c: 29:     SW
      +                          _ID_t id = (SW_ID_t) paramter;
  6831  16B2  1283               	bcf	3,5	;RP0=0, select bank0
  6832  16B3  1303               	bcf	3,6	;RP1=0, select bank0
  6833  16B4  084D               	movf	Switch_update@paramter,w
  6834  16B5  00FF               	movwf	btemp+1
  6835  16B6  087F               	movf	btemp+1,w
  6836  16B7  00CF               	movwf	Switch_update@id
  6837  16B8                     l2600:
  6838                           
  6839                           ;Switch.c: 30:     if( sw[ id ].lock )
  6840  16B8  3005               	movlw	5
  6841  16B9  00FF               	movwf	btemp+1
  6842  16BA  087F               	movf	btemp+1,w
  6843  16BB  00A0               	movwf	___bmul@multiplicand
  6844  16BC  084F               	movf	Switch_update@id,w
  6845  16BD  160A  158A  20FD  160A  118A  	fcall	___bmul
  6846  16C2  3E93               	addlw	(low ((_sw| (0+256)+3)))& (0+255)
  6847  16C3  0084               	movwf	4
  6848  16C4  1783               	bsf	3,7	;select IRP bank3
  6849  16C5  0800               	movf	0,w
  6850  16C6  1903               	btfsc	3,2
  6851  16C7  2EC9               	goto	u2601
  6852  16C8  2ECA               	goto	u2600
  6853  16C9                     u2601:
  6854  16C9  2EDC               	goto	l2604
  6855  16CA                     u2600:
  6856  16CA                     l2602:
  6857                           
  6858                           ;Switch.c: 31:     {;Switch.c: 32:         sw[ id ].lock--;
  6859  16CA  3005               	movlw	5
  6860  16CB  00FF               	movwf	btemp+1
  6861  16CC  087F               	movf	btemp+1,w
  6862  16CD  1283               	bcf	3,5	;RP0=0, select bank0
  6863  16CE  1303               	bcf	3,6	;RP1=0, select bank0
  6864  16CF  00A0               	movwf	___bmul@multiplicand
  6865  16D0  084F               	movf	Switch_update@id,w
  6866  16D1  160A  158A  20FD  160A  118A  	fcall	___bmul
  6867  16D6  3E93               	addlw	(low ((_sw| (0+256)+3)))& (0+255)
  6868  16D7  0084               	movwf	4
  6869  16D8  3001               	movlw	1
  6870  16D9  1783               	bsf	3,7	;select IRP bank3
  6871  16DA  0280               	subwf	0,f
  6872                           
  6873                           ;Switch.c: 33:     }else if( getSwitchHardwareState( id ) == SWITCH_STATE_PRESSED )
  6874  16DB  2F56               	goto	l200
  6875  16DC                     l2604:
  6876  16DC  1283               	bcf	3,5	;RP0=0, select bank0
  6877  16DD  1303               	bcf	3,6	;RP1=0, select bank0
  6878  16DE  084F               	movf	Switch_update@id,w
  6879  16DF  160A  118A  20D3  160A  118A  	fcall	_getSwitchHardwareState
  6880  16E4  3A01               	xorlw	1
  6881  16E5  1D03               	skipz
  6882  16E6  2EE8               	goto	u2611
  6883  16E7  2EE9               	goto	u2610
  6884  16E8                     u2611:
  6885  16E8  2F46               	goto	l2610
  6886  16E9                     u2610:
  6887  16E9                     l2606:
  6888                           
  6889                           ;Switch.c: 34:     {;Switch.c: 35:         sw[ id ].counter++;
  6890  16E9  3005               	movlw	5
  6891  16EA  00FF               	movwf	btemp+1
  6892  16EB  087F               	movf	btemp+1,w
  6893  16EC  1283               	bcf	3,5	;RP0=0, select bank0
  6894  16ED  1303               	bcf	3,6	;RP1=0, select bank0
  6895  16EE  00A0               	movwf	___bmul@multiplicand
  6896  16EF  084F               	movf	Switch_update@id,w
  6897  16F0  160A  158A  20FD  160A  118A  	fcall	___bmul
  6898  16F5  3E94               	addlw	(low ((_sw| (0+256)+4)))& (0+255)
  6899  16F6  0084               	movwf	4
  6900  16F7  3001               	movlw	1
  6901  16F8  00FF               	movwf	btemp+1
  6902  16F9  087F               	movf	btemp+1,w
  6903  16FA  1783               	bsf	3,7	;select IRP bank3
  6904  16FB  0780               	addwf	0,f
  6905                           
  6906                           ;Switch.c: 36:         if( sw[ id ].counter == ( 20 / ( ( TickType_t ) 5 ) ) / ( 10 / ( 
      +                          ( TickType_t ) 5 ) ) )
  6907  16FC  3005               	movlw	5
  6908  16FD  00FF               	movwf	btemp+1
  6909  16FE  087F               	movf	btemp+1,w
  6910  16FF  1283               	bcf	3,5	;RP0=0, select bank0
  6911  1700  1303               	bcf	3,6	;RP1=0, select bank0
  6912  1701  00A0               	movwf	___bmul@multiplicand
  6913  1702  084F               	movf	Switch_update@id,w
  6914  1703  160A  158A  20FD  160A  118A  	fcall	___bmul
  6915  1708  3E94               	addlw	(low ((_sw| (0+256)+4)))& (0+255)
  6916  1709  0084               	movwf	4
  6917  170A  3002               	movlw	2
  6918  170B  1783               	bsf	3,7	;select IRP bank3
  6919  170C  0600               	xorwf	0,w
  6920  170D  1D03               	btfss	3,2
  6921  170E  2F10               	goto	u2621
  6922  170F  2F11               	goto	u2620
  6923  1710                     u2621:
  6924  1710  2F56               	goto	l200
  6925  1711                     u2620:
  6926  1711                     l2608:
  6927                           
  6928                           ;Switch.c: 37:         {;Switch.c: 38:             sw[ id ].state = SWITCH_STATE_PRESSED
      +                          ;
  6929  1711  3005               	movlw	5
  6930  1712  00FF               	movwf	btemp+1
  6931  1713  087F               	movf	btemp+1,w
  6932  1714  1283               	bcf	3,5	;RP0=0, select bank0
  6933  1715  1303               	bcf	3,6	;RP1=0, select bank0
  6934  1716  00A0               	movwf	___bmul@multiplicand
  6935  1717  084F               	movf	Switch_update@id,w
  6936  1718  160A  158A  20FD  160A  118A  	fcall	___bmul
  6937  171D  3E92               	addlw	(low ((_sw| (0+256)+2)))& (0+255)
  6938  171E  0084               	movwf	4
  6939  171F  1783               	bsf	3,7	;select IRP bank3
  6940  1720  0180               	clrf	0
  6941  1721  0A80               	incf	0,f
  6942                           
  6943                           ;Switch.c: 39:             sw[ id ].lock = ( 500 / ( ( TickType_t ) 5 ) ) / ( 10 / ( ( T
      +                          ickType_t ) 5 ) );
  6944  1722  3005               	movlw	5
  6945  1723  00FF               	movwf	btemp+1
  6946  1724  087F               	movf	btemp+1,w
  6947  1725  1283               	bcf	3,5	;RP0=0, select bank0
  6948  1726  1303               	bcf	3,6	;RP1=0, select bank0
  6949  1727  00A0               	movwf	___bmul@multiplicand
  6950  1728  084F               	movf	Switch_update@id,w
  6951  1729  160A  158A  20FD  160A  118A  	fcall	___bmul
  6952  172E  3E93               	addlw	(low ((_sw| (0+256)+3)))& (0+255)
  6953  172F  0084               	movwf	4
  6954  1730  3032               	movlw	50
  6955  1731  00FF               	movwf	btemp+1
  6956  1732  087F               	movf	btemp+1,w
  6957  1733  1783               	bsf	3,7	;select IRP bank3
  6958  1734  0080               	movwf	0
  6959                           
  6960                           ;Switch.c: 40:             sw[ id ].counter = 0;
  6961  1735  3005               	movlw	5
  6962  1736  00FF               	movwf	btemp+1
  6963  1737  087F               	movf	btemp+1,w
  6964  1738  1283               	bcf	3,5	;RP0=0, select bank0
  6965  1739  1303               	bcf	3,6	;RP1=0, select bank0
  6966  173A  00A0               	movwf	___bmul@multiplicand
  6967  173B  084F               	movf	Switch_update@id,w
  6968  173C  160A  158A  20FD  160A  118A  	fcall	___bmul
  6969  1741  3E94               	addlw	(low ((_sw| (0+256)+4)))& (0+255)
  6970  1742  0084               	movwf	4
  6971  1743  1783               	bsf	3,7	;select IRP bank3
  6972  1744  0180               	clrf	0
  6973  1745  2F56               	goto	l200
  6974  1746                     l2610:
  6975                           
  6976                           ;Switch.c: 43:     {;Switch.c: 44:         sw[ id ].counter = 0;
  6977  1746  3005               	movlw	5
  6978  1747  00FF               	movwf	btemp+1
  6979  1748  087F               	movf	btemp+1,w
  6980  1749  1283               	bcf	3,5	;RP0=0, select bank0
  6981  174A  1303               	bcf	3,6	;RP1=0, select bank0
  6982  174B  00A0               	movwf	___bmul@multiplicand
  6983  174C  084F               	movf	Switch_update@id,w
  6984  174D  160A  158A  20FD  160A  118A  	fcall	___bmul
  6985  1752  3E94               	addlw	(low ((_sw| (0+256)+4)))& (0+255)
  6986  1753  0084               	movwf	4
  6987  1754  1783               	bsf	3,7	;select IRP bank3
  6988  1755  0180               	clrf	0
  6989  1756                     l200:
  6990  1756  0008               	return
  6991  1757                     __end_of_Switch_update:
  6992                           
  6993                           	psect	text23
  6994  1757                     __ptext23:	
  6995 ;; *************** function _Tempsnsr_update *****************
  6996 ;; Defined at:
  6997 ;;		line 42 in file "Tempsnsr.c"
  6998 ;; Parameters:    Size  Location     Type
  6999 ;;  paramter        2   45[BANK0 ] PTR void 
  7000 ;;		 -> RAM(512), RAM(512), NULL(0), 
  7001 ;; Auto vars:     Size  Location     Type
  7002 ;;  id              1   49[BANK0 ] enum E1244
  7003 ;; Return value:  Size  Location     Type
  7004 ;;                  1    wreg      void 
  7005 ;; Registers used:
  7006 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7007 ;; Tracked objects:
  7008 ;;		On entry : 0/0
  7009 ;;		On exit  : 0/0
  7010 ;;		Unchanged: 0/0
  7011 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7012 ;;      Params:         0       2       0       0       0
  7013 ;;      Locals:         0       1       0       0       0
  7014 ;;      Temps:          0       2       0       0       0
  7015 ;;      Totals:         0       5       0       0       0
  7016 ;;Total ram usage:        5 bytes
  7017 ;; Hardware stack levels used:    1
  7018 ;; Hardware stack levels required when called:    5
  7019 ;; This function calls:
  7020 ;;		___bmul
  7021 ;;		_getAvgTemp
  7022 ;;		_getTempsnsrHarwareState
  7023 ;; This function is called by:
  7024 ;;		_main
  7025 ;;		_Scheduler_dispatchTasks
  7026 ;; This function uses a non-reentrant model
  7027 ;;
  7028                           
  7029                           
  7030                           ;psect for function _Tempsnsr_update
  7031  1757                     _Tempsnsr_update:
  7032  1757                     l2764:	
  7033                           ;incstack = 0
  7034                           ; Regs used in _Tempsnsr_update: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7035                           
  7036                           
  7037                           ;Tempsnsr.c: 42: void Tempsnsr_update( void *paramter );Tempsnsr.c: 43: {;Tempsnsr.c: 44
      +                          :     TEMPSNSR_ID_t id = (TEMPSNSR_ID_t) paramter;
  7038  1757  1283               	bcf	3,5	;RP0=0, select bank0
  7039  1758  1303               	bcf	3,6	;RP1=0, select bank0
  7040  1759  084D               	movf	Tempsnsr_update@paramter,w
  7041  175A  00FF               	movwf	btemp+1
  7042  175B  087F               	movf	btemp+1,w
  7043  175C  00D1               	movwf	Tempsnsr_update@id
  7044  175D                     l2766:
  7045                           
  7046                           ;Tempsnsr.c: 45:     tempsnsr[ id ].array[ tempsnsr[ id ].index ] = getTempsnsrHarwareSt
      +                          ate( id );
  7047  175D  0851               	movf	Tempsnsr_update@id,w
  7048  175E  160A  118A  247A  160A  118A  	fcall	_getTempsnsrHarwareState
  7049  1763  1283               	bcf	3,5	;RP0=0, select bank0
  7050  1764  1303               	bcf	3,6	;RP1=0, select bank0
  7051  1765  00CF               	movwf	??_Tempsnsr_update
  7052  1766  3019               	movlw	25
  7053  1767  00FF               	movwf	btemp+1
  7054  1768  087F               	movf	btemp+1,w
  7055  1769  00A0               	movwf	___bmul@multiplicand
  7056  176A  0851               	movf	Tempsnsr_update@id,w
  7057  176B  160A  158A  20FD  160A  118A  	fcall	___bmul
  7058  1770  3EB6               	addlw	(low ((_tempsnsr| 0+22)))& (0+255)
  7059  1771  0084               	movwf	4
  7060  1772  3019               	movlw	25
  7061  1773  00FF               	movwf	btemp+1
  7062  1774  087F               	movf	btemp+1,w
  7063  1775  1283               	bcf	3,5	;RP0=0, select bank0
  7064  1776  1303               	bcf	3,6	;RP1=0, select bank0
  7065  1777  00A0               	movwf	___bmul@multiplicand
  7066  1778  0851               	movf	Tempsnsr_update@id,w
  7067  1779  160A  158A  20FD  160A  118A  	fcall	___bmul
  7068  177E  3EAC               	addlw	(low ((_tempsnsr| 0+12)))& (0+255)
  7069  177F  1383               	bcf	3,7	;select IRP bank1
  7070  1780  0700               	addwf	0,w
  7071  1781  1283               	bcf	3,5	;RP0=0, select bank0
  7072  1782  1303               	bcf	3,6	;RP1=0, select bank0
  7073  1783  00D0               	movwf	??_Tempsnsr_update+1
  7074  1784  0850               	movf	??_Tempsnsr_update+1,w
  7075  1785  0084               	movwf	4
  7076  1786  084F               	movf	??_Tempsnsr_update,w
  7077  1787  0080               	movwf	0
  7078  1788                     l2768:
  7079                           
  7080                           ;Tempsnsr.c: 46:     tempsnsr[ id ].index++;
  7081  1788  3019               	movlw	25
  7082  1789  00FF               	movwf	btemp+1
  7083  178A  087F               	movf	btemp+1,w
  7084  178B  00A0               	movwf	___bmul@multiplicand
  7085  178C  0851               	movf	Tempsnsr_update@id,w
  7086  178D  160A  158A  20FD  160A  118A  	fcall	___bmul
  7087  1792  3EB6               	addlw	(low ((_tempsnsr| 0+22)))& (0+255)
  7088  1793  0084               	movwf	4
  7089  1794  3001               	movlw	1
  7090  1795  00FF               	movwf	btemp+1
  7091  1796  087F               	movf	btemp+1,w
  7092  1797  1383               	bcf	3,7	;select IRP bank1
  7093  1798  0780               	addwf	0,f
  7094  1799                     l2770:
  7095                           
  7096                           ;Tempsnsr.c: 47:  if( tempsnsr[ id ].index == 10 )
  7097  1799  3019               	movlw	25
  7098  179A  00FF               	movwf	btemp+1
  7099  179B  087F               	movf	btemp+1,w
  7100  179C  1283               	bcf	3,5	;RP0=0, select bank0
  7101  179D  1303               	bcf	3,6	;RP1=0, select bank0
  7102  179E  00A0               	movwf	___bmul@multiplicand
  7103  179F  0851               	movf	Tempsnsr_update@id,w
  7104  17A0  160A  158A  20FD  160A  118A  	fcall	___bmul
  7105  17A5  3EB6               	addlw	(low ((_tempsnsr| 0+22)))& (0+255)
  7106  17A6  0084               	movwf	4
  7107  17A7  300A               	movlw	10
  7108  17A8  1383               	bcf	3,7	;select IRP bank1
  7109  17A9  0600               	xorwf	0,w
  7110  17AA  1D03               	btfss	3,2
  7111  17AB  2FAD               	goto	u2881
  7112  17AC  2FAE               	goto	u2880
  7113  17AD                     u2881:
  7114  17AD  2FCF               	goto	l564
  7115  17AE                     u2880:
  7116  17AE                     l2772:
  7117                           
  7118                           ;Tempsnsr.c: 48:     {;Tempsnsr.c: 49:         tempsnsr[ id ].index = 0;
  7119  17AE  3019               	movlw	25
  7120  17AF  00FF               	movwf	btemp+1
  7121  17B0  087F               	movf	btemp+1,w
  7122  17B1  1283               	bcf	3,5	;RP0=0, select bank0
  7123  17B2  1303               	bcf	3,6	;RP1=0, select bank0
  7124  17B3  00A0               	movwf	___bmul@multiplicand
  7125  17B4  0851               	movf	Tempsnsr_update@id,w
  7126  17B5  160A  158A  20FD  160A  118A  	fcall	___bmul
  7127  17BA  3EB6               	addlw	(low ((_tempsnsr| 0+22)))& (0+255)
  7128  17BB  0084               	movwf	4
  7129  17BC  1383               	bcf	3,7	;select IRP bank1
  7130  17BD  0180               	clrf	0
  7131                           
  7132                           ;Tempsnsr.c: 50:         tempsnsr[ id ].avgFlag = 1;
  7133  17BE  3019               	movlw	25
  7134  17BF  00FF               	movwf	btemp+1
  7135  17C0  087F               	movf	btemp+1,w
  7136  17C1  1283               	bcf	3,5	;RP0=0, select bank0
  7137  17C2  1303               	bcf	3,6	;RP1=0, select bank0
  7138  17C3  00A0               	movwf	___bmul@multiplicand
  7139  17C4  0851               	movf	Tempsnsr_update@id,w
  7140  17C5  160A  158A  20FD  160A  118A  	fcall	___bmul
  7141  17CA  3EB7               	addlw	(low ((_tempsnsr| 0+23)))& (0+255)
  7142  17CB  0084               	movwf	4
  7143  17CC  1383               	bcf	3,7	;select IRP bank1
  7144  17CD  0180               	clrf	0
  7145  17CE  0A80               	incf	0,f
  7146  17CF                     l564:	
  7147                           ;Tempsnsr.c: 51:     }
  7148                           
  7149                           
  7150                           ;Tempsnsr.c: 52:     if( tempsnsr[ id ].avgFlag )
  7151  17CF  3019               	movlw	25
  7152  17D0  00FF               	movwf	btemp+1
  7153  17D1  087F               	movf	btemp+1,w
  7154  17D2  1283               	bcf	3,5	;RP0=0, select bank0
  7155  17D3  1303               	bcf	3,6	;RP1=0, select bank0
  7156  17D4  00A0               	movwf	___bmul@multiplicand
  7157  17D5  0851               	movf	Tempsnsr_update@id,w
  7158  17D6  160A  158A  20FD  160A  118A  	fcall	___bmul
  7159  17DB  3EB7               	addlw	(low ((_tempsnsr| 0+23)))& (0+255)
  7160  17DC  0084               	movwf	4
  7161  17DD  1383               	bcf	3,7	;select IRP bank1
  7162  17DE  0800               	movf	0,w
  7163  17DF  1903               	btfsc	3,2
  7164  17E0  2FE2               	goto	u2891
  7165  17E1  2FE3               	goto	u2890
  7166  17E2                     u2891:
  7167  17E2  2FFF               	goto	l566
  7168  17E3                     u2890:
  7169  17E3                     l2774:
  7170                           
  7171                           ;Tempsnsr.c: 53:     {;Tempsnsr.c: 54:         tempsnsr[ id ].avgTemp = getAvgTemp( id )
      +                          ;
  7172  17E3  1283               	bcf	3,5	;RP0=0, select bank0
  7173  17E4  1303               	bcf	3,6	;RP1=0, select bank0
  7174  17E5  0851               	movf	Tempsnsr_update@id,w
  7175  17E6  160A  118A  2337  160A  118A  	fcall	_getAvgTemp
  7176  17EB  1283               	bcf	3,5	;RP0=0, select bank0
  7177  17EC  1303               	bcf	3,6	;RP1=0, select bank0
  7178  17ED  00CF               	movwf	??_Tempsnsr_update
  7179  17EE  3019               	movlw	25
  7180  17EF  00FF               	movwf	btemp+1
  7181  17F0  087F               	movf	btemp+1,w
  7182  17F1  00A0               	movwf	___bmul@multiplicand
  7183  17F2  0851               	movf	Tempsnsr_update@id,w
  7184  17F3  160A  158A  20FD  160A  118A  	fcall	___bmul
  7185  17F8  3EB8               	addlw	(low ((_tempsnsr| 0+24)))& (0+255)
  7186  17F9  0084               	movwf	4
  7187  17FA  1283               	bcf	3,5	;RP0=0, select bank0
  7188  17FB  1303               	bcf	3,6	;RP1=0, select bank0
  7189  17FC  084F               	movf	??_Tempsnsr_update,w
  7190  17FD  1383               	bcf	3,7	;select IRP bank1
  7191  17FE  0080               	movwf	0
  7192  17FF                     l566:
  7193  17FF  0008               	return
  7194  1800                     __end_of_Tempsnsr_update:
  7195                           
  7196                           	psect	text24
  7197  147A                     __ptext24:	
  7198 ;; *************** function _getTempsnsrHarwareState *****************
  7199 ;; Defined at:
  7200 ;;		line 69 in file "Tempsnsr.c"
  7201 ;; Parameters:    Size  Location     Type
  7202 ;;  id              1    wreg     enum E1244
  7203 ;; Auto vars:     Size  Location     Type
  7204 ;;  id              1   37[BANK0 ] enum E1244
  7205 ;; Return value:  Size  Location     Type
  7206 ;;                  1    wreg      enum E1248
  7207 ;; Registers used:
  7208 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7209 ;; Tracked objects:
  7210 ;;		On entry : 0/0
  7211 ;;		On exit  : 0/0
  7212 ;;		Unchanged: 0/0
  7213 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7214 ;;      Params:         0       0       0       0       0
  7215 ;;      Locals:         0       1       0       0       0
  7216 ;;      Temps:          0       4       0       0       0
  7217 ;;      Totals:         0       5       0       0       0
  7218 ;;Total ram usage:        5 bytes
  7219 ;; Hardware stack levels used:    1
  7220 ;; Hardware stack levels required when called:    4
  7221 ;; This function calls:
  7222 ;;		_Adc_getState
  7223 ;;		___bmul
  7224 ;;		___lldiv
  7225 ;;		___lmul
  7226 ;; This function is called by:
  7227 ;;		_Tempsnsr_update
  7228 ;; This function uses a non-reentrant model
  7229 ;;
  7230                           
  7231                           
  7232                           ;psect for function _getTempsnsrHarwareState
  7233  147A                     _getTempsnsrHarwareState:
  7234                           
  7235                           ;incstack = 0
  7236                           ; Regs used in _getTempsnsrHarwareState: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cs
      +                          tack]
  7237                           ;getTempsnsrHarwareState@id stored from wreg
  7238  147A  1283               	bcf	3,5	;RP0=0, select bank0
  7239  147B  1303               	bcf	3,6	;RP1=0, select bank0
  7240  147C  00C5               	movwf	getTempsnsrHarwareState@id
  7241  147D                     l2438:
  7242                           
  7243                           ;Tempsnsr.c: 69: TEMPSNSR_STATE_t getTempsnsrHarwareState( TEMPSNSR_ID_t id );Tempsnsr.c
      +                          : 70: {;Tempsnsr.c: 71:     return (TEMPSNSR_STATE_t)
  7244  147D  3019               	movlw	25
  7245  147E  00FF               	movwf	btemp+1
  7246  147F  087F               	movf	btemp+1,w
  7247  1480  00A0               	movwf	___bmul@multiplicand
  7248  1481  0845               	movf	getTempsnsrHarwareState@id,w
  7249  1482  160A  158A  20FD  160A  118A  	fcall	___bmul
  7250  1487  3EA8               	addlw	(low ((_tempsnsr| 0+8)))& (0+255)
  7251  1488  0084               	movwf	4
  7252  1489  1383               	bcf	3,7	;select IRP bank1
  7253  148A  0800               	movf	0,w
  7254  148B  1283               	bcf	3,5	;RP0=0, select bank0
  7255  148C  1303               	bcf	3,6	;RP1=0, select bank0
  7256  148D  00B3               	movwf	___lldiv@divisor
  7257  148E  0A84               	incf	4,f
  7258  148F  0800               	movf	0,w
  7259  1490  00B4               	movwf	___lldiv@divisor+1
  7260  1491  0A84               	incf	4,f
  7261  1492  0800               	movf	0,w
  7262  1493  00B5               	movwf	___lldiv@divisor+2
  7263  1494  0A84               	incf	4,f
  7264  1495  0800               	movf	0,w
  7265  1496  00B6               	movwf	___lldiv@divisor+3
  7266  1497  3019               	movlw	25
  7267  1498  00FF               	movwf	btemp+1
  7268  1499  087F               	movf	btemp+1,w
  7269  149A  00A0               	movwf	___bmul@multiplicand
  7270  149B  0845               	movf	getTempsnsrHarwareState@id,w
  7271  149C  160A  158A  20FD  160A  118A  	fcall	___bmul
  7272  14A1  3EA3               	addlw	(low ((_tempsnsr| 0+3)))& (0+255)
  7273  14A2  0084               	movwf	4
  7274  14A3  1383               	bcf	3,7	;select IRP bank1
  7275  14A4  0800               	movf	0,w
  7276  14A5  00FF               	movwf	btemp+1
  7277  14A6  087F               	movf	btemp+1,w
  7278  14A7  1283               	bcf	3,5	;RP0=0, select bank0
  7279  14A8  1303               	bcf	3,6	;RP1=0, select bank0
  7280  14A9  00A3               	movwf	Adc_getState@channel
  7281  14AA  3019               	movlw	25
  7282  14AB  00FF               	movwf	btemp+1
  7283  14AC  087F               	movf	btemp+1,w
  7284  14AD  00A0               	movwf	___bmul@multiplicand
  7285  14AE  0845               	movf	getTempsnsrHarwareState@id,w
  7286  14AF  160A  158A  20FD  160A  118A  	fcall	___bmul
  7287  14B4  3EA2               	addlw	(low ((_tempsnsr| 0+2)))& (0+255)
  7288  14B5  0084               	movwf	4
  7289  14B6  1383               	bcf	3,7	;select IRP bank1
  7290  14B7  0800               	movf	0,w
  7291  14B8  160A  158A  20E8  160A  118A  	fcall	_Adc_getState
  7292  14BD  1283               	bcf	3,5	;RP0=0, select bank0
  7293  14BE  1303               	bcf	3,6	;RP1=0, select bank0
  7294  14BF  0823               	movf	?_Adc_getState,w
  7295  14C0  00C1               	movwf	??_getTempsnsrHarwareState
  7296  14C1  0824               	movf	?_Adc_getState+1,w
  7297  14C2  00C2               	movwf	??_getTempsnsrHarwareState+1
  7298  14C3  01C3               	clrf	??_getTempsnsrHarwareState+2
  7299  14C4  01C4               	clrf	??_getTempsnsrHarwareState+3
  7300  14C5  0844               	movf	??_getTempsnsrHarwareState+3,w
  7301  14C6  00A9               	movwf	___lmul@multiplier+3
  7302  14C7  0843               	movf	??_getTempsnsrHarwareState+2,w
  7303  14C8  00A8               	movwf	___lmul@multiplier+2
  7304  14C9  0842               	movf	??_getTempsnsrHarwareState+1,w
  7305  14CA  00A7               	movwf	___lmul@multiplier+1
  7306  14CB  0841               	movf	??_getTempsnsrHarwareState,w
  7307  14CC  00A6               	movwf	___lmul@multiplier
  7308  14CD  3019               	movlw	25
  7309  14CE  00FF               	movwf	btemp+1
  7310  14CF  087F               	movf	btemp+1,w
  7311  14D0  00A0               	movwf	___bmul@multiplicand
  7312  14D1  0845               	movf	getTempsnsrHarwareState@id,w
  7313  14D2  160A  158A  20FD  160A  118A  	fcall	___bmul
  7314  14D7  3EA4               	addlw	(low ((_tempsnsr| 0+4)))& (0+255)
  7315  14D8  0084               	movwf	4
  7316  14D9  1383               	bcf	3,7	;select IRP bank1
  7317  14DA  0800               	movf	0,w
  7318  14DB  1283               	bcf	3,5	;RP0=0, select bank0
  7319  14DC  1303               	bcf	3,6	;RP1=0, select bank0
  7320  14DD  00AA               	movwf	___lmul@multiplicand
  7321  14DE  0A84               	incf	4,f
  7322  14DF  0800               	movf	0,w
  7323  14E0  00AB               	movwf	___lmul@multiplicand+1
  7324  14E1  0A84               	incf	4,f
  7325  14E2  0800               	movf	0,w
  7326  14E3  00AC               	movwf	___lmul@multiplicand+2
  7327  14E4  0A84               	incf	4,f
  7328  14E5  0800               	movf	0,w
  7329  14E6  00AD               	movwf	___lmul@multiplicand+3
  7330  14E7  160A  158A  25B9  160A  118A  	fcall	___lmul
  7331  14EC  1283               	bcf	3,5	;RP0=0, select bank0
  7332  14ED  1303               	bcf	3,6	;RP1=0, select bank0
  7333  14EE  0829               	movf	?___lmul+3,w
  7334  14EF  00BA               	movwf	___lldiv@dividend+3
  7335  14F0  0828               	movf	?___lmul+2,w
  7336  14F1  00B9               	movwf	___lldiv@dividend+2
  7337  14F2  0827               	movf	?___lmul+1,w
  7338  14F3  00B8               	movwf	___lldiv@dividend+1
  7339  14F4  0826               	movf	?___lmul,w
  7340  14F5  00B7               	movwf	___lldiv@dividend
  7341  14F6  160A  118A  21FD  160A  118A  	fcall	___lldiv
  7342  14FB  1283               	bcf	3,5	;RP0=0, select bank0
  7343  14FC  1303               	bcf	3,6	;RP1=0, select bank0
  7344  14FD  0833               	movf	?___lldiv,w
  7345  14FE                     l575:
  7346  14FE  0008               	return
  7347  14FF                     __end_of_getTempsnsrHarwareState:
  7348                           
  7349                           	psect	text25
  7350  1DB9                     __ptext25:	
  7351 ;; *************** function ___lmul *****************
  7352 ;; Defined at:
  7353 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\Umul32.c"
  7354 ;; Parameters:    Size  Location     Type
  7355 ;;  multiplier      4    6[BANK0 ] unsigned long 
  7356 ;;  multiplicand    4   10[BANK0 ] unsigned long 
  7357 ;; Auto vars:     Size  Location     Type
  7358 ;;  product         4   15[BANK0 ] unsigned long 
  7359 ;; Return value:  Size  Location     Type
  7360 ;;                  4    6[BANK0 ] unsigned long 
  7361 ;; Registers used:
  7362 ;;		wreg, status,2, status,0
  7363 ;; Tracked objects:
  7364 ;;		On entry : 0/0
  7365 ;;		On exit  : 0/0
  7366 ;;		Unchanged: 0/0
  7367 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7368 ;;      Params:         0       8       0       0       0
  7369 ;;      Locals:         0       4       0       0       0
  7370 ;;      Temps:          0       1       0       0       0
  7371 ;;      Totals:         0      13       0       0       0
  7372 ;;Total ram usage:       13 bytes
  7373 ;; Hardware stack levels used:    1
  7374 ;; Hardware stack levels required when called:    3
  7375 ;; This function calls:
  7376 ;;		Nothing
  7377 ;; This function is called by:
  7378 ;;		_getTempsnsrHarwareState
  7379 ;; This function uses a non-reentrant model
  7380 ;;
  7381                           
  7382                           
  7383                           ;psect for function ___lmul
  7384  1DB9                     ___lmul:
  7385  1DB9                     l2252:	
  7386                           ;incstack = 0
  7387                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  7388                           
  7389  1DB9  3000               	movlw	0
  7390  1DBA  1283               	bcf	3,5	;RP0=0, select bank0
  7391  1DBB  1303               	bcf	3,6	;RP1=0, select bank0
  7392  1DBC  00B2               	movwf	___lmul@product+3
  7393  1DBD  3000               	movlw	0
  7394  1DBE  00B1               	movwf	___lmul@product+2
  7395  1DBF  3000               	movlw	0
  7396  1DC0  00B0               	movwf	___lmul@product+1
  7397  1DC1  3000               	movlw	0
  7398  1DC2  00AF               	movwf	___lmul@product
  7399  1DC3                     l2254:
  7400  1DC3  1C26               	btfss	___lmul@multiplier,0
  7401  1DC4  2DC6               	goto	u1801
  7402  1DC5  2DC7               	goto	u1800
  7403  1DC6                     u1801:
  7404  1DC6  2DDE               	goto	l2258
  7405  1DC7                     u1800:
  7406  1DC7                     l2256:
  7407  1DC7  082A               	movf	___lmul@multiplicand,w
  7408  1DC8  07AF               	addwf	___lmul@product,f
  7409  1DC9  082B               	movf	___lmul@multiplicand+1,w
  7410  1DCA  1103               	clrz
  7411  1DCB  1803               	skipnc
  7412  1DCC  3E01               	addlw	1
  7413  1DCD  1903               	skipnz
  7414  1DCE  2DD0               	goto	u1811
  7415  1DCF  07B0               	addwf	___lmul@product+1,f
  7416  1DD0                     u1811:
  7417  1DD0  082C               	movf	___lmul@multiplicand+2,w
  7418  1DD1  1103               	clrz
  7419  1DD2  1803               	skipnc
  7420  1DD3  3E01               	addlw	1
  7421  1DD4  1903               	skipnz
  7422  1DD5  2DD7               	goto	u1812
  7423  1DD6  07B1               	addwf	___lmul@product+2,f
  7424  1DD7                     u1812:
  7425  1DD7  082D               	movf	___lmul@multiplicand+3,w
  7426  1DD8  1103               	clrz
  7427  1DD9  1803               	skipnc
  7428  1DDA  3E01               	addlw	1
  7429  1DDB  1903               	skipnz
  7430  1DDC  2DDE               	goto	u1813
  7431  1DDD  07B2               	addwf	___lmul@product+3,f
  7432  1DDE                     u1813:
  7433  1DDE                     l2258:
  7434  1DDE  3001               	movlw	1
  7435  1DDF  00AE               	movwf	??___lmul
  7436  1DE0                     u1825:
  7437  1DE0  1003               	clrc
  7438  1DE1  0DAA               	rlf	___lmul@multiplicand,f
  7439  1DE2  0DAB               	rlf	___lmul@multiplicand+1,f
  7440  1DE3  0DAC               	rlf	___lmul@multiplicand+2,f
  7441  1DE4  0DAD               	rlf	___lmul@multiplicand+3,f
  7442  1DE5  0BAE               	decfsz	??___lmul,f
  7443  1DE6  2DE0               	goto	u1825
  7444  1DE7                     l2260:
  7445  1DE7  3001               	movlw	1
  7446  1DE8                     u1835:
  7447  1DE8  1003               	clrc
  7448  1DE9  0CA9               	rrf	___lmul@multiplier+3,f
  7449  1DEA  0CA8               	rrf	___lmul@multiplier+2,f
  7450  1DEB  0CA7               	rrf	___lmul@multiplier+1,f
  7451  1DEC  0CA6               	rrf	___lmul@multiplier,f
  7452  1DED  3EFF               	addlw	-1
  7453  1DEE  1D03               	skipz
  7454  1DEF  2DE8               	goto	u1835
  7455  1DF0  0829               	movf	___lmul@multiplier+3,w
  7456  1DF1  0428               	iorwf	___lmul@multiplier+2,w
  7457  1DF2  0427               	iorwf	___lmul@multiplier+1,w
  7458  1DF3  0426               	iorwf	___lmul@multiplier,w
  7459  1DF4  1D03               	skipz
  7460  1DF5  2DF7               	goto	u1841
  7461  1DF6  2DF8               	goto	u1840
  7462  1DF7                     u1841:
  7463  1DF7  2DC3               	goto	l2254
  7464  1DF8                     u1840:
  7465  1DF8                     l2262:
  7466  1DF8  0832               	movf	___lmul@product+3,w
  7467  1DF9  00A9               	movwf	?___lmul+3
  7468  1DFA  0831               	movf	___lmul@product+2,w
  7469  1DFB  00A8               	movwf	?___lmul+2
  7470  1DFC  0830               	movf	___lmul@product+1,w
  7471  1DFD  00A7               	movwf	?___lmul+1
  7472  1DFE  082F               	movf	___lmul@product,w
  7473  1DFF  00A6               	movwf	?___lmul
  7474  1E00                     l680:
  7475  1E00  0008               	return
  7476  1E01                     __end_of___lmul:
  7477                           
  7478                           	psect	text26
  7479  18E8                     __ptext26:	
  7480 ;; *************** function _Adc_getState *****************
  7481 ;; Defined at:
  7482 ;;		line 9 in file "Adc.c"
  7483 ;; Parameters:    Size  Location     Type
  7484 ;;  id              1    wreg     enum E1172
  7485 ;;  channel         1    3[BANK0 ] enum E1175
  7486 ;; Auto vars:     Size  Location     Type
  7487 ;;  id              1    0[COMMON] enum E1172
  7488 ;; Return value:  Size  Location     Type
  7489 ;;                  2    3[BANK0 ] unsigned int 
  7490 ;; Registers used:
  7491 ;;		wreg, status,2
  7492 ;; Tracked objects:
  7493 ;;		On entry : 0/0
  7494 ;;		On exit  : 0/0
  7495 ;;		Unchanged: 0/0
  7496 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7497 ;;      Params:         0       3       0       0       0
  7498 ;;      Locals:         0       0       0       0       0
  7499 ;;      Temps:          0       0       0       0       0
  7500 ;;      Totals:         0       3       0       0       0
  7501 ;;Total ram usage:        3 bytes
  7502 ;; Hardware stack levels used:    1
  7503 ;; Hardware stack levels required when called:    3
  7504 ;; This function calls:
  7505 ;;		Nothing
  7506 ;; This function is called by:
  7507 ;;		_getTempsnsrHarwareState
  7508 ;; This function uses a non-reentrant model
  7509 ;;
  7510                           
  7511                           
  7512                           ;psect for function _Adc_getState
  7513  18E8                     _Adc_getState:
  7514  18E8                     l2226:	
  7515                           ;incstack = 0
  7516                           ; Regs used in _Adc_getState: [wreg+status,2]
  7517                           
  7518                           
  7519                           ;Adc.c: 9: uint16_t Adc_getState( ADC_ID_t id, ADC_CHANNEL_t channel );Adc.c: 10: {;Adc.
      +                          c: 11:     ADCON0 = ADCON0 | ( 2 << 3 );
  7520  18E8  1283               	bcf	3,5	;RP0=0, select bank0
  7521  18E9  1303               	bcf	3,6	;RP1=0, select bank0
  7522  18EA  081F               	movf	31,w	;volatile
  7523  18EB  3810               	iorlw	16
  7524  18EC  009F               	movwf	31	;volatile
  7525                           
  7526                           ;Adc.c: 12:     ADCON0 = ADCON0 | 0x04;
  7527  18ED  081F               	movf	31,w	;volatile
  7528  18EE  3804               	iorlw	4
  7529  18EF  009F               	movwf	31	;volatile
  7530  18F0                     l318:	
  7531                           ;Adc.c: 13:     while( ADCON0 & 0x04 );
  7532                           
  7533  18F0  191F               	btfsc	31,2	;volatile
  7534  18F1  28F3               	goto	u1781
  7535  18F2  28F4               	goto	u1780
  7536  18F3                     u1781:
  7537  18F3  28F0               	goto	l318
  7538  18F4                     u1780:
  7539  18F4                     l2228:
  7540                           
  7541                           ;Adc.c: 14:     return ( ( ADRESH << 8 ) + ADRESL );
  7542  18F4  081E               	movf	30,w	;volatile
  7543  18F5  00A4               	movwf	?_Adc_getState+1
  7544  18F6  1683               	bsf	3,5	;RP0=1, select bank1
  7545  18F7  1303               	bcf	3,6	;RP1=0, select bank1
  7546  18F8  081E               	movf	30,w	;volatile
  7547  18F9  1283               	bcf	3,5	;RP0=0, select bank0
  7548  18FA  1303               	bcf	3,6	;RP1=0, select bank0
  7549  18FB  00A3               	movwf	?_Adc_getState
  7550  18FC                     l321:
  7551  18FC  0008               	return
  7552  18FD                     __end_of_Adc_getState:
  7553                           
  7554                           	psect	text27
  7555  1337                     __ptext27:	
  7556 ;; *************** function _getAvgTemp *****************
  7557 ;; Defined at:
  7558 ;;		line 75 in file "Tempsnsr.c"
  7559 ;; Parameters:    Size  Location     Type
  7560 ;;  id              1    wreg     enum E1244
  7561 ;; Auto vars:     Size  Location     Type
  7562 ;;  id              1   38[BANK0 ] enum E1244
  7563 ;;  temp            4   39[BANK0 ] unsigned long 
  7564 ;;  index           2   43[BANK0 ] unsigned int 
  7565 ;; Return value:  Size  Location     Type
  7566 ;;                  1    wreg      enum E1248
  7567 ;; Registers used:
  7568 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7569 ;; Tracked objects:
  7570 ;;		On entry : 0/0
  7571 ;;		On exit  : 0/0
  7572 ;;		Unchanged: 0/0
  7573 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7574 ;;      Params:         0       0       0       0       0
  7575 ;;      Locals:         0       7       0       0       0
  7576 ;;      Temps:          0       5       0       0       0
  7577 ;;      Totals:         0      12       0       0       0
  7578 ;;Total ram usage:       12 bytes
  7579 ;; Hardware stack levels used:    1
  7580 ;; Hardware stack levels required when called:    4
  7581 ;; This function calls:
  7582 ;;		___bmul
  7583 ;;		___lldiv
  7584 ;; This function is called by:
  7585 ;;		_Tempsnsr_update
  7586 ;; This function uses a non-reentrant model
  7587 ;;
  7588                           
  7589                           
  7590                           ;psect for function _getAvgTemp
  7591  1337                     _getAvgTemp:
  7592                           
  7593                           ;incstack = 0
  7594                           ; Regs used in _getAvgTemp: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7595                           ;getAvgTemp@id stored from wreg
  7596  1337  1283               	bcf	3,5	;RP0=0, select bank0
  7597  1338  1303               	bcf	3,6	;RP1=0, select bank0
  7598  1339  00C6               	movwf	getAvgTemp@id
  7599  133A                     l2442:
  7600  133A                     l2444:
  7601                           
  7602                           ;Tempsnsr.c: 78:     uint32_t temp = 0;
  7603  133A  3000               	movlw	0
  7604  133B  00CA               	movwf	getAvgTemp@temp+3
  7605  133C  3000               	movlw	0
  7606  133D  00C9               	movwf	getAvgTemp@temp+2
  7607  133E  3000               	movlw	0
  7608  133F  00C8               	movwf	getAvgTemp@temp+1
  7609  1340  3000               	movlw	0
  7610  1341  00C7               	movwf	getAvgTemp@temp
  7611  1342                     l2446:
  7612                           
  7613                           ;Tempsnsr.c: 79:     for( index = 0; index < 10; index++ )
  7614  1342  01CB               	clrf	getAvgTemp@index
  7615  1343  01CC               	clrf	getAvgTemp@index+1
  7616  1344                     l2450:
  7617                           
  7618                           ;Tempsnsr.c: 80:     {;Tempsnsr.c: 81:      temp += tempsnsr[ id ].array[ index ];
  7619  1344  3019               	movlw	25
  7620  1345  00FF               	movwf	btemp+1
  7621  1346  087F               	movf	btemp+1,w
  7622  1347  00A0               	movwf	___bmul@multiplicand
  7623  1348  0846               	movf	getAvgTemp@id,w
  7624  1349  160A  158A  20FD  160A  118A  	fcall	___bmul
  7625  134E  3EAC               	addlw	(low ((_tempsnsr| 0+12)))& (0+255)
  7626  134F  1283               	bcf	3,5	;RP0=0, select bank0
  7627  1350  1303               	bcf	3,6	;RP1=0, select bank0
  7628  1351  074B               	addwf	getAvgTemp@index,w
  7629  1352  00C1               	movwf	??_getAvgTemp
  7630  1353  0841               	movf	??_getAvgTemp,w
  7631  1354  0084               	movwf	4
  7632  1355  1383               	bcf	3,7	;select IRP bank1
  7633  1356  0800               	movf	0,w
  7634  1357  00C2               	movwf	??_getAvgTemp+1
  7635  1358  01C3               	clrf	??_getAvgTemp+2
  7636  1359  01C4               	clrf	??_getAvgTemp+3
  7637  135A  01C5               	clrf	??_getAvgTemp+4
  7638  135B  0842               	movf	??_getAvgTemp+1,w
  7639  135C  07C7               	addwf	getAvgTemp@temp,f
  7640  135D  0843               	movf	??_getAvgTemp+2,w
  7641  135E  1103               	clrz
  7642  135F  1803               	skipnc
  7643  1360  3E01               	addlw	1
  7644  1361  1903               	skipnz
  7645  1362  2B64               	goto	u2171
  7646  1363  07C8               	addwf	getAvgTemp@temp+1,f
  7647  1364                     u2171:
  7648  1364  0844               	movf	??_getAvgTemp+3,w
  7649  1365  1103               	clrz
  7650  1366  1803               	skipnc
  7651  1367  3E01               	addlw	1
  7652  1368  1903               	skipnz
  7653  1369  2B6B               	goto	u2172
  7654  136A  07C9               	addwf	getAvgTemp@temp+2,f
  7655  136B                     u2172:
  7656  136B  0845               	movf	??_getAvgTemp+4,w
  7657  136C  1103               	clrz
  7658  136D  1803               	skipnc
  7659  136E  3E01               	addlw	1
  7660  136F  1903               	skipnz
  7661  1370  2B72               	goto	u2173
  7662  1371  07CA               	addwf	getAvgTemp@temp+3,f
  7663  1372                     u2173:
  7664  1372                     l2452:
  7665                           
  7666                           ;Tempsnsr.c: 82:     }
  7667  1372  3001               	movlw	1
  7668  1373  07CB               	addwf	getAvgTemp@index,f
  7669  1374  1803               	skipnc
  7670  1375  0ACC               	incf	getAvgTemp@index+1,f
  7671  1376  3000               	movlw	0
  7672  1377  07CC               	addwf	getAvgTemp@index+1,f
  7673  1378                     l2454:
  7674  1378  3000               	movlw	0
  7675  1379  024C               	subwf	getAvgTemp@index+1,w
  7676  137A  300A               	movlw	10
  7677  137B  1903               	skipnz
  7678  137C  024B               	subwf	getAvgTemp@index,w
  7679  137D  1C03               	skipc
  7680  137E  2B80               	goto	u2181
  7681  137F  2B81               	goto	u2180
  7682  1380                     u2181:
  7683  1380  2B44               	goto	l2450
  7684  1381                     u2180:
  7685  1381                     l2456:
  7686                           
  7687                           ;Tempsnsr.c: 83:     temp /= 10;
  7688  1381  3000               	movlw	0
  7689  1382  00B6               	movwf	___lldiv@divisor+3
  7690  1383  3000               	movlw	0
  7691  1384  00B5               	movwf	___lldiv@divisor+2
  7692  1385  3000               	movlw	0
  7693  1386  00B4               	movwf	___lldiv@divisor+1
  7694  1387  300A               	movlw	10
  7695  1388  00B3               	movwf	___lldiv@divisor
  7696  1389  084A               	movf	getAvgTemp@temp+3,w
  7697  138A  00BA               	movwf	___lldiv@dividend+3
  7698  138B  0849               	movf	getAvgTemp@temp+2,w
  7699  138C  00B9               	movwf	___lldiv@dividend+2
  7700  138D  0848               	movf	getAvgTemp@temp+1,w
  7701  138E  00B8               	movwf	___lldiv@dividend+1
  7702  138F  0847               	movf	getAvgTemp@temp,w
  7703  1390  00B7               	movwf	___lldiv@dividend
  7704  1391  160A  118A  21FD  160A  118A  	fcall	___lldiv
  7705  1396  1283               	bcf	3,5	;RP0=0, select bank0
  7706  1397  1303               	bcf	3,6	;RP1=0, select bank0
  7707  1398  0836               	movf	?___lldiv+3,w
  7708  1399  00CA               	movwf	getAvgTemp@temp+3
  7709  139A  0835               	movf	?___lldiv+2,w
  7710  139B  00C9               	movwf	getAvgTemp@temp+2
  7711  139C  0834               	movf	?___lldiv+1,w
  7712  139D  00C8               	movwf	getAvgTemp@temp+1
  7713  139E  0833               	movf	?___lldiv,w
  7714  139F  00C7               	movwf	getAvgTemp@temp
  7715  13A0                     l2458:
  7716                           
  7717                           ;Tempsnsr.c: 84:     return temp;
  7718  13A0  0847               	movf	getAvgTemp@temp,w
  7719  13A1                     l580:
  7720  13A1  0008               	return
  7721  13A2                     __end_of_getAvgTemp:
  7722                           
  7723                           	psect	text28
  7724  0A94                     __ptext28:	
  7725 ;; *************** function _setTempctrlHardwareState *****************
  7726 ;; Defined at:
  7727 ;;		line 44 in file "Tempctrl.c"
  7728 ;; Parameters:    Size  Location     Type
  7729 ;;  id              1    wreg     enum E1226
  7730 ;;  state           1   14[BANK0 ] enum E1230
  7731 ;; Auto vars:     Size  Location     Type
  7732 ;;  id              1   15[BANK0 ] enum E1226
  7733 ;; Return value:  Size  Location     Type
  7734 ;;                  1    wreg      void 
  7735 ;; Registers used:
  7736 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7737 ;; Tracked objects:
  7738 ;;		On entry : 0/0
  7739 ;;		On exit  : 0/0
  7740 ;;		Unchanged: 0/0
  7741 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7742 ;;      Params:         0       1       0       0       0
  7743 ;;      Locals:         0       1       0       0       0
  7744 ;;      Temps:          0       0       0       0       0
  7745 ;;      Totals:         0       2       0       0       0
  7746 ;;Total ram usage:        2 bytes
  7747 ;; Hardware stack levels used:    1
  7748 ;; Hardware stack levels required when called:    4
  7749 ;; This function calls:
  7750 ;;		_Gpio_setPinState
  7751 ;;		___bmul
  7752 ;; This function is called by:
  7753 ;;		_Tempctrl_update
  7754 ;; This function uses a non-reentrant model
  7755 ;;
  7756                           
  7757                           
  7758                           ;psect for function _setTempctrlHardwareState
  7759  0A94                     _setTempctrlHardwareState:
  7760                           
  7761                           ;incstack = 0
  7762                           ; Regs used in _setTempctrlHardwareState: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+c
      +                          stack]
  7763                           ;setTempctrlHardwareState@id stored from wreg
  7764  0A94  1283               	bcf	3,5	;RP0=0, select bank0
  7765  0A95  1303               	bcf	3,6	;RP1=0, select bank0
  7766  0A96  00AF               	movwf	setTempctrlHardwareState@id
  7767  0A97                     l2426:
  7768                           
  7769                           ;Tempctrl.c: 44: void setTempctrlHardwareState( TEMPCTRL_ID_t id, TEMPCTRL_STATE_t state
      +                           );Tempctrl.c: 45: {;Tempctrl.c: 46:     if( state == TEMPCTRL_STATE_OFF )
  7770  0A97  082E               	movf	setTempctrlHardwareState@state,w
  7771  0A98  1D03               	btfss	3,2
  7772  0A99  2A9B               	goto	u2141
  7773  0A9A  2A9C               	goto	u2140
  7774  0A9B                     u2141:
  7775  0A9B  2AED               	goto	l2430
  7776  0A9C                     u2140:
  7777  0A9C                     l2428:
  7778                           
  7779                           ;Tempctrl.c: 47:     {;Tempctrl.c: 48:         Gpio_setPinState( tempctrl[ id ].gpioIdH,
      +                           tempctrl[ id ].gpioPinH, GPIO_STATE_LOW );
  7780  0A9C  3005               	movlw	5
  7781  0A9D  00FF               	movwf	btemp+1
  7782  0A9E  087F               	movf	btemp+1,w
  7783  0A9F  00A0               	movwf	___bmul@multiplicand
  7784  0AA0  082F               	movf	setTempctrlHardwareState@id,w
  7785  0AA1  160A  158A  20FD  120A  158A  	fcall	___bmul
  7786  0AA6  3E67               	addlw	(low ((_tempctrl| 0+1)))& (0+255)
  7787  0AA7  0084               	movwf	4
  7788  0AA8  1383               	bcf	3,7	;select IRP bank0
  7789  0AA9  0800               	movf	0,w
  7790  0AAA  00FF               	movwf	btemp+1
  7791  0AAB  087F               	movf	btemp+1,w
  7792  0AAC  1283               	bcf	3,5	;RP0=0, select bank0
  7793  0AAD  1303               	bcf	3,6	;RP1=0, select bank0
  7794  0AAE  00A3               	movwf	Gpio_setPinState@pin
  7795  0AAF  01A4               	clrf	Gpio_setPinState@state
  7796  0AB0  3005               	movlw	5
  7797  0AB1  00FF               	movwf	btemp+1
  7798  0AB2  087F               	movf	btemp+1,w
  7799  0AB3  00A0               	movwf	___bmul@multiplicand
  7800  0AB4  082F               	movf	setTempctrlHardwareState@id,w
  7801  0AB5  160A  158A  20FD  120A  158A  	fcall	___bmul
  7802  0ABA  3E66               	addlw	(low (_tempctrl| 0))& (0+255)
  7803  0ABB  0084               	movwf	4
  7804  0ABC  1383               	bcf	3,7	;select IRP bank0
  7805  0ABD  0800               	movf	0,w
  7806  0ABE  160A  158A  24AB  120A  158A  	fcall	_Gpio_setPinState
  7807                           
  7808                           ;Tempctrl.c: 49:         Gpio_setPinState( tempctrl[ id ].gpioIdC, tempctrl[ id ].gpioPi
      +                          nC, GPIO_STATE_LOW );
  7809  0AC3  3005               	movlw	5
  7810  0AC4  00FF               	movwf	btemp+1
  7811  0AC5  087F               	movf	btemp+1,w
  7812  0AC6  1283               	bcf	3,5	;RP0=0, select bank0
  7813  0AC7  1303               	bcf	3,6	;RP1=0, select bank0
  7814  0AC8  00A0               	movwf	___bmul@multiplicand
  7815  0AC9  082F               	movf	setTempctrlHardwareState@id,w
  7816  0ACA  160A  158A  20FD  120A  158A  	fcall	___bmul
  7817  0ACF  3E69               	addlw	(low ((_tempctrl| 0+3)))& (0+255)
  7818  0AD0  0084               	movwf	4
  7819  0AD1  1383               	bcf	3,7	;select IRP bank0
  7820  0AD2  0800               	movf	0,w
  7821  0AD3  00FF               	movwf	btemp+1
  7822  0AD4  087F               	movf	btemp+1,w
  7823  0AD5  1283               	bcf	3,5	;RP0=0, select bank0
  7824  0AD6  1303               	bcf	3,6	;RP1=0, select bank0
  7825  0AD7  00A3               	movwf	Gpio_setPinState@pin
  7826  0AD8  01A4               	clrf	Gpio_setPinState@state
  7827  0AD9  3005               	movlw	5
  7828  0ADA  00FF               	movwf	btemp+1
  7829  0ADB  087F               	movf	btemp+1,w
  7830  0ADC  00A0               	movwf	___bmul@multiplicand
  7831  0ADD  082F               	movf	setTempctrlHardwareState@id,w
  7832  0ADE  160A  158A  20FD  120A  158A  	fcall	___bmul
  7833  0AE3  3E68               	addlw	(low ((_tempctrl| 0+2)))& (0+255)
  7834  0AE4  0084               	movwf	4
  7835  0AE5  1383               	bcf	3,7	;select IRP bank0
  7836  0AE6  0800               	movf	0,w
  7837  0AE7  160A  158A  24AB  120A  158A  	fcall	_Gpio_setPinState
  7838                           
  7839                           ;Tempctrl.c: 50:     }else if( state == TEMPCTRL_STATE_HEAT )
  7840  0AEC  2B9C               	goto	l542
  7841  0AED                     l2430:
  7842  0AED  032E               	decf	setTempctrlHardwareState@state,w
  7843  0AEE  1D03               	btfss	3,2
  7844  0AEF  2AF1               	goto	u2151
  7845  0AF0  2AF2               	goto	u2150
  7846  0AF1                     u2151:
  7847  0AF1  2B44               	goto	l2434
  7848  0AF2                     u2150:
  7849  0AF2                     l2432:
  7850                           
  7851                           ;Tempctrl.c: 51:     {;Tempctrl.c: 52:         Gpio_setPinState( tempctrl[ id ].gpioIdH,
      +                           tempctrl[ id ].gpioPinH, GPIO_STATE_HIGH );
  7852  0AF2  3005               	movlw	5
  7853  0AF3  00FF               	movwf	btemp+1
  7854  0AF4  087F               	movf	btemp+1,w
  7855  0AF5  00A0               	movwf	___bmul@multiplicand
  7856  0AF6  082F               	movf	setTempctrlHardwareState@id,w
  7857  0AF7  160A  158A  20FD  120A  158A  	fcall	___bmul
  7858  0AFC  3E67               	addlw	(low ((_tempctrl| 0+1)))& (0+255)
  7859  0AFD  0084               	movwf	4
  7860  0AFE  1383               	bcf	3,7	;select IRP bank0
  7861  0AFF  0800               	movf	0,w
  7862  0B00  00FF               	movwf	btemp+1
  7863  0B01  087F               	movf	btemp+1,w
  7864  0B02  1283               	bcf	3,5	;RP0=0, select bank0
  7865  0B03  1303               	bcf	3,6	;RP1=0, select bank0
  7866  0B04  00A3               	movwf	Gpio_setPinState@pin
  7867  0B05  01A4               	clrf	Gpio_setPinState@state
  7868  0B06  0AA4               	incf	Gpio_setPinState@state,f
  7869  0B07  3005               	movlw	5
  7870  0B08  00FF               	movwf	btemp+1
  7871  0B09  087F               	movf	btemp+1,w
  7872  0B0A  00A0               	movwf	___bmul@multiplicand
  7873  0B0B  082F               	movf	setTempctrlHardwareState@id,w
  7874  0B0C  160A  158A  20FD  120A  158A  	fcall	___bmul
  7875  0B11  3E66               	addlw	(low (_tempctrl| 0))& (0+255)
  7876  0B12  0084               	movwf	4
  7877  0B13  1383               	bcf	3,7	;select IRP bank0
  7878  0B14  0800               	movf	0,w
  7879  0B15  160A  158A  24AB  120A  158A  	fcall	_Gpio_setPinState
  7880                           
  7881                           ;Tempctrl.c: 53:         Gpio_setPinState( tempctrl[ id ].gpioIdC, tempctrl[ id ].gpioPi
      +                          nC, GPIO_STATE_LOW );
  7882  0B1A  3005               	movlw	5
  7883  0B1B  00FF               	movwf	btemp+1
  7884  0B1C  087F               	movf	btemp+1,w
  7885  0B1D  1283               	bcf	3,5	;RP0=0, select bank0
  7886  0B1E  1303               	bcf	3,6	;RP1=0, select bank0
  7887  0B1F  00A0               	movwf	___bmul@multiplicand
  7888  0B20  082F               	movf	setTempctrlHardwareState@id,w
  7889  0B21  160A  158A  20FD  120A  158A  	fcall	___bmul
  7890  0B26  3E69               	addlw	(low ((_tempctrl| 0+3)))& (0+255)
  7891  0B27  0084               	movwf	4
  7892  0B28  1383               	bcf	3,7	;select IRP bank0
  7893  0B29  0800               	movf	0,w
  7894  0B2A  00FF               	movwf	btemp+1
  7895  0B2B  087F               	movf	btemp+1,w
  7896  0B2C  1283               	bcf	3,5	;RP0=0, select bank0
  7897  0B2D  1303               	bcf	3,6	;RP1=0, select bank0
  7898  0B2E  00A3               	movwf	Gpio_setPinState@pin
  7899  0B2F  01A4               	clrf	Gpio_setPinState@state
  7900  0B30  3005               	movlw	5
  7901  0B31  00FF               	movwf	btemp+1
  7902  0B32  087F               	movf	btemp+1,w
  7903  0B33  00A0               	movwf	___bmul@multiplicand
  7904  0B34  082F               	movf	setTempctrlHardwareState@id,w
  7905  0B35  160A  158A  20FD  120A  158A  	fcall	___bmul
  7906  0B3A  3E68               	addlw	(low ((_tempctrl| 0+2)))& (0+255)
  7907  0B3B  0084               	movwf	4
  7908  0B3C  1383               	bcf	3,7	;select IRP bank0
  7909  0B3D  0800               	movf	0,w
  7910  0B3E  160A  158A  24AB  120A  158A  	fcall	_Gpio_setPinState
  7911                           
  7912                           ;Tempctrl.c: 54:     }else if( state == TEMPCTRL_STATE_COOL )
  7913  0B43  2B9C               	goto	l542
  7914  0B44                     l2434:
  7915  0B44  3002               	movlw	2
  7916  0B45  062E               	xorwf	setTempctrlHardwareState@state,w
  7917  0B46  1D03               	btfss	3,2
  7918  0B47  2B49               	goto	u2161
  7919  0B48  2B4A               	goto	u2160
  7920  0B49                     u2161:
  7921  0B49  2B9C               	goto	l539
  7922  0B4A                     u2160:
  7923  0B4A                     l2436:
  7924                           
  7925                           ;Tempctrl.c: 55:     {;Tempctrl.c: 56:         Gpio_setPinState( tempctrl[ id ].gpioIdH,
      +                           tempctrl[ id ].gpioPinH, GPIO_STATE_LOW );
  7926  0B4A  3005               	movlw	5
  7927  0B4B  00FF               	movwf	btemp+1
  7928  0B4C  087F               	movf	btemp+1,w
  7929  0B4D  00A0               	movwf	___bmul@multiplicand
  7930  0B4E  082F               	movf	setTempctrlHardwareState@id,w
  7931  0B4F  160A  158A  20FD  120A  158A  	fcall	___bmul
  7932  0B54  3E67               	addlw	(low ((_tempctrl| 0+1)))& (0+255)
  7933  0B55  0084               	movwf	4
  7934  0B56  1383               	bcf	3,7	;select IRP bank0
  7935  0B57  0800               	movf	0,w
  7936  0B58  00FF               	movwf	btemp+1
  7937  0B59  087F               	movf	btemp+1,w
  7938  0B5A  1283               	bcf	3,5	;RP0=0, select bank0
  7939  0B5B  1303               	bcf	3,6	;RP1=0, select bank0
  7940  0B5C  00A3               	movwf	Gpio_setPinState@pin
  7941  0B5D  01A4               	clrf	Gpio_setPinState@state
  7942  0B5E  3005               	movlw	5
  7943  0B5F  00FF               	movwf	btemp+1
  7944  0B60  087F               	movf	btemp+1,w
  7945  0B61  00A0               	movwf	___bmul@multiplicand
  7946  0B62  082F               	movf	setTempctrlHardwareState@id,w
  7947  0B63  160A  158A  20FD  120A  158A  	fcall	___bmul
  7948  0B68  3E66               	addlw	(low (_tempctrl| 0))& (0+255)
  7949  0B69  0084               	movwf	4
  7950  0B6A  1383               	bcf	3,7	;select IRP bank0
  7951  0B6B  0800               	movf	0,w
  7952  0B6C  160A  158A  24AB  120A  158A  	fcall	_Gpio_setPinState
  7953                           
  7954                           ;Tempctrl.c: 57:         Gpio_setPinState( tempctrl[ id ].gpioIdC, tempctrl[ id ].gpioPi
      +                          nC, GPIO_STATE_HIGH );
  7955  0B71  3005               	movlw	5
  7956  0B72  00FF               	movwf	btemp+1
  7957  0B73  087F               	movf	btemp+1,w
  7958  0B74  1283               	bcf	3,5	;RP0=0, select bank0
  7959  0B75  1303               	bcf	3,6	;RP1=0, select bank0
  7960  0B76  00A0               	movwf	___bmul@multiplicand
  7961  0B77  082F               	movf	setTempctrlHardwareState@id,w
  7962  0B78  160A  158A  20FD  120A  158A  	fcall	___bmul
  7963  0B7D  3E69               	addlw	(low ((_tempctrl| 0+3)))& (0+255)
  7964  0B7E  0084               	movwf	4
  7965  0B7F  1383               	bcf	3,7	;select IRP bank0
  7966  0B80  0800               	movf	0,w
  7967  0B81  00FF               	movwf	btemp+1
  7968  0B82  087F               	movf	btemp+1,w
  7969  0B83  1283               	bcf	3,5	;RP0=0, select bank0
  7970  0B84  1303               	bcf	3,6	;RP1=0, select bank0
  7971  0B85  00A3               	movwf	Gpio_setPinState@pin
  7972  0B86  01A4               	clrf	Gpio_setPinState@state
  7973  0B87  0AA4               	incf	Gpio_setPinState@state,f
  7974  0B88  3005               	movlw	5
  7975  0B89  00FF               	movwf	btemp+1
  7976  0B8A  087F               	movf	btemp+1,w
  7977  0B8B  00A0               	movwf	___bmul@multiplicand
  7978  0B8C  082F               	movf	setTempctrlHardwareState@id,w
  7979  0B8D  160A  158A  20FD  120A  158A  	fcall	___bmul
  7980  0B92  3E68               	addlw	(low ((_tempctrl| 0+2)))& (0+255)
  7981  0B93  0084               	movwf	4
  7982  0B94  1383               	bcf	3,7	;select IRP bank0
  7983  0B95  0800               	movf	0,w
  7984  0B96  160A  158A  24AB  120A  158A  	fcall	_Gpio_setPinState
  7985                           
  7986                           ;Tempctrl.c: 58:     }else
  7987  0B9B  2B9C               	goto	l542
  7988  0B9C                     l539:
  7989  0B9C                     l542:
  7990  0B9C  0008               	return
  7991  0B9D                     __end_of_setTempctrlHardwareState:
  7992                           
  7993                           	psect	text29
  7994  10D3                     __ptext29:	
  7995 ;; *************** function _getSwitchHardwareState *****************
  7996 ;; Defined at:
  7997 ;;		line 60 in file "Switch.c"
  7998 ;; Parameters:    Size  Location     Type
  7999 ;;  id              1    wreg     enum E1226
  8000 ;; Auto vars:     Size  Location     Type
  8001 ;;  id              1   10[BANK0 ] enum E1226
  8002 ;; Return value:  Size  Location     Type
  8003 ;;                  1    wreg      enum E1232
  8004 ;; Registers used:
  8005 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8006 ;; Tracked objects:
  8007 ;;		On entry : 0/0
  8008 ;;		On exit  : 0/0
  8009 ;;		Unchanged: 0/0
  8010 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8011 ;;      Params:         0       0       0       0       0
  8012 ;;      Locals:         0       1       0       0       0
  8013 ;;      Temps:          0       0       0       0       0
  8014 ;;      Totals:         0       1       0       0       0
  8015 ;;Total ram usage:        1 bytes
  8016 ;; Hardware stack levels used:    1
  8017 ;; Hardware stack levels required when called:    4
  8018 ;; This function calls:
  8019 ;;		_Gpio_getPinState
  8020 ;;		___bmul
  8021 ;; This function is called by:
  8022 ;;		_Switch_update
  8023 ;; This function uses a non-reentrant model
  8024 ;;
  8025                           
  8026                           
  8027                           ;psect for function _getSwitchHardwareState
  8028  10D3                     _getSwitchHardwareState:
  8029                           
  8030                           ;incstack = 0
  8031                           ; Regs used in _getSwitchHardwareState: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cst
      +                          ack]
  8032                           ;getSwitchHardwareState@id stored from wreg
  8033  10D3  1283               	bcf	3,5	;RP0=0, select bank0
  8034  10D4  1303               	bcf	3,6	;RP1=0, select bank0
  8035  10D5  00AA               	movwf	getSwitchHardwareState@id
  8036  10D6                     l2340:
  8037                           
  8038                           ;Switch.c: 60: SW_STATE_t getSwitchHardwareState( SW_ID_t id );Switch.c: 61: {;Switch.c:
      +                           62:     if( Gpio_getPinState( sw[ id ].gpioId, sw[ id ].gpioPin ) == GPIO_STATE_HIGH )
  8039  10D6  3005               	movlw	5
  8040  10D7  00FF               	movwf	btemp+1
  8041  10D8  087F               	movf	btemp+1,w
  8042  10D9  00A0               	movwf	___bmul@multiplicand
  8043  10DA  082A               	movf	getSwitchHardwareState@id,w
  8044  10DB  160A  158A  20FD  160A  118A  	fcall	___bmul
  8045  10E0  3E91               	addlw	(low ((_sw| (0+256)+1)))& (0+255)
  8046  10E1  0084               	movwf	4
  8047  10E2  1783               	bsf	3,7	;select IRP bank3
  8048  10E3  0800               	movf	0,w
  8049  10E4  00FF               	movwf	btemp+1
  8050  10E5  087F               	movf	btemp+1,w
  8051  10E6  1283               	bcf	3,5	;RP0=0, select bank0
  8052  10E7  1303               	bcf	3,6	;RP1=0, select bank0
  8053  10E8  00A3               	movwf	Gpio_getPinState@pin
  8054  10E9  3005               	movlw	5
  8055  10EA  00FF               	movwf	btemp+1
  8056  10EB  087F               	movf	btemp+1,w
  8057  10EC  00A0               	movwf	___bmul@multiplicand
  8058  10ED  082A               	movf	getSwitchHardwareState@id,w
  8059  10EE  160A  158A  20FD  160A  118A  	fcall	___bmul
  8060  10F3  3E90               	addlw	(low (_sw| (0+256)))& (0+255)
  8061  10F4  0084               	movwf	4
  8062  10F5  1783               	bsf	3,7	;select IRP bank3
  8063  10F6  0800               	movf	0,w
  8064  10F7  160A  158A  227E  160A  118A  	fcall	_Gpio_getPinState
  8065  10FC  3A01               	xorlw	1
  8066  10FD  1D03               	skipz
  8067  10FE  2900               	goto	u2071
  8068  10FF  2901               	goto	u2070
  8069  1100                     u2071:
  8070  1100  2903               	goto	l2348
  8071  1101                     u2070:
  8072  1101                     l2342:
  8073                           
  8074                           ;Switch.c: 63:     {;Switch.c: 64:         return SWITCH_STATE_RELEASED;
  8075  1101  3000               	movlw	0
  8076  1102  2933               	goto	l210
  8077  1103                     l2348:
  8078  1103  3005               	movlw	5
  8079  1104  00FF               	movwf	btemp+1
  8080  1105  087F               	movf	btemp+1,w
  8081  1106  1283               	bcf	3,5	;RP0=0, select bank0
  8082  1107  1303               	bcf	3,6	;RP1=0, select bank0
  8083  1108  00A0               	movwf	___bmul@multiplicand
  8084  1109  082A               	movf	getSwitchHardwareState@id,w
  8085  110A  160A  158A  20FD  160A  118A  	fcall	___bmul
  8086  110F  3E91               	addlw	(low ((_sw| (0+256)+1)))& (0+255)
  8087  1110  0084               	movwf	4
  8088  1111  1783               	bsf	3,7	;select IRP bank3
  8089  1112  0800               	movf	0,w
  8090  1113  00FF               	movwf	btemp+1
  8091  1114  087F               	movf	btemp+1,w
  8092  1115  1283               	bcf	3,5	;RP0=0, select bank0
  8093  1116  1303               	bcf	3,6	;RP1=0, select bank0
  8094  1117  00A3               	movwf	Gpio_getPinState@pin
  8095  1118  3005               	movlw	5
  8096  1119  00FF               	movwf	btemp+1
  8097  111A  087F               	movf	btemp+1,w
  8098  111B  00A0               	movwf	___bmul@multiplicand
  8099  111C  082A               	movf	getSwitchHardwareState@id,w
  8100  111D  160A  158A  20FD  160A  118A  	fcall	___bmul
  8101  1122  3E90               	addlw	(low (_sw| (0+256)))& (0+255)
  8102  1123  0084               	movwf	4
  8103  1124  1783               	bsf	3,7	;select IRP bank3
  8104  1125  0800               	movf	0,w
  8105  1126  160A  158A  227E  160A  118A  	fcall	_Gpio_getPinState
  8106  112B  3A00               	xorlw	0
  8107  112C  1D03               	skipz
  8108  112D  292F               	goto	u2081
  8109  112E  2930               	goto	u2080
  8110  112F                     u2081:
  8111  112F  2932               	goto	l2356
  8112  1130                     u2080:
  8113  1130                     l2350:
  8114                           
  8115                           ;Switch.c: 66:     {;Switch.c: 67:         return SWITCH_STATE_PRESSED;
  8116  1130  3001               	movlw	1
  8117  1131  2933               	goto	l210
  8118  1132                     l2356:
  8119                           
  8120                           ;Switch.c: 69:     {;Switch.c: 70:         return SWITCH_STATE_ERROR;
  8121  1132  3002               	movlw	2
  8122  1133                     l210:
  8123  1133  0008               	return
  8124  1134                     __end_of_getSwitchHardwareState:
  8125                           
  8126                           	psect	text30
  8127  1A7E                     __ptext30:	
  8128 ;; *************** function _Gpio_getPinState *****************
  8129 ;; Defined at:
  8130 ;;		line 34 in file "Gpio.c"
  8131 ;; Parameters:    Size  Location     Type
  8132 ;;  id              1    wreg     enum E1172
  8133 ;;  pin             1    3[BANK0 ] enum E1180
  8134 ;; Auto vars:     Size  Location     Type
  8135 ;;  id              1    9[BANK0 ] enum E1172
  8136 ;; Return value:  Size  Location     Type
  8137 ;;                  1    wreg      enum E1202
  8138 ;; Registers used:
  8139 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  8140 ;; Tracked objects:
  8141 ;;		On entry : 0/0
  8142 ;;		On exit  : 0/0
  8143 ;;		Unchanged: 0/0
  8144 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8145 ;;      Params:         0       1       0       0       0
  8146 ;;      Locals:         0       1       0       0       0
  8147 ;;      Temps:          0       5       0       0       0
  8148 ;;      Totals:         0       7       0       0       0
  8149 ;;Total ram usage:        7 bytes
  8150 ;; Hardware stack levels used:    1
  8151 ;; Hardware stack levels required when called:    3
  8152 ;; This function calls:
  8153 ;;		Nothing
  8154 ;; This function is called by:
  8155 ;;		_getSwitchHardwareState
  8156 ;; This function uses a non-reentrant model
  8157 ;;
  8158                           
  8159                           
  8160                           ;psect for function _Gpio_getPinState
  8161  1A7E                     _Gpio_getPinState:
  8162                           
  8163                           ;incstack = 0
  8164                           ; Regs used in _Gpio_getPinState: [wreg-fsr0h+status,2+status,0]
  8165                           ;Gpio_getPinState@id stored from wreg
  8166  1A7E  1283               	bcf	3,5	;RP0=0, select bank0
  8167  1A7F  1303               	bcf	3,6	;RP1=0, select bank0
  8168  1A80  00A9               	movwf	Gpio_getPinState@id
  8169  1A81                     l2204:
  8170                           
  8171                           ;Gpio.c: 34: GPIO_STATE_t Gpio_getPinState( GPIO_ID_t id, GPIO_PIN_t pin );Gpio.c: 35: {
      +                          ;Gpio.c: 36:  return ( gpio[ id ]->PORT & ( 1 << pin ) ) >> pin;
  8172  1A81  0829               	movf	Gpio_getPinState@id,w
  8173  1A82  00A4               	movwf	??_Gpio_getPinState
  8174  1A83  0724               	addwf	??_Gpio_getPinState,w
  8175  1A84  3E5C               	addlw	(low (_gpio| 0))& (0+255)
  8176  1A85  0084               	movwf	4
  8177  1A86  1383               	bcf	3,7	;select IRP bank0
  8178  1A87  0800               	movf	0,w
  8179  1A88  00A5               	movwf	??_Gpio_getPinState+1
  8180  1A89  0A84               	incf	4,f
  8181  1A8A  0800               	movf	0,w
  8182  1A8B  00A6               	movwf	??_Gpio_getPinState+2
  8183  1A8C  0825               	movf	??_Gpio_getPinState+1,w
  8184  1A8D  0084               	movwf	4
  8185  1A8E  1783               	bsf	3,7
  8186  1A8F  1C26               	btfss	??_Gpio_getPinState+2,0
  8187  1A90  1383               	bcf	3,7
  8188  1A91  3001               	movlw	1
  8189  1A92  00A7               	movwf	??_Gpio_getPinState+3
  8190  1A93  0A23               	incf	Gpio_getPinState@pin,w
  8191  1A94  2A97               	goto	u1764
  8192  1A95                     u1765:
  8193  1A95  1003               	clrc
  8194  1A96  0DA7               	rlf	??_Gpio_getPinState+3,f
  8195  1A97                     u1764:
  8196  1A97  3EFF               	addlw	-1
  8197  1A98  1D03               	skipz
  8198  1A99  2A95               	goto	u1765
  8199  1A9A  0827               	movf	??_Gpio_getPinState+3,w
  8200  1A9B  0500               	andwf	0,w
  8201  1A9C  00A8               	movwf	??_Gpio_getPinState+4
  8202  1A9D  0A23               	incf	Gpio_getPinState@pin,w
  8203  1A9E  2AA1               	goto	u1774
  8204  1A9F                     u1775:
  8205  1A9F  1003               	clrc
  8206  1AA0  0CA8               	rrf	??_Gpio_getPinState+4,f
  8207  1AA1                     u1774:
  8208  1AA1  3EFF               	addlw	-1
  8209  1AA2  1D03               	skipz
  8210  1AA3  2A9F               	goto	u1775
  8211  1AA4  0828               	movf	??_Gpio_getPinState+4,w
  8212  1AA5                     l505:
  8213  1AA5  0008               	return
  8214  1AA6                     __end_of_Gpio_getPinState:
  8215                           
  8216                           	psect	text31
  8217  1BF8                     __ptext31:	
  8218 ;; *************** function _setSsdHardwareSymbol *****************
  8219 ;; Defined at:
  8220 ;;		line 100 in file "Ssd.c"
  8221 ;; Parameters:    Size  Location     Type
  8222 ;;  id              1    wreg     enum E1226
  8223 ;;  symbol          1   12[BANK0 ] enum E1242
  8224 ;; Auto vars:     Size  Location     Type
  8225 ;;  id              1   14[BANK0 ] enum E1226
  8226 ;; Return value:  Size  Location     Type
  8227 ;;                  1    wreg      void 
  8228 ;; Registers used:
  8229 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8230 ;; Tracked objects:
  8231 ;;		On entry : 0/0
  8232 ;;		On exit  : 0/0
  8233 ;;		Unchanged: 0/0
  8234 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8235 ;;      Params:         0       1       0       0       0
  8236 ;;      Locals:         0       1       0       0       0
  8237 ;;      Temps:          0       1       0       0       0
  8238 ;;      Totals:         0       3       0       0       0
  8239 ;;Total ram usage:        3 bytes
  8240 ;; Hardware stack levels used:    1
  8241 ;; Hardware stack levels required when called:    4
  8242 ;; This function calls:
  8243 ;;		_Gpio_setPortState
  8244 ;;		___bmul
  8245 ;; This function is called by:
  8246 ;;		_Ssd_update
  8247 ;; This function uses a non-reentrant model
  8248 ;;
  8249                           
  8250                           
  8251                           ;psect for function _setSsdHardwareSymbol
  8252  1BF8                     _setSsdHardwareSymbol:
  8253                           
  8254                           ;incstack = 0
  8255                           ; Regs used in _setSsdHardwareSymbol: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstac
      +                          k]
  8256                           ;setSsdHardwareSymbol@id stored from wreg
  8257  1BF8  1283               	bcf	3,5	;RP0=0, select bank0
  8258  1BF9  1303               	bcf	3,6	;RP1=0, select bank0
  8259  1BFA  00AE               	movwf	setSsdHardwareSymbol@id
  8260  1BFB                     l2374:
  8261                           
  8262                           ;Ssd.c: 100: void setSsdHardwareSymbol( SSD_ID_t id, SSD_SYMBOL_t symbol );Ssd.c: 101: {
      +                          ;Ssd.c: 102:  Gpio_setPortState( ssd[ id ].gpioIdD, ( 0xFF << ssd[ id ].gpioPinD ), ssdS
      +                          ymbolPattern[ symbol ] );
  8263  1BFB  30FF               	movlw	255
  8264  1BFC  00AD               	movwf	??_setSsdHardwareSymbol
  8265  1BFD  300C               	movlw	12
  8266  1BFE  00FF               	movwf	btemp+1
  8267  1BFF  087F               	movf	btemp+1,w
  8268  1C00  00A0               	movwf	___bmul@multiplicand
  8269  1C01  082E               	movf	setSsdHardwareSymbol@id,w
  8270  1C02  160A  158A  20FD  160A  158A  	fcall	___bmul
  8271  1C07  3EA2               	addlw	(low ((_ssd| (0+256)+3)))& (0+255)
  8272  1C08  0084               	movwf	4
  8273  1C09  1783               	bsf	3,7	;select IRP bank3
  8274  1C0A  0A00               	incf	0,w
  8275  1C0B  1283               	bcf	3,5	;RP0=0, select bank0
  8276  1C0C  1303               	bcf	3,6	;RP1=0, select bank0
  8277  1C0D  2C10               	goto	u2114
  8278  1C0E                     u2115:
  8279  1C0E  1003               	clrc
  8280  1C0F  0DAD               	rlf	??_setSsdHardwareSymbol,f
  8281  1C10                     u2114:
  8282  1C10  3EFF               	addlw	-1
  8283  1C11  1D03               	skipz
  8284  1C12  2C0E               	goto	u2115
  8285  1C13  082D               	movf	??_setSsdHardwareSymbol,w
  8286  1C14  00FF               	movwf	btemp+1
  8287  1C15  087F               	movf	btemp+1,w
  8288  1C16  00A3               	movwf	Gpio_setPortState@pins
  8289  1C17  082C               	movf	setSsdHardwareSymbol@symbol,w
  8290  1C18  3EB7               	addlw	(low (_ssdSymbolPattern| (0+256)))& (0+255)
  8291  1C19  0084               	movwf	4
  8292  1C1A  0800               	movf	0,w
  8293  1C1B  00FF               	movwf	btemp+1
  8294  1C1C  087F               	movf	btemp+1,w
  8295  1C1D  00A4               	movwf	Gpio_setPortState@state
  8296  1C1E  300C               	movlw	12
  8297  1C1F  00FF               	movwf	btemp+1
  8298  1C20  087F               	movf	btemp+1,w
  8299  1C21  00A0               	movwf	___bmul@multiplicand
  8300  1C22  082E               	movf	setSsdHardwareSymbol@id,w
  8301  1C23  160A  158A  20FD  160A  158A  	fcall	___bmul
  8302  1C28  3EA1               	addlw	(low ((_ssd| (0+256)+2)))& (0+255)
  8303  1C29  0084               	movwf	4
  8304  1C2A  1783               	bsf	3,7	;select IRP bank3
  8305  1C2B  0800               	movf	0,w
  8306  1C2C  160A  158A  22FA  160A  158A  	fcall	_Gpio_setPortState
  8307  1C31                     l262:
  8308  1C31  0008               	return
  8309  1C32                     __end_of_setSsdHardwareSymbol:
  8310                           
  8311                           	psect	text32
  8312  1AFA                     __ptext32:	
  8313 ;; *************** function _Gpio_setPortState *****************
  8314 ;; Defined at:
  8315 ;;		line 39 in file "Gpio.c"
  8316 ;; Parameters:    Size  Location     Type
  8317 ;;  id              1    wreg     enum E1172
  8318 ;;  pins            1    3[BANK0 ] enum E1180
  8319 ;;  state           1    4[BANK0 ] enum E1202
  8320 ;; Auto vars:     Size  Location     Type
  8321 ;;  id              1   11[BANK0 ] enum E1172
  8322 ;; Return value:  Size  Location     Type
  8323 ;;                  1    wreg      void 
  8324 ;; Registers used:
  8325 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  8326 ;; Tracked objects:
  8327 ;;		On entry : 0/0
  8328 ;;		On exit  : 0/0
  8329 ;;		Unchanged: 0/0
  8330 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8331 ;;      Params:         0       2       0       0       0
  8332 ;;      Locals:         0       1       0       0       0
  8333 ;;      Temps:          0       6       0       0       0
  8334 ;;      Totals:         0       9       0       0       0
  8335 ;;Total ram usage:        9 bytes
  8336 ;; Hardware stack levels used:    1
  8337 ;; Hardware stack levels required when called:    3
  8338 ;; This function calls:
  8339 ;;		Nothing
  8340 ;; This function is called by:
  8341 ;;		_setSsdHardwareSymbol
  8342 ;; This function uses a non-reentrant model
  8343 ;;
  8344                           
  8345                           
  8346                           ;psect for function _Gpio_setPortState
  8347  1AFA                     _Gpio_setPortState:
  8348                           
  8349                           ;incstack = 0
  8350                           ; Regs used in _Gpio_setPortState: [wreg-fsr0h+status,2+status,0+btemp+1]
  8351                           ;Gpio_setPortState@id stored from wreg
  8352  1AFA  1283               	bcf	3,5	;RP0=0, select bank0
  8353  1AFB  1303               	bcf	3,6	;RP1=0, select bank0
  8354  1AFC  00AB               	movwf	Gpio_setPortState@id
  8355  1AFD                     l2208:
  8356                           
  8357                           ;Gpio.c: 39: void Gpio_setPortState( GPIO_ID_t id, GPIO_PIN_t pins, GPIO_STATE_t state )
      +                          ;Gpio.c: 40: {;Gpio.c: 41:     state &= pins;
  8358  1AFD  0823               	movf	Gpio_setPortState@pins,w
  8359  1AFE  00FF               	movwf	btemp+1
  8360  1AFF  087F               	movf	btemp+1,w
  8361  1B00  05A4               	andwf	Gpio_setPortState@state,f
  8362  1B01                     l2210:
  8363                           
  8364                           ;Gpio.c: 42:  gpio[ id ]->PORT = ( gpio[ id ]->PORT & ~pins ) | ( state );
  8365  1B01  082B               	movf	Gpio_setPortState@id,w
  8366  1B02  00A5               	movwf	??_Gpio_setPortState
  8367  1B03  0725               	addwf	??_Gpio_setPortState,w
  8368  1B04  3E5C               	addlw	(low (_gpio| 0))& (0+255)
  8369  1B05  0084               	movwf	4
  8370  1B06  1383               	bcf	3,7	;select IRP bank0
  8371  1B07  0800               	movf	0,w
  8372  1B08  00A6               	movwf	??_Gpio_setPortState+1
  8373  1B09  0A84               	incf	4,f
  8374  1B0A  0800               	movf	0,w
  8375  1B0B  00A7               	movwf	??_Gpio_setPortState+2
  8376  1B0C  0826               	movf	??_Gpio_setPortState+1,w
  8377  1B0D  0084               	movwf	4
  8378  1B0E  1783               	bsf	3,7
  8379  1B0F  1C27               	btfss	??_Gpio_setPortState+2,0
  8380  1B10  1383               	bcf	3,7
  8381  1B11  0923               	comf	Gpio_setPortState@pins,w
  8382  1B12  0500               	andwf	0,w
  8383  1B13  0424               	iorwf	Gpio_setPortState@state,w
  8384  1B14  00FF               	movwf	btemp+1
  8385  1B15  082B               	movf	Gpio_setPortState@id,w
  8386  1B16  00A8               	movwf	??_Gpio_setPortState+3
  8387  1B17  0728               	addwf	??_Gpio_setPortState+3,w
  8388  1B18  3E5C               	addlw	(low (_gpio| 0))& (0+255)
  8389  1B19  0084               	movwf	4
  8390  1B1A  1383               	bcf	3,7	;select IRP bank0
  8391  1B1B  0800               	movf	0,w
  8392  1B1C  00A9               	movwf	??_Gpio_setPortState+4
  8393  1B1D  0A84               	incf	4,f
  8394  1B1E  0800               	movf	0,w
  8395  1B1F  00AA               	movwf	??_Gpio_setPortState+5
  8396  1B20  0829               	movf	??_Gpio_setPortState+4,w
  8397  1B21  0084               	movwf	4
  8398  1B22  1783               	bsf	3,7
  8399  1B23  1C2A               	btfss	??_Gpio_setPortState+5,0
  8400  1B24  1383               	bcf	3,7
  8401  1B25  087F               	movf	btemp+1,w
  8402  1B26  0080               	movwf	0
  8403  1B27                     l508:
  8404  1B27  0008               	return
  8405  1B28                     __end_of_Gpio_setPortState:
  8406                           
  8407                           	psect	text33
  8408  1FA2                     __ptext33:	
  8409 ;; *************** function _setSsdHardwareState *****************
  8410 ;; Defined at:
  8411 ;;		line 86 in file "Ssd.c"
  8412 ;; Parameters:    Size  Location     Type
  8413 ;;  id              1    wreg     enum E1226
  8414 ;;  state           1   14[BANK0 ] enum E1231
  8415 ;; Auto vars:     Size  Location     Type
  8416 ;;  id              1   15[BANK0 ] enum E1226
  8417 ;; Return value:  Size  Location     Type
  8418 ;;                  1    wreg      void 
  8419 ;; Registers used:
  8420 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8421 ;; Tracked objects:
  8422 ;;		On entry : 0/0
  8423 ;;		On exit  : 0/0
  8424 ;;		Unchanged: 0/0
  8425 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8426 ;;      Params:         0       1       0       0       0
  8427 ;;      Locals:         0       1       0       0       0
  8428 ;;      Temps:          0       0       0       0       0
  8429 ;;      Totals:         0       2       0       0       0
  8430 ;;Total ram usage:        2 bytes
  8431 ;; Hardware stack levels used:    1
  8432 ;; Hardware stack levels required when called:    4
  8433 ;; This function calls:
  8434 ;;		_Gpio_setPinState
  8435 ;;		___bmul
  8436 ;; This function is called by:
  8437 ;;		_Ssd_update
  8438 ;; This function uses a non-reentrant model
  8439 ;;
  8440                           
  8441                           
  8442                           ;psect for function _setSsdHardwareState
  8443  1FA2                     _setSsdHardwareState:
  8444                           
  8445                           ;incstack = 0
  8446                           ; Regs used in _setSsdHardwareState: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack
      +                          ]
  8447                           ;setSsdHardwareState@id stored from wreg
  8448  1FA2  1283               	bcf	3,5	;RP0=0, select bank0
  8449  1FA3  1303               	bcf	3,6	;RP1=0, select bank0
  8450  1FA4  00AF               	movwf	setSsdHardwareState@id
  8451  1FA5                     l2366:
  8452                           
  8453                           ;Ssd.c: 86: void setSsdHardwareState( SSD_ID_t id, SSD_STATE_t state );Ssd.c: 87: {;Ssd.
      +                          c: 88:     if( state == SSD_STATE_ON )
  8454  1FA5  032E               	decf	setSsdHardwareState@state,w
  8455  1FA6  1D03               	btfss	3,2
  8456  1FA7  2FA9               	goto	u2091
  8457  1FA8  2FAA               	goto	u2090
  8458  1FA9                     u2091:
  8459  1FA9  2FD3               	goto	l2370
  8460  1FAA                     u2090:
  8461  1FAA                     l2368:
  8462                           
  8463                           ;Ssd.c: 89:     {;Ssd.c: 90:         Gpio_setPinState( ssd[ id ].gpioIdC, ssd[ id ].gpio
      +                          PinC, GPIO_STATE_HIGH );
  8464  1FAA  300C               	movlw	12
  8465  1FAB  00FF               	movwf	btemp+1
  8466  1FAC  087F               	movf	btemp+1,w
  8467  1FAD  00A0               	movwf	___bmul@multiplicand
  8468  1FAE  082F               	movf	setSsdHardwareState@id,w
  8469  1FAF  160A  158A  20FD  160A  158A  	fcall	___bmul
  8470  1FB4  3EA0               	addlw	(low ((_ssd| (0+256)+1)))& (0+255)
  8471  1FB5  0084               	movwf	4
  8472  1FB6  1783               	bsf	3,7	;select IRP bank3
  8473  1FB7  0800               	movf	0,w
  8474  1FB8  00FF               	movwf	btemp+1
  8475  1FB9  087F               	movf	btemp+1,w
  8476  1FBA  1283               	bcf	3,5	;RP0=0, select bank0
  8477  1FBB  1303               	bcf	3,6	;RP1=0, select bank0
  8478  1FBC  00A3               	movwf	Gpio_setPinState@pin
  8479  1FBD  01A4               	clrf	Gpio_setPinState@state
  8480  1FBE  0AA4               	incf	Gpio_setPinState@state,f
  8481  1FBF  300C               	movlw	12
  8482  1FC0  00FF               	movwf	btemp+1
  8483  1FC1  087F               	movf	btemp+1,w
  8484  1FC2  00A0               	movwf	___bmul@multiplicand
  8485  1FC3  082F               	movf	setSsdHardwareState@id,w
  8486  1FC4  160A  158A  20FD  160A  158A  	fcall	___bmul
  8487  1FC9  3E9F               	addlw	(low (_ssd| (0+256)))& (0+255)
  8488  1FCA  0084               	movwf	4
  8489  1FCB  1783               	bsf	3,7	;select IRP bank3
  8490  1FCC  0800               	movf	0,w
  8491  1FCD  160A  158A  24AB  160A  158A  	fcall	_Gpio_setPinState
  8492                           
  8493                           ;Ssd.c: 91:     }else if( state == SSD_STATE_OFF )
  8494  1FD2  2FFF               	goto	l259
  8495  1FD3                     l2370:
  8496  1FD3  082E               	movf	setSsdHardwareState@state,w
  8497  1FD4  1D03               	btfss	3,2
  8498  1FD5  2FD7               	goto	u2101
  8499  1FD6  2FD8               	goto	u2100
  8500  1FD7                     u2101:
  8501  1FD7  2FFF               	goto	l259
  8502  1FD8                     u2100:
  8503  1FD8                     l2372:
  8504                           
  8505                           ;Ssd.c: 92:     {;Ssd.c: 93:         Gpio_setPinState( ssd[ id ].gpioIdC, ssd[ id ].gpio
      +                          PinC, GPIO_STATE_LOW );
  8506  1FD8  300C               	movlw	12
  8507  1FD9  00FF               	movwf	btemp+1
  8508  1FDA  087F               	movf	btemp+1,w
  8509  1FDB  00A0               	movwf	___bmul@multiplicand
  8510  1FDC  082F               	movf	setSsdHardwareState@id,w
  8511  1FDD  160A  158A  20FD  160A  158A  	fcall	___bmul
  8512  1FE2  3EA0               	addlw	(low ((_ssd| (0+256)+1)))& (0+255)
  8513  1FE3  0084               	movwf	4
  8514  1FE4  1783               	bsf	3,7	;select IRP bank3
  8515  1FE5  0800               	movf	0,w
  8516  1FE6  00FF               	movwf	btemp+1
  8517  1FE7  087F               	movf	btemp+1,w
  8518  1FE8  1283               	bcf	3,5	;RP0=0, select bank0
  8519  1FE9  1303               	bcf	3,6	;RP1=0, select bank0
  8520  1FEA  00A3               	movwf	Gpio_setPinState@pin
  8521  1FEB  01A4               	clrf	Gpio_setPinState@state
  8522  1FEC  300C               	movlw	12
  8523  1FED  00FF               	movwf	btemp+1
  8524  1FEE  087F               	movf	btemp+1,w
  8525  1FEF  00A0               	movwf	___bmul@multiplicand
  8526  1FF0  082F               	movf	setSsdHardwareState@id,w
  8527  1FF1  160A  158A  20FD  160A  158A  	fcall	___bmul
  8528  1FF6  3E9F               	addlw	(low (_ssd| (0+256)))& (0+255)
  8529  1FF7  0084               	movwf	4
  8530  1FF8  1783               	bsf	3,7	;select IRP bank3
  8531  1FF9  0800               	movf	0,w
  8532  1FFA  160A  158A  24AB  160A  158A  	fcall	_Gpio_setPinState
  8533  1FFF                     l259:	
  8534                           ;Ssd.c: 94:     }else
  8535                           
  8536  1FFF  0008               	return
  8537  2000                     __end_of_setSsdHardwareState:
  8538                           
  8539                           	psect	text34
  8540  1000                     __ptext34:	
  8541 ;; *************** function _Scheduler_reportStatus *****************
  8542 ;; Defined at:
  8543 ;;		line 73 in file "Scheduler.c"
  8544 ;; Parameters:    Size  Location     Type
  8545 ;;		None
  8546 ;; Auto vars:     Size  Location     Type
  8547 ;;		None
  8548 ;; Return value:  Size  Location     Type
  8549 ;;                  1    wreg      void 
  8550 ;; Registers used:
  8551 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8552 ;; Tracked objects:
  8553 ;;		On entry : 0/0
  8554 ;;		On exit  : 0/0
  8555 ;;		Unchanged: 0/0
  8556 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8557 ;;      Params:         0       0       0       0       0
  8558 ;;      Locals:         0       0       0       0       0
  8559 ;;      Temps:          0       0       0       0       0
  8560 ;;      Totals:         0       0       0       0       0
  8561 ;;Total ram usage:        0 bytes
  8562 ;; Hardware stack levels used:    1
  8563 ;; Hardware stack levels required when called:    6
  8564 ;; This function calls:
  8565 ;;		_Scheduler_displayError
  8566 ;; This function is called by:
  8567 ;;		_Scheduler_dispatchTasks
  8568 ;; This function uses a non-reentrant model
  8569 ;;
  8570                           
  8571                           
  8572                           ;psect for function _Scheduler_reportStatus
  8573  1000                     _Scheduler_reportStatus:
  8574  1000                     l2562:	
  8575                           ;incstack = 0
  8576                           ; Regs used in _Scheduler_reportStatus: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cst
      +                          ack]
  8577                           
  8578                           
  8579                           ;Scheduler.c: 75:  if( scheduler.interruptFlag == 1 )
  8580  1000  1283               	bcf	3,5	;RP0=0, select bank2
  8581  1001  1703               	bsf	3,6	;RP1=1, select bank2
  8582  1002  034D               	decf	(_scheduler^(0+256)+61),w	;volatile
  8583  1003  1D03               	btfss	3,2
  8584  1004  2806               	goto	u2411
  8585  1005  2807               	goto	u2410
  8586  1006                     u2411:
  8587  1006  280B               	goto	l2566
  8588  1007                     u2410:
  8589  1007                     l2564:
  8590                           
  8591                           ;Scheduler.c: 76:  {;Scheduler.c: 77:   scheduler.errorCode = ( 1 );
  8592  1007  3001               	movlw	1
  8593  1008  00FF               	movwf	btemp+1
  8594  1009  087F               	movf	btemp+1,w
  8595  100A  00CC               	movwf	(_scheduler^(0+256)+60)	;volatile
  8596  100B                     l2566:
  8597                           
  8598                           ;Scheduler.c: 79:  Scheduler_displayError( scheduler.errorCode );
  8599  100B  084C               	movf	(_scheduler^(0+256)+60),w	;volatile
  8600  100C  160A  158A  21A3  160A  118A  	fcall	_Scheduler_displayError
  8601  1011                     l124:
  8602  1011  0008               	return
  8603  1012                     __end_of_Scheduler_reportStatus:
  8604                           
  8605                           	psect	text35
  8606  19A3                     __ptext35:	
  8607 ;; *************** function _Scheduler_displayError *****************
  8608 ;; Defined at:
  8609 ;;		line 11 in file "SchedulerConfig.c"
  8610 ;; Parameters:    Size  Location     Type
  8611 ;;  errorCode       1    wreg     unsigned char 
  8612 ;; Auto vars:     Size  Location     Type
  8613 ;;  errorCode       1   14[BANK0 ] unsigned char 
  8614 ;; Return value:  Size  Location     Type
  8615 ;;                  1    wreg      void 
  8616 ;; Registers used:
  8617 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8618 ;; Tracked objects:
  8619 ;;		On entry : 0/0
  8620 ;;		On exit  : 0/0
  8621 ;;		Unchanged: 0/0
  8622 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8623 ;;      Params:         0       0       0       0       0
  8624 ;;      Locals:         0       1       0       0       0
  8625 ;;      Temps:          0       0       0       0       0
  8626 ;;      Totals:         0       1       0       0       0
  8627 ;;Total ram usage:        1 bytes
  8628 ;; Hardware stack levels used:    1
  8629 ;; Hardware stack levels required when called:    5
  8630 ;; This function calls:
  8631 ;;		_Led_setState
  8632 ;; This function is called by:
  8633 ;;		_Scheduler_reportStatus
  8634 ;; This function uses a non-reentrant model
  8635 ;;
  8636                           
  8637                           
  8638                           ;psect for function _Scheduler_displayError
  8639  19A3                     _Scheduler_displayError:
  8640                           
  8641                           ;incstack = 0
  8642                           ; Regs used in _Scheduler_displayError: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cst
      +                          ack]
  8643                           ;Scheduler_displayError@errorCode stored from wreg
  8644  19A3  1283               	bcf	3,5	;RP0=0, select bank0
  8645  19A4  1303               	bcf	3,6	;RP1=0, select bank0
  8646  19A5  00AE               	movwf	Scheduler_displayError@errorCode
  8647  19A6                     l2316:
  8648                           
  8649                           ;SchedulerConfig.c: 11: void Scheduler_displayError( UBaseType_t errorCode );SchedulerCo
      +                          nfig.c: 12: {;SchedulerConfig.c: 13:  if( errorCode )
  8650  19A6  082E               	movf	Scheduler_displayError@errorCode,w
  8651  19A7  1903               	btfsc	3,2
  8652  19A8  29AA               	goto	u1951
  8653  19A9  29AB               	goto	u1950
  8654  19AA                     u1951:
  8655  19AA  29B6               	goto	l2320
  8656  19AB                     u1950:
  8657  19AB                     l2318:
  8658                           
  8659                           ;SchedulerConfig.c: 14:  {;SchedulerConfig.c: 15:   Led_setState( LED_ID_1, LED_STATE_OF
      +                          F, LED_BLINK_0MS );
  8660  19AB  01A7               	clrf	Led_setState@state
  8661  19AC  3000               	movlw	0
  8662  19AD  00A8               	movwf	Led_setState@period
  8663  19AE  00A9               	movwf	Led_setState@period+1
  8664  19AF  3000               	movlw	0
  8665  19B0  160A  158A  2601  160A  158A  	fcall	_Led_setState
  8666                           
  8667                           ;SchedulerConfig.c: 16:  }else
  8668  19B5  29C1               	goto	l67
  8669  19B6                     l2320:
  8670                           
  8671                           ;SchedulerConfig.c: 17:  {;SchedulerConfig.c: 18:   Led_setState( LED_ID_1, LED_STATE_ON
      +                          , LED_BLINK_0MS );
  8672  19B6  01A7               	clrf	Led_setState@state
  8673  19B7  0AA7               	incf	Led_setState@state,f
  8674  19B8  3000               	movlw	0
  8675  19B9  00A8               	movwf	Led_setState@period
  8676  19BA  00A9               	movwf	Led_setState@period+1
  8677  19BB  3000               	movlw	0
  8678  19BC  160A  158A  2601  160A  158A  	fcall	_Led_setState
  8679  19C1                     l67:
  8680  19C1  0008               	return
  8681  19C2                     __end_of_Scheduler_displayError:
  8682                           
  8683                           	psect	text36
  8684  1942                     __ptext36:	
  8685 ;; *************** function _Scheduler_goToSleep *****************
  8686 ;; Defined at:
  8687 ;;		line 82 in file "Scheduler.c"
  8688 ;; Parameters:    Size  Location     Type
  8689 ;;		None
  8690 ;; Auto vars:     Size  Location     Type
  8691 ;;		None
  8692 ;; Return value:  Size  Location     Type
  8693 ;;                  1    wreg      void 
  8694 ;; Registers used:
  8695 ;;		wreg, status,2, status,0, pclath, cstack
  8696 ;; Tracked objects:
  8697 ;;		On entry : 0/0
  8698 ;;		On exit  : 0/0
  8699 ;;		Unchanged: 0/0
  8700 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8701 ;;      Params:         0       0       0       0       0
  8702 ;;      Locals:         0       0       0       0       0
  8703 ;;      Temps:          0       0       0       0       0
  8704 ;;      Totals:         0       0       0       0       0
  8705 ;;Total ram usage:        0 bytes
  8706 ;; Hardware stack levels used:    1
  8707 ;; Hardware stack levels required when called:    4
  8708 ;; This function calls:
  8709 ;;		_Scheduler_sleepHardware
  8710 ;; This function is called by:
  8711 ;;		_Scheduler_dispatchTasks
  8712 ;; This function uses a non-reentrant model
  8713 ;;
  8714                           
  8715                           
  8716                           ;psect for function _Scheduler_goToSleep
  8717  1942                     _Scheduler_goToSleep:
  8718  1942                     l2568:	
  8719                           ;incstack = 0
  8720                           ; Regs used in _Scheduler_goToSleep: [wreg+status,2+status,0+pclath+cstack]
  8721                           
  8722                           
  8723                           ;Scheduler.c: 84:  if( scheduler.interruptFlag == 1 )
  8724  1942  1283               	bcf	3,5	;RP0=0, select bank2
  8725  1943  1703               	bsf	3,6	;RP1=1, select bank2
  8726  1944  034D               	decf	(_scheduler^(0+256)+61),w	;volatile
  8727  1945  1D03               	btfss	3,2
  8728  1946  2948               	goto	u2421
  8729  1947  2949               	goto	u2420
  8730  1948                     u2421:
  8731  1948  2950               	goto	l2574
  8732  1949                     u2420:
  8733  1949                     l2570:
  8734                           
  8735                           ;Scheduler.c: 85:  {;Scheduler.c: 86:   scheduler.interruptFlag = 0;
  8736  1949  01CD               	clrf	(_scheduler^(0+256)+61)	;volatile
  8737  194A  2950               	goto	l2574
  8738  194B                     l2572:
  8739                           
  8740                           ;Scheduler.c: 89:  {;Scheduler.c: 90:   Scheduler_sleepHardware();
  8741  194B  120A  118A  2003  160A  158A  	fcall	_Scheduler_sleepHardware
  8742  1950                     l2574:
  8743                           
  8744                           ;Scheduler.c: 88:  while( scheduler.interruptFlag == 0 )
  8745  1950  1283               	bcf	3,5	;RP0=0, select bank2
  8746  1951  1703               	bsf	3,6	;RP1=1, select bank2
  8747  1952  084D               	movf	(_scheduler^(0+256)+61),w	;volatile
  8748  1953  1903               	btfsc	3,2
  8749  1954  2956               	goto	u2431
  8750  1955  2957               	goto	u2430
  8751  1956                     u2431:
  8752  1956  294B               	goto	l2572
  8753  1957                     u2430:
  8754  1957                     l2576:
  8755                           
  8756                           ;Scheduler.c: 92:  scheduler.interruptFlag = 0;
  8757  1957  01CD               	clrf	(_scheduler^(0+256)+61)	;volatile
  8758  1958                     l131:
  8759  1958  0008               	return
  8760  1959                     __end_of_Scheduler_goToSleep:
  8761                           
  8762                           	psect	text37
  8763  0003                     __ptext37:	
  8764 ;; *************** function _Scheduler_sleepHardware *****************
  8765 ;; Defined at:
  8766 ;;		line 22 in file "SchedulerConfig.c"
  8767 ;; Parameters:    Size  Location     Type
  8768 ;;		None
  8769 ;; Auto vars:     Size  Location     Type
  8770 ;;		None
  8771 ;; Return value:  Size  Location     Type
  8772 ;;                  1    wreg      void 
  8773 ;; Registers used:
  8774 ;;		None
  8775 ;; Tracked objects:
  8776 ;;		On entry : 0/0
  8777 ;;		On exit  : 0/0
  8778 ;;		Unchanged: 0/0
  8779 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8780 ;;      Params:         0       0       0       0       0
  8781 ;;      Locals:         0       0       0       0       0
  8782 ;;      Temps:          0       0       0       0       0
  8783 ;;      Totals:         0       0       0       0       0
  8784 ;;Total ram usage:        0 bytes
  8785 ;; Hardware stack levels used:    1
  8786 ;; Hardware stack levels required when called:    3
  8787 ;; This function calls:
  8788 ;;		Nothing
  8789 ;; This function is called by:
  8790 ;;		_Scheduler_goToSleep
  8791 ;; This function uses a non-reentrant model
  8792 ;;
  8793                           
  8794                           
  8795                           ;psect for function _Scheduler_sleepHardware
  8796  0003                     _Scheduler_sleepHardware:
  8797  0003                     l70:	
  8798                           ;incstack = 0
  8799                           ; Regs used in _Scheduler_sleepHardware: []
  8800                           
  8801  0003  0008               	return
  8802  0004                     __end_of_Scheduler_sleepHardware:
  8803                           
  8804                           	psect	text38
  8805  12CE                     __ptext38:	
  8806 ;; *************** function _Scheduler_deleteTask *****************
  8807 ;; Defined at:
  8808 ;;		line 54 in file "Scheduler.c"
  8809 ;; Parameters:    Size  Location     Type
  8810 ;;  index           1    wreg     unsigned char 
  8811 ;; Auto vars:     Size  Location     Type
  8812 ;;  index           1    3[BANK0 ] unsigned char 
  8813 ;; Return value:  Size  Location     Type
  8814 ;;                  1    wreg      unsigned char 
  8815 ;; Registers used:
  8816 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8817 ;; Tracked objects:
  8818 ;;		On entry : 0/0
  8819 ;;		On exit  : 0/0
  8820 ;;		Unchanged: 0/0
  8821 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8822 ;;      Params:         0       0       0       0       0
  8823 ;;      Locals:         0       1       0       0       0
  8824 ;;      Temps:          0       0       0       0       0
  8825 ;;      Totals:         0       1       0       0       0
  8826 ;;Total ram usage:        1 bytes
  8827 ;; Hardware stack levels used:    1
  8828 ;; Hardware stack levels required when called:    4
  8829 ;; This function calls:
  8830 ;;		___bmul
  8831 ;; This function is called by:
  8832 ;;		_Scheduler_init
  8833 ;;		_Scheduler_dispatchTasks
  8834 ;; This function uses a non-reentrant model
  8835 ;;
  8836                           
  8837                           
  8838                           ;psect for function _Scheduler_deleteTask
  8839  12CE                     _Scheduler_deleteTask:
  8840                           
  8841                           ;incstack = 0
  8842                           ; Regs used in _Scheduler_deleteTask: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstac
      +                          k]
  8843                           ;Scheduler_deleteTask@index stored from wreg
  8844  12CE  1283               	bcf	3,5	;RP0=0, select bank0
  8845  12CF  1303               	bcf	3,6	;RP1=0, select bank0
  8846  12D0  00A3               	movwf	Scheduler_deleteTask@index
  8847  12D1                     l2554:
  8848                           
  8849                           ;Scheduler.c: 54: UBaseType_t Scheduler_deleteTask( UBaseType_t index );Scheduler.c: 55:
      +                           {;Scheduler.c: 56:  if( scheduler.task[ index ].pointer == 0 )
  8850  12D1  3006               	movlw	6
  8851  12D2  00FF               	movwf	btemp+1
  8852  12D3  087F               	movf	btemp+1,w
  8853  12D4  00A0               	movwf	___bmul@multiplicand
  8854  12D5  0823               	movf	Scheduler_deleteTask@index,w
  8855  12D6  160A  158A  20FD  160A  118A  	fcall	___bmul
  8856  12DB  3E10               	addlw	(low (_scheduler| (0+256)))& (0+255)
  8857  12DC  0084               	movwf	4
  8858  12DD  1783               	bsf	3,7	;select IRP bank2
  8859  12DE  0800               	movf	0,w
  8860  12DF  1D03               	btfss	3,2
  8861  12E0  2AE2               	goto	u2401
  8862  12E1  2AE3               	goto	u2400
  8863  12E2                     u2401:
  8864  12E2  2AE4               	goto	l2558
  8865  12E3                     u2400:
  8866  12E3  2B36               	goto	l117
  8867  12E4                     l2558:
  8868                           
  8869                           ;Scheduler.c: 60:  scheduler.task[ index ].pointer = 0x00000000;
  8870  12E4  3006               	movlw	6
  8871  12E5  00FF               	movwf	btemp+1
  8872  12E6  087F               	movf	btemp+1,w
  8873  12E7  1283               	bcf	3,5	;RP0=0, select bank0
  8874  12E8  1303               	bcf	3,6	;RP1=0, select bank0
  8875  12E9  00A0               	movwf	___bmul@multiplicand
  8876  12EA  0823               	movf	Scheduler_deleteTask@index,w
  8877  12EB  160A  158A  20FD  160A  118A  	fcall	___bmul
  8878  12F0  3E10               	addlw	(low (_scheduler| (0+256)))& (0+255)
  8879  12F1  0084               	movwf	4
  8880  12F2  1783               	bsf	3,7	;select IRP bank2
  8881  12F3  0180               	clrf	0
  8882                           
  8883                           ;Scheduler.c: 61:  scheduler.task[ index ].paramter = 0x00000000;
  8884  12F4  3006               	movlw	6
  8885  12F5  00FF               	movwf	btemp+1
  8886  12F6  087F               	movf	btemp+1,w
  8887  12F7  1283               	bcf	3,5	;RP0=0, select bank0
  8888  12F8  1303               	bcf	3,6	;RP1=0, select bank0
  8889  12F9  00A0               	movwf	___bmul@multiplicand
  8890  12FA  0823               	movf	Scheduler_deleteTask@index,w
  8891  12FB  160A  158A  20FD  160A  118A  	fcall	___bmul
  8892  1300  3E11               	addlw	(low ((_scheduler| (0+256)+1)))& (0+255)
  8893  1301  0084               	movwf	4
  8894  1302  1783               	bsf	3,7	;select IRP bank2
  8895  1303  0180               	clrf	0
  8896  1304  0A84               	incf	4,f
  8897  1305  0180               	clrf	0
  8898                           
  8899                           ;Scheduler.c: 62:  scheduler.task[ index ].delay = 0;
  8900  1306  3006               	movlw	6
  8901  1307  00FF               	movwf	btemp+1
  8902  1308  087F               	movf	btemp+1,w
  8903  1309  1283               	bcf	3,5	;RP0=0, select bank0
  8904  130A  1303               	bcf	3,6	;RP1=0, select bank0
  8905  130B  00A0               	movwf	___bmul@multiplicand
  8906  130C  0823               	movf	Scheduler_deleteTask@index,w
  8907  130D  160A  158A  20FD  160A  118A  	fcall	___bmul
  8908  1312  3E13               	addlw	(low ((_scheduler| (0+256)+3)))& (0+255)
  8909  1313  0084               	movwf	4
  8910  1314  1783               	bsf	3,7	;select IRP bank2
  8911  1315  0180               	clrf	0
  8912                           
  8913                           ;Scheduler.c: 63:  scheduler.task[ index ].period = 0;
  8914  1316  3006               	movlw	6
  8915  1317  00FF               	movwf	btemp+1
  8916  1318  087F               	movf	btemp+1,w
  8917  1319  1283               	bcf	3,5	;RP0=0, select bank0
  8918  131A  1303               	bcf	3,6	;RP1=0, select bank0
  8919  131B  00A0               	movwf	___bmul@multiplicand
  8920  131C  0823               	movf	Scheduler_deleteTask@index,w
  8921  131D  160A  158A  20FD  160A  118A  	fcall	___bmul
  8922  1322  3E14               	addlw	(low ((_scheduler| (0+256)+4)))& (0+255)
  8923  1323  0084               	movwf	4
  8924  1324  1783               	bsf	3,7	;select IRP bank2
  8925  1325  0180               	clrf	0
  8926                           
  8927                           ;Scheduler.c: 64:  scheduler.task[ index ].runMe = 0;
  8928  1326  3006               	movlw	6
  8929  1327  00FF               	movwf	btemp+1
  8930  1328  087F               	movf	btemp+1,w
  8931  1329  1283               	bcf	3,5	;RP0=0, select bank0
  8932  132A  1303               	bcf	3,6	;RP1=0, select bank0
  8933  132B  00A0               	movwf	___bmul@multiplicand
  8934  132C  0823               	movf	Scheduler_deleteTask@index,w
  8935  132D  160A  158A  20FD  160A  118A  	fcall	___bmul
  8936  1332  3E15               	addlw	(low ((_scheduler| (0+256)+5)))& (0+255)
  8937  1333  0084               	movwf	4
  8938  1334  1783               	bsf	3,7	;select IRP bank2
  8939  1335  0180               	clrf	0
  8940  1336                     l117:
  8941  1336  0008               	return
  8942  1337                     __end_of_Scheduler_deleteTask:
  8943                           
  8944                           	psect	text39
  8945  1E97                     __ptext39:	
  8946 ;; *************** function _setLedHardwareState *****************
  8947 ;; Defined at:
  8948 ;;		line 57 in file "Led.c"
  8949 ;; Parameters:    Size  Location     Type
  8950 ;;  id              1    wreg     enum E1226
  8951 ;;  state           1   14[BANK0 ] enum E1231
  8952 ;; Auto vars:     Size  Location     Type
  8953 ;;  id              1   17[BANK0 ] enum E1226
  8954 ;; Return value:  Size  Location     Type
  8955 ;;                  1    wreg      void 
  8956 ;; Registers used:
  8957 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8958 ;; Tracked objects:
  8959 ;;		On entry : 0/0
  8960 ;;		On exit  : 0/0
  8961 ;;		Unchanged: 0/0
  8962 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8963 ;;      Params:         0       1       0       0       0
  8964 ;;      Locals:         0       1       0       0       0
  8965 ;;      Temps:          0       2       0       0       0
  8966 ;;      Totals:         0       4       0       0       0
  8967 ;;Total ram usage:        4 bytes
  8968 ;; Hardware stack levels used:    1
  8969 ;; Hardware stack levels required when called:    4
  8970 ;; This function calls:
  8971 ;;		_Gpio_setPinState
  8972 ;; This function is called by:
  8973 ;;		_Led_update
  8974 ;; This function uses a non-reentrant model
  8975 ;;
  8976                           
  8977                           
  8978                           ;psect for function _setLedHardwareState
  8979  1E97                     _setLedHardwareState:
  8980                           
  8981                           ;incstack = 0
  8982                           ; Regs used in _setLedHardwareState: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack
      +                          ]
  8983                           ;setLedHardwareState@id stored from wreg
  8984  1E97  1283               	bcf	3,5	;RP0=0, select bank0
  8985  1E98  1303               	bcf	3,6	;RP1=0, select bank0
  8986  1E99  00B1               	movwf	setLedHardwareState@id
  8987  1E9A                     l2322:
  8988                           
  8989                           ;Led.c: 57: void setLedHardwareState( LED_ID_t id, LED_STATE_t state );Led.c: 58: {;Led.
      +                          c: 59:  if( state == LED_STATE_OFF )
  8990  1E9A  082E               	movf	setLedHardwareState@state,w
  8991  1E9B  1D03               	btfss	3,2
  8992  1E9C  2E9E               	goto	u1961
  8993  1E9D  2E9F               	goto	u1960
  8994  1E9E                     u1961:
  8995  1E9E  2EC4               	goto	l2326
  8996  1E9F                     u1960:
  8997  1E9F                     l2324:
  8998                           
  8999                           ;Led.c: 60:  {;Led.c: 61:   Gpio_setPinState( led[ id ].gpioId, led[ id ].gpioPin, GPIO_
      +                          STATE_LOW );
  9000  1E9F  0831               	movf	setLedHardwareState@id,w
  9001  1EA0  00AF               	movwf	??_setLedHardwareState
  9002  1EA1  3002               	movlw	2
  9003  1EA2                     u1975:
  9004  1EA2  1003               	clrc
  9005  1EA3  0DAF               	rlf	??_setLedHardwareState,f
  9006  1EA4  3EFF               	addlw	-1
  9007  1EA5  1D03               	skipz
  9008  1EA6  2EA2               	goto	u1975
  9009  1EA7  1003               	clrc
  9010  1EA8  0D2F               	rlf	??_setLedHardwareState,w
  9011  1EA9  3EBA               	addlw	(low ((_led| 0+1)))& (0+255)
  9012  1EAA  0084               	movwf	4
  9013  1EAB  1383               	bcf	3,7	;select IRP bank1
  9014  1EAC  0800               	movf	0,w
  9015  1EAD  00FF               	movwf	btemp+1
  9016  1EAE  087F               	movf	btemp+1,w
  9017  1EAF  00A3               	movwf	Gpio_setPinState@pin
  9018  1EB0  01A4               	clrf	Gpio_setPinState@state
  9019  1EB1  0831               	movf	setLedHardwareState@id,w
  9020  1EB2  00B0               	movwf	??_setLedHardwareState+1
  9021  1EB3  3002               	movlw	2
  9022  1EB4                     u1985:
  9023  1EB4  1003               	clrc
  9024  1EB5  0DB0               	rlf	??_setLedHardwareState+1,f
  9025  1EB6  3EFF               	addlw	-1
  9026  1EB7  1D03               	skipz
  9027  1EB8  2EB4               	goto	u1985
  9028  1EB9  1003               	clrc
  9029  1EBA  0D30               	rlf	??_setLedHardwareState+1,w
  9030  1EBB  3EB9               	addlw	(low (_led| 0))& (0+255)
  9031  1EBC  0084               	movwf	4
  9032  1EBD  0800               	movf	0,w
  9033  1EBE  160A  158A  24AB  160A  158A  	fcall	_Gpio_setPinState
  9034                           
  9035                           ;Led.c: 62:  }else if( state == LED_STATE_ON )
  9036  1EC3  2EEE               	goto	l179
  9037  1EC4                     l2326:
  9038  1EC4  032E               	decf	setLedHardwareState@state,w
  9039  1EC5  1D03               	btfss	3,2
  9040  1EC6  2EC8               	goto	u1991
  9041  1EC7  2EC9               	goto	u1990
  9042  1EC8                     u1991:
  9043  1EC8  2EEE               	goto	l179
  9044  1EC9                     u1990:
  9045  1EC9                     l2328:
  9046                           
  9047                           ;Led.c: 63:  {;Led.c: 64:   Gpio_setPinState( led[ id ].gpioId, led[ id ].gpioPin, GPIO_
      +                          STATE_HIGH );
  9048  1EC9  0831               	movf	setLedHardwareState@id,w
  9049  1ECA  00AF               	movwf	??_setLedHardwareState
  9050  1ECB  3002               	movlw	2
  9051  1ECC                     u2005:
  9052  1ECC  1003               	clrc
  9053  1ECD  0DAF               	rlf	??_setLedHardwareState,f
  9054  1ECE  3EFF               	addlw	-1
  9055  1ECF  1D03               	skipz
  9056  1ED0  2ECC               	goto	u2005
  9057  1ED1  1003               	clrc
  9058  1ED2  0D2F               	rlf	??_setLedHardwareState,w
  9059  1ED3  3EBA               	addlw	(low ((_led| 0+1)))& (0+255)
  9060  1ED4  0084               	movwf	4
  9061  1ED5  1383               	bcf	3,7	;select IRP bank1
  9062  1ED6  0800               	movf	0,w
  9063  1ED7  00FF               	movwf	btemp+1
  9064  1ED8  087F               	movf	btemp+1,w
  9065  1ED9  00A3               	movwf	Gpio_setPinState@pin
  9066  1EDA  01A4               	clrf	Gpio_setPinState@state
  9067  1EDB  0AA4               	incf	Gpio_setPinState@state,f
  9068  1EDC  0831               	movf	setLedHardwareState@id,w
  9069  1EDD  00B0               	movwf	??_setLedHardwareState+1
  9070  1EDE  3002               	movlw	2
  9071  1EDF                     u2015:
  9072  1EDF  1003               	clrc
  9073  1EE0  0DB0               	rlf	??_setLedHardwareState+1,f
  9074  1EE1  3EFF               	addlw	-1
  9075  1EE2  1D03               	skipz
  9076  1EE3  2EDF               	goto	u2015
  9077  1EE4  1003               	clrc
  9078  1EE5  0D30               	rlf	??_setLedHardwareState+1,w
  9079  1EE6  3EB9               	addlw	(low (_led| 0))& (0+255)
  9080  1EE7  0084               	movwf	4
  9081  1EE8  0800               	movf	0,w
  9082  1EE9  160A  158A  24AB  160A  158A  	fcall	_Gpio_setPinState
  9083  1EEE                     l179:	
  9084                           ;Led.c: 65:  }else
  9085                           
  9086  1EEE  0008               	return
  9087  1EEF                     __end_of_setLedHardwareState:
  9088                           
  9089                           	psect	text40
  9090  1CAB                     __ptext40:	
  9091 ;; *************** function _Gpio_setPinState *****************
  9092 ;; Defined at:
  9093 ;;		line 28 in file "Gpio.c"
  9094 ;; Parameters:    Size  Location     Type
  9095 ;;  id              1    wreg     enum E1172
  9096 ;;  pin             1    3[BANK0 ] enum E1180
  9097 ;;  state           1    4[BANK0 ] enum E1202
  9098 ;; Auto vars:     Size  Location     Type
  9099 ;;  id              1   13[BANK0 ] enum E1172
  9100 ;; Return value:  Size  Location     Type
  9101 ;;                  1    wreg      void 
  9102 ;; Registers used:
  9103 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  9104 ;; Tracked objects:
  9105 ;;		On entry : 0/0
  9106 ;;		On exit  : 0/0
  9107 ;;		Unchanged: 0/0
  9108 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9109 ;;      Params:         0       2       0       0       0
  9110 ;;      Locals:         0       1       0       0       0
  9111 ;;      Temps:          0       8       0       0       0
  9112 ;;      Totals:         0      11       0       0       0
  9113 ;;Total ram usage:       11 bytes
  9114 ;; Hardware stack levels used:    1
  9115 ;; Hardware stack levels required when called:    3
  9116 ;; This function calls:
  9117 ;;		Nothing
  9118 ;; This function is called by:
  9119 ;;		_setLedHardwareState
  9120 ;;		_setSsdHardwareState
  9121 ;;		_setTempctrlHardwareState
  9122 ;; This function uses a non-reentrant model
  9123 ;;
  9124                           
  9125                           
  9126                           ;psect for function _Gpio_setPinState
  9127  1CAB                     _Gpio_setPinState:
  9128                           
  9129                           ;incstack = 0
  9130                           ; Regs used in _Gpio_setPinState: [wreg-fsr0h+status,2+status,0+btemp+1]
  9131                           ;Gpio_setPinState@id stored from wreg
  9132  1CAB  1283               	bcf	3,5	;RP0=0, select bank0
  9133  1CAC  1303               	bcf	3,6	;RP1=0, select bank0
  9134  1CAD  00AD               	movwf	Gpio_setPinState@id
  9135  1CAE                     l2200:
  9136                           
  9137                           ;Gpio.c: 28: void Gpio_setPinState( GPIO_ID_t id, GPIO_PIN_t pin, GPIO_STATE_t state );G
      +                          pio.c: 29: {;Gpio.c: 30:     state &= 0x1;
  9138  1CAE  3001               	movlw	1
  9139  1CAF  00FF               	movwf	btemp+1
  9140  1CB0  087F               	movf	btemp+1,w
  9141  1CB1  05A4               	andwf	Gpio_setPinState@state,f
  9142  1CB2                     l2202:
  9143                           
  9144                           ;Gpio.c: 31:  gpio[ id ]->PORT = ( gpio[ id ]->PORT & ~( 1 << pin ) ) | ( state << pin )
      +                          ;
  9145  1CB2  0824               	movf	Gpio_setPinState@state,w
  9146  1CB3  00A5               	movwf	??_Gpio_setPinState
  9147  1CB4  0A23               	incf	Gpio_setPinState@pin,w
  9148  1CB5  2CB8               	goto	u1744
  9149  1CB6                     u1745:
  9150  1CB6  1003               	clrc
  9151  1CB7  0DA5               	rlf	??_Gpio_setPinState,f
  9152  1CB8                     u1744:
  9153  1CB8  3EFF               	addlw	-1
  9154  1CB9  1D03               	skipz
  9155  1CBA  2CB6               	goto	u1745
  9156  1CBB  082D               	movf	Gpio_setPinState@id,w
  9157  1CBC  00A6               	movwf	??_Gpio_setPinState+1
  9158  1CBD  0726               	addwf	??_Gpio_setPinState+1,w
  9159  1CBE  3E5C               	addlw	(low (_gpio| 0))& (0+255)
  9160  1CBF  0084               	movwf	4
  9161  1CC0  1383               	bcf	3,7	;select IRP bank0
  9162  1CC1  0800               	movf	0,w
  9163  1CC2  00A7               	movwf	??_Gpio_setPinState+2
  9164  1CC3  0A84               	incf	4,f
  9165  1CC4  0800               	movf	0,w
  9166  1CC5  00A8               	movwf	??_Gpio_setPinState+3
  9167  1CC6  0827               	movf	??_Gpio_setPinState+2,w
  9168  1CC7  0084               	movwf	4
  9169  1CC8  1783               	bsf	3,7
  9170  1CC9  1C28               	btfss	??_Gpio_setPinState+3,0
  9171  1CCA  1383               	bcf	3,7
  9172  1CCB  3001               	movlw	1
  9173  1CCC  00A9               	movwf	??_Gpio_setPinState+4
  9174  1CCD  0A23               	incf	Gpio_setPinState@pin,w
  9175  1CCE  2CD1               	goto	u1754
  9176  1CCF                     u1755:
  9177  1CCF  1003               	clrc
  9178  1CD0  0DA9               	rlf	??_Gpio_setPinState+4,f
  9179  1CD1                     u1754:
  9180  1CD1  3EFF               	addlw	-1
  9181  1CD2  1D03               	skipz
  9182  1CD3  2CCF               	goto	u1755
  9183  1CD4  0829               	movf	??_Gpio_setPinState+4,w
  9184  1CD5  3AFF               	xorlw	255
  9185  1CD6  0500               	andwf	0,w
  9186  1CD7  0425               	iorwf	??_Gpio_setPinState,w
  9187  1CD8  00FF               	movwf	btemp+1
  9188  1CD9  082D               	movf	Gpio_setPinState@id,w
  9189  1CDA  00AA               	movwf	??_Gpio_setPinState+5
  9190  1CDB  072A               	addwf	??_Gpio_setPinState+5,w
  9191  1CDC  3E5C               	addlw	(low (_gpio| 0))& (0+255)
  9192  1CDD  0084               	movwf	4
  9193  1CDE  1383               	bcf	3,7	;select IRP bank0
  9194  1CDF  0800               	movf	0,w
  9195  1CE0  00AB               	movwf	??_Gpio_setPinState+6
  9196  1CE1  0A84               	incf	4,f
  9197  1CE2  0800               	movf	0,w
  9198  1CE3  00AC               	movwf	??_Gpio_setPinState+7
  9199  1CE4  082B               	movf	??_Gpio_setPinState+6,w
  9200  1CE5  0084               	movwf	4
  9201  1CE6  1783               	bsf	3,7
  9202  1CE7  1C2C               	btfss	??_Gpio_setPinState+7,0
  9203  1CE8  1383               	bcf	3,7
  9204  1CE9  087F               	movf	btemp+1,w
  9205  1CEA  0080               	movwf	0
  9206  1CEB                     l502:
  9207  1CEB  0008               	return
  9208  1CEC                     __end_of_Gpio_setPinState:
  9209                           
  9210                           	psect	text41
  9211  1F47                     __ptext41:	
  9212 ;; *************** function ___awmod *****************
  9213 ;; Defined at:
  9214 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\awmod.c"
  9215 ;; Parameters:    Size  Location     Type
  9216 ;;  divisor         2   11[BANK0 ] int 
  9217 ;;  dividend        2   13[BANK0 ] int 
  9218 ;; Auto vars:     Size  Location     Type
  9219 ;;  sign            1   16[BANK0 ] unsigned char 
  9220 ;;  counter         1   15[BANK0 ] unsigned char 
  9221 ;; Return value:  Size  Location     Type
  9222 ;;                  2   11[BANK0 ] int 
  9223 ;; Registers used:
  9224 ;;		wreg, status,2, status,0, btemp+1
  9225 ;; Tracked objects:
  9226 ;;		On entry : 0/0
  9227 ;;		On exit  : 0/0
  9228 ;;		Unchanged: 0/0
  9229 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9230 ;;      Params:         0       4       0       0       0
  9231 ;;      Locals:         0       2       0       0       0
  9232 ;;      Temps:          0       0       0       0       0
  9233 ;;      Totals:         0       6       0       0       0
  9234 ;;Total ram usage:        6 bytes
  9235 ;; Hardware stack levels used:    1
  9236 ;; Hardware stack levels required when called:    3
  9237 ;; This function calls:
  9238 ;;		Nothing
  9239 ;; This function is called by:
  9240 ;;		_Heater_update
  9241 ;; This function uses a non-reentrant model
  9242 ;;
  9243                           
  9244                           
  9245                           ;psect for function ___awmod
  9246  1F47                     ___awmod:
  9247  1F47                     l2506:	
  9248                           ;incstack = 0
  9249                           ; Regs used in ___awmod: [wreg+status,2+status,0+btemp+1]
  9250                           
  9251  1F47  1283               	bcf	3,5	;RP0=0, select bank0
  9252  1F48  1303               	bcf	3,6	;RP1=0, select bank0
  9253  1F49  01B0               	clrf	___awmod@sign
  9254  1F4A                     l2508:
  9255  1F4A  1FAE               	btfss	___awmod@dividend+1,7
  9256  1F4B  2F4D               	goto	u2291
  9257  1F4C  2F4E               	goto	u2290
  9258  1F4D                     u2291:
  9259  1F4D  2F55               	goto	l2514
  9260  1F4E                     u2290:
  9261  1F4E                     l2510:
  9262  1F4E  09AD               	comf	___awmod@dividend,f
  9263  1F4F  09AE               	comf	___awmod@dividend+1,f
  9264  1F50  0AAD               	incf	___awmod@dividend,f
  9265  1F51  1903               	skipnz
  9266  1F52  0AAE               	incf	___awmod@dividend+1,f
  9267  1F53                     l2512:
  9268  1F53  01B0               	clrf	___awmod@sign
  9269  1F54  0AB0               	incf	___awmod@sign,f
  9270  1F55                     l2514:
  9271  1F55  1FAC               	btfss	___awmod@divisor+1,7
  9272  1F56  2F58               	goto	u2301
  9273  1F57  2F59               	goto	u2300
  9274  1F58                     u2301:
  9275  1F58  2F5E               	goto	l2518
  9276  1F59                     u2300:
  9277  1F59                     l2516:
  9278  1F59  09AB               	comf	___awmod@divisor,f
  9279  1F5A  09AC               	comf	___awmod@divisor+1,f
  9280  1F5B  0AAB               	incf	___awmod@divisor,f
  9281  1F5C  1903               	skipnz
  9282  1F5D  0AAC               	incf	___awmod@divisor+1,f
  9283  1F5E                     l2518:
  9284  1F5E  082B               	movf	___awmod@divisor,w
  9285  1F5F  042C               	iorwf	___awmod@divisor+1,w
  9286  1F60  1903               	btfsc	3,2
  9287  1F61  2F63               	goto	u2311
  9288  1F62  2F64               	goto	u2310
  9289  1F63                     u2311:
  9290  1F63  2F93               	goto	l2536
  9291  1F64                     u2310:
  9292  1F64                     l2520:
  9293  1F64  01AF               	clrf	___awmod@counter
  9294  1F65  0AAF               	incf	___awmod@counter,f
  9295  1F66  2F72               	goto	l2526
  9296  1F67                     l2522:
  9297  1F67  3001               	movlw	1
  9298  1F68                     u2325:
  9299  1F68  1003               	clrc
  9300  1F69  0DAB               	rlf	___awmod@divisor,f
  9301  1F6A  0DAC               	rlf	___awmod@divisor+1,f
  9302  1F6B  3EFF               	addlw	-1
  9303  1F6C  1D03               	skipz
  9304  1F6D  2F68               	goto	u2325
  9305  1F6E                     l2524:
  9306  1F6E  3001               	movlw	1
  9307  1F6F  00FF               	movwf	btemp+1
  9308  1F70  087F               	movf	btemp+1,w
  9309  1F71  07AF               	addwf	___awmod@counter,f
  9310  1F72                     l2526:
  9311  1F72  1FAC               	btfss	___awmod@divisor+1,7
  9312  1F73  2F75               	goto	u2331
  9313  1F74  2F76               	goto	u2330
  9314  1F75                     u2331:
  9315  1F75  2F67               	goto	l2522
  9316  1F76                     u2330:
  9317  1F76                     l2528:
  9318  1F76  082C               	movf	___awmod@divisor+1,w
  9319  1F77  022E               	subwf	___awmod@dividend+1,w
  9320  1F78  1D03               	skipz
  9321  1F79  2F7C               	goto	u2345
  9322  1F7A  082B               	movf	___awmod@divisor,w
  9323  1F7B  022D               	subwf	___awmod@dividend,w
  9324  1F7C                     u2345:
  9325  1F7C  1C03               	skipc
  9326  1F7D  2F7F               	goto	u2341
  9327  1F7E  2F80               	goto	u2340
  9328  1F7F                     u2341:
  9329  1F7F  2F86               	goto	l2532
  9330  1F80                     u2340:
  9331  1F80                     l2530:
  9332  1F80  082B               	movf	___awmod@divisor,w
  9333  1F81  02AD               	subwf	___awmod@dividend,f
  9334  1F82  082C               	movf	___awmod@divisor+1,w
  9335  1F83  1C03               	skipc
  9336  1F84  03AE               	decf	___awmod@dividend+1,f
  9337  1F85  02AE               	subwf	___awmod@dividend+1,f
  9338  1F86                     l2532:
  9339  1F86  3001               	movlw	1
  9340  1F87                     u2355:
  9341  1F87  1003               	clrc
  9342  1F88  0CAC               	rrf	___awmod@divisor+1,f
  9343  1F89  0CAB               	rrf	___awmod@divisor,f
  9344  1F8A  3EFF               	addlw	-1
  9345  1F8B  1D03               	skipz
  9346  1F8C  2F87               	goto	u2355
  9347  1F8D                     l2534:
  9348  1F8D  3001               	movlw	1
  9349  1F8E  02AF               	subwf	___awmod@counter,f
  9350  1F8F  1D03               	btfss	3,2
  9351  1F90  2F92               	goto	u2361
  9352  1F91  2F93               	goto	u2360
  9353  1F92                     u2361:
  9354  1F92  2F76               	goto	l2528
  9355  1F93                     u2360:
  9356  1F93                     l2536:
  9357  1F93  0830               	movf	___awmod@sign,w
  9358  1F94  1903               	btfsc	3,2
  9359  1F95  2F97               	goto	u2371
  9360  1F96  2F98               	goto	u2370
  9361  1F97                     u2371:
  9362  1F97  2F9D               	goto	l2540
  9363  1F98                     u2370:
  9364  1F98                     l2538:
  9365  1F98  09AD               	comf	___awmod@dividend,f
  9366  1F99  09AE               	comf	___awmod@dividend+1,f
  9367  1F9A  0AAD               	incf	___awmod@dividend,f
  9368  1F9B  1903               	skipnz
  9369  1F9C  0AAE               	incf	___awmod@dividend+1,f
  9370  1F9D                     l2540:
  9371  1F9D  082E               	movf	___awmod@dividend+1,w
  9372  1F9E  00AC               	movwf	?___awmod+1
  9373  1F9F  082D               	movf	___awmod@dividend,w
  9374  1FA0  00AB               	movwf	?___awmod
  9375  1FA1                     l832:
  9376  1FA1  0008               	return
  9377  1FA2                     __end_of___awmod:
  9378                           
  9379                           	psect	text42
  9380  1265                     __ptext42:	
  9381 ;; *************** function ___awdiv *****************
  9382 ;; Defined at:
  9383 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\awdiv.c"
  9384 ;; Parameters:    Size  Location     Type
  9385 ;;  divisor         2    3[BANK0 ] int 
  9386 ;;  dividend        2    5[BANK0 ] int 
  9387 ;; Auto vars:     Size  Location     Type
  9388 ;;  quotient        2    9[BANK0 ] int 
  9389 ;;  sign            1    8[BANK0 ] unsigned char 
  9390 ;;  counter         1    7[BANK0 ] unsigned char 
  9391 ;; Return value:  Size  Location     Type
  9392 ;;                  2    3[BANK0 ] int 
  9393 ;; Registers used:
  9394 ;;		wreg, status,2, status,0, btemp+1
  9395 ;; Tracked objects:
  9396 ;;		On entry : 0/0
  9397 ;;		On exit  : 0/0
  9398 ;;		Unchanged: 0/0
  9399 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9400 ;;      Params:         0       4       0       0       0
  9401 ;;      Locals:         0       4       0       0       0
  9402 ;;      Temps:          0       0       0       0       0
  9403 ;;      Totals:         0       8       0       0       0
  9404 ;;Total ram usage:        8 bytes
  9405 ;; Hardware stack levels used:    1
  9406 ;; Hardware stack levels required when called:    3
  9407 ;; This function calls:
  9408 ;;		Nothing
  9409 ;; This function is called by:
  9410 ;;		_Heater_update
  9411 ;; This function uses a non-reentrant model
  9412 ;;
  9413                           
  9414                           
  9415                           ;psect for function ___awdiv
  9416  1265                     ___awdiv:
  9417  1265                     l2462:	
  9418                           ;incstack = 0
  9419                           ; Regs used in ___awdiv: [wreg+status,2+status,0+btemp+1]
  9420                           
  9421  1265  1283               	bcf	3,5	;RP0=0, select bank0
  9422  1266  1303               	bcf	3,6	;RP1=0, select bank0
  9423  1267  01A8               	clrf	___awdiv@sign
  9424  1268                     l2464:
  9425  1268  1FA4               	btfss	___awdiv@divisor+1,7
  9426  1269  2A6B               	goto	u2191
  9427  126A  2A6C               	goto	u2190
  9428  126B                     u2191:
  9429  126B  2A73               	goto	l2470
  9430  126C                     u2190:
  9431  126C                     l2466:
  9432  126C  09A3               	comf	___awdiv@divisor,f
  9433  126D  09A4               	comf	___awdiv@divisor+1,f
  9434  126E  0AA3               	incf	___awdiv@divisor,f
  9435  126F  1903               	skipnz
  9436  1270  0AA4               	incf	___awdiv@divisor+1,f
  9437  1271                     l2468:
  9438  1271  01A8               	clrf	___awdiv@sign
  9439  1272  0AA8               	incf	___awdiv@sign,f
  9440  1273                     l2470:
  9441  1273  1FA6               	btfss	___awdiv@dividend+1,7
  9442  1274  2A76               	goto	u2201
  9443  1275  2A77               	goto	u2200
  9444  1276                     u2201:
  9445  1276  2A80               	goto	l2476
  9446  1277                     u2200:
  9447  1277                     l2472:
  9448  1277  09A5               	comf	___awdiv@dividend,f
  9449  1278  09A6               	comf	___awdiv@dividend+1,f
  9450  1279  0AA5               	incf	___awdiv@dividend,f
  9451  127A  1903               	skipnz
  9452  127B  0AA6               	incf	___awdiv@dividend+1,f
  9453  127C                     l2474:
  9454  127C  3001               	movlw	1
  9455  127D  00FF               	movwf	btemp+1
  9456  127E  087F               	movf	btemp+1,w
  9457  127F  06A8               	xorwf	___awdiv@sign,f
  9458  1280                     l2476:
  9459  1280  01A9               	clrf	___awdiv@quotient
  9460  1281  01AA               	clrf	___awdiv@quotient+1
  9461  1282                     l2478:
  9462  1282  0823               	movf	___awdiv@divisor,w
  9463  1283  0424               	iorwf	___awdiv@divisor+1,w
  9464  1284  1903               	btfsc	3,2
  9465  1285  2A87               	goto	u2211
  9466  1286  2A88               	goto	u2210
  9467  1287                     u2211:
  9468  1287  2ABF               	goto	l2498
  9469  1288                     u2210:
  9470  1288                     l2480:
  9471  1288  01A7               	clrf	___awdiv@counter
  9472  1289  0AA7               	incf	___awdiv@counter,f
  9473  128A  2A96               	goto	l2486
  9474  128B                     l2482:
  9475  128B  3001               	movlw	1
  9476  128C                     u2225:
  9477  128C  1003               	clrc
  9478  128D  0DA3               	rlf	___awdiv@divisor,f
  9479  128E  0DA4               	rlf	___awdiv@divisor+1,f
  9480  128F  3EFF               	addlw	-1
  9481  1290  1D03               	skipz
  9482  1291  2A8C               	goto	u2225
  9483  1292                     l2484:
  9484  1292  3001               	movlw	1
  9485  1293  00FF               	movwf	btemp+1
  9486  1294  087F               	movf	btemp+1,w
  9487  1295  07A7               	addwf	___awdiv@counter,f
  9488  1296                     l2486:
  9489  1296  1FA4               	btfss	___awdiv@divisor+1,7
  9490  1297  2A99               	goto	u2231
  9491  1298  2A9A               	goto	u2230
  9492  1299                     u2231:
  9493  1299  2A8B               	goto	l2482
  9494  129A                     u2230:
  9495  129A                     l2488:
  9496  129A  3001               	movlw	1
  9497  129B                     u2245:
  9498  129B  1003               	clrc
  9499  129C  0DA9               	rlf	___awdiv@quotient,f
  9500  129D  0DAA               	rlf	___awdiv@quotient+1,f
  9501  129E  3EFF               	addlw	-1
  9502  129F  1D03               	skipz
  9503  12A0  2A9B               	goto	u2245
  9504  12A1  0824               	movf	___awdiv@divisor+1,w
  9505  12A2  0226               	subwf	___awdiv@dividend+1,w
  9506  12A3  1D03               	skipz
  9507  12A4  2AA7               	goto	u2255
  9508  12A5  0823               	movf	___awdiv@divisor,w
  9509  12A6  0225               	subwf	___awdiv@dividend,w
  9510  12A7                     u2255:
  9511  12A7  1C03               	skipc
  9512  12A8  2AAA               	goto	u2251
  9513  12A9  2AAB               	goto	u2250
  9514  12AA                     u2251:
  9515  12AA  2AB2               	goto	l2494
  9516  12AB                     u2250:
  9517  12AB                     l2490:
  9518  12AB  0823               	movf	___awdiv@divisor,w
  9519  12AC  02A5               	subwf	___awdiv@dividend,f
  9520  12AD  0824               	movf	___awdiv@divisor+1,w
  9521  12AE  1C03               	skipc
  9522  12AF  03A6               	decf	___awdiv@dividend+1,f
  9523  12B0  02A6               	subwf	___awdiv@dividend+1,f
  9524  12B1                     l2492:
  9525  12B1  1429               	bsf	___awdiv@quotient,0
  9526  12B2                     l2494:
  9527  12B2  3001               	movlw	1
  9528  12B3                     u2265:
  9529  12B3  1003               	clrc
  9530  12B4  0CA4               	rrf	___awdiv@divisor+1,f
  9531  12B5  0CA3               	rrf	___awdiv@divisor,f
  9532  12B6  3EFF               	addlw	-1
  9533  12B7  1D03               	skipz
  9534  12B8  2AB3               	goto	u2265
  9535  12B9                     l2496:
  9536  12B9  3001               	movlw	1
  9537  12BA  02A7               	subwf	___awdiv@counter,f
  9538  12BB  1D03               	btfss	3,2
  9539  12BC  2ABE               	goto	u2271
  9540  12BD  2ABF               	goto	u2270
  9541  12BE                     u2271:
  9542  12BE  2A9A               	goto	l2488
  9543  12BF                     u2270:
  9544  12BF                     l2498:
  9545  12BF  0828               	movf	___awdiv@sign,w
  9546  12C0  1903               	btfsc	3,2
  9547  12C1  2AC3               	goto	u2281
  9548  12C2  2AC4               	goto	u2280
  9549  12C3                     u2281:
  9550  12C3  2AC9               	goto	l2502
  9551  12C4                     u2280:
  9552  12C4                     l2500:
  9553  12C4  09A9               	comf	___awdiv@quotient,f
  9554  12C5  09AA               	comf	___awdiv@quotient+1,f
  9555  12C6  0AA9               	incf	___awdiv@quotient,f
  9556  12C7  1903               	skipnz
  9557  12C8  0AAA               	incf	___awdiv@quotient+1,f
  9558  12C9                     l2502:
  9559  12C9  082A               	movf	___awdiv@quotient+1,w
  9560  12CA  00A4               	movwf	?___awdiv+1
  9561  12CB  0829               	movf	___awdiv@quotient,w
  9562  12CC  00A3               	movwf	?___awdiv
  9563  12CD                     l819:
  9564  12CD  0008               	return
  9565  12CE                     __end_of___awdiv:
  9566                           
  9567                           	psect	text43
  9568  1899                     __ptext43:	
  9569 ;; *************** function _Tempsnsr_getState *****************
  9570 ;; Defined at:
  9571 ;;		line 58 in file "Tempsnsr.c"
  9572 ;; Parameters:    Size  Location     Type
  9573 ;;  id              1    wreg     enum E1244
  9574 ;; Auto vars:     Size  Location     Type
  9575 ;;  id              1    3[BANK0 ] enum E1244
  9576 ;; Return value:  Size  Location     Type
  9577 ;;                  1    wreg      enum E1312
  9578 ;; Registers used:
  9579 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  9580 ;; Tracked objects:
  9581 ;;		On entry : 0/0
  9582 ;;		On exit  : 0/0
  9583 ;;		Unchanged: 0/0
  9584 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9585 ;;      Params:         0       0       0       0       0
  9586 ;;      Locals:         0       1       0       0       0
  9587 ;;      Temps:          0       0       0       0       0
  9588 ;;      Totals:         0       1       0       0       0
  9589 ;;Total ram usage:        1 bytes
  9590 ;; Hardware stack levels used:    1
  9591 ;; Hardware stack levels required when called:    4
  9592 ;; This function calls:
  9593 ;;		___bmul
  9594 ;; This function is called by:
  9595 ;;		_Heater_update
  9596 ;; This function uses a non-reentrant model
  9597 ;;
  9598                           
  9599                           
  9600                           ;psect for function _Tempsnsr_getState
  9601  1899                     _Tempsnsr_getState:
  9602                           
  9603                           ;incstack = 0
  9604                           ; Regs used in _Tempsnsr_getState: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  9605                           ;Tempsnsr_getState@id stored from wreg
  9606  1899  1283               	bcf	3,5	;RP0=0, select bank0
  9607  189A  1303               	bcf	3,6	;RP1=0, select bank0
  9608  189B  00A3               	movwf	Tempsnsr_getState@id
  9609  189C                     l2420:
  9610                           
  9611                           ;Tempsnsr.c: 58: TEMPSNSR_STATE_t Tempsnsr_getState( TEMPSNSR_ID_t id );Tempsnsr.c: 59: 
      +                          {;Tempsnsr.c: 60:     return tempsnsr[ id ].avgTemp;
  9612  189C  3019               	movlw	25
  9613  189D  00FF               	movwf	btemp+1
  9614  189E  087F               	movf	btemp+1,w
  9615  189F  00A0               	movwf	___bmul@multiplicand
  9616  18A0  0823               	movf	Tempsnsr_getState@id,w
  9617  18A1  160A  158A  20FD  160A  158A  	fcall	___bmul
  9618  18A6  3EB8               	addlw	(low ((_tempsnsr| 0+24)))& (0+255)
  9619  18A7  0084               	movwf	4
  9620  18A8  1383               	bcf	3,7	;select IRP bank1
  9621  18A9  0800               	movf	0,w
  9622  18AA                     l569:
  9623  18AA  0008               	return
  9624  18AB                     __end_of_Tempsnsr_getState:
  9625                           
  9626                           	psect	text44
  9627  192B                     __ptext44:	
  9628 ;; *************** function _Tempctrl_setState *****************
  9629 ;; Defined at:
  9630 ;;		line 33 in file "Tempctrl.c"
  9631 ;; Parameters:    Size  Location     Type
  9632 ;;  id              1    wreg     enum E1226
  9633 ;;  state           1    3[BANK0 ] enum E1230
  9634 ;; Auto vars:     Size  Location     Type
  9635 ;;  id              1    4[BANK0 ] enum E1226
  9636 ;; Return value:  Size  Location     Type
  9637 ;;                  1    wreg      void 
  9638 ;; Registers used:
  9639 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  9640 ;; Tracked objects:
  9641 ;;		On entry : 0/0
  9642 ;;		On exit  : 0/0
  9643 ;;		Unchanged: 0/0
  9644 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9645 ;;      Params:         0       1       0       0       0
  9646 ;;      Locals:         0       1       0       0       0
  9647 ;;      Temps:          0       0       0       0       0
  9648 ;;      Totals:         0       2       0       0       0
  9649 ;;Total ram usage:        2 bytes
  9650 ;; Hardware stack levels used:    1
  9651 ;; Hardware stack levels required when called:    4
  9652 ;; This function calls:
  9653 ;;		___bmul
  9654 ;; This function is called by:
  9655 ;;		_Heater_update
  9656 ;; This function uses a non-reentrant model
  9657 ;;
  9658                           
  9659                           
  9660                           ;psect for function _Tempctrl_setState
  9661  192B                     _Tempctrl_setState:
  9662                           
  9663                           ;incstack = 0
  9664                           ; Regs used in _Tempctrl_setState: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  9665                           ;Tempctrl_setState@id stored from wreg
  9666  192B  1283               	bcf	3,5	;RP0=0, select bank0
  9667  192C  1303               	bcf	3,6	;RP1=0, select bank0
  9668  192D  00A4               	movwf	Tempctrl_setState@id
  9669  192E                     l2424:
  9670                           
  9671                           ;Tempctrl.c: 33: void Tempctrl_setState( TEMPCTRL_ID_t id, TEMPCTRL_STATE_t state );Temp
      +                          ctrl.c: 34: {;Tempctrl.c: 35:     tempctrl[ id ].state = state;
  9672  192E  3005               	movlw	5
  9673  192F  00FF               	movwf	btemp+1
  9674  1930  087F               	movf	btemp+1,w
  9675  1931  00A0               	movwf	___bmul@multiplicand
  9676  1932  0824               	movf	Tempctrl_setState@id,w
  9677  1933  160A  158A  20FD  160A  158A  	fcall	___bmul
  9678  1938  3E6A               	addlw	(low ((_tempctrl| 0+4)))& (0+255)
  9679  1939  0084               	movwf	4
  9680  193A  1283               	bcf	3,5	;RP0=0, select bank0
  9681  193B  1303               	bcf	3,6	;RP1=0, select bank0
  9682  193C  0823               	movf	Tempctrl_setState@state,w
  9683  193D  00FF               	movwf	btemp+1
  9684  193E  087F               	movf	btemp+1,w
  9685  193F  1383               	bcf	3,7	;select IRP bank0
  9686  1940  0080               	movwf	0
  9687  1941                     l530:
  9688  1941  0008               	return
  9689  1942                     __end_of_Tempctrl_setState:
  9690                           
  9691                           	psect	text45
  9692  1A56                     __ptext45:	
  9693 ;; *************** function _Switch_getState *****************
  9694 ;; Defined at:
  9695 ;;		line 48 in file "Switch.c"
  9696 ;; Parameters:    Size  Location     Type
  9697 ;;  id              1    wreg     enum E1226
  9698 ;; Auto vars:     Size  Location     Type
  9699 ;;  id              1    4[BANK0 ] enum E1226
  9700 ;;  buffer          1    3[BANK0 ] unsigned char 
  9701 ;; Return value:  Size  Location     Type
  9702 ;;                  1    wreg      enum E1232
  9703 ;; Registers used:
  9704 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  9705 ;; Tracked objects:
  9706 ;;		On entry : 0/0
  9707 ;;		On exit  : 0/0
  9708 ;;		Unchanged: 0/0
  9709 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9710 ;;      Params:         0       0       0       0       0
  9711 ;;      Locals:         0       2       0       0       0
  9712 ;;      Temps:          0       0       0       0       0
  9713 ;;      Totals:         0       2       0       0       0
  9714 ;;Total ram usage:        2 bytes
  9715 ;; Hardware stack levels used:    1
  9716 ;; Hardware stack levels required when called:    4
  9717 ;; This function calls:
  9718 ;;		___bmul
  9719 ;; This function is called by:
  9720 ;;		_Heater_update
  9721 ;; This function uses a non-reentrant model
  9722 ;;
  9723                           
  9724                           
  9725                           ;psect for function _Switch_getState
  9726  1A56                     _Switch_getState:
  9727                           
  9728                           ;incstack = 0
  9729                           ; Regs used in _Switch_getState: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  9730                           ;Switch_getState@id stored from wreg
  9731  1A56  1283               	bcf	3,5	;RP0=0, select bank0
  9732  1A57  1303               	bcf	3,6	;RP1=0, select bank0
  9733  1A58  00A4               	movwf	Switch_getState@id
  9734  1A59                     l2360:
  9735                           
  9736                           ;Switch.c: 48: SW_STATE_t Switch_getState( SW_ID_t id );Switch.c: 49: {;Switch.c: 50:   
      +                            uint8_t buffer = sw[ id ].state;
  9737  1A59  3005               	movlw	5
  9738  1A5A  00FF               	movwf	btemp+1
  9739  1A5B  087F               	movf	btemp+1,w
  9740  1A5C  00A0               	movwf	___bmul@multiplicand
  9741  1A5D  0824               	movf	Switch_getState@id,w
  9742  1A5E  160A  158A  20FD  160A  158A  	fcall	___bmul
  9743  1A63  3E92               	addlw	(low ((_sw| (0+256)+2)))& (0+255)
  9744  1A64  0084               	movwf	4
  9745  1A65  1783               	bsf	3,7	;select IRP bank3
  9746  1A66  0800               	movf	0,w
  9747  1A67  00FF               	movwf	btemp+1
  9748  1A68  087F               	movf	btemp+1,w
  9749  1A69  1283               	bcf	3,5	;RP0=0, select bank0
  9750  1A6A  1303               	bcf	3,6	;RP1=0, select bank0
  9751  1A6B  00A3               	movwf	Switch_getState@buffer
  9752                           
  9753                           ;Switch.c: 51:     sw[ id ].state = SWITCH_STATE_RELEASED;
  9754  1A6C  3005               	movlw	5
  9755  1A6D  00FF               	movwf	btemp+1
  9756  1A6E  087F               	movf	btemp+1,w
  9757  1A6F  00A0               	movwf	___bmul@multiplicand
  9758  1A70  0824               	movf	Switch_getState@id,w
  9759  1A71  160A  158A  20FD  160A  158A  	fcall	___bmul
  9760  1A76  3E92               	addlw	(low ((_sw| (0+256)+2)))& (0+255)
  9761  1A77  0084               	movwf	4
  9762  1A78  1783               	bsf	3,7	;select IRP bank3
  9763  1A79  0180               	clrf	0
  9764  1A7A                     l2362:
  9765                           
  9766                           ;Switch.c: 52:     return buffer;
  9767  1A7A  1283               	bcf	3,5	;RP0=0, select bank0
  9768  1A7B  1303               	bcf	3,6	;RP1=0, select bank0
  9769  1A7C  0823               	movf	Switch_getState@buffer,w
  9770  1A7D                     l203:
  9771  1A7D  0008               	return
  9772  1A7E                     __end_of_Switch_getState:
  9773                           
  9774                           	psect	text46
  9775  1914                     __ptext46:	
  9776 ;; *************** function _Ssd_setSymbol *****************
  9777 ;; Defined at:
  9778 ;;		line 72 in file "Ssd.c"
  9779 ;; Parameters:    Size  Location     Type
  9780 ;;  id              1    wreg     enum E1226
  9781 ;;  symbol          1   17[BANK0 ] enum E1242
  9782 ;; Auto vars:     Size  Location     Type
  9783 ;;  id              1   18[BANK0 ] enum E1226
  9784 ;; Return value:  Size  Location     Type
  9785 ;;                  1    wreg      void 
  9786 ;; Registers used:
  9787 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  9788 ;; Tracked objects:
  9789 ;;		On entry : 0/0
  9790 ;;		On exit  : 0/0
  9791 ;;		Unchanged: 0/0
  9792 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9793 ;;      Params:         0       1       0       0       0
  9794 ;;      Locals:         0       1       0       0       0
  9795 ;;      Temps:          0       0       0       0       0
  9796 ;;      Totals:         0       2       0       0       0
  9797 ;;Total ram usage:        2 bytes
  9798 ;; Hardware stack levels used:    1
  9799 ;; Hardware stack levels required when called:    4
  9800 ;; This function calls:
  9801 ;;		___bmul
  9802 ;; This function is called by:
  9803 ;;		_Heater_update
  9804 ;; This function uses a non-reentrant model
  9805 ;;
  9806                           
  9807                           
  9808                           ;psect for function _Ssd_setSymbol
  9809  1914                     _Ssd_setSymbol:
  9810                           
  9811                           ;incstack = 0
  9812                           ; Regs used in _Ssd_setSymbol: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  9813                           ;Ssd_setSymbol@id stored from wreg
  9814  1914  1283               	bcf	3,5	;RP0=0, select bank0
  9815  1915  1303               	bcf	3,6	;RP1=0, select bank0
  9816  1916  00B2               	movwf	Ssd_setSymbol@id
  9817  1917                     l2378:
  9818                           
  9819                           ;Ssd.c: 72: void Ssd_setSymbol( SSD_ID_t id, SSD_SYMBOL_t symbol );Ssd.c: 73: {;Ssd.c: 7
      +                          4:     ssd[ id ].symbol = symbol;
  9820  1917  300C               	movlw	12
  9821  1918  00FF               	movwf	btemp+1
  9822  1919  087F               	movf	btemp+1,w
  9823  191A  00A0               	movwf	___bmul@multiplicand
  9824  191B  0832               	movf	Ssd_setSymbol@id,w
  9825  191C  160A  158A  20FD  160A  158A  	fcall	___bmul
  9826  1921  3EA4               	addlw	(low ((_ssd| (0+256)+5)))& (0+255)
  9827  1922  0084               	movwf	4
  9828  1923  1283               	bcf	3,5	;RP0=0, select bank0
  9829  1924  1303               	bcf	3,6	;RP1=0, select bank0
  9830  1925  0831               	movf	Ssd_setSymbol@symbol,w
  9831  1926  00FF               	movwf	btemp+1
  9832  1927  087F               	movf	btemp+1,w
  9833  1928  1783               	bsf	3,7	;select IRP bank3
  9834  1929  0080               	movwf	0
  9835  192A                     l247:
  9836  192A  0008               	return
  9837  192B                     __end_of_Ssd_setSymbol:
  9838                           
  9839                           	psect	text47
  9840  1BBE                     __ptext47:	
  9841 ;; *************** function _Ssd_setState *****************
  9842 ;; Defined at:
  9843 ;;		line 66 in file "Ssd.c"
  9844 ;; Parameters:    Size  Location     Type
  9845 ;;  id              1    wreg     enum E1226
  9846 ;;  state           1    7[BANK0 ] enum E1231
  9847 ;;  period          2    8[BANK0 ] enum E1235
  9848 ;; Auto vars:     Size  Location     Type
  9849 ;;  id              1   10[BANK0 ] enum E1226
  9850 ;; Return value:  Size  Location     Type
  9851 ;;                  1    wreg      void 
  9852 ;; Registers used:
  9853 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  9854 ;; Tracked objects:
  9855 ;;		On entry : 0/0
  9856 ;;		On exit  : 0/0
  9857 ;;		Unchanged: 0/0
  9858 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9859 ;;      Params:         0       3       0       0       0
  9860 ;;      Locals:         0       1       0       0       0
  9861 ;;      Temps:          0       0       0       0       0
  9862 ;;      Totals:         0       4       0       0       0
  9863 ;;Total ram usage:        4 bytes
  9864 ;; Hardware stack levels used:    1
  9865 ;; Hardware stack levels required when called:    4
  9866 ;; This function calls:
  9867 ;;		___bmul
  9868 ;;		___lwdiv
  9869 ;; This function is called by:
  9870 ;;		_Heater_update
  9871 ;; This function uses a non-reentrant model
  9872 ;;
  9873                           
  9874                           
  9875                           ;psect for function _Ssd_setState
  9876  1BBE                     _Ssd_setState:
  9877                           
  9878                           ;incstack = 0
  9879                           ; Regs used in _Ssd_setState: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  9880                           ;Ssd_setState@id stored from wreg
  9881  1BBE  1283               	bcf	3,5	;RP0=0, select bank0
  9882  1BBF  1303               	bcf	3,6	;RP1=0, select bank0
  9883  1BC0  00AA               	movwf	Ssd_setState@id
  9884  1BC1                     l2376:
  9885                           
  9886                           ;Ssd.c: 66: void Ssd_setState( SSD_ID_t id, SSD_STATE_t state, SSD_BLINK_t period );Ssd.
      +                          c: 67: {;Ssd.c: 68:     ssd[ id ].state = state;
  9887  1BC1  300C               	movlw	12
  9888  1BC2  00FF               	movwf	btemp+1
  9889  1BC3  087F               	movf	btemp+1,w
  9890  1BC4  00A0               	movwf	___bmul@multiplicand
  9891  1BC5  082A               	movf	Ssd_setState@id,w
  9892  1BC6  160A  158A  20FD  160A  158A  	fcall	___bmul
  9893  1BCB  3EA5               	addlw	(low ((_ssd| (0+256)+6)))& (0+255)
  9894  1BCC  0084               	movwf	4
  9895  1BCD  1283               	bcf	3,5	;RP0=0, select bank0
  9896  1BCE  1303               	bcf	3,6	;RP1=0, select bank0
  9897  1BCF  0827               	movf	Ssd_setState@state,w
  9898  1BD0  00FF               	movwf	btemp+1
  9899  1BD1  087F               	movf	btemp+1,w
  9900  1BD2  1783               	bsf	3,7	;select IRP bank3
  9901  1BD3  0080               	movwf	0
  9902                           
  9903                           ;Ssd.c: 69:  ssd[ id ].period = ( period / ( ( TickType_t ) 5 ) ) / ( 5 / ( ( TickType_t
      +                           ) 5 ) );
  9904  1BD4  300C               	movlw	12
  9905  1BD5  00FF               	movwf	btemp+1
  9906  1BD6  087F               	movf	btemp+1,w
  9907  1BD7  00A0               	movwf	___bmul@multiplicand
  9908  1BD8  082A               	movf	Ssd_setState@id,w
  9909  1BD9  160A  158A  20FD  160A  158A  	fcall	___bmul
  9910  1BDE  3EA7               	addlw	(low ((_ssd| (0+256)+8)))& (0+255)
  9911  1BDF  0084               	movwf	4
  9912  1BE0  3005               	movlw	5
  9913  1BE1  1283               	bcf	3,5	;RP0=0, select bank0
  9914  1BE2  1303               	bcf	3,6	;RP1=0, select bank0
  9915  1BE3  00A0               	movwf	___lwdiv@divisor
  9916  1BE4  3000               	movlw	0
  9917  1BE5  00A1               	movwf	___lwdiv@divisor+1
  9918  1BE6  0829               	movf	Ssd_setState@period+1,w
  9919  1BE7  00A3               	movwf	___lwdiv@dividend+1
  9920  1BE8  0828               	movf	Ssd_setState@period,w
  9921  1BE9  00A2               	movwf	___lwdiv@dividend
  9922  1BEA  160A  158A  2573  160A  158A  	fcall	___lwdiv
  9923  1BEF  1283               	bcf	3,5	;RP0=0, select bank0
  9924  1BF0  1303               	bcf	3,6	;RP1=0, select bank0
  9925  1BF1  0820               	movf	?___lwdiv,w
  9926  1BF2  1783               	bsf	3,7	;select IRP bank3
  9927  1BF3  0080               	movwf	0
  9928  1BF4  0A84               	incf	4,f
  9929  1BF5  0821               	movf	?___lwdiv+1,w
  9930  1BF6  0080               	movwf	0
  9931  1BF7                     l244:
  9932  1BF7  0008               	return
  9933  1BF8                     __end_of_Ssd_setState:
  9934                           
  9935                           	psect	text48
  9936  1E01                     __ptext48:	
  9937 ;; *************** function _Led_setState *****************
  9938 ;; Defined at:
  9939 ;;		line 46 in file "Led.c"
  9940 ;; Parameters:    Size  Location     Type
  9941 ;;  id              1    wreg     enum E1226
  9942 ;;  state           1    7[BANK0 ] enum E1231
  9943 ;;  period          2    8[BANK0 ] enum E1235
  9944 ;; Auto vars:     Size  Location     Type
  9945 ;;  id              1   13[BANK0 ] enum E1226
  9946 ;; Return value:  Size  Location     Type
  9947 ;;                  1    wreg      void 
  9948 ;; Registers used:
  9949 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  9950 ;; Tracked objects:
  9951 ;;		On entry : 0/0
  9952 ;;		On exit  : 0/0
  9953 ;;		Unchanged: 0/0
  9954 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9955 ;;      Params:         0       3       0       0       0
  9956 ;;      Locals:         0       3       0       0       0
  9957 ;;      Temps:          0       1       0       0       0
  9958 ;;      Totals:         0       7       0       0       0
  9959 ;;Total ram usage:        7 bytes
  9960 ;; Hardware stack levels used:    1
  9961 ;; Hardware stack levels required when called:    4
  9962 ;; This function calls:
  9963 ;;		___lwdiv
  9964 ;; This function is called by:
  9965 ;;		_Scheduler_displayError
  9966 ;;		_Heater_update
  9967 ;; This function uses a non-reentrant model
  9968 ;;
  9969                           
  9970                           
  9971                           ;psect for function _Led_setState
  9972  1E01                     _Led_setState:
  9973                           
  9974                           ;incstack = 0
  9975                           ; Regs used in _Led_setState: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  9976                           ;Led_setState@id stored from wreg
  9977  1E01  1283               	bcf	3,5	;RP0=0, select bank0
  9978  1E02  1303               	bcf	3,6	;RP1=0, select bank0
  9979  1E03  00AD               	movwf	Led_setState@id
  9980  1E04                     l2194:
  9981                           
  9982                           ;Led.c: 46: void Led_setState( LED_ID_t id, LED_STATE_t state, LED_BLINK_t period );Led.
      +                          c: 47: {;Led.c: 48:  led[ id ].state = state;
  9983  1E04  0827               	movf	Led_setState@state,w
  9984  1E05  00FF               	movwf	btemp+1
  9985  1E06  082D               	movf	Led_setState@id,w
  9986  1E07  00AA               	movwf	??_Led_setState
  9987  1E08  3002               	movlw	2
  9988  1E09                     u1725:
  9989  1E09  1003               	clrc
  9990  1E0A  0DAA               	rlf	??_Led_setState,f
  9991  1E0B  3EFF               	addlw	-1
  9992  1E0C  1D03               	skipz
  9993  1E0D  2E09               	goto	u1725
  9994  1E0E  1003               	clrc
  9995  1E0F  0D2A               	rlf	??_Led_setState,w
  9996  1E10  3EBB               	addlw	(low ((_led| 0+2)))& (0+255)
  9997  1E11  0084               	movwf	4
  9998  1E12  087F               	movf	btemp+1,w
  9999  1E13  1383               	bcf	3,7	;select IRP bank1
 10000  1E14  0080               	movwf	0
 10001  1E15                     l2196:
 10002                           
 10003                           ;Led.c: 49:  led[ id ].period = ( period / ( ( TickType_t ) 5 ) ) / ( 100 / ( ( TickType
      +                          _t ) 5 ) );
 10004  1E15  3005               	movlw	5
 10005  1E16  00A0               	movwf	___lwdiv@divisor
 10006  1E17  3000               	movlw	0
 10007  1E18  00A1               	movwf	___lwdiv@divisor+1
 10008  1E19  0829               	movf	Led_setState@period+1,w
 10009  1E1A  00A3               	movwf	___lwdiv@dividend+1
 10010  1E1B  0828               	movf	Led_setState@period,w
 10011  1E1C  00A2               	movwf	___lwdiv@dividend
 10012  1E1D  160A  158A  2573  160A  158A  	fcall	___lwdiv
 10013  1E22  1283               	bcf	3,5	;RP0=0, select bank0
 10014  1E23  1303               	bcf	3,6	;RP1=0, select bank0
 10015  1E24  0821               	movf	?___lwdiv+1,w
 10016  1E25  00AC               	movwf	_Led_setState$1877+1
 10017  1E26  0820               	movf	?___lwdiv,w
 10018  1E27  00AB               	movwf	_Led_setState$1877
 10019  1E28                     l2198:
 10020                           
 10021                           ;Led.c: 49:  led[ id ].period = ( period / ( ( TickType_t ) 5 ) ) / ( 100 / ( ( TickType
      +                          _t ) 5 ) );
 10022  1E28  3014               	movlw	20
 10023  1E29  00A0               	movwf	___lwdiv@divisor
 10024  1E2A  3000               	movlw	0
 10025  1E2B  00A1               	movwf	___lwdiv@divisor+1
 10026  1E2C  082C               	movf	_Led_setState$1877+1,w
 10027  1E2D  00A3               	movwf	___lwdiv@dividend+1
 10028  1E2E  082B               	movf	_Led_setState$1877,w
 10029  1E2F  00A2               	movwf	___lwdiv@dividend
 10030  1E30  160A  158A  2573  160A  158A  	fcall	___lwdiv
 10031  1E35  1283               	bcf	3,5	;RP0=0, select bank0
 10032  1E36  1303               	bcf	3,6	;RP1=0, select bank0
 10033  1E37  082D               	movf	Led_setState@id,w
 10034  1E38  00AA               	movwf	??_Led_setState
 10035  1E39  3002               	movlw	2
 10036  1E3A                     u1735:
 10037  1E3A  1003               	clrc
 10038  1E3B  0DAA               	rlf	??_Led_setState,f
 10039  1E3C  3EFF               	addlw	-1
 10040  1E3D  1D03               	skipz
 10041  1E3E  2E3A               	goto	u1735
 10042  1E3F  1003               	clrc
 10043  1E40  0D2A               	rlf	??_Led_setState,w
 10044  1E41  3EBD               	addlw	(low ((_led| 0+4)))& (0+255)
 10045  1E42  0084               	movwf	4
 10046  1E43  0820               	movf	?___lwdiv,w
 10047  1E44  1383               	bcf	3,7	;select IRP bank1
 10048  1E45  0080               	movwf	0
 10049  1E46  0A84               	incf	4,f
 10050  1E47  0821               	movf	?___lwdiv+1,w
 10051  1E48  0080               	movwf	0
 10052  1E49                     l169:
 10053  1E49  0008               	return
 10054  1E4A                     __end_of_Led_setState:
 10055                           
 10056                           	psect	text49
 10057  1D73                     __ptext49:	
 10058 ;; *************** function ___lwdiv *****************
 10059 ;; Defined at:
 10060 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\lwdiv.c"
 10061 ;; Parameters:    Size  Location     Type
 10062 ;;  divisor         2    0[BANK0 ] unsigned int 
 10063 ;;  dividend        2    2[BANK0 ] unsigned int 
 10064 ;; Auto vars:     Size  Location     Type
 10065 ;;  quotient        2    4[BANK0 ] unsigned int 
 10066 ;;  counter         1    6[BANK0 ] unsigned char 
 10067 ;; Return value:  Size  Location     Type
 10068 ;;                  2    0[BANK0 ] unsigned int 
 10069 ;; Registers used:
 10070 ;;		wreg, status,2, status,0, btemp+1
 10071 ;; Tracked objects:
 10072 ;;		On entry : 0/0
 10073 ;;		On exit  : 0/0
 10074 ;;		Unchanged: 0/0
 10075 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10076 ;;      Params:         0       4       0       0       0
 10077 ;;      Locals:         0       3       0       0       0
 10078 ;;      Temps:          0       0       0       0       0
 10079 ;;      Totals:         0       7       0       0       0
 10080 ;;Total ram usage:        7 bytes
 10081 ;; Hardware stack levels used:    1
 10082 ;; Hardware stack levels required when called:    3
 10083 ;; This function calls:
 10084 ;;		Nothing
 10085 ;; This function is called by:
 10086 ;;		_Led_setState
 10087 ;;		_Ssd_setState
 10088 ;; This function uses a non-reentrant model
 10089 ;;
 10090                           
 10091                           
 10092                           ;psect for function ___lwdiv
 10093  1D73                     ___lwdiv:
 10094  1D73                     l2168:	
 10095                           ;incstack = 0
 10096                           ; Regs used in ___lwdiv: [wreg+status,2+status,0+btemp+1]
 10097                           
 10098  1D73  1283               	bcf	3,5	;RP0=0, select bank0
 10099  1D74  1303               	bcf	3,6	;RP1=0, select bank0
 10100  1D75  01A4               	clrf	___lwdiv@quotient
 10101  1D76  01A5               	clrf	___lwdiv@quotient+1
 10102  1D77                     l2170:
 10103  1D77  0820               	movf	___lwdiv@divisor,w
 10104  1D78  0421               	iorwf	___lwdiv@divisor+1,w
 10105  1D79  1903               	btfsc	3,2
 10106  1D7A  2D7C               	goto	u1651
 10107  1D7B  2D7D               	goto	u1650
 10108  1D7C                     u1651:
 10109  1D7C  2DB4               	goto	l2190
 10110  1D7D                     u1650:
 10111  1D7D                     l2172:
 10112  1D7D  01A6               	clrf	___lwdiv@counter
 10113  1D7E  0AA6               	incf	___lwdiv@counter,f
 10114  1D7F  2D8B               	goto	l2178
 10115  1D80                     l2174:
 10116  1D80  3001               	movlw	1
 10117  1D81                     u1665:
 10118  1D81  1003               	clrc
 10119  1D82  0DA0               	rlf	___lwdiv@divisor,f
 10120  1D83  0DA1               	rlf	___lwdiv@divisor+1,f
 10121  1D84  3EFF               	addlw	-1
 10122  1D85  1D03               	skipz
 10123  1D86  2D81               	goto	u1665
 10124  1D87                     l2176:
 10125  1D87  3001               	movlw	1
 10126  1D88  00FF               	movwf	btemp+1
 10127  1D89  087F               	movf	btemp+1,w
 10128  1D8A  07A6               	addwf	___lwdiv@counter,f
 10129  1D8B                     l2178:
 10130  1D8B  1FA1               	btfss	___lwdiv@divisor+1,7
 10131  1D8C  2D8E               	goto	u1671
 10132  1D8D  2D8F               	goto	u1670
 10133  1D8E                     u1671:
 10134  1D8E  2D80               	goto	l2174
 10135  1D8F                     u1670:
 10136  1D8F                     l2180:
 10137  1D8F  3001               	movlw	1
 10138  1D90                     u1685:
 10139  1D90  1003               	clrc
 10140  1D91  0DA4               	rlf	___lwdiv@quotient,f
 10141  1D92  0DA5               	rlf	___lwdiv@quotient+1,f
 10142  1D93  3EFF               	addlw	-1
 10143  1D94  1D03               	skipz
 10144  1D95  2D90               	goto	u1685
 10145  1D96  0821               	movf	___lwdiv@divisor+1,w
 10146  1D97  0223               	subwf	___lwdiv@dividend+1,w
 10147  1D98  1D03               	skipz
 10148  1D99  2D9C               	goto	u1695
 10149  1D9A  0820               	movf	___lwdiv@divisor,w
 10150  1D9B  0222               	subwf	___lwdiv@dividend,w
 10151  1D9C                     u1695:
 10152  1D9C  1C03               	skipc
 10153  1D9D  2D9F               	goto	u1691
 10154  1D9E  2DA0               	goto	u1690
 10155  1D9F                     u1691:
 10156  1D9F  2DA7               	goto	l2186
 10157  1DA0                     u1690:
 10158  1DA0                     l2182:
 10159  1DA0  0820               	movf	___lwdiv@divisor,w
 10160  1DA1  02A2               	subwf	___lwdiv@dividend,f
 10161  1DA2  0821               	movf	___lwdiv@divisor+1,w
 10162  1DA3  1C03               	skipc
 10163  1DA4  03A3               	decf	___lwdiv@dividend+1,f
 10164  1DA5  02A3               	subwf	___lwdiv@dividend+1,f
 10165  1DA6                     l2184:
 10166  1DA6  1424               	bsf	___lwdiv@quotient,0
 10167  1DA7                     l2186:
 10168  1DA7  3001               	movlw	1
 10169  1DA8                     u1705:
 10170  1DA8  1003               	clrc
 10171  1DA9  0CA1               	rrf	___lwdiv@divisor+1,f
 10172  1DAA  0CA0               	rrf	___lwdiv@divisor,f
 10173  1DAB  3EFF               	addlw	-1
 10174  1DAC  1D03               	skipz
 10175  1DAD  2DA8               	goto	u1705
 10176  1DAE                     l2188:
 10177  1DAE  3001               	movlw	1
 10178  1DAF  02A6               	subwf	___lwdiv@counter,f
 10179  1DB0  1D03               	btfss	3,2
 10180  1DB1  2DB3               	goto	u1711
 10181  1DB2  2DB4               	goto	u1710
 10182  1DB3                     u1711:
 10183  1DB3  2D8F               	goto	l2180
 10184  1DB4                     u1710:
 10185  1DB4                     l2190:
 10186  1DB4  0825               	movf	___lwdiv@quotient+1,w
 10187  1DB5  00A1               	movwf	?___lwdiv+1
 10188  1DB6  0824               	movf	___lwdiv@quotient,w
 10189  1DB7  00A0               	movwf	?___lwdiv
 10190  1DB8                     l938:
 10191  1DB8  0008               	return
 10192  1DB9                     __end_of___lwdiv:
 10193                           
 10194                           	psect	text50
 10195  158D                     __ptext50:	
 10196 ;; *************** function _Scheduler_addTask *****************
 10197 ;; Defined at:
 10198 ;;		line 32 in file "Scheduler.c"
 10199 ;; Parameters:    Size  Location     Type
 10200 ;;  task            1    wreg     PTR FTN(PTR void ,)void 
 10201 ;;		 -> Ssd_update(1), Led_update(1), Tempctrl_update(1), Heater_update(1), 
 10202 ;;		 -> Tempsnsr_update(1), Switch_update(1), 
 10203 ;;  paramter        2    3[BANK0 ] PTR void 
 10204 ;;		 -> RAM(512), RAM(512), NULL(0), 
 10205 ;;  delay           1    5[BANK0 ] unsigned char 
 10206 ;;  period          1    6[BANK0 ] unsigned char 
 10207 ;; Auto vars:     Size  Location     Type
 10208 ;;  task            1    7[BANK0 ] PTR FTN(PTR void ,)void 
 10209 ;;		 -> Ssd_update(1), Led_update(1), Tempctrl_update(1), Heater_update(1), 
 10210 ;;		 -> Tempsnsr_update(1), Switch_update(1), 
 10211 ;;  index           2    8[BANK0 ] unsigned int 
 10212 ;; Return value:  Size  Location     Type
 10213 ;;                  1    wreg      unsigned char 
 10214 ;; Registers used:
 10215 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 10216 ;; Tracked objects:
 10217 ;;		On entry : 0/0
 10218 ;;		On exit  : 0/0
 10219 ;;		Unchanged: 0/0
 10220 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10221 ;;      Params:         0       4       0       0       0
 10222 ;;      Locals:         0       3       0       0       0
 10223 ;;      Temps:          0       0       0       0       0
 10224 ;;      Totals:         0       7       0       0       0
 10225 ;;Total ram usage:        7 bytes
 10226 ;; Hardware stack levels used:    1
 10227 ;; Hardware stack levels required when called:    4
 10228 ;; This function calls:
 10229 ;;		___bmul
 10230 ;; This function is called by:
 10231 ;;		_main
 10232 ;; This function uses a non-reentrant model
 10233 ;;
 10234                           
 10235                           
 10236                           ;psect for function _Scheduler_addTask
 10237  158D                     _Scheduler_addTask:
 10238                           
 10239                           ;incstack = 0
 10240                           ; Regs used in _Scheduler_addTask: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
 10241                           ;Scheduler_addTask@task stored from wreg
 10242  158D  1283               	bcf	3,5	;RP0=0, select bank0
 10243  158E  1303               	bcf	3,6	;RP1=0, select bank0
 10244  158F  00A7               	movwf	Scheduler_addTask@task
 10245  1590                     l2956:
 10246                           
 10247                           ;Scheduler.c: 32: UBaseType_t Scheduler_addTask( void (*task)( void *paramter ), void *p
      +                          aramter, UBaseType_t delay, UBaseType_t period );Scheduler.c: 33: {;Scheduler.c: 34:  si
      +                          ze_t index = 0;
 10248  1590  01A8               	clrf	Scheduler_addTask@index
 10249  1591  01A9               	clrf	Scheduler_addTask@index+1
 10250                           
 10251                           ;Scheduler.c: 35:  for( index = 0; index < ( ( UBaseType_t ) 10 ); index++ )
 10252  1592  01A8               	clrf	Scheduler_addTask@index
 10253  1593  01A9               	clrf	Scheduler_addTask@index+1
 10254  1594                     l2962:
 10255                           
 10256                           ;Scheduler.c: 36:  {;Scheduler.c: 37:   if( scheduler.task[ index ].pointer == 0 )
 10257  1594  3006               	movlw	6
 10258  1595  00FF               	movwf	btemp+1
 10259  1596  087F               	movf	btemp+1,w
 10260  1597  00A0               	movwf	___bmul@multiplicand
 10261  1598  0828               	movf	Scheduler_addTask@index,w
 10262  1599  160A  158A  20FD  160A  118A  	fcall	___bmul
 10263  159E  3E10               	addlw	(low (_scheduler| (0+256)))& (0+255)
 10264  159F  0084               	movwf	4
 10265  15A0  1783               	bsf	3,7	;select IRP bank2
 10266  15A1  0800               	movf	0,w
 10267  15A2  1D03               	btfss	3,2
 10268  15A3  2DA5               	goto	u3071
 10269  15A4  2DA6               	goto	u3070
 10270  15A5                     u3071:
 10271  15A5  2DA7               	goto	l2966
 10272  15A6                     u3070:
 10273  15A6  2DB8               	goto	l2968
 10274  15A7                     l2966:
 10275                           
 10276                           ;Scheduler.c: 41:  }
 10277  15A7  3001               	movlw	1
 10278  15A8  1283               	bcf	3,5	;RP0=0, select bank0
 10279  15A9  1303               	bcf	3,6	;RP1=0, select bank0
 10280  15AA  07A8               	addwf	Scheduler_addTask@index,f
 10281  15AB  1803               	skipnc
 10282  15AC  0AA9               	incf	Scheduler_addTask@index+1,f
 10283  15AD  3000               	movlw	0
 10284  15AE  07A9               	addwf	Scheduler_addTask@index+1,f
 10285  15AF  3000               	movlw	0
 10286  15B0  0229               	subwf	Scheduler_addTask@index+1,w
 10287  15B1  300A               	movlw	10
 10288  15B2  1903               	skipnz
 10289  15B3  0228               	subwf	Scheduler_addTask@index,w
 10290  15B4  1C03               	skipc
 10291  15B5  2DB7               	goto	u3081
 10292  15B6  2DB8               	goto	u3080
 10293  15B7                     u3081:
 10294  15B7  2D94               	goto	l2962
 10295  15B8                     u3080:
 10296  15B8                     l2968:
 10297                           
 10298                           ;Scheduler.c: 42:  if( index == ( ( UBaseType_t ) 10 ) )
 10299  15B8  300A               	movlw	10
 10300  15B9  1283               	bcf	3,5	;RP0=0, select bank0
 10301  15BA  1303               	bcf	3,6	;RP1=0, select bank0
 10302  15BB  0628               	xorwf	Scheduler_addTask@index,w
 10303  15BC  0429               	iorwf	Scheduler_addTask@index+1,w
 10304  15BD  1D03               	btfss	3,2
 10305  15BE  2DC0               	goto	u3091
 10306  15BF  2DC1               	goto	u3090
 10307  15C0                     u3091:
 10308  15C0  2DC2               	goto	l2972
 10309  15C1                     u3090:
 10310  15C1  2E1D               	goto	l113
 10311  15C2                     l2972:
 10312                           
 10313                           ;Scheduler.c: 46:  scheduler.task[ index ].pointer = task;
 10314  15C2  3006               	movlw	6
 10315  15C3  00FF               	movwf	btemp+1
 10316  15C4  087F               	movf	btemp+1,w
 10317  15C5  00A0               	movwf	___bmul@multiplicand
 10318  15C6  0828               	movf	Scheduler_addTask@index,w
 10319  15C7  160A  158A  20FD  160A  118A  	fcall	___bmul
 10320  15CC  3E10               	addlw	(low (_scheduler| (0+256)))& (0+255)
 10321  15CD  0084               	movwf	4
 10322  15CE  1283               	bcf	3,5	;RP0=0, select bank0
 10323  15CF  1303               	bcf	3,6	;RP1=0, select bank0
 10324  15D0  0827               	movf	Scheduler_addTask@task,w
 10325  15D1  00FF               	movwf	btemp+1
 10326  15D2  087F               	movf	btemp+1,w
 10327  15D3  1783               	bsf	3,7	;select IRP bank2
 10328  15D4  0080               	movwf	0
 10329                           
 10330                           ;Scheduler.c: 47:  scheduler.task[ index ].paramter = paramter;
 10331  15D5  3006               	movlw	6
 10332  15D6  00FF               	movwf	btemp+1
 10333  15D7  087F               	movf	btemp+1,w
 10334  15D8  00A0               	movwf	___bmul@multiplicand
 10335  15D9  0828               	movf	Scheduler_addTask@index,w
 10336  15DA  160A  158A  20FD  160A  118A  	fcall	___bmul
 10337  15DF  3E11               	addlw	(low ((_scheduler| (0+256)+1)))& (0+255)
 10338  15E0  0084               	movwf	4
 10339  15E1  1283               	bcf	3,5	;RP0=0, select bank0
 10340  15E2  1303               	bcf	3,6	;RP1=0, select bank0
 10341  15E3  0823               	movf	Scheduler_addTask@paramter,w
 10342  15E4  1783               	bsf	3,7	;select IRP bank2
 10343  15E5  0080               	movwf	0
 10344  15E6  0A84               	incf	4,f
 10345  15E7  0824               	movf	Scheduler_addTask@paramter+1,w
 10346  15E8  0080               	movwf	0
 10347                           
 10348                           ;Scheduler.c: 48:  scheduler.task[ index ].delay = delay;
 10349  15E9  3006               	movlw	6
 10350  15EA  00FF               	movwf	btemp+1
 10351  15EB  087F               	movf	btemp+1,w
 10352  15EC  00A0               	movwf	___bmul@multiplicand
 10353  15ED  0828               	movf	Scheduler_addTask@index,w
 10354  15EE  160A  158A  20FD  160A  118A  	fcall	___bmul
 10355  15F3  3E13               	addlw	(low ((_scheduler| (0+256)+3)))& (0+255)
 10356  15F4  0084               	movwf	4
 10357  15F5  1283               	bcf	3,5	;RP0=0, select bank0
 10358  15F6  1303               	bcf	3,6	;RP1=0, select bank0
 10359  15F7  0825               	movf	Scheduler_addTask@delay,w
 10360  15F8  00FF               	movwf	btemp+1
 10361  15F9  087F               	movf	btemp+1,w
 10362  15FA  1783               	bsf	3,7	;select IRP bank2
 10363  15FB  0080               	movwf	0
 10364                           
 10365                           ;Scheduler.c: 49:  scheduler.task[ index ].period = period;
 10366  15FC  3006               	movlw	6
 10367  15FD  00FF               	movwf	btemp+1
 10368  15FE  087F               	movf	btemp+1,w
 10369  15FF  00A0               	movwf	___bmul@multiplicand
 10370  1600  0828               	movf	Scheduler_addTask@index,w
 10371  1601  160A  158A  20FD  160A  118A  	fcall	___bmul
 10372  1606  3E14               	addlw	(low ((_scheduler| (0+256)+4)))& (0+255)
 10373  1607  0084               	movwf	4
 10374  1608  1283               	bcf	3,5	;RP0=0, select bank0
 10375  1609  1303               	bcf	3,6	;RP1=0, select bank0
 10376  160A  0826               	movf	Scheduler_addTask@period,w
 10377  160B  00FF               	movwf	btemp+1
 10378  160C  087F               	movf	btemp+1,w
 10379  160D  1783               	bsf	3,7	;select IRP bank2
 10380  160E  0080               	movwf	0
 10381                           
 10382                           ;Scheduler.c: 50:  scheduler.task[ index ].runMe = 0;
 10383  160F  3006               	movlw	6
 10384  1610  00FF               	movwf	btemp+1
 10385  1611  087F               	movf	btemp+1,w
 10386  1612  00A0               	movwf	___bmul@multiplicand
 10387  1613  0828               	movf	Scheduler_addTask@index,w
 10388  1614  160A  158A  20FD  160A  118A  	fcall	___bmul
 10389  1619  3E15               	addlw	(low ((_scheduler| (0+256)+5)))& (0+255)
 10390  161A  0084               	movwf	4
 10391  161B  1783               	bsf	3,7	;select IRP bank2
 10392  161C  0180               	clrf	0
 10393  161D                     l113:
 10394  161D  0008               	return
 10395  161E                     __end_of_Scheduler_addTask:
 10396                           
 10397                           	psect	text51
 10398  1134                     __ptext51:	
 10399 ;; *************** function _Led_init *****************
 10400 ;; Defined at:
 10401 ;;		line 18 in file "Led.c"
 10402 ;; Parameters:    Size  Location     Type
 10403 ;;  id              1    wreg     enum E1226
 10404 ;;  gpioId          1   22[BANK0 ] enum E1172
 10405 ;;  gpioPin         1   23[BANK0 ] enum E1180
 10406 ;; Auto vars:     Size  Location     Type
 10407 ;;  id              1   25[BANK0 ] enum E1226
 10408 ;; Return value:  Size  Location     Type
 10409 ;;                  1    wreg      void 
 10410 ;; Registers used:
 10411 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 10412 ;; Tracked objects:
 10413 ;;		On entry : 0/0
 10414 ;;		On exit  : 0/0
 10415 ;;		Unchanged: 0/0
 10416 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10417 ;;      Params:         0       2       0       0       0
 10418 ;;      Locals:         0       1       0       0       0
 10419 ;;      Temps:          0       1       0       0       0
 10420 ;;      Totals:         0       4       0       0       0
 10421 ;;Total ram usage:        4 bytes
 10422 ;; Hardware stack levels used:    1
 10423 ;; Hardware stack levels required when called:    5
 10424 ;; This function calls:
 10425 ;;		_initLedHardware
 10426 ;; This function is called by:
 10427 ;;		_main
 10428 ;; This function uses a non-reentrant model
 10429 ;;
 10430                           
 10431                           
 10432                           ;psect for function _Led_init
 10433  1134                     _Led_init:
 10434                           
 10435                           ;incstack = 0
 10436                           ; Regs used in _Led_init: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
 10437                           ;Led_init@id stored from wreg
 10438  1134  1283               	bcf	3,5	;RP0=0, select bank0
 10439  1135  1303               	bcf	3,6	;RP1=0, select bank0
 10440  1136  00B9               	movwf	Led_init@id
 10441  1137                     l2842:
 10442                           
 10443                           ;Led.c: 18: void Led_init( LED_ID_t id, GPIO_ID_t gpioId, GPIO_PIN_t gpioPin );Led.c: 19
      +                          : {;Led.c: 20:  led[ id ].gpioId = gpioId;
 10444  1137  0836               	movf	Led_init@gpioId,w
 10445  1138  00FF               	movwf	btemp+1
 10446  1139  0839               	movf	Led_init@id,w
 10447  113A  00B8               	movwf	??_Led_init
 10448  113B  3002               	movlw	2
 10449  113C                     u2975:
 10450  113C  1003               	clrc
 10451  113D  0DB8               	rlf	??_Led_init,f
 10452  113E  3EFF               	addlw	-1
 10453  113F  1D03               	skipz
 10454  1140  293C               	goto	u2975
 10455  1141  1003               	clrc
 10456  1142  0D38               	rlf	??_Led_init,w
 10457  1143  3EB9               	addlw	(low (_led| 0))& (0+255)
 10458  1144  0084               	movwf	4
 10459  1145  087F               	movf	btemp+1,w
 10460  1146  1383               	bcf	3,7	;select IRP bank1
 10461  1147  0080               	movwf	0
 10462                           
 10463                           ;Led.c: 21:  led[ id ].gpioPin = gpioPin;
 10464  1148  0837               	movf	Led_init@gpioPin,w
 10465  1149  00FF               	movwf	btemp+1
 10466  114A  0839               	movf	Led_init@id,w
 10467  114B  00B8               	movwf	??_Led_init
 10468  114C  3002               	movlw	2
 10469  114D                     u2985:
 10470  114D  1003               	clrc
 10471  114E  0DB8               	rlf	??_Led_init,f
 10472  114F  3EFF               	addlw	-1
 10473  1150  1D03               	skipz
 10474  1151  294D               	goto	u2985
 10475  1152  1003               	clrc
 10476  1153  0D38               	rlf	??_Led_init,w
 10477  1154  3EBA               	addlw	(low ((_led| 0+1)))& (0+255)
 10478  1155  0084               	movwf	4
 10479  1156  087F               	movf	btemp+1,w
 10480  1157  0080               	movwf	0
 10481  1158                     l2844:
 10482                           
 10483                           ;Led.c: 22:  led[ id ].state = LED_STATE_OFF;
 10484  1158  0839               	movf	Led_init@id,w
 10485  1159  00B8               	movwf	??_Led_init
 10486  115A  3002               	movlw	2
 10487  115B                     u2995:
 10488  115B  1003               	clrc
 10489  115C  0DB8               	rlf	??_Led_init,f
 10490  115D  3EFF               	addlw	-1
 10491  115E  1D03               	skipz
 10492  115F  295B               	goto	u2995
 10493  1160  1003               	clrc
 10494  1161  0D38               	rlf	??_Led_init,w
 10495  1162  3EBB               	addlw	(low ((_led| 0+2)))& (0+255)
 10496  1163  0084               	movwf	4
 10497  1164  0180               	clrf	0
 10498  1165                     l2846:
 10499                           
 10500                           ;Led.c: 23:  led[ id ].blink = LED_STATE_OFF;
 10501  1165  0839               	movf	Led_init@id,w
 10502  1166  00B8               	movwf	??_Led_init
 10503  1167  3002               	movlw	2
 10504  1168                     u3005:
 10505  1168  1003               	clrc
 10506  1169  0DB8               	rlf	??_Led_init,f
 10507  116A  3EFF               	addlw	-1
 10508  116B  1D03               	skipz
 10509  116C  2968               	goto	u3005
 10510  116D  1003               	clrc
 10511  116E  0D38               	rlf	??_Led_init,w
 10512  116F  3EBC               	addlw	(low ((_led| 0+3)))& (0+255)
 10513  1170  0084               	movwf	4
 10514  1171  0180               	clrf	0
 10515  1172                     l2848:
 10516                           
 10517                           ;Led.c: 24:  led[ id ].period = LED_BLINK_0MS;
 10518  1172  0839               	movf	Led_init@id,w
 10519  1173  00B8               	movwf	??_Led_init
 10520  1174  3002               	movlw	2
 10521  1175                     u3015:
 10522  1175  1003               	clrc
 10523  1176  0DB8               	rlf	??_Led_init,f
 10524  1177  3EFF               	addlw	-1
 10525  1178  1D03               	skipz
 10526  1179  2975               	goto	u3015
 10527  117A  1003               	clrc
 10528  117B  0D38               	rlf	??_Led_init,w
 10529  117C  3EBD               	addlw	(low ((_led| 0+4)))& (0+255)
 10530  117D  0084               	movwf	4
 10531  117E  0180               	clrf	0
 10532  117F  0A84               	incf	4,f
 10533  1180  0180               	clrf	0
 10534  1181                     l2850:
 10535                           
 10536                           ;Led.c: 25:  led[ id ].delay = LED_BLINK_0MS;
 10537  1181  0839               	movf	Led_init@id,w
 10538  1182  00B8               	movwf	??_Led_init
 10539  1183  3002               	movlw	2
 10540  1184                     u3025:
 10541  1184  1003               	clrc
 10542  1185  0DB8               	rlf	??_Led_init,f
 10543  1186  3EFF               	addlw	-1
 10544  1187  1D03               	skipz
 10545  1188  2984               	goto	u3025
 10546  1189  1003               	clrc
 10547  118A  0D38               	rlf	??_Led_init,w
 10548  118B  3EBF               	addlw	(low ((_led| 0+6)))& (0+255)
 10549  118C  0084               	movwf	4
 10550  118D  0180               	clrf	0
 10551  118E  0A84               	incf	4,f
 10552  118F  0180               	clrf	0
 10553  1190                     l2852:
 10554                           
 10555                           ;Led.c: 26:  initLedHardware( id );
 10556  1190  0839               	movf	Led_init@id,w
 10557  1191  160A  158A  22D0  160A  118A  	fcall	_initLedHardware
 10558  1196                     l159:
 10559  1196  0008               	return
 10560  1197                     __end_of_Led_init:
 10561                           
 10562                           	psect	text52
 10563  1AD0                     __ptext52:	
 10564 ;; *************** function _initLedHardware *****************
 10565 ;; Defined at:
 10566 ;;		line 52 in file "Led.c"
 10567 ;; Parameters:    Size  Location     Type
 10568 ;;  id              1    wreg     enum E1226
 10569 ;; Auto vars:     Size  Location     Type
 10570 ;;  id              1   21[BANK0 ] enum E1226
 10571 ;; Return value:  Size  Location     Type
 10572 ;;                  1    wreg      void 
 10573 ;; Registers used:
 10574 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 10575 ;; Tracked objects:
 10576 ;;		On entry : 0/0
 10577 ;;		On exit  : 0/0
 10578 ;;		Unchanged: 0/0
 10579 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10580 ;;      Params:         0       0       0       0       0
 10581 ;;      Locals:         0       1       0       0       0
 10582 ;;      Temps:          0       2       0       0       0
 10583 ;;      Totals:         0       3       0       0       0
 10584 ;;Total ram usage:        3 bytes
 10585 ;; Hardware stack levels used:    1
 10586 ;; Hardware stack levels required when called:    4
 10587 ;; This function calls:
 10588 ;;		_Gpio_initPin
 10589 ;; This function is called by:
 10590 ;;		_Led_init
 10591 ;; This function uses a non-reentrant model
 10592 ;;
 10593                           
 10594                           
 10595                           ;psect for function _initLedHardware
 10596  1AD0                     _initLedHardware:
 10597                           
 10598                           ;incstack = 0
 10599                           ; Regs used in _initLedHardware: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
 10600                           ;initLedHardware@id stored from wreg
 10601  1AD0  1283               	bcf	3,5	;RP0=0, select bank0
 10602  1AD1  1303               	bcf	3,6	;RP1=0, select bank0
 10603  1AD2  00B5               	movwf	initLedHardware@id
 10604  1AD3                     l2578:
 10605                           
 10606                           ;Led.c: 52: void initLedHardware( LED_ID_t id );Led.c: 53: {;Led.c: 54:  Gpio_initPin( l
      +                          ed[ id ].gpioId, led[ id ].gpioPin, GPIO_MODE_OUTPUT_DHZ, GPIO_TYPE_GP_PP );
 10607  1AD3  0835               	movf	initLedHardware@id,w
 10608  1AD4  00B3               	movwf	??_initLedHardware
 10609  1AD5  3002               	movlw	2
 10610  1AD6                     u2445:
 10611  1AD6  1003               	clrc
 10612  1AD7  0DB3               	rlf	??_initLedHardware,f
 10613  1AD8  3EFF               	addlw	-1
 10614  1AD9  1D03               	skipz
 10615  1ADA  2AD6               	goto	u2445
 10616  1ADB  1003               	clrc
 10617  1ADC  0D33               	rlf	??_initLedHardware,w
 10618  1ADD  3EBA               	addlw	(low ((_led| 0+1)))& (0+255)
 10619  1ADE  0084               	movwf	4
 10620  1ADF  1383               	bcf	3,7	;select IRP bank1
 10621  1AE0  0800               	movf	0,w
 10622  1AE1  00FF               	movwf	btemp+1
 10623  1AE2  087F               	movf	btemp+1,w
 10624  1AE3  00A3               	movwf	Gpio_initPin@pin
 10625  1AE4  01A4               	clrf	Gpio_initPin@mode
 10626  1AE5  01A5               	clrf	Gpio_initPin@type
 10627  1AE6  0AA5               	incf	Gpio_initPin@type,f
 10628  1AE7  0835               	movf	initLedHardware@id,w
 10629  1AE8  00B4               	movwf	??_initLedHardware+1
 10630  1AE9  3002               	movlw	2
 10631  1AEA                     u2455:
 10632  1AEA  1003               	clrc
 10633  1AEB  0DB4               	rlf	??_initLedHardware+1,f
 10634  1AEC  3EFF               	addlw	-1
 10635  1AED  1D03               	skipz
 10636  1AEE  2AEA               	goto	u2455
 10637  1AEF  1003               	clrc
 10638  1AF0  0D34               	rlf	??_initLedHardware+1,w
 10639  1AF1  3EB9               	addlw	(low (_led| 0))& (0+255)
 10640  1AF2  0084               	movwf	4
 10641  1AF3  0800               	movf	0,w
 10642  1AF4  160A  118A  23A2  160A  158A  	fcall	_Gpio_initPin
 10643  1AF9                     l172:
 10644  1AF9  0008               	return
 10645  1AFA                     __end_of_initLedHardware:
 10646                           
 10647                           	psect	text53
 10648  0CF2                     __ptext53:	
 10649 ;; *************** function _Heater_init *****************
 10650 ;; Defined at:
 10651 ;;		line 34 in file "WaterHeater.c"
 10652 ;; Parameters:    Size  Location     Type
 10653 ;;  id              1    wreg     enum E1438
 10654 ;;  sSwId           1   37[BANK0 ] enum E1289
 10655 ;;  mSwId           1   38[BANK0 ] enum E1289
 10656 ;;  pSwId           1   39[BANK0 ] enum E1289
 10657 ;;  xTempsnsrId     1   40[BANK0 ] enum E1308
 10658 ;;  xTempctrlId     1   41[BANK0 ] enum E1326
 10659 ;;  xLedId          1   42[BANK0 ] enum E1346
 10660 ;;  aSsdId          1   43[BANK0 ] enum E1372
 10661 ;;  bSsdId          1   44[BANK0 ] enum E1372
 10662 ;; Auto vars:     Size  Location     Type
 10663 ;;  id              1   50[BANK0 ] enum E1438
 10664 ;;  index           2   48[BANK0 ] unsigned int 
 10665 ;; Return value:  Size  Location     Type
 10666 ;;                  1    wreg      void 
 10667 ;; Registers used:
 10668 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 10669 ;; Tracked objects:
 10670 ;;		On entry : 0/0
 10671 ;;		On exit  : 0/0
 10672 ;;		Unchanged: 0/0
 10673 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10674 ;;      Params:         0       8       0       0       0
 10675 ;;      Locals:         0       3       0       0       0
 10676 ;;      Temps:          0       3       0       0       0
 10677 ;;      Totals:         0      14       0       0       0
 10678 ;;Total ram usage:       14 bytes
 10679 ;; Hardware stack levels used:    1
 10680 ;; Hardware stack levels required when called:    6
 10681 ;; This function calls:
 10682 ;;		_Eeprom_init
 10683 ;;		_Eeprom_read
 10684 ;;		_Eeprom_readPage
 10685 ;;		_Eeprom_write
 10686 ;;		_Eeprom_writePage
 10687 ;;		_Scheduler_delaySoftwareMs
 10688 ;;		___bmul
 10689 ;; This function is called by:
 10690 ;;		_main
 10691 ;; This function uses a non-reentrant model
 10692 ;;
 10693                           
 10694                           
 10695                           ;psect for function _Heater_init
 10696  0CF2                     _Heater_init:
 10697                           
 10698                           ;incstack = 0
 10699                           ; Regs used in _Heater_init: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
 10700                           ;Heater_init@id stored from wreg
 10701  0CF2  1283               	bcf	3,5	;RP0=0, select bank0
 10702  0CF3  1303               	bcf	3,6	;RP1=0, select bank0
 10703  0CF4  00D2               	movwf	Heater_init@id
 10704  0CF5                     l2856:
 10705  0CF5                     l2858:
 10706                           
 10707                           ;WaterHeater.c: 38:     Eeprom_init();
 10708  0CF5  120A  158A  2007  120A  158A  	fcall	_Eeprom_init
 10709  0CFA                     l2860:
 10710                           
 10711                           ;WaterHeater.c: 39:     heater[ id ].sSwId = sSwId;
 10712  0CFA  301F               	movlw	31
 10713  0CFB  00FF               	movwf	btemp+1
 10714  0CFC  087F               	movf	btemp+1,w
 10715  0CFD  1283               	bcf	3,5	;RP0=0, select bank0
 10716  0CFE  1303               	bcf	3,6	;RP1=0, select bank0
 10717  0CFF  00A0               	movwf	___bmul@multiplicand
 10718  0D00  0852               	movf	Heater_init@id,w
 10719  0D01  160A  158A  20FD  120A  158A  	fcall	___bmul
 10720  0D06  3EC9               	addlw	(low (_heater| 0))& (0+255)
 10721  0D07  0084               	movwf	4
 10722  0D08  1283               	bcf	3,5	;RP0=0, select bank0
 10723  0D09  1303               	bcf	3,6	;RP1=0, select bank0
 10724  0D0A  0845               	movf	Heater_init@sSwId,w
 10725  0D0B  00FF               	movwf	btemp+1
 10726  0D0C  087F               	movf	btemp+1,w
 10727  0D0D  1383               	bcf	3,7	;select IRP bank1
 10728  0D0E  0080               	movwf	0
 10729  0D0F                     l2862:
 10730                           
 10731                           ;WaterHeater.c: 40:     heater[ id ].mSwId = mSwId;
 10732  0D0F  301F               	movlw	31
 10733  0D10  00FF               	movwf	btemp+1
 10734  0D11  087F               	movf	btemp+1,w
 10735  0D12  00A0               	movwf	___bmul@multiplicand
 10736  0D13  0852               	movf	Heater_init@id,w
 10737  0D14  160A  158A  20FD  120A  158A  	fcall	___bmul
 10738  0D19  3ECA               	addlw	(low ((_heater| 0+1)))& (0+255)
 10739  0D1A  0084               	movwf	4
 10740  0D1B  1283               	bcf	3,5	;RP0=0, select bank0
 10741  0D1C  1303               	bcf	3,6	;RP1=0, select bank0
 10742  0D1D  0846               	movf	Heater_init@mSwId,w
 10743  0D1E  00FF               	movwf	btemp+1
 10744  0D1F  087F               	movf	btemp+1,w
 10745  0D20  1383               	bcf	3,7	;select IRP bank1
 10746  0D21  0080               	movwf	0
 10747  0D22                     l2864:
 10748                           
 10749                           ;WaterHeater.c: 41:     heater[ id ].pSwId = pSwId;
 10750  0D22  301F               	movlw	31
 10751  0D23  00FF               	movwf	btemp+1
 10752  0D24  087F               	movf	btemp+1,w
 10753  0D25  00A0               	movwf	___bmul@multiplicand
 10754  0D26  0852               	movf	Heater_init@id,w
 10755  0D27  160A  158A  20FD  120A  158A  	fcall	___bmul
 10756  0D2C  3ECB               	addlw	(low ((_heater| 0+2)))& (0+255)
 10757  0D2D  0084               	movwf	4
 10758  0D2E  1283               	bcf	3,5	;RP0=0, select bank0
 10759  0D2F  1303               	bcf	3,6	;RP1=0, select bank0
 10760  0D30  0847               	movf	Heater_init@pSwId,w
 10761  0D31  00FF               	movwf	btemp+1
 10762  0D32  087F               	movf	btemp+1,w
 10763  0D33  1383               	bcf	3,7	;select IRP bank1
 10764  0D34  0080               	movwf	0
 10765  0D35                     l2866:
 10766                           
 10767                           ;WaterHeater.c: 42:     heater[ id ].xTempsnsrId = xTempsnsrId;
 10768  0D35  301F               	movlw	31
 10769  0D36  00FF               	movwf	btemp+1
 10770  0D37  087F               	movf	btemp+1,w
 10771  0D38  00A0               	movwf	___bmul@multiplicand
 10772  0D39  0852               	movf	Heater_init@id,w
 10773  0D3A  160A  158A  20FD  120A  158A  	fcall	___bmul
 10774  0D3F  3ECC               	addlw	(low ((_heater| 0+3)))& (0+255)
 10775  0D40  0084               	movwf	4
 10776  0D41  1283               	bcf	3,5	;RP0=0, select bank0
 10777  0D42  1303               	bcf	3,6	;RP1=0, select bank0
 10778  0D43  0848               	movf	Heater_init@xTempsnsrId,w
 10779  0D44  00FF               	movwf	btemp+1
 10780  0D45  087F               	movf	btemp+1,w
 10781  0D46  1383               	bcf	3,7	;select IRP bank1
 10782  0D47  0080               	movwf	0
 10783  0D48                     l2868:
 10784                           
 10785                           ;WaterHeater.c: 43:     heater[ id ].xTempctrlId = xTempctrlId;
 10786  0D48  301F               	movlw	31
 10787  0D49  00FF               	movwf	btemp+1
 10788  0D4A  087F               	movf	btemp+1,w
 10789  0D4B  00A0               	movwf	___bmul@multiplicand
 10790  0D4C  0852               	movf	Heater_init@id,w
 10791  0D4D  160A  158A  20FD  120A  158A  	fcall	___bmul
 10792  0D52  3ECD               	addlw	(low ((_heater| 0+4)))& (0+255)
 10793  0D53  0084               	movwf	4
 10794  0D54  1283               	bcf	3,5	;RP0=0, select bank0
 10795  0D55  1303               	bcf	3,6	;RP1=0, select bank0
 10796  0D56  0849               	movf	Heater_init@xTempctrlId,w
 10797  0D57  00FF               	movwf	btemp+1
 10798  0D58  087F               	movf	btemp+1,w
 10799  0D59  1383               	bcf	3,7	;select IRP bank1
 10800  0D5A  0080               	movwf	0
 10801  0D5B                     l2870:
 10802                           
 10803                           ;WaterHeater.c: 44:     heater[ id ].xLedId = xLedId;
 10804  0D5B  301F               	movlw	31
 10805  0D5C  00FF               	movwf	btemp+1
 10806  0D5D  087F               	movf	btemp+1,w
 10807  0D5E  00A0               	movwf	___bmul@multiplicand
 10808  0D5F  0852               	movf	Heater_init@id,w
 10809  0D60  160A  158A  20FD  120A  158A  	fcall	___bmul
 10810  0D65  3ECE               	addlw	(low ((_heater| 0+5)))& (0+255)
 10811  0D66  0084               	movwf	4
 10812  0D67  1283               	bcf	3,5	;RP0=0, select bank0
 10813  0D68  1303               	bcf	3,6	;RP1=0, select bank0
 10814  0D69  084A               	movf	Heater_init@xLedId,w
 10815  0D6A  00FF               	movwf	btemp+1
 10816  0D6B  087F               	movf	btemp+1,w
 10817  0D6C  1383               	bcf	3,7	;select IRP bank1
 10818  0D6D  0080               	movwf	0
 10819  0D6E                     l2872:
 10820                           
 10821                           ;WaterHeater.c: 45:     heater[ id ].aSsdId = aSsdId;
 10822  0D6E  301F               	movlw	31
 10823  0D6F  00FF               	movwf	btemp+1
 10824  0D70  087F               	movf	btemp+1,w
 10825  0D71  00A0               	movwf	___bmul@multiplicand
 10826  0D72  0852               	movf	Heater_init@id,w
 10827  0D73  160A  158A  20FD  120A  158A  	fcall	___bmul
 10828  0D78  3ECF               	addlw	(low ((_heater| 0+6)))& (0+255)
 10829  0D79  0084               	movwf	4
 10830  0D7A  1283               	bcf	3,5	;RP0=0, select bank0
 10831  0D7B  1303               	bcf	3,6	;RP1=0, select bank0
 10832  0D7C  084B               	movf	Heater_init@aSsdId,w
 10833  0D7D  00FF               	movwf	btemp+1
 10834  0D7E  087F               	movf	btemp+1,w
 10835  0D7F  1383               	bcf	3,7	;select IRP bank1
 10836  0D80  0080               	movwf	0
 10837  0D81                     l2874:
 10838                           
 10839                           ;WaterHeater.c: 46:     heater[ id ].bSsdId = bSsdId;
 10840  0D81  301F               	movlw	31
 10841  0D82  00FF               	movwf	btemp+1
 10842  0D83  087F               	movf	btemp+1,w
 10843  0D84  00A0               	movwf	___bmul@multiplicand
 10844  0D85  0852               	movf	Heater_init@id,w
 10845  0D86  160A  158A  20FD  120A  158A  	fcall	___bmul
 10846  0D8B  3ED0               	addlw	(low ((_heater| 0+7)))& (0+255)
 10847  0D8C  0084               	movwf	4
 10848  0D8D  1283               	bcf	3,5	;RP0=0, select bank0
 10849  0D8E  1303               	bcf	3,6	;RP1=0, select bank0
 10850  0D8F  084C               	movf	Heater_init@bSsdId,w
 10851  0D90  00FF               	movwf	btemp+1
 10852  0D91  087F               	movf	btemp+1,w
 10853  0D92  1383               	bcf	3,7	;select IRP bank1
 10854  0D93  0080               	movwf	0
 10855  0D94                     l2876:
 10856                           
 10857                           ;WaterHeater.c: 47:     heater[ id ].state = OffMode;
 10858  0D94  301F               	movlw	31
 10859  0D95  00FF               	movwf	btemp+1
 10860  0D96  087F               	movf	btemp+1,w
 10861  0D97  00A0               	movwf	___bmul@multiplicand
 10862  0D98  0852               	movf	Heater_init@id,w
 10863  0D99  160A  158A  20FD  120A  158A  	fcall	___bmul
 10864  0D9E  3ED1               	addlw	(low ((_heater| 0+8)))& (0+255)
 10865  0D9F  0084               	movwf	4
 10866  0DA0  1383               	bcf	3,7	;select IRP bank1
 10867  0DA1  0180               	clrf	0
 10868  0DA2                     l2878:
 10869                           
 10870                           ;WaterHeater.c: 48:     heater[ id ].preState = heater[ id ].state;
 10871  0DA2  301F               	movlw	31
 10872  0DA3  00FF               	movwf	btemp+1
 10873  0DA4  087F               	movf	btemp+1,w
 10874  0DA5  1283               	bcf	3,5	;RP0=0, select bank0
 10875  0DA6  1303               	bcf	3,6	;RP1=0, select bank0
 10876  0DA7  00A0               	movwf	___bmul@multiplicand
 10877  0DA8  0852               	movf	Heater_init@id,w
 10878  0DA9  160A  158A  20FD  120A  158A  	fcall	___bmul
 10879  0DAE  3ED1               	addlw	(low ((_heater| 0+8)))& (0+255)
 10880  0DAF  0084               	movwf	4
 10881  0DB0  1383               	bcf	3,7	;select IRP bank1
 10882  0DB1  0800               	movf	0,w
 10883  0DB2  1283               	bcf	3,5	;RP0=0, select bank0
 10884  0DB3  1303               	bcf	3,6	;RP1=0, select bank0
 10885  0DB4  00CD               	movwf	??_Heater_init
 10886  0DB5  301F               	movlw	31
 10887  0DB6  00FF               	movwf	btemp+1
 10888  0DB7  087F               	movf	btemp+1,w
 10889  0DB8  00A0               	movwf	___bmul@multiplicand
 10890  0DB9  0852               	movf	Heater_init@id,w
 10891  0DBA  160A  158A  20FD  120A  158A  	fcall	___bmul
 10892  0DBF  3ED2               	addlw	(low ((_heater| 0+9)))& (0+255)
 10893  0DC0  0084               	movwf	4
 10894  0DC1  1283               	bcf	3,5	;RP0=0, select bank0
 10895  0DC2  1303               	bcf	3,6	;RP1=0, select bank0
 10896  0DC3  084D               	movf	??_Heater_init,w
 10897  0DC4  1383               	bcf	3,7	;select IRP bank1
 10898  0DC5  0080               	movwf	0
 10899  0DC6                     l2880:
 10900                           
 10901                           ;WaterHeater.c: 49:     heater[ id ].avgTemp = 0;
 10902  0DC6  301F               	movlw	31
 10903  0DC7  00FF               	movwf	btemp+1
 10904  0DC8  087F               	movf	btemp+1,w
 10905  0DC9  00A0               	movwf	___bmul@multiplicand
 10906  0DCA  0852               	movf	Heater_init@id,w
 10907  0DCB  160A  158A  20FD  120A  158A  	fcall	___bmul
 10908  0DD0  3ED3               	addlw	(low ((_heater| 0+10)))& (0+255)
 10909  0DD1  0084               	movwf	4
 10910  0DD2  1383               	bcf	3,7	;select IRP bank1
 10911  0DD3  0180               	clrf	0
 10912  0DD4                     l2882:
 10913                           
 10914                           ;WaterHeater.c: 50:     heater[ id ].targetTemp = 60;
 10915  0DD4  301F               	movlw	31
 10916  0DD5  00FF               	movwf	btemp+1
 10917  0DD6  087F               	movf	btemp+1,w
 10918  0DD7  1283               	bcf	3,5	;RP0=0, select bank0
 10919  0DD8  1303               	bcf	3,6	;RP1=0, select bank0
 10920  0DD9  00A0               	movwf	___bmul@multiplicand
 10921  0DDA  0852               	movf	Heater_init@id,w
 10922  0DDB  160A  158A  20FD  120A  158A  	fcall	___bmul
 10923  0DE0  3ED4               	addlw	(low ((_heater| 0+11)))& (0+255)
 10924  0DE1  0084               	movwf	4
 10925  0DE2  303C               	movlw	60
 10926  0DE3  00FF               	movwf	btemp+1
 10927  0DE4  087F               	movf	btemp+1,w
 10928  0DE5  1383               	bcf	3,7	;select IRP bank1
 10929  0DE6  0080               	movwf	0
 10930  0DE7                     l2884:
 10931                           
 10932                           ;WaterHeater.c: 51:     heater[ id ].counter = 0;
 10933  0DE7  301F               	movlw	31
 10934  0DE8  00FF               	movwf	btemp+1
 10935  0DE9  087F               	movf	btemp+1,w
 10936  0DEA  1283               	bcf	3,5	;RP0=0, select bank0
 10937  0DEB  1303               	bcf	3,6	;RP1=0, select bank0
 10938  0DEC  00A0               	movwf	___bmul@multiplicand
 10939  0DED  0852               	movf	Heater_init@id,w
 10940  0DEE  160A  158A  20FD  120A  158A  	fcall	___bmul
 10941  0DF3  3ED5               	addlw	(low ((_heater| 0+12)))& (0+255)
 10942  0DF4  0084               	movwf	4
 10943  0DF5  1383               	bcf	3,7	;select IRP bank1
 10944  0DF6  0180               	clrf	0
 10945  0DF7  0A84               	incf	4,f
 10946  0DF8  0180               	clrf	0
 10947  0DF9                     l2886:
 10948                           
 10949                           ;WaterHeater.c: 52:     heater[ id ].passwordFlag = 1;
 10950  0DF9  301F               	movlw	31
 10951  0DFA  00FF               	movwf	btemp+1
 10952  0DFB  087F               	movf	btemp+1,w
 10953  0DFC  1283               	bcf	3,5	;RP0=0, select bank0
 10954  0DFD  1303               	bcf	3,6	;RP1=0, select bank0
 10955  0DFE  00A0               	movwf	___bmul@multiplicand
 10956  0DFF  0852               	movf	Heater_init@id,w
 10957  0E00  160A  158A  20FD  120A  158A  	fcall	___bmul
 10958  0E05  3ED7               	addlw	(low ((_heater| 0+14)))& (0+255)
 10959  0E06  0084               	movwf	4
 10960  0E07  1383               	bcf	3,7	;select IRP bank1
 10961  0E08  0180               	clrf	0
 10962  0E09  0A80               	incf	0,f
 10963  0E0A                     l2888:
 10964                           
 10965                           ;WaterHeater.c: 53:     heater[ id ].passwordWrite[ 0 ] = '#';
 10966  0E0A  301F               	movlw	31
 10967  0E0B  00FF               	movwf	btemp+1
 10968  0E0C  087F               	movf	btemp+1,w
 10969  0E0D  1283               	bcf	3,5	;RP0=0, select bank0
 10970  0E0E  1303               	bcf	3,6	;RP1=0, select bank0
 10971  0E0F  00A0               	movwf	___bmul@multiplicand
 10972  0E10  0852               	movf	Heater_init@id,w
 10973  0E11  160A  158A  20FD  120A  158A  	fcall	___bmul
 10974  0E16  3ED8               	addlw	(low ((_heater| 0+15)))& (0+255)
 10975  0E17  0084               	movwf	4
 10976  0E18  3023               	movlw	35
 10977  0E19  00FF               	movwf	btemp+1
 10978  0E1A  087F               	movf	btemp+1,w
 10979  0E1B  1383               	bcf	3,7	;select IRP bank1
 10980  0E1C  0080               	movwf	0
 10981  0E1D                     l2890:
 10982                           
 10983                           ;WaterHeater.c: 54:     heater[ id ].passwordWrite[ 1 ] = 'P';
 10984  0E1D  301F               	movlw	31
 10985  0E1E  00FF               	movwf	btemp+1
 10986  0E1F  087F               	movf	btemp+1,w
 10987  0E20  1283               	bcf	3,5	;RP0=0, select bank0
 10988  0E21  1303               	bcf	3,6	;RP1=0, select bank0
 10989  0E22  00A0               	movwf	___bmul@multiplicand
 10990  0E23  0852               	movf	Heater_init@id,w
 10991  0E24  160A  158A  20FD  120A  158A  	fcall	___bmul
 10992  0E29  3ED9               	addlw	(low ((_heater| 0+16)))& (0+255)
 10993  0E2A  0084               	movwf	4
 10994  0E2B  3050               	movlw	80
 10995  0E2C  00FF               	movwf	btemp+1
 10996  0E2D  087F               	movf	btemp+1,w
 10997  0E2E  1383               	bcf	3,7	;select IRP bank1
 10998  0E2F  0080               	movwf	0
 10999  0E30                     l2892:
 11000                           
 11001                           ;WaterHeater.c: 55:     heater[ id ].passwordWrite[ 2 ] = 'w';
 11002  0E30  301F               	movlw	31
 11003  0E31  00FF               	movwf	btemp+1
 11004  0E32  087F               	movf	btemp+1,w
 11005  0E33  1283               	bcf	3,5	;RP0=0, select bank0
 11006  0E34  1303               	bcf	3,6	;RP1=0, select bank0
 11007  0E35  00A0               	movwf	___bmul@multiplicand
 11008  0E36  0852               	movf	Heater_init@id,w
 11009  0E37  160A  158A  20FD  120A  158A  	fcall	___bmul
 11010  0E3C  3EDA               	addlw	(low ((_heater| 0+17)))& (0+255)
 11011  0E3D  0084               	movwf	4
 11012  0E3E  3077               	movlw	119
 11013  0E3F  00FF               	movwf	btemp+1
 11014  0E40  087F               	movf	btemp+1,w
 11015  0E41  1383               	bcf	3,7	;select IRP bank1
 11016  0E42  0080               	movwf	0
 11017  0E43                     l2894:
 11018                           
 11019                           ;WaterHeater.c: 56:     heater[ id ].passwordWrite[ 3 ] = 'r';
 11020  0E43  301F               	movlw	31
 11021  0E44  00FF               	movwf	btemp+1
 11022  0E45  087F               	movf	btemp+1,w
 11023  0E46  1283               	bcf	3,5	;RP0=0, select bank0
 11024  0E47  1303               	bcf	3,6	;RP1=0, select bank0
 11025  0E48  00A0               	movwf	___bmul@multiplicand
 11026  0E49  0852               	movf	Heater_init@id,w
 11027  0E4A  160A  158A  20FD  120A  158A  	fcall	___bmul
 11028  0E4F  3EDB               	addlw	(low ((_heater| 0+18)))& (0+255)
 11029  0E50  0084               	movwf	4
 11030  0E51  3072               	movlw	114
 11031  0E52  00FF               	movwf	btemp+1
 11032  0E53  087F               	movf	btemp+1,w
 11033  0E54  1383               	bcf	3,7	;select IRP bank1
 11034  0E55  0080               	movwf	0
 11035  0E56                     l2896:
 11036                           
 11037                           ;WaterHeater.c: 57:     heater[ id ].passwordWrite[ 4 ] = 'U';
 11038  0E56  301F               	movlw	31
 11039  0E57  00FF               	movwf	btemp+1
 11040  0E58  087F               	movf	btemp+1,w
 11041  0E59  1283               	bcf	3,5	;RP0=0, select bank0
 11042  0E5A  1303               	bcf	3,6	;RP1=0, select bank0
 11043  0E5B  00A0               	movwf	___bmul@multiplicand
 11044  0E5C  0852               	movf	Heater_init@id,w
 11045  0E5D  160A  158A  20FD  120A  158A  	fcall	___bmul
 11046  0E62  3EDC               	addlw	(low ((_heater| 0+19)))& (0+255)
 11047  0E63  0084               	movwf	4
 11048  0E64  3055               	movlw	85
 11049  0E65  00FF               	movwf	btemp+1
 11050  0E66  087F               	movf	btemp+1,w
 11051  0E67  1383               	bcf	3,7	;select IRP bank1
 11052  0E68  0080               	movwf	0
 11053  0E69                     l2898:
 11054                           
 11055                           ;WaterHeater.c: 58:     heater[ id ].passwordWrite[ 5 ] = 'p';
 11056  0E69  301F               	movlw	31
 11057  0E6A  00FF               	movwf	btemp+1
 11058  0E6B  087F               	movf	btemp+1,w
 11059  0E6C  1283               	bcf	3,5	;RP0=0, select bank0
 11060  0E6D  1303               	bcf	3,6	;RP1=0, select bank0
 11061  0E6E  00A0               	movwf	___bmul@multiplicand
 11062  0E6F  0852               	movf	Heater_init@id,w
 11063  0E70  160A  158A  20FD  120A  158A  	fcall	___bmul
 11064  0E75  3EDD               	addlw	(low ((_heater| 0+20)))& (0+255)
 11065  0E76  0084               	movwf	4
 11066  0E77  3070               	movlw	112
 11067  0E78  00FF               	movwf	btemp+1
 11068  0E79  087F               	movf	btemp+1,w
 11069  0E7A  1383               	bcf	3,7	;select IRP bank1
 11070  0E7B  0080               	movwf	0
 11071  0E7C                     l2900:
 11072                           
 11073                           ;WaterHeater.c: 59:     heater[ id ].passwordWrite[ 6 ] = '_';
 11074  0E7C  301F               	movlw	31
 11075  0E7D  00FF               	movwf	btemp+1
 11076  0E7E  087F               	movf	btemp+1,w
 11077  0E7F  1283               	bcf	3,5	;RP0=0, select bank0
 11078  0E80  1303               	bcf	3,6	;RP1=0, select bank0
 11079  0E81  00A0               	movwf	___bmul@multiplicand
 11080  0E82  0852               	movf	Heater_init@id,w
 11081  0E83  160A  158A  20FD  120A  158A  	fcall	___bmul
 11082  0E88  3EDE               	addlw	(low ((_heater| 0+21)))& (0+255)
 11083  0E89  0084               	movwf	4
 11084  0E8A  305F               	movlw	95
 11085  0E8B  00FF               	movwf	btemp+1
 11086  0E8C  087F               	movf	btemp+1,w
 11087  0E8D  1383               	bcf	3,7	;select IRP bank1
 11088  0E8E  0080               	movwf	0
 11089  0E8F                     l2902:
 11090                           
 11091                           ;WaterHeater.c: 60:     heater[ id ].passwordWrite[ 7 ] = '1';
 11092  0E8F  301F               	movlw	31
 11093  0E90  00FF               	movwf	btemp+1
 11094  0E91  087F               	movf	btemp+1,w
 11095  0E92  1283               	bcf	3,5	;RP0=0, select bank0
 11096  0E93  1303               	bcf	3,6	;RP1=0, select bank0
 11097  0E94  00A0               	movwf	___bmul@multiplicand
 11098  0E95  0852               	movf	Heater_init@id,w
 11099  0E96  160A  158A  20FD  120A  158A  	fcall	___bmul
 11100  0E9B  3EDF               	addlw	(low ((_heater| 0+22)))& (0+255)
 11101  0E9C  0084               	movwf	4
 11102  0E9D  3031               	movlw	49
 11103  0E9E  00FF               	movwf	btemp+1
 11104  0E9F  087F               	movf	btemp+1,w
 11105  0EA0  1383               	bcf	3,7	;select IRP bank1
 11106  0EA1  0080               	movwf	0
 11107  0EA2                     l2904:
 11108                           
 11109                           ;WaterHeater.c: 61:     heater[ id ].passwordRead[ 0 ] = 0;
 11110  0EA2  301F               	movlw	31
 11111  0EA3  00FF               	movwf	btemp+1
 11112  0EA4  087F               	movf	btemp+1,w
 11113  0EA5  1283               	bcf	3,5	;RP0=0, select bank0
 11114  0EA6  1303               	bcf	3,6	;RP1=0, select bank0
 11115  0EA7  00A0               	movwf	___bmul@multiplicand
 11116  0EA8  0852               	movf	Heater_init@id,w
 11117  0EA9  160A  158A  20FD  120A  158A  	fcall	___bmul
 11118  0EAE  3EE0               	addlw	(low ((_heater| 0+23)))& (0+255)
 11119  0EAF  0084               	movwf	4
 11120  0EB0  1383               	bcf	3,7	;select IRP bank1
 11121  0EB1  0180               	clrf	0
 11122  0EB2                     l2906:
 11123                           
 11124                           ;WaterHeater.c: 62:     heater[ id ].passwordRead[ 1 ] = 0;
 11125  0EB2  301F               	movlw	31
 11126  0EB3  00FF               	movwf	btemp+1
 11127  0EB4  087F               	movf	btemp+1,w
 11128  0EB5  1283               	bcf	3,5	;RP0=0, select bank0
 11129  0EB6  1303               	bcf	3,6	;RP1=0, select bank0
 11130  0EB7  00A0               	movwf	___bmul@multiplicand
 11131  0EB8  0852               	movf	Heater_init@id,w
 11132  0EB9  160A  158A  20FD  120A  158A  	fcall	___bmul
 11133  0EBE  3EE1               	addlw	(low ((_heater| 0+24)))& (0+255)
 11134  0EBF  0084               	movwf	4
 11135  0EC0  1383               	bcf	3,7	;select IRP bank1
 11136  0EC1  0180               	clrf	0
 11137  0EC2                     l2908:
 11138                           
 11139                           ;WaterHeater.c: 63:     heater[ id ].passwordRead[ 2 ] = 0;
 11140  0EC2  301F               	movlw	31
 11141  0EC3  00FF               	movwf	btemp+1
 11142  0EC4  087F               	movf	btemp+1,w
 11143  0EC5  1283               	bcf	3,5	;RP0=0, select bank0
 11144  0EC6  1303               	bcf	3,6	;RP1=0, select bank0
 11145  0EC7  00A0               	movwf	___bmul@multiplicand
 11146  0EC8  0852               	movf	Heater_init@id,w
 11147  0EC9  160A  158A  20FD  120A  158A  	fcall	___bmul
 11148  0ECE  3EE2               	addlw	(low ((_heater| 0+25)))& (0+255)
 11149  0ECF  0084               	movwf	4
 11150  0ED0  1383               	bcf	3,7	;select IRP bank1
 11151  0ED1  0180               	clrf	0
 11152  0ED2                     l2910:
 11153                           
 11154                           ;WaterHeater.c: 64:     heater[ id ].passwordRead[ 3 ] = 0;
 11155  0ED2  301F               	movlw	31
 11156  0ED3  00FF               	movwf	btemp+1
 11157  0ED4  087F               	movf	btemp+1,w
 11158  0ED5  1283               	bcf	3,5	;RP0=0, select bank0
 11159  0ED6  1303               	bcf	3,6	;RP1=0, select bank0
 11160  0ED7  00A0               	movwf	___bmul@multiplicand
 11161  0ED8  0852               	movf	Heater_init@id,w
 11162  0ED9  160A  158A  20FD  120A  158A  	fcall	___bmul
 11163  0EDE  3EE3               	addlw	(low ((_heater| 0+26)))& (0+255)
 11164  0EDF  0084               	movwf	4
 11165  0EE0  1383               	bcf	3,7	;select IRP bank1
 11166  0EE1  0180               	clrf	0
 11167  0EE2                     l2912:
 11168                           
 11169                           ;WaterHeater.c: 65:     heater[ id ].passwordRead[ 4 ] = 0;
 11170  0EE2  301F               	movlw	31
 11171  0EE3  00FF               	movwf	btemp+1
 11172  0EE4  087F               	movf	btemp+1,w
 11173  0EE5  1283               	bcf	3,5	;RP0=0, select bank0
 11174  0EE6  1303               	bcf	3,6	;RP1=0, select bank0
 11175  0EE7  00A0               	movwf	___bmul@multiplicand
 11176  0EE8  0852               	movf	Heater_init@id,w
 11177  0EE9  160A  158A  20FD  120A  158A  	fcall	___bmul
 11178  0EEE  3EE4               	addlw	(low ((_heater| 0+27)))& (0+255)
 11179  0EEF  0084               	movwf	4
 11180  0EF0  1383               	bcf	3,7	;select IRP bank1
 11181  0EF1  0180               	clrf	0
 11182  0EF2                     l2914:
 11183                           
 11184                           ;WaterHeater.c: 66:     heater[ id ].passwordRead[ 5 ] = 0;
 11185  0EF2  301F               	movlw	31
 11186  0EF3  00FF               	movwf	btemp+1
 11187  0EF4  087F               	movf	btemp+1,w
 11188  0EF5  1283               	bcf	3,5	;RP0=0, select bank0
 11189  0EF6  1303               	bcf	3,6	;RP1=0, select bank0
 11190  0EF7  00A0               	movwf	___bmul@multiplicand
 11191  0EF8  0852               	movf	Heater_init@id,w
 11192  0EF9  160A  158A  20FD  120A  158A  	fcall	___bmul
 11193  0EFE  3EE5               	addlw	(low ((_heater| 0+28)))& (0+255)
 11194  0EFF  0084               	movwf	4
 11195  0F00  1383               	bcf	3,7	;select IRP bank1
 11196  0F01  0180               	clrf	0
 11197  0F02                     l2916:
 11198                           
 11199                           ;WaterHeater.c: 67:     heater[ id ].passwordRead[ 6 ] = 0;
 11200  0F02  301F               	movlw	31
 11201  0F03  00FF               	movwf	btemp+1
 11202  0F04  087F               	movf	btemp+1,w
 11203  0F05  1283               	bcf	3,5	;RP0=0, select bank0
 11204  0F06  1303               	bcf	3,6	;RP1=0, select bank0
 11205  0F07  00A0               	movwf	___bmul@multiplicand
 11206  0F08  0852               	movf	Heater_init@id,w
 11207  0F09  160A  158A  20FD  120A  158A  	fcall	___bmul
 11208  0F0E  3EE6               	addlw	(low ((_heater| 0+29)))& (0+255)
 11209  0F0F  0084               	movwf	4
 11210  0F10  1383               	bcf	3,7	;select IRP bank1
 11211  0F11  0180               	clrf	0
 11212  0F12                     l2918:
 11213                           
 11214                           ;WaterHeater.c: 68:     heater[ id ].passwordRead[ 7 ] = 0;
 11215  0F12  301F               	movlw	31
 11216  0F13  00FF               	movwf	btemp+1
 11217  0F14  087F               	movf	btemp+1,w
 11218  0F15  1283               	bcf	3,5	;RP0=0, select bank0
 11219  0F16  1303               	bcf	3,6	;RP1=0, select bank0
 11220  0F17  00A0               	movwf	___bmul@multiplicand
 11221  0F18  0852               	movf	Heater_init@id,w
 11222  0F19  160A  158A  20FD  120A  158A  	fcall	___bmul
 11223  0F1E  3EE7               	addlw	(low ((_heater| 0+30)))& (0+255)
 11224  0F1F  0084               	movwf	4
 11225  0F20  1383               	bcf	3,7	;select IRP bank1
 11226  0F21  0180               	clrf	0
 11227  0F22                     l2920:
 11228                           
 11229                           ;WaterHeater.c: 70:     Eeprom_readPage( 0, heater[ id ].passwordRead, 8 );
 11230  0F22  301F               	movlw	31
 11231  0F23  00FF               	movwf	btemp+1
 11232  0F24  087F               	movf	btemp+1,w
 11233  0F25  1283               	bcf	3,5	;RP0=0, select bank0
 11234  0F26  1303               	bcf	3,6	;RP1=0, select bank0
 11235  0F27  00A0               	movwf	___bmul@multiplicand
 11236  0F28  0852               	movf	Heater_init@id,w
 11237  0F29  160A  158A  20FD  120A  158A  	fcall	___bmul
 11238  0F2E  3EE0               	addlw	(low ((_heater| 0+23)))& (0+255)
 11239  0F2F  00FF               	movwf	btemp+1
 11240  0F30  087F               	movf	btemp+1,w
 11241  0F31  1283               	bcf	3,5	;RP0=0, select bank0
 11242  0F32  1303               	bcf	3,6	;RP1=0, select bank0
 11243  0F33  00A3               	movwf	Eeprom_readPage@buffer
 11244  0F34  3008               	movlw	8
 11245  0F35  00FF               	movwf	btemp+1
 11246  0F36  087F               	movf	btemp+1,w
 11247  0F37  00A4               	movwf	Eeprom_readPage@length
 11248  0F38  3000               	movlw	0
 11249  0F39  160A  118A  2072  120A  158A  	fcall	_Eeprom_readPage
 11250                           
 11251                           ;WaterHeater.c: 71:     for( index = 0; index < 8; index++)
 11252  0F3E  1283               	bcf	3,5	;RP0=0, select bank0
 11253  0F3F  1303               	bcf	3,6	;RP1=0, select bank0
 11254  0F40  01D0               	clrf	Heater_init@index
 11255  0F41  01D1               	clrf	Heater_init@index+1
 11256  0F42                     l2926:
 11257                           
 11258                           ;WaterHeater.c: 72:     {;WaterHeater.c: 73:         if( heater[ id ].passwordWrite[ ind
      +                          ex ] != heater[ id ].passwordRead[ index ] )
 11259  0F42  301F               	movlw	31
 11260  0F43  00FF               	movwf	btemp+1
 11261  0F44  087F               	movf	btemp+1,w
 11262  0F45  00A0               	movwf	___bmul@multiplicand
 11263  0F46  0852               	movf	Heater_init@id,w
 11264  0F47  160A  158A  20FD  120A  158A  	fcall	___bmul
 11265  0F4C  3EE0               	addlw	(low ((_heater| 0+23)))& (0+255)
 11266  0F4D  1283               	bcf	3,5	;RP0=0, select bank0
 11267  0F4E  1303               	bcf	3,6	;RP1=0, select bank0
 11268  0F4F  0750               	addwf	Heater_init@index,w
 11269  0F50  00CD               	movwf	??_Heater_init
 11270  0F51  084D               	movf	??_Heater_init,w
 11271  0F52  0084               	movwf	4
 11272  0F53  1383               	bcf	3,7	;select IRP bank1
 11273  0F54  0800               	movf	0,w
 11274  0F55  00CE               	movwf	??_Heater_init+1
 11275  0F56  301F               	movlw	31
 11276  0F57  00FF               	movwf	btemp+1
 11277  0F58  087F               	movf	btemp+1,w
 11278  0F59  00A0               	movwf	___bmul@multiplicand
 11279  0F5A  0852               	movf	Heater_init@id,w
 11280  0F5B  160A  158A  20FD  120A  158A  	fcall	___bmul
 11281  0F60  3ED8               	addlw	(low ((_heater| 0+15)))& (0+255)
 11282  0F61  1283               	bcf	3,5	;RP0=0, select bank0
 11283  0F62  1303               	bcf	3,6	;RP1=0, select bank0
 11284  0F63  0750               	addwf	Heater_init@index,w
 11285  0F64  00CF               	movwf	??_Heater_init+2
 11286  0F65  084F               	movf	??_Heater_init+2,w
 11287  0F66  0084               	movwf	4
 11288  0F67  1383               	bcf	3,7	;select IRP bank1
 11289  0F68  0800               	movf	0,w
 11290  0F69  064E               	xorwf	??_Heater_init+1,w
 11291  0F6A  1903               	skipnz
 11292  0F6B  2F6D               	goto	u3031
 11293  0F6C  2F6E               	goto	u3030
 11294  0F6D                     u3031:
 11295  0F6D  2F7D               	goto	l2930
 11296  0F6E                     u3030:
 11297  0F6E                     l2928:
 11298                           
 11299                           ;WaterHeater.c: 74:         {;WaterHeater.c: 75:             heater[ id ].passwordFlag =
      +                           0;
 11300  0F6E  301F               	movlw	31
 11301  0F6F  00FF               	movwf	btemp+1
 11302  0F70  087F               	movf	btemp+1,w
 11303  0F71  00A0               	movwf	___bmul@multiplicand
 11304  0F72  0852               	movf	Heater_init@id,w
 11305  0F73  160A  158A  20FD  120A  158A  	fcall	___bmul
 11306  0F78  3ED7               	addlw	(low ((_heater| 0+14)))& (0+255)
 11307  0F79  0084               	movwf	4
 11308  0F7A  1383               	bcf	3,7	;select IRP bank1
 11309  0F7B  0180               	clrf	0
 11310                           
 11311                           ;WaterHeater.c: 76:             break;
 11312  0F7C  2F8C               	goto	l2932
 11313  0F7D                     l2930:
 11314                           
 11315                           ;WaterHeater.c: 78:     }
 11316  0F7D  3001               	movlw	1
 11317  0F7E  07D0               	addwf	Heater_init@index,f
 11318  0F7F  1803               	skipnc
 11319  0F80  0AD1               	incf	Heater_init@index+1,f
 11320  0F81  3000               	movlw	0
 11321  0F82  07D1               	addwf	Heater_init@index+1,f
 11322  0F83  3000               	movlw	0
 11323  0F84  0251               	subwf	Heater_init@index+1,w
 11324  0F85  3008               	movlw	8
 11325  0F86  1903               	skipnz
 11326  0F87  0250               	subwf	Heater_init@index,w
 11327  0F88  1C03               	skipc
 11328  0F89  2F8B               	goto	u3041
 11329  0F8A  2F8C               	goto	u3040
 11330  0F8B                     u3041:
 11331  0F8B  2F42               	goto	l2926
 11332  0F8C                     u3040:
 11333  0F8C                     l2932:
 11334                           
 11335                           ;WaterHeater.c: 80:     if( heater[ id ].passwordFlag )
 11336  0F8C  301F               	movlw	31
 11337  0F8D  00FF               	movwf	btemp+1
 11338  0F8E  087F               	movf	btemp+1,w
 11339  0F8F  1283               	bcf	3,5	;RP0=0, select bank0
 11340  0F90  1303               	bcf	3,6	;RP1=0, select bank0
 11341  0F91  00A0               	movwf	___bmul@multiplicand
 11342  0F92  0852               	movf	Heater_init@id,w
 11343  0F93  160A  158A  20FD  120A  158A  	fcall	___bmul
 11344  0F98  3ED7               	addlw	(low ((_heater| 0+14)))& (0+255)
 11345  0F99  0084               	movwf	4
 11346  0F9A  1383               	bcf	3,7	;select IRP bank1
 11347  0F9B  0800               	movf	0,w
 11348  0F9C  1903               	btfsc	3,2
 11349  0F9D  2F9F               	goto	u3051
 11350  0F9E  2FA0               	goto	u3050
 11351  0F9F                     u3051:
 11352  0F9F  2FB9               	goto	l2936
 11353  0FA0                     u3050:
 11354  0FA0                     l2934:
 11355                           
 11356                           ;WaterHeater.c: 81:     {;WaterHeater.c: 82:         heater[ id ].targetTemp = Eeprom_re
      +                          ad( 8 );
 11357  0FA0  301F               	movlw	31
 11358  0FA1  00FF               	movwf	btemp+1
 11359  0FA2  087F               	movf	btemp+1,w
 11360  0FA3  1283               	bcf	3,5	;RP0=0, select bank0
 11361  0FA4  1303               	bcf	3,6	;RP1=0, select bank0
 11362  0FA5  00A0               	movwf	___bmul@multiplicand
 11363  0FA6  0852               	movf	Heater_init@id,w
 11364  0FA7  160A  158A  20FD  120A  158A  	fcall	___bmul
 11365  0FAC  3ED4               	addlw	(low ((_heater| 0+11)))& (0+255)
 11366  0FAD  0084               	movwf	4
 11367  0FAE  3008               	movlw	8
 11368  0FAF  160A  158A  252F  120A  158A  	fcall	_Eeprom_read
 11369  0FB4  00FF               	movwf	btemp+1
 11370  0FB5  087F               	movf	btemp+1,w
 11371  0FB6  1383               	bcf	3,7	;select IRP bank1
 11372  0FB7  0080               	movwf	0
 11373                           
 11374                           ;WaterHeater.c: 83:     }else
 11375  0FB8  2FFF               	goto	l406
 11376  0FB9                     l2936:
 11377                           
 11378                           ;WaterHeater.c: 84:     {;WaterHeater.c: 85:         Eeprom_writePage( 0, heater[ id ].p
      +                          asswordWrite, 8 );
 11379  0FB9  301F               	movlw	31
 11380  0FBA  00FF               	movwf	btemp+1
 11381  0FBB  087F               	movf	btemp+1,w
 11382  0FBC  1283               	bcf	3,5	;RP0=0, select bank0
 11383  0FBD  1303               	bcf	3,6	;RP1=0, select bank0
 11384  0FBE  00A0               	movwf	___bmul@multiplicand
 11385  0FBF  0852               	movf	Heater_init@id,w
 11386  0FC0  160A  158A  20FD  120A  158A  	fcall	___bmul
 11387  0FC5  3ED8               	addlw	(low ((_heater| 0+15)))& (0+255)
 11388  0FC6  00FF               	movwf	btemp+1
 11389  0FC7  087F               	movf	btemp+1,w
 11390  0FC8  1283               	bcf	3,5	;RP0=0, select bank0
 11391  0FC9  1303               	bcf	3,6	;RP1=0, select bank0
 11392  0FCA  00A3               	movwf	Eeprom_writePage@buffer
 11393  0FCB  3008               	movlw	8
 11394  0FCC  00FF               	movwf	btemp+1
 11395  0FCD  087F               	movf	btemp+1,w
 11396  0FCE  00A4               	movwf	Eeprom_writePage@length
 11397  0FCF  3000               	movlw	0
 11398  0FD0  160A  158A  264A  120A  158A  	fcall	_Eeprom_writePage
 11399  0FD5                     l2938:
 11400                           
 11401                           ;WaterHeater.c: 86:         Scheduler_delaySoftwareMs( 10 );
 11402  0FD5  3000               	movlw	0
 11403  0FD6  1283               	bcf	3,5	;RP0=0, select bank0
 11404  0FD7  1303               	bcf	3,6	;RP1=0, select bank0
 11405  0FD8  00AC               	movwf	Scheduler_delaySoftwareMs@msDelay+3
 11406  0FD9  3000               	movlw	0
 11407  0FDA  00AB               	movwf	Scheduler_delaySoftwareMs@msDelay+2
 11408  0FDB  3000               	movlw	0
 11409  0FDC  00AA               	movwf	Scheduler_delaySoftwareMs@msDelay+1
 11410  0FDD  300A               	movlw	10
 11411  0FDE  00A9               	movwf	Scheduler_delaySoftwareMs@msDelay
 11412  0FDF  160A  158A  2432  120A  158A  	fcall	_Scheduler_delaySoftwareMs
 11413  0FE4                     l2940:
 11414                           
 11415                           ;WaterHeater.c: 87:         Eeprom_write( 8, heater[ id ].targetTemp );
 11416  0FE4  301F               	movlw	31
 11417  0FE5  00FF               	movwf	btemp+1
 11418  0FE6  087F               	movf	btemp+1,w
 11419  0FE7  1283               	bcf	3,5	;RP0=0, select bank0
 11420  0FE8  1303               	bcf	3,6	;RP1=0, select bank0
 11421  0FE9  00A0               	movwf	___bmul@multiplicand
 11422  0FEA  0852               	movf	Heater_init@id,w
 11423  0FEB  160A  158A  20FD  120A  158A  	fcall	___bmul
 11424  0FF0  3ED4               	addlw	(low ((_heater| 0+11)))& (0+255)
 11425  0FF1  0084               	movwf	4
 11426  0FF2  1383               	bcf	3,7	;select IRP bank1
 11427  0FF3  0800               	movf	0,w
 11428  0FF4  00FF               	movwf	btemp+1
 11429  0FF5  087F               	movf	btemp+1,w
 11430  0FF6  1283               	bcf	3,5	;RP0=0, select bank0
 11431  0FF7  1303               	bcf	3,6	;RP1=0, select bank0
 11432  0FF8  00A3               	movwf	Eeprom_write@buffer
 11433  0FF9  3008               	movlw	8
 11434  0FFA  160A  158A  2356  120A  158A  	fcall	_Eeprom_write
 11435  0FFF                     l406:
 11436  0FFF  0008               	return
 11437  1000                     __end_of_Heater_init:
 11438                           
 11439                           	psect	text54
 11440  18FD                     __ptext54:	
 11441 ;; *************** function ___bmul *****************
 11442 ;; Defined at:
 11443 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\Umul8.c"
 11444 ;; Parameters:    Size  Location     Type
 11445 ;;  multiplier      1    wreg     unsigned char 
 11446 ;;  multiplicand    1    0[BANK0 ] unsigned char 
 11447 ;; Auto vars:     Size  Location     Type
 11448 ;;  multiplier      1    2[BANK0 ] unsigned char 
 11449 ;;  product         1    1[BANK0 ] unsigned char 
 11450 ;; Return value:  Size  Location     Type
 11451 ;;                  1    wreg      unsigned char 
 11452 ;; Registers used:
 11453 ;;		wreg, status,2, status,0, btemp+1
 11454 ;; Tracked objects:
 11455 ;;		On entry : 0/0
 11456 ;;		On exit  : 0/0
 11457 ;;		Unchanged: 0/0
 11458 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11459 ;;      Params:         0       1       0       0       0
 11460 ;;      Locals:         0       2       0       0       0
 11461 ;;      Temps:          0       0       0       0       0
 11462 ;;      Totals:         0       3       0       0       0
 11463 ;;Total ram usage:        3 bytes
 11464 ;; Hardware stack levels used:    1
 11465 ;; Hardware stack levels required when called:    3
 11466 ;; This function calls:
 11467 ;;		Nothing
 11468 ;; This function is called by:
 11469 ;;		_Scheduler_addTask
 11470 ;;		_Scheduler_deleteTask
 11471 ;;		_Scheduler_update
 11472 ;;		_Scheduler_dispatchTasks
 11473 ;;		_Switch_init
 11474 ;;		_Switch_update
 11475 ;;		_Switch_getState
 11476 ;;		_initSwitchHardware
 11477 ;;		_getSwitchHardwareState
 11478 ;;		_Ssd_init
 11479 ;;		_Ssd_update
 11480 ;;		_Ssd_setState
 11481 ;;		_Ssd_setSymbol
 11482 ;;		_initSsdHardware
 11483 ;;		_setSsdHardwareState
 11484 ;;		_setSsdHardwareSymbol
 11485 ;;		_Timer0_init
 11486 ;;		_Heater_init
 11487 ;;		_Heater_update
 11488 ;;		_Tempctrl_init
 11489 ;;		_Tempctrl_update
 11490 ;;		_Tempctrl_setState
 11491 ;;		_initTempctrlHardware
 11492 ;;		_setTempctrlHardwareState
 11493 ;;		_Tempsnsr_init
 11494 ;;		_Tempsnsr_update
 11495 ;;		_Tempsnsr_getState
 11496 ;;		_initTempsnsrHardware
 11497 ;;		_getTempsnsrHarwareState
 11498 ;;		_getAvgTemp
 11499 ;; This function uses a non-reentrant model
 11500 ;;
 11501                           
 11502                           
 11503                           ;psect for function ___bmul
 11504  18FD                     ___bmul:
 11505                           
 11506                           ;incstack = 0
 11507                           ; Regs used in ___bmul: [wreg+status,2+status,0+btemp+1]
 11508                           ;___bmul@multiplier stored from wreg
 11509  18FD  1283               	bcf	3,5	;RP0=0, select bank0
 11510  18FE  1303               	bcf	3,6	;RP1=0, select bank0
 11511  18FF  00A2               	movwf	___bmul@multiplier
 11512  1900                     l2152:
 11513  1900  01A1               	clrf	___bmul@product
 11514  1901                     l2154:
 11515  1901  1C22               	btfss	___bmul@multiplier,0
 11516  1902  2904               	goto	u1631
 11517  1903  2905               	goto	u1630
 11518  1904                     u1631:
 11519  1904  2909               	goto	l2158
 11520  1905                     u1630:
 11521  1905                     l2156:
 11522  1905  0820               	movf	___bmul@multiplicand,w
 11523  1906  00FF               	movwf	btemp+1
 11524  1907  087F               	movf	btemp+1,w
 11525  1908  07A1               	addwf	___bmul@product,f
 11526  1909                     l2158:
 11527  1909  1003               	clrc
 11528  190A  0DA0               	rlf	___bmul@multiplicand,f
 11529  190B                     l2160:
 11530  190B  1003               	clrc
 11531  190C  0CA2               	rrf	___bmul@multiplier,f
 11532  190D                     l2162:
 11533  190D  0822               	movf	___bmul@multiplier,w
 11534  190E  1D03               	btfss	3,2
 11535  190F  2911               	goto	u1641
 11536  1910  2912               	goto	u1640
 11537  1911                     u1641:
 11538  1911  2901               	goto	l2154
 11539  1912                     u1640:
 11540  1912                     l2164:
 11541  1912  0821               	movf	___bmul@product,w
 11542  1913                     l692:
 11543  1913  0008               	return
 11544  1914                     __end_of___bmul:
 11545                           
 11546                           	psect	text55
 11547  1C32                     __ptext55:	
 11548 ;; *************** function _Scheduler_delaySoftwareMs *****************
 11549 ;; Defined at:
 11550 ;;		line 37 in file "SchedulerConfig.c"
 11551 ;; Parameters:    Size  Location     Type
 11552 ;;  msDelay         4    9[BANK0 ] volatile unsigned long 
 11553 ;; Auto vars:     Size  Location     Type
 11554 ;;		None
 11555 ;; Return value:  Size  Location     Type
 11556 ;;                  1    wreg      void 
 11557 ;; Registers used:
 11558 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
 11559 ;; Tracked objects:
 11560 ;;		On entry : 0/0
 11561 ;;		On exit  : 0/0
 11562 ;;		Unchanged: 0/0
 11563 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11564 ;;      Params:         0       4       0       0       0
 11565 ;;      Locals:         0       0       0       0       0
 11566 ;;      Temps:          0       4       0       0       0
 11567 ;;      Totals:         0       8       0       0       0
 11568 ;;Total ram usage:        8 bytes
 11569 ;; Hardware stack levels used:    1
 11570 ;; Hardware stack levels required when called:    4
 11571 ;; This function calls:
 11572 ;;		_Scheduler_delaySoftwareUs
 11573 ;; This function is called by:
 11574 ;;		_Heater_init
 11575 ;; This function uses a non-reentrant model
 11576 ;;
 11577                           
 11578                           
 11579                           ;psect for function _Scheduler_delaySoftwareMs
 11580  1C32                     _Scheduler_delaySoftwareMs:
 11581  1C32                     l2548:	
 11582                           ;incstack = 0
 11583                           ; Regs used in _Scheduler_delaySoftwareMs: [wreg+status,2+status,0+btemp+1+pclath+cstack
      +                          ]
 11584                           
 11585                           
 11586                           ;SchedulerConfig.c: 37: void Scheduler_delaySoftwareMs( volatile uint32_t msDelay );Sche
      +                          dulerConfig.c: 38: {;SchedulerConfig.c: 39:  while( msDelay-- )
 11587  1C32  2C40               	goto	l2552
 11588  1C33                     l2550:
 11589                           
 11590                           ;SchedulerConfig.c: 40:  {;SchedulerConfig.c: 41:   Scheduler_delaySoftwareUs( 1000 );
 11591  1C33  3000               	movlw	0
 11592  1C34  00A3               	movwf	Scheduler_delaySoftwareUs@usDelay+3
 11593  1C35  3000               	movlw	0
 11594  1C36  00A2               	movwf	Scheduler_delaySoftwareUs@usDelay+2
 11595  1C37  3003               	movlw	3
 11596  1C38  00A1               	movwf	Scheduler_delaySoftwareUs@usDelay+1
 11597  1C39  30E8               	movlw	232
 11598  1C3A  00A0               	movwf	Scheduler_delaySoftwareUs@usDelay
 11599  1C3B  160A  158A  2385  160A  158A  	fcall	_Scheduler_delaySoftwareUs
 11600  1C40                     l2552:
 11601                           
 11602                           ;SchedulerConfig.c: 39:  while( msDelay-- )
 11603  1C40  3001               	movlw	1
 11604  1C41  1283               	bcf	3,5	;RP0=0, select bank0
 11605  1C42  1303               	bcf	3,6	;RP1=0, select bank0
 11606  1C43  00AD               	movwf	??_Scheduler_delaySoftwareMs
 11607  1C44  3000               	movlw	0
 11608  1C45  00AE               	movwf	??_Scheduler_delaySoftwareMs+1
 11609  1C46  3000               	movlw	0
 11610  1C47  00AF               	movwf	??_Scheduler_delaySoftwareMs+2
 11611  1C48  3000               	movlw	0
 11612  1C49  00B0               	movwf	??_Scheduler_delaySoftwareMs+3
 11613  1C4A  082D               	movf	??_Scheduler_delaySoftwareMs,w
 11614  1C4B  02A9               	subwf	Scheduler_delaySoftwareMs@msDelay,f	;volatile
 11615  1C4C  082E               	movf	??_Scheduler_delaySoftwareMs+1,w
 11616  1C4D  1C03               	skipc
 11617  1C4E  0F2E               	incfsz	??_Scheduler_delaySoftwareMs+1,w
 11618  1C4F  2C51               	goto	u2385
 11619  1C50  2C52               	goto	u2386
 11620  1C51                     u2385:
 11621  1C51  02AA               	subwf	Scheduler_delaySoftwareMs@msDelay+1,f	;volatile
 11622  1C52                     u2386:
 11623  1C52  082F               	movf	??_Scheduler_delaySoftwareMs+2,w
 11624  1C53  1C03               	skipc
 11625  1C54  0F2F               	incfsz	??_Scheduler_delaySoftwareMs+2,w
 11626  1C55  2C57               	goto	u2387
 11627  1C56  2C58               	goto	u2388
 11628  1C57                     u2387:
 11629  1C57  02AB               	subwf	Scheduler_delaySoftwareMs@msDelay+2,f	;volatile
 11630  1C58                     u2388:
 11631  1C58  0830               	movf	??_Scheduler_delaySoftwareMs+3,w
 11632  1C59  1C03               	skipc
 11633  1C5A  0F30               	incfsz	??_Scheduler_delaySoftwareMs+3,w
 11634  1C5B  2C5D               	goto	u2389
 11635  1C5C  2C5E               	goto	u2380
 11636  1C5D                     u2389:
 11637  1C5D  02AC               	subwf	Scheduler_delaySoftwareMs@msDelay+3,f	;volatile
 11638  1C5E                     u2380:
 11639  1C5E  0A29               	incf	Scheduler_delaySoftwareMs@msDelay,w	;volatile
 11640  1C5F  1D03               	skipz
 11641  1C60  2C6B               	goto	u2391
 11642  1C61  0A2A               	incf	Scheduler_delaySoftwareMs@msDelay+1,w	;volatile
 11643  1C62  1D03               	skipz
 11644  1C63  2C6B               	goto	u2391
 11645  1C64  0A2B               	incf	Scheduler_delaySoftwareMs@msDelay+2,w	;volatile
 11646  1C65  1D03               	skipz
 11647  1C66  2C6B               	goto	u2391
 11648  1C67  0A2C               	incf	Scheduler_delaySoftwareMs@msDelay+3,w	;volatile
 11649  1C68  1D03               	btfss	3,2
 11650  1C69  2C6B               	goto	u2391
 11651  1C6A  2C6C               	goto	u2390
 11652  1C6B                     u2391:
 11653  1C6B  2C33               	goto	l2550
 11654  1C6C                     u2390:
 11655  1C6C                     l82:
 11656  1C6C  0008               	return
 11657  1C6D                     __end_of_Scheduler_delaySoftwareMs:
 11658                           
 11659                           	psect	text56
 11660  1B85                     __ptext56:	
 11661 ;; *************** function _Scheduler_delaySoftwareUs *****************
 11662 ;; Defined at:
 11663 ;;		line 45 in file "SchedulerConfig.c"
 11664 ;; Parameters:    Size  Location     Type
 11665 ;;  usDelay         4    0[BANK0 ] volatile unsigned long 
 11666 ;; Auto vars:     Size  Location     Type
 11667 ;;  delay           1    8[BANK0 ] volatile unsigned char 
 11668 ;; Return value:  Size  Location     Type
 11669 ;;                  1    wreg      void 
 11670 ;; Registers used:
 11671 ;;		wreg, status,2, status,0, btemp+1
 11672 ;; Tracked objects:
 11673 ;;		On entry : 0/0
 11674 ;;		On exit  : 0/0
 11675 ;;		Unchanged: 0/0
 11676 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11677 ;;      Params:         0       4       0       0       0
 11678 ;;      Locals:         0       1       0       0       0
 11679 ;;      Temps:          0       4       0       0       0
 11680 ;;      Totals:         0       9       0       0       0
 11681 ;;Total ram usage:        9 bytes
 11682 ;; Hardware stack levels used:    1
 11683 ;; Hardware stack levels required when called:    3
 11684 ;; This function calls:
 11685 ;;		Nothing
 11686 ;; This function is called by:
 11687 ;;		_main
 11688 ;;		_Scheduler_delaySoftwareMs
 11689 ;; This function uses a non-reentrant model
 11690 ;;
 11691                           
 11692                           
 11693                           ;psect for function _Scheduler_delaySoftwareUs
 11694  1B85                     _Scheduler_delaySoftwareUs:
 11695  1B85                     l2292:	
 11696                           ;incstack = 0
 11697                           ; Regs used in _Scheduler_delaySoftwareUs: [wreg+status,2+status,0+btemp+1]
 11698                           
 11699                           
 11700                           ;SchedulerConfig.c: 45: void Scheduler_delaySoftwareUs( volatile uint32_t usDelay );Sche
      +                          dulerConfig.c: 46: {;SchedulerConfig.c: 47:  volatile uint8_t delay;;SchedulerConfig.c: 
      +                          48:  while( usDelay-- )
 11701  1B85  2B91               	goto	l2298
 11702  1B86                     l2294:
 11703                           
 11704                           ;SchedulerConfig.c: 49:  {;SchedulerConfig.c: 50:   delay = ( uint8_t ) ( ( ( 16000000 )
      +                           / ( 4 ) ) / 1000000 );
 11705  1B86  3004               	movlw	4
 11706  1B87  00FF               	movwf	btemp+1
 11707  1B88  087F               	movf	btemp+1,w
 11708  1B89  00A8               	movwf	Scheduler_delaySoftwareUs@delay	;volatile
 11709  1B8A                     l2296:	
 11710                           ;SchedulerConfig.c: 51:   while( delay-- );
 11711                           
 11712  1B8A  3001               	movlw	1
 11713  1B8B  02A8               	subwf	Scheduler_delaySoftwareUs@delay,f	;volatile
 11714  1B8C  0A28               	incf	Scheduler_delaySoftwareUs@delay,w	;volatile
 11715  1B8D  1D03               	btfss	3,2
 11716  1B8E  2B90               	goto	u1921
 11717  1B8F  2B91               	goto	u1920
 11718  1B90                     u1921:
 11719  1B90  2B8A               	goto	l2296
 11720  1B91                     u1920:
 11721  1B91                     l2298:
 11722                           
 11723                           ;SchedulerConfig.c: 48:  while( usDelay-- )
 11724  1B91  3001               	movlw	1
 11725  1B92  1283               	bcf	3,5	;RP0=0, select bank0
 11726  1B93  1303               	bcf	3,6	;RP1=0, select bank0
 11727  1B94  00A4               	movwf	??_Scheduler_delaySoftwareUs
 11728  1B95  3000               	movlw	0
 11729  1B96  00A5               	movwf	??_Scheduler_delaySoftwareUs+1
 11730  1B97  3000               	movlw	0
 11731  1B98  00A6               	movwf	??_Scheduler_delaySoftwareUs+2
 11732  1B99  3000               	movlw	0
 11733  1B9A  00A7               	movwf	??_Scheduler_delaySoftwareUs+3
 11734  1B9B  0824               	movf	??_Scheduler_delaySoftwareUs,w
 11735  1B9C  02A0               	subwf	Scheduler_delaySoftwareUs@usDelay,f	;volatile
 11736  1B9D  0825               	movf	??_Scheduler_delaySoftwareUs+1,w
 11737  1B9E  1C03               	skipc
 11738  1B9F  0F25               	incfsz	??_Scheduler_delaySoftwareUs+1,w
 11739  1BA0  2BA2               	goto	u1935
 11740  1BA1  2BA3               	goto	u1936
 11741  1BA2                     u1935:
 11742  1BA2  02A1               	subwf	Scheduler_delaySoftwareUs@usDelay+1,f	;volatile
 11743  1BA3                     u1936:
 11744  1BA3  0826               	movf	??_Scheduler_delaySoftwareUs+2,w
 11745  1BA4  1C03               	skipc
 11746  1BA5  0F26               	incfsz	??_Scheduler_delaySoftwareUs+2,w
 11747  1BA6  2BA8               	goto	u1937
 11748  1BA7  2BA9               	goto	u1938
 11749  1BA8                     u1937:
 11750  1BA8  02A2               	subwf	Scheduler_delaySoftwareUs@usDelay+2,f	;volatile
 11751  1BA9                     u1938:
 11752  1BA9  0827               	movf	??_Scheduler_delaySoftwareUs+3,w
 11753  1BAA  1C03               	skipc
 11754  1BAB  0F27               	incfsz	??_Scheduler_delaySoftwareUs+3,w
 11755  1BAC  2BAE               	goto	u1939
 11756  1BAD  2BAF               	goto	u1930
 11757  1BAE                     u1939:
 11758  1BAE  02A3               	subwf	Scheduler_delaySoftwareUs@usDelay+3,f	;volatile
 11759  1BAF                     u1930:
 11760  1BAF  0A20               	incf	Scheduler_delaySoftwareUs@usDelay,w	;volatile
 11761  1BB0  1D03               	skipz
 11762  1BB1  2BBC               	goto	u1941
 11763  1BB2  0A21               	incf	Scheduler_delaySoftwareUs@usDelay+1,w	;volatile
 11764  1BB3  1D03               	skipz
 11765  1BB4  2BBC               	goto	u1941
 11766  1BB5  0A22               	incf	Scheduler_delaySoftwareUs@usDelay+2,w	;volatile
 11767  1BB6  1D03               	skipz
 11768  1BB7  2BBC               	goto	u1941
 11769  1BB8  0A23               	incf	Scheduler_delaySoftwareUs@usDelay+3,w	;volatile
 11770  1BB9  1D03               	btfss	3,2
 11771  1BBA  2BBC               	goto	u1941
 11772  1BBB  2BBD               	goto	u1940
 11773  1BBC                     u1941:
 11774  1BBC  2B86               	goto	l2294
 11775  1BBD                     u1940:
 11776  1BBD                     l91:
 11777  1BBD  0008               	return
 11778  1BBE                     __end_of_Scheduler_delaySoftwareUs:
 11779                           
 11780                           	psect	text57
 11781  1E4A                     __ptext57:	
 11782 ;; *************** function _Eeprom_writePage *****************
 11783 ;; Defined at:
 11784 ;;		line 26 in file "Eeprom.c"
 11785 ;; Parameters:    Size  Location     Type
 11786 ;;  address         1    wreg     unsigned char 
 11787 ;;  buffer          1    3[BANK0 ] PTR unsigned char 
 11788 ;;		 -> heater(31), 
 11789 ;;  length          1    4[BANK0 ] unsigned char 
 11790 ;; Auto vars:     Size  Location     Type
 11791 ;;  address         1    7[BANK0 ] unsigned char 
 11792 ;;  i               2    8[BANK0 ] unsigned int 
 11793 ;; Return value:  Size  Location     Type
 11794 ;;                  1    wreg      void 
 11795 ;; Registers used:
 11796 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 11797 ;; Tracked objects:
 11798 ;;		On entry : 0/0
 11799 ;;		On exit  : 0/0
 11800 ;;		Unchanged: 0/0
 11801 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11802 ;;      Params:         0       2       0       0       0
 11803 ;;      Locals:         0       3       0       0       0
 11804 ;;      Temps:          0       2       0       0       0
 11805 ;;      Totals:         0       7       0       0       0
 11806 ;;Total ram usage:        7 bytes
 11807 ;; Hardware stack levels used:    1
 11808 ;; Hardware stack levels required when called:    5
 11809 ;; This function calls:
 11810 ;;		_I2c_repeatedStartMaster
 11811 ;;		_I2c_startMaster
 11812 ;;		_I2c_stopMaster
 11813 ;;		_I2c_writeMaster
 11814 ;; This function is called by:
 11815 ;;		_Heater_init
 11816 ;; This function uses a non-reentrant model
 11817 ;;
 11818                           
 11819                           
 11820                           ;psect for function _Eeprom_writePage
 11821  1E4A                     _Eeprom_writePage:
 11822                           
 11823                           ;incstack = 0
 11824                           ; Regs used in _Eeprom_writePage: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 11825                           ;Eeprom_writePage@address stored from wreg
 11826  1E4A  1283               	bcf	3,5	;RP0=0, select bank0
 11827  1E4B  1303               	bcf	3,6	;RP1=0, select bank0
 11828  1E4C  00A7               	movwf	Eeprom_writePage@address
 11829  1E4D                     l2648:
 11830                           
 11831                           ;Eeprom.c: 26: void Eeprom_writePage( uint8_t address, uint8_t *buffer, uint8_t length )
      +                          ;Eeprom.c: 27: {;Eeprom.c: 28:     I2c_startMaster();
 11832  1E4D  160A  158A  203F  160A  158A  	fcall	_I2c_startMaster
 11833                           
 11834                           ;Eeprom.c: 30:     while( I2c_writeMaster( 0xA0 ) )
 11835  1E52  2E58               	goto	l351
 11836  1E53                     l2650:
 11837                           
 11838                           ;Eeprom.c: 31:     {;Eeprom.c: 32:         I2c_repeatedStartMaster();
 11839  1E53  160A  158A  2034  160A  158A  	fcall	_I2c_repeatedStartMaster
 11840  1E58                     l351:	
 11841                           ;Eeprom.c: 33:     }
 11842                           
 11843                           
 11844                           ;Eeprom.c: 30:     while( I2c_writeMaster( 0xA0 ) )
 11845  1E58  30A0               	movlw	160
 11846  1E59  160A  158A  2170  160A  158A  	fcall	_I2c_writeMaster
 11847  1E5E  3A00               	xorlw	0
 11848  1E5F  1D03               	skipz
 11849  1E60  2E62               	goto	u2701
 11850  1E61  2E63               	goto	u2700
 11851  1E62                     u2701:
 11852  1E62  2E53               	goto	l2650
 11853  1E63                     u2700:
 11854  1E63                     l2652:
 11855                           
 11856                           ;Eeprom.c: 34:     I2c_writeMaster( address );
 11857  1E63  1283               	bcf	3,5	;RP0=0, select bank0
 11858  1E64  1303               	bcf	3,6	;RP1=0, select bank0
 11859  1E65  0827               	movf	Eeprom_writePage@address,w
 11860  1E66  160A  158A  2170  160A  158A  	fcall	_I2c_writeMaster
 11861  1E6B                     l2654:
 11862                           
 11863                           ;Eeprom.c: 35:     for( size_t i = 0; i< length; i++ )
 11864  1E6B  1283               	bcf	3,5	;RP0=0, select bank0
 11865  1E6C  1303               	bcf	3,6	;RP1=0, select bank0
 11866  1E6D  01A8               	clrf	Eeprom_writePage@i
 11867  1E6E  01A9               	clrf	Eeprom_writePage@i+1
 11868  1E6F  2E84               	goto	l2660
 11869  1E70                     l2656:
 11870                           
 11871                           ;Eeprom.c: 36:     {;Eeprom.c: 37:         I2c_writeMaster( buffer[ i ] );
 11872  1E70  0828               	movf	Eeprom_writePage@i,w
 11873  1E71  0723               	addwf	Eeprom_writePage@buffer,w
 11874  1E72  00A5               	movwf	??_Eeprom_writePage
 11875  1E73  0825               	movf	??_Eeprom_writePage,w
 11876  1E74  0084               	movwf	4
 11877  1E75  1383               	bcf	3,7	;select IRP bank0
 11878  1E76  0800               	movf	0,w
 11879  1E77  160A  158A  2170  160A  158A  	fcall	_I2c_writeMaster
 11880  1E7C                     l2658:
 11881                           
 11882                           ;Eeprom.c: 38:     }
 11883  1E7C  3001               	movlw	1
 11884  1E7D  1283               	bcf	3,5	;RP0=0, select bank0
 11885  1E7E  1303               	bcf	3,6	;RP1=0, select bank0
 11886  1E7F  07A8               	addwf	Eeprom_writePage@i,f
 11887  1E80  1803               	skipnc
 11888  1E81  0AA9               	incf	Eeprom_writePage@i+1,f
 11889  1E82  3000               	movlw	0
 11890  1E83  07A9               	addwf	Eeprom_writePage@i+1,f
 11891  1E84                     l2660:
 11892  1E84  0824               	movf	Eeprom_writePage@length,w
 11893  1E85  00A5               	movwf	??_Eeprom_writePage
 11894  1E86  01A6               	clrf	??_Eeprom_writePage+1
 11895  1E87  0826               	movf	??_Eeprom_writePage+1,w
 11896  1E88  0229               	subwf	Eeprom_writePage@i+1,w
 11897  1E89  1D03               	skipz
 11898  1E8A  2E8D               	goto	u2715
 11899  1E8B  0825               	movf	??_Eeprom_writePage,w
 11900  1E8C  0228               	subwf	Eeprom_writePage@i,w
 11901  1E8D                     u2715:
 11902  1E8D  1C03               	skipc
 11903  1E8E  2E90               	goto	u2711
 11904  1E8F  2E91               	goto	u2710
 11905  1E90                     u2711:
 11906  1E90  2E70               	goto	l2656
 11907  1E91                     u2710:
 11908  1E91                     l2662:
 11909                           
 11910                           ;Eeprom.c: 39:     I2c_stopMaster();
 11911  1E91  160A  158A  204A  160A  158A  	fcall	_I2c_stopMaster
 11912  1E96                     l357:
 11913  1E96  0008               	return
 11914  1E97                     __end_of_Eeprom_writePage:
 11915                           
 11916                           	psect	text58
 11917  1B56                     __ptext58:	
 11918 ;; *************** function _Eeprom_write *****************
 11919 ;; Defined at:
 11920 ;;		line 13 in file "Eeprom.c"
 11921 ;; Parameters:    Size  Location     Type
 11922 ;;  address         1    wreg     unsigned char 
 11923 ;;  buffer          1    3[BANK0 ] unsigned char 
 11924 ;; Auto vars:     Size  Location     Type
 11925 ;;  address         1    4[BANK0 ] unsigned char 
 11926 ;; Return value:  Size  Location     Type
 11927 ;;                  1    wreg      void 
 11928 ;; Registers used:
 11929 ;;		wreg, status,2, status,0, pclath, cstack
 11930 ;; Tracked objects:
 11931 ;;		On entry : 0/0
 11932 ;;		On exit  : 0/0
 11933 ;;		Unchanged: 0/0
 11934 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11935 ;;      Params:         0       1       0       0       0
 11936 ;;      Locals:         0       1       0       0       0
 11937 ;;      Temps:          0       0       0       0       0
 11938 ;;      Totals:         0       2       0       0       0
 11939 ;;Total ram usage:        2 bytes
 11940 ;; Hardware stack levels used:    1
 11941 ;; Hardware stack levels required when called:    5
 11942 ;; This function calls:
 11943 ;;		_I2c_repeatedStartMaster
 11944 ;;		_I2c_startMaster
 11945 ;;		_I2c_stopMaster
 11946 ;;		_I2c_writeMaster
 11947 ;; This function is called by:
 11948 ;;		_Heater_init
 11949 ;;		_Heater_update
 11950 ;; This function uses a non-reentrant model
 11951 ;;
 11952                           
 11953                           
 11954                           ;psect for function _Eeprom_write
 11955  1B56                     _Eeprom_write:
 11956                           
 11957                           ;incstack = 0
 11958                           ; Regs used in _Eeprom_write: [wreg+status,2+status,0+pclath+cstack]
 11959                           ;Eeprom_write@address stored from wreg
 11960  1B56  1283               	bcf	3,5	;RP0=0, select bank0
 11961  1B57  1303               	bcf	3,6	;RP1=0, select bank0
 11962  1B58  00A4               	movwf	Eeprom_write@address
 11963  1B59                     l2390:
 11964                           
 11965                           ;Eeprom.c: 13: void Eeprom_write( uint8_t address, uint8_t buffer );Eeprom.c: 14: {;Eepr
      +                          om.c: 15:     I2c_startMaster();
 11966  1B59  160A  158A  203F  160A  158A  	fcall	_I2c_startMaster
 11967                           
 11968                           ;Eeprom.c: 17:     while( I2c_writeMaster( 0xA0 ) )
 11969  1B5E  2B64               	goto	l345
 11970  1B5F                     l2392:
 11971                           
 11972                           ;Eeprom.c: 18:     {;Eeprom.c: 19:         I2c_repeatedStartMaster();
 11973  1B5F  160A  158A  2034  160A  158A  	fcall	_I2c_repeatedStartMaster
 11974  1B64                     l345:	
 11975                           ;Eeprom.c: 20:     }
 11976                           
 11977                           
 11978                           ;Eeprom.c: 17:     while( I2c_writeMaster( 0xA0 ) )
 11979  1B64  30A0               	movlw	160
 11980  1B65  160A  158A  2170  160A  158A  	fcall	_I2c_writeMaster
 11981  1B6A  3A00               	xorlw	0
 11982  1B6B  1D03               	skipz
 11983  1B6C  2B6E               	goto	u2121
 11984  1B6D  2B6F               	goto	u2120
 11985  1B6E                     u2121:
 11986  1B6E  2B5F               	goto	l2392
 11987  1B6F                     u2120:
 11988  1B6F                     l2394:
 11989                           
 11990                           ;Eeprom.c: 21:     I2c_writeMaster( address );
 11991  1B6F  1283               	bcf	3,5	;RP0=0, select bank0
 11992  1B70  1303               	bcf	3,6	;RP1=0, select bank0
 11993  1B71  0824               	movf	Eeprom_write@address,w
 11994  1B72  160A  158A  2170  160A  158A  	fcall	_I2c_writeMaster
 11995                           
 11996                           ;Eeprom.c: 22:     I2c_writeMaster( buffer );
 11997  1B77  1283               	bcf	3,5	;RP0=0, select bank0
 11998  1B78  1303               	bcf	3,6	;RP1=0, select bank0
 11999  1B79  0823               	movf	Eeprom_write@buffer,w
 12000  1B7A  160A  158A  2170  160A  158A  	fcall	_I2c_writeMaster
 12001                           
 12002                           ;Eeprom.c: 23:     I2c_stopMaster();
 12003  1B7F  160A  158A  204A  160A  158A  	fcall	_I2c_stopMaster
 12004  1B84                     l348:
 12005  1B84  0008               	return
 12006  1B85                     __end_of_Eeprom_write:
 12007                           
 12008                           	psect	text59
 12009  1072                     __ptext59:	
 12010 ;; *************** function _Eeprom_readPage *****************
 12011 ;; Defined at:
 12012 ;;		line 60 in file "Eeprom.c"
 12013 ;; Parameters:    Size  Location     Type
 12014 ;;  address         1    wreg     unsigned char 
 12015 ;;  buffer          1    3[BANK0 ] PTR unsigned char 
 12016 ;;		 -> heater(31), 
 12017 ;;  length          1    4[BANK0 ] unsigned char 
 12018 ;; Auto vars:     Size  Location     Type
 12019 ;;  address         1    7[BANK0 ] unsigned char 
 12020 ;;  i               2    8[BANK0 ] unsigned int 
 12021 ;; Return value:  Size  Location     Type
 12022 ;;                  1    wreg      void 
 12023 ;; Registers used:
 12024 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 12025 ;; Tracked objects:
 12026 ;;		On entry : 0/0
 12027 ;;		On exit  : 0/0
 12028 ;;		Unchanged: 0/0
 12029 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12030 ;;      Params:         0       2       0       0       0
 12031 ;;      Locals:         0       3       0       0       0
 12032 ;;      Temps:          0       2       0       0       0
 12033 ;;      Totals:         0       7       0       0       0
 12034 ;;Total ram usage:        7 bytes
 12035 ;; Hardware stack levels used:    1
 12036 ;; Hardware stack levels required when called:    5
 12037 ;; This function calls:
 12038 ;;		_I2c_ack
 12039 ;;		_I2c_read
 12040 ;;		_I2c_repeatedStartMaster
 12041 ;;		_I2c_startMaster
 12042 ;;		_I2c_stopMaster
 12043 ;;		_I2c_writeMaster
 12044 ;; This function is called by:
 12045 ;;		_Heater_init
 12046 ;; This function uses a non-reentrant model
 12047 ;;
 12048                           
 12049                           
 12050                           ;psect for function _Eeprom_readPage
 12051  1072                     _Eeprom_readPage:
 12052                           
 12053                           ;incstack = 0
 12054                           ; Regs used in _Eeprom_readPage: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
 12055                           ;Eeprom_readPage@address stored from wreg
 12056  1072  1283               	bcf	3,5	;RP0=0, select bank0
 12057  1073  1303               	bcf	3,6	;RP1=0, select bank0
 12058  1074  00A7               	movwf	Eeprom_readPage@address
 12059  1075                     l2680:
 12060                           
 12061                           ;Eeprom.c: 60: void Eeprom_readPage( uint8_t address, uint8_t *buffer, uint8_t length );
      +                          Eeprom.c: 61: {;Eeprom.c: 62:     I2c_startMaster();
 12062  1075  160A  158A  203F  160A  118A  	fcall	_I2c_startMaster
 12063                           
 12064                           ;Eeprom.c: 64:     while( I2c_writeMaster( 0xA0 ) )
 12065  107A  2880               	goto	l366
 12066  107B                     l2682:
 12067                           
 12068                           ;Eeprom.c: 65:     {;Eeprom.c: 66:         I2c_repeatedStartMaster();
 12069  107B  160A  158A  2034  160A  118A  	fcall	_I2c_repeatedStartMaster
 12070  1080                     l366:	
 12071                           ;Eeprom.c: 67:     }
 12072                           
 12073                           
 12074                           ;Eeprom.c: 64:     while( I2c_writeMaster( 0xA0 ) )
 12075  1080  30A0               	movlw	160
 12076  1081  160A  158A  2170  160A  118A  	fcall	_I2c_writeMaster
 12077  1086  3A00               	xorlw	0
 12078  1087  1D03               	skipz
 12079  1088  288A               	goto	u2731
 12080  1089  288B               	goto	u2730
 12081  108A                     u2731:
 12082  108A  287B               	goto	l2682
 12083  108B                     u2730:
 12084  108B                     l2684:
 12085                           
 12086                           ;Eeprom.c: 68:     I2c_writeMaster( address );
 12087  108B  1283               	bcf	3,5	;RP0=0, select bank0
 12088  108C  1303               	bcf	3,6	;RP1=0, select bank0
 12089  108D  0827               	movf	Eeprom_readPage@address,w
 12090  108E  160A  158A  2170  160A  118A  	fcall	_I2c_writeMaster
 12091                           
 12092                           ;Eeprom.c: 69:     I2c_startMaster();
 12093  1093  160A  158A  203F  160A  118A  	fcall	_I2c_startMaster
 12094                           
 12095                           ;Eeprom.c: 70:     I2c_writeMaster( 0xA1 );
 12096  1098  30A1               	movlw	161
 12097  1099  160A  158A  2170  160A  118A  	fcall	_I2c_writeMaster
 12098  109E                     l2686:
 12099                           
 12100                           ;Eeprom.c: 71:     for( size_t i = 0; i < length; i++ )
 12101  109E  1283               	bcf	3,5	;RP0=0, select bank0
 12102  109F  1303               	bcf	3,6	;RP1=0, select bank0
 12103  10A0  01A8               	clrf	Eeprom_readPage@i
 12104  10A1  01A9               	clrf	Eeprom_readPage@i+1
 12105  10A2  28C0               	goto	l2694
 12106  10A3                     l2688:
 12107                           
 12108                           ;Eeprom.c: 72:     {;Eeprom.c: 73:         buffer[i] = I2c_read();
 12109  10A3  160A  158A  2188  160A  118A  	fcall	_I2c_read
 12110  10A8  00FF               	movwf	btemp+1
 12111  10A9  1283               	bcf	3,5	;RP0=0, select bank0
 12112  10AA  1303               	bcf	3,6	;RP1=0, select bank0
 12113  10AB  0828               	movf	Eeprom_readPage@i,w
 12114  10AC  0723               	addwf	Eeprom_readPage@buffer,w
 12115  10AD  00A5               	movwf	??_Eeprom_readPage
 12116  10AE  0825               	movf	??_Eeprom_readPage,w
 12117  10AF  0084               	movwf	4
 12118  10B0  087F               	movf	btemp+1,w
 12119  10B1  1383               	bcf	3,7	;select IRP bank0
 12120  10B2  0080               	movwf	0
 12121  10B3                     l2690:
 12122                           
 12123                           ;Eeprom.c: 74:         I2c_ack();
 12124  10B3  160A  158A  2089  160A  118A  	fcall	_I2c_ack
 12125  10B8                     l2692:
 12126                           
 12127                           ;Eeprom.c: 75:     }
 12128  10B8  3001               	movlw	1
 12129  10B9  1283               	bcf	3,5	;RP0=0, select bank0
 12130  10BA  1303               	bcf	3,6	;RP1=0, select bank0
 12131  10BB  07A8               	addwf	Eeprom_readPage@i,f
 12132  10BC  1803               	skipnc
 12133  10BD  0AA9               	incf	Eeprom_readPage@i+1,f
 12134  10BE  3000               	movlw	0
 12135  10BF  07A9               	addwf	Eeprom_readPage@i+1,f
 12136  10C0                     l2694:
 12137  10C0  0824               	movf	Eeprom_readPage@length,w
 12138  10C1  00A5               	movwf	??_Eeprom_readPage
 12139  10C2  01A6               	clrf	??_Eeprom_readPage+1
 12140  10C3  0826               	movf	??_Eeprom_readPage+1,w
 12141  10C4  0229               	subwf	Eeprom_readPage@i+1,w
 12142  10C5  1D03               	skipz
 12143  10C6  28C9               	goto	u2745
 12144  10C7  0825               	movf	??_Eeprom_readPage,w
 12145  10C8  0228               	subwf	Eeprom_readPage@i,w
 12146  10C9                     u2745:
 12147  10C9  1C03               	skipc
 12148  10CA  28CC               	goto	u2741
 12149  10CB  28CD               	goto	u2740
 12150  10CC                     u2741:
 12151  10CC  28A3               	goto	l2688
 12152  10CD                     u2740:
 12153  10CD                     l2696:
 12154                           
 12155                           ;Eeprom.c: 76:     I2c_stopMaster();
 12156  10CD  160A  158A  204A  160A  118A  	fcall	_I2c_stopMaster
 12157  10D2                     l372:
 12158  10D2  0008               	return
 12159  10D3                     __end_of_Eeprom_readPage:
 12160                           
 12161                           	psect	text60
 12162  1889                     __ptext60:	
 12163 ;; *************** function _I2c_ack *****************
 12164 ;; Defined at:
 12165 ;;		line 53 in file "I2c.c"
 12166 ;; Parameters:    Size  Location     Type
 12167 ;;		None
 12168 ;; Auto vars:     Size  Location     Type
 12169 ;;		None
 12170 ;; Return value:  Size  Location     Type
 12171 ;;                  1    wreg      void 
 12172 ;; Registers used:
 12173 ;;		wreg, status,2, status,0, pclath, cstack
 12174 ;; Tracked objects:
 12175 ;;		On entry : 0/0
 12176 ;;		On exit  : 0/0
 12177 ;;		Unchanged: 0/0
 12178 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12179 ;;      Params:         0       0       0       0       0
 12180 ;;      Locals:         0       0       0       0       0
 12181 ;;      Temps:          0       0       0       0       0
 12182 ;;      Totals:         0       0       0       0       0
 12183 ;;Total ram usage:        0 bytes
 12184 ;; Hardware stack levels used:    1
 12185 ;; Hardware stack levels required when called:    4
 12186 ;; This function calls:
 12187 ;;		_I2c_waitMaster
 12188 ;; This function is called by:
 12189 ;;		_Eeprom_readPage
 12190 ;; This function uses a non-reentrant model
 12191 ;;
 12192                           
 12193                           
 12194                           ;psect for function _I2c_ack
 12195  1889                     _I2c_ack:
 12196  1889                     l2414:	
 12197                           ;incstack = 0
 12198                           ; Regs used in _I2c_ack: [wreg+status,2+status,0+pclath+cstack]
 12199                           
 12200                           
 12201                           ;I2c.c: 55:     SSPCON2 = SSPCON2 & ~0x20;
 12202  1889  1683               	bsf	3,5	;RP0=1, select bank1
 12203  188A  1303               	bcf	3,6	;RP1=0, select bank1
 12204  188B  0811               	movf	17,w	;volatile
 12205  188C  39DF               	andlw	223
 12206  188D  0091               	movwf	17	;volatile
 12207  188E                     l2416:
 12208                           
 12209                           ;I2c.c: 56:     I2c_waitMaster();
 12210  188E  160A  158A  206C  160A  158A  	fcall	_I2c_waitMaster
 12211  1893                     l2418:
 12212                           
 12213                           ;I2c.c: 57:     SSPCON2 = SSPCON2 | 0x10;
 12214  1893  1683               	bsf	3,5	;RP0=1, select bank1
 12215  1894  1303               	bcf	3,6	;RP1=0, select bank1
 12216  1895  0811               	movf	17,w	;volatile
 12217  1896  3810               	iorlw	16
 12218  1897  0091               	movwf	17	;volatile
 12219  1898                     l478:
 12220  1898  0008               	return
 12221  1899                     __end_of_I2c_ack:
 12222                           
 12223                           	psect	text61
 12224  1D2F                     __ptext61:	
 12225 ;; *************** function _Eeprom_read *****************
 12226 ;; Defined at:
 12227 ;;		line 42 in file "Eeprom.c"
 12228 ;; Parameters:    Size  Location     Type
 12229 ;;  address         1    wreg     unsigned char 
 12230 ;; Auto vars:     Size  Location     Type
 12231 ;;  address         1    1[BANK0 ] unsigned char 
 12232 ;;  buffer          1    2[BANK0 ] unsigned char 
 12233 ;; Return value:  Size  Location     Type
 12234 ;;                  1    wreg      unsigned char 
 12235 ;; Registers used:
 12236 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
 12237 ;; Tracked objects:
 12238 ;;		On entry : 0/0
 12239 ;;		On exit  : 0/0
 12240 ;;		Unchanged: 0/0
 12241 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12242 ;;      Params:         0       0       0       0       0
 12243 ;;      Locals:         0       2       0       0       0
 12244 ;;      Temps:          0       0       0       0       0
 12245 ;;      Totals:         0       2       0       0       0
 12246 ;;Total ram usage:        2 bytes
 12247 ;; Hardware stack levels used:    1
 12248 ;; Hardware stack levels required when called:    5
 12249 ;; This function calls:
 12250 ;;		_I2c_nack
 12251 ;;		_I2c_read
 12252 ;;		_I2c_repeatedStartMaster
 12253 ;;		_I2c_startMaster
 12254 ;;		_I2c_stopMaster
 12255 ;;		_I2c_writeMaster
 12256 ;; This function is called by:
 12257 ;;		_Heater_init
 12258 ;; This function uses a non-reentrant model
 12259 ;;
 12260                           
 12261                           
 12262                           ;psect for function _Eeprom_read
 12263  1D2F                     _Eeprom_read:
 12264                           
 12265                           ;incstack = 0
 12266                           ; Regs used in _Eeprom_read: [wreg+status,2+status,0+btemp+1+pclath+cstack]
 12267                           ;Eeprom_read@address stored from wreg
 12268  1D2F  1283               	bcf	3,5	;RP0=0, select bank0
 12269  1D30  1303               	bcf	3,6	;RP1=0, select bank0
 12270  1D31  00A1               	movwf	Eeprom_read@address
 12271  1D32                     l2664:
 12272                           
 12273                           ;Eeprom.c: 42: uint8_t Eeprom_read( uint8_t address );Eeprom.c: 43: {;Eeprom.c: 44:     
      +                          uint8_t buffer;;Eeprom.c: 45:     I2c_startMaster();
 12274  1D32  160A  158A  203F  160A  158A  	fcall	_I2c_startMaster
 12275                           
 12276                           ;Eeprom.c: 47:     while( I2c_writeMaster( 0xA0 ) )
 12277  1D37  2D3D               	goto	l360
 12278  1D38                     l2666:
 12279                           
 12280                           ;Eeprom.c: 48:     {;Eeprom.c: 49:         I2c_repeatedStartMaster();
 12281  1D38  160A  158A  2034  160A  158A  	fcall	_I2c_repeatedStartMaster
 12282  1D3D                     l360:	
 12283                           ;Eeprom.c: 50:     }
 12284                           
 12285                           
 12286                           ;Eeprom.c: 47:     while( I2c_writeMaster( 0xA0 ) )
 12287  1D3D  30A0               	movlw	160
 12288  1D3E  160A  158A  2170  160A  158A  	fcall	_I2c_writeMaster
 12289  1D43  3A00               	xorlw	0
 12290  1D44  1D03               	skipz
 12291  1D45  2D47               	goto	u2721
 12292  1D46  2D48               	goto	u2720
 12293  1D47                     u2721:
 12294  1D47  2D38               	goto	l2666
 12295  1D48                     u2720:
 12296  1D48                     l2668:
 12297                           
 12298                           ;Eeprom.c: 51:     I2c_writeMaster( address );
 12299  1D48  1283               	bcf	3,5	;RP0=0, select bank0
 12300  1D49  1303               	bcf	3,6	;RP1=0, select bank0
 12301  1D4A  0821               	movf	Eeprom_read@address,w
 12302  1D4B  160A  158A  2170  160A  158A  	fcall	_I2c_writeMaster
 12303                           
 12304                           ;Eeprom.c: 52:     I2c_startMaster();
 12305  1D50  160A  158A  203F  160A  158A  	fcall	_I2c_startMaster
 12306                           
 12307                           ;Eeprom.c: 53:     I2c_writeMaster( 0xA1 );
 12308  1D55  30A1               	movlw	161
 12309  1D56  160A  158A  2170  160A  158A  	fcall	_I2c_writeMaster
 12310  1D5B                     l2670:
 12311                           
 12312                           ;Eeprom.c: 54:     buffer = I2c_read();
 12313  1D5B  160A  158A  2188  160A  158A  	fcall	_I2c_read
 12314  1D60  00FF               	movwf	btemp+1
 12315  1D61  087F               	movf	btemp+1,w
 12316  1D62  1283               	bcf	3,5	;RP0=0, select bank0
 12317  1D63  1303               	bcf	3,6	;RP1=0, select bank0
 12318  1D64  00A2               	movwf	Eeprom_read@buffer
 12319  1D65                     l2672:
 12320                           
 12321                           ;Eeprom.c: 55:     I2c_nack();
 12322  1D65  160A  158A  2079  160A  158A  	fcall	_I2c_nack
 12323  1D6A                     l2674:
 12324                           
 12325                           ;Eeprom.c: 56:     I2c_stopMaster();
 12326  1D6A  160A  158A  204A  160A  158A  	fcall	_I2c_stopMaster
 12327  1D6F                     l2676:
 12328                           
 12329                           ;Eeprom.c: 57:     return buffer;
 12330  1D6F  1283               	bcf	3,5	;RP0=0, select bank0
 12331  1D70  1303               	bcf	3,6	;RP1=0, select bank0
 12332  1D71  0822               	movf	Eeprom_read@buffer,w
 12333  1D72                     l363:
 12334  1D72  0008               	return
 12335  1D73                     __end_of_Eeprom_read:
 12336                           
 12337                           	psect	text62
 12338  1970                     __ptext62:	
 12339 ;; *************** function _I2c_writeMaster *****************
 12340 ;; Defined at:
 12341 ;;		line 34 in file "I2c.c"
 12342 ;; Parameters:    Size  Location     Type
 12343 ;;  buffer          1    wreg     unsigned char 
 12344 ;; Auto vars:     Size  Location     Type
 12345 ;;  buffer          1    0[BANK0 ] unsigned char 
 12346 ;; Return value:  Size  Location     Type
 12347 ;;                  1    wreg      unsigned char 
 12348 ;; Registers used:
 12349 ;;		wreg, status,2, status,0, pclath, cstack
 12350 ;; Tracked objects:
 12351 ;;		On entry : 0/0
 12352 ;;		On exit  : 0/0
 12353 ;;		Unchanged: 0/0
 12354 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12355 ;;      Params:         0       0       0       0       0
 12356 ;;      Locals:         0       1       0       0       0
 12357 ;;      Temps:          0       0       0       0       0
 12358 ;;      Totals:         0       1       0       0       0
 12359 ;;Total ram usage:        1 bytes
 12360 ;; Hardware stack levels used:    1
 12361 ;; Hardware stack levels required when called:    4
 12362 ;; This function calls:
 12363 ;;		_I2c_waitMaster
 12364 ;; This function is called by:
 12365 ;;		_Eeprom_write
 12366 ;;		_Eeprom_writePage
 12367 ;;		_Eeprom_read
 12368 ;;		_Eeprom_readPage
 12369 ;; This function uses a non-reentrant model
 12370 ;;
 12371                           
 12372                           
 12373                           ;psect for function _I2c_writeMaster
 12374  1970                     _I2c_writeMaster:
 12375                           
 12376                           ;incstack = 0
 12377                           ; Regs used in _I2c_writeMaster: [wreg+status,2+status,0+pclath+cstack]
 12378                           ;I2c_writeMaster@buffer stored from wreg
 12379  1970  1283               	bcf	3,5	;RP0=0, select bank0
 12380  1971  1303               	bcf	3,6	;RP1=0, select bank0
 12381  1972  00A0               	movwf	I2c_writeMaster@buffer
 12382  1973                     l2240:
 12383                           
 12384                           ;I2c.c: 34: uint8_t I2c_writeMaster( uint8_t buffer );I2c.c: 35: {;I2c.c: 36:     I2c_wa
      +                          itMaster();
 12385  1973  160A  158A  206C  160A  158A  	fcall	_I2c_waitMaster
 12386  1978                     l2242:
 12387                           
 12388                           ;I2c.c: 37:     SSPBUF = buffer;
 12389  1978  1283               	bcf	3,5	;RP0=0, select bank0
 12390  1979  1303               	bcf	3,6	;RP1=0, select bank0
 12391  197A  0820               	movf	I2c_writeMaster@buffer,w
 12392  197B  0093               	movwf	19	;volatile
 12393  197C                     l466:	
 12394                           ;I2c.c: 38:     while( !( PIR1 & 0x08 ) );
 12395                           
 12396  197C  1D8C               	btfss	12,3	;volatile
 12397  197D  297F               	goto	u1791
 12398  197E  2980               	goto	u1790
 12399  197F                     u1791:
 12400  197F  297C               	goto	l466
 12401  1980                     u1790:
 12402  1980                     l2244:
 12403                           
 12404                           ;I2c.c: 39:     PIR1 = PIR1 & ~0x08;
 12405  1980  080C               	movf	12,w	;volatile
 12406  1981  39F7               	andlw	247
 12407  1982  008C               	movwf	12	;volatile
 12408                           
 12409                           ;I2c.c: 40:     return ( SSPCON2 & 0x40 );
 12410  1983  1683               	bsf	3,5	;RP0=1, select bank1
 12411  1984  1303               	bcf	3,6	;RP1=0, select bank1
 12412  1985  0811               	movf	17,w	;volatile
 12413  1986  3940               	andlw	64
 12414  1987                     l469:
 12415  1987  0008               	return
 12416  1988                     __end_of_I2c_writeMaster:
 12417                           
 12418                           	psect	text63
 12419  184A                     __ptext63:	
 12420 ;; *************** function _I2c_stopMaster *****************
 12421 ;; Defined at:
 12422 ;;		line 28 in file "I2c.c"
 12423 ;; Parameters:    Size  Location     Type
 12424 ;;		None
 12425 ;; Auto vars:     Size  Location     Type
 12426 ;;		None
 12427 ;; Return value:  Size  Location     Type
 12428 ;;                  1    wreg      void 
 12429 ;; Registers used:
 12430 ;;		wreg, status,2, status,0, pclath, cstack
 12431 ;; Tracked objects:
 12432 ;;		On entry : 0/0
 12433 ;;		On exit  : 0/0
 12434 ;;		Unchanged: 0/0
 12435 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12436 ;;      Params:         0       0       0       0       0
 12437 ;;      Locals:         0       0       0       0       0
 12438 ;;      Temps:          0       0       0       0       0
 12439 ;;      Totals:         0       0       0       0       0
 12440 ;;Total ram usage:        0 bytes
 12441 ;; Hardware stack levels used:    1
 12442 ;; Hardware stack levels required when called:    4
 12443 ;; This function calls:
 12444 ;;		_I2c_waitMaster
 12445 ;; This function is called by:
 12446 ;;		_Eeprom_write
 12447 ;;		_Eeprom_writePage
 12448 ;;		_Eeprom_read
 12449 ;;		_Eeprom_readPage
 12450 ;; This function uses a non-reentrant model
 12451 ;;
 12452                           
 12453                           
 12454                           ;psect for function _I2c_stopMaster
 12455  184A                     _I2c_stopMaster:
 12456  184A                     l2248:	
 12457                           ;incstack = 0
 12458                           ; Regs used in _I2c_stopMaster: [wreg+status,2+status,0+pclath+cstack]
 12459                           
 12460                           
 12461                           ;I2c.c: 30:     I2c_waitMaster();
 12462  184A  160A  158A  206C  160A  158A  	fcall	_I2c_waitMaster
 12463  184F                     l2250:
 12464                           
 12465                           ;I2c.c: 31:     SSPCON2 = SSPCON2 | 0x04;
 12466  184F  1683               	bsf	3,5	;RP0=1, select bank1
 12467  1850  1303               	bcf	3,6	;RP1=0, select bank1
 12468  1851  0811               	movf	17,w	;volatile
 12469  1852  3804               	iorlw	4
 12470  1853  0091               	movwf	17	;volatile
 12471  1854                     l463:
 12472  1854  0008               	return
 12473  1855                     __end_of_I2c_stopMaster:
 12474                           
 12475                           	psect	text64
 12476  183F                     __ptext64:	
 12477 ;; *************** function _I2c_startMaster *****************
 12478 ;; Defined at:
 12479 ;;		line 16 in file "I2c.c"
 12480 ;; Parameters:    Size  Location     Type
 12481 ;;		None
 12482 ;; Auto vars:     Size  Location     Type
 12483 ;;		None
 12484 ;; Return value:  Size  Location     Type
 12485 ;;                  1    wreg      void 
 12486 ;; Registers used:
 12487 ;;		wreg, status,2, status,0, pclath, cstack
 12488 ;; Tracked objects:
 12489 ;;		On entry : 0/0
 12490 ;;		On exit  : 0/0
 12491 ;;		Unchanged: 0/0
 12492 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12493 ;;      Params:         0       0       0       0       0
 12494 ;;      Locals:         0       0       0       0       0
 12495 ;;      Temps:          0       0       0       0       0
 12496 ;;      Totals:         0       0       0       0       0
 12497 ;;Total ram usage:        0 bytes
 12498 ;; Hardware stack levels used:    1
 12499 ;; Hardware stack levels required when called:    4
 12500 ;; This function calls:
 12501 ;;		_I2c_waitMaster
 12502 ;; This function is called by:
 12503 ;;		_Eeprom_write
 12504 ;;		_Eeprom_writePage
 12505 ;;		_Eeprom_read
 12506 ;;		_Eeprom_readPage
 12507 ;; This function uses a non-reentrant model
 12508 ;;
 12509                           
 12510                           
 12511                           ;psect for function _I2c_startMaster
 12512  183F                     _I2c_startMaster:
 12513  183F                     l2232:	
 12514                           ;incstack = 0
 12515                           ; Regs used in _I2c_startMaster: [wreg+status,2+status,0+pclath+cstack]
 12516                           
 12517                           
 12518                           ;I2c.c: 18:     I2c_waitMaster();
 12519  183F  160A  158A  206C  160A  158A  	fcall	_I2c_waitMaster
 12520  1844                     l2234:
 12521                           
 12522                           ;I2c.c: 19:     SSPCON2 = SSPCON2 | 0x01;
 12523  1844  1683               	bsf	3,5	;RP0=1, select bank1
 12524  1845  1303               	bcf	3,6	;RP1=0, select bank1
 12525  1846  0811               	movf	17,w	;volatile
 12526  1847  3801               	iorlw	1
 12527  1848  0091               	movwf	17	;volatile
 12528  1849                     l457:
 12529  1849  0008               	return
 12530  184A                     __end_of_I2c_startMaster:
 12531                           
 12532                           	psect	text65
 12533  1834                     __ptext65:	
 12534 ;; *************** function _I2c_repeatedStartMaster *****************
 12535 ;; Defined at:
 12536 ;;		line 22 in file "I2c.c"
 12537 ;; Parameters:    Size  Location     Type
 12538 ;;		None
 12539 ;; Auto vars:     Size  Location     Type
 12540 ;;		None
 12541 ;; Return value:  Size  Location     Type
 12542 ;;                  1    wreg      void 
 12543 ;; Registers used:
 12544 ;;		wreg, status,2, status,0, pclath, cstack
 12545 ;; Tracked objects:
 12546 ;;		On entry : 0/0
 12547 ;;		On exit  : 0/0
 12548 ;;		Unchanged: 0/0
 12549 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12550 ;;      Params:         0       0       0       0       0
 12551 ;;      Locals:         0       0       0       0       0
 12552 ;;      Temps:          0       0       0       0       0
 12553 ;;      Totals:         0       0       0       0       0
 12554 ;;Total ram usage:        0 bytes
 12555 ;; Hardware stack levels used:    1
 12556 ;; Hardware stack levels required when called:    4
 12557 ;; This function calls:
 12558 ;;		_I2c_waitMaster
 12559 ;; This function is called by:
 12560 ;;		_Eeprom_write
 12561 ;;		_Eeprom_writePage
 12562 ;;		_Eeprom_read
 12563 ;;		_Eeprom_readPage
 12564 ;; This function uses a non-reentrant model
 12565 ;;
 12566                           
 12567                           
 12568                           ;psect for function _I2c_repeatedStartMaster
 12569  1834                     _I2c_repeatedStartMaster:
 12570  1834                     l2236:	
 12571                           ;incstack = 0
 12572                           ; Regs used in _I2c_repeatedStartMaster: [wreg+status,2+status,0+pclath+cstack]
 12573                           
 12574                           
 12575                           ;I2c.c: 24:     I2c_waitMaster();
 12576  1834  160A  158A  206C  160A  158A  	fcall	_I2c_waitMaster
 12577  1839                     l2238:
 12578                           
 12579                           ;I2c.c: 25:     SSPCON2 = SSPCON2 | 0x02;
 12580  1839  1683               	bsf	3,5	;RP0=1, select bank1
 12581  183A  1303               	bcf	3,6	;RP1=0, select bank1
 12582  183B  0811               	movf	17,w	;volatile
 12583  183C  3802               	iorlw	2
 12584  183D  0091               	movwf	17	;volatile
 12585  183E                     l460:
 12586  183E  0008               	return
 12587  183F                     __end_of_I2c_repeatedStartMaster:
 12588                           
 12589                           	psect	text66
 12590  1988                     __ptext66:	
 12591 ;; *************** function _I2c_read *****************
 12592 ;; Defined at:
 12593 ;;		line 43 in file "I2c.c"
 12594 ;; Parameters:    Size  Location     Type
 12595 ;;		None
 12596 ;; Auto vars:     Size  Location     Type
 12597 ;;		None
 12598 ;; Return value:  Size  Location     Type
 12599 ;;                  1    wreg      unsigned char 
 12600 ;; Registers used:
 12601 ;;		wreg, status,2, status,0, pclath, cstack
 12602 ;; Tracked objects:
 12603 ;;		On entry : 0/0
 12604 ;;		On exit  : 0/0
 12605 ;;		Unchanged: 0/0
 12606 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12607 ;;      Params:         0       0       0       0       0
 12608 ;;      Locals:         0       0       0       0       0
 12609 ;;      Temps:          0       0       0       0       0
 12610 ;;      Totals:         0       0       0       0       0
 12611 ;;Total ram usage:        0 bytes
 12612 ;; Hardware stack levels used:    1
 12613 ;; Hardware stack levels required when called:    4
 12614 ;; This function calls:
 12615 ;;		_I2c_waitMaster
 12616 ;; This function is called by:
 12617 ;;		_Eeprom_read
 12618 ;;		_Eeprom_readPage
 12619 ;; This function uses a non-reentrant model
 12620 ;;
 12621                           
 12622                           
 12623                           ;psect for function _I2c_read
 12624  1988                     _I2c_read:
 12625  1988                     l2396:	
 12626                           ;incstack = 0
 12627                           ; Regs used in _I2c_read: [wreg+status,2+status,0+pclath+cstack]
 12628                           
 12629                           
 12630                           ;I2c.c: 45:     I2c_waitMaster();
 12631  1988  160A  158A  206C  160A  158A  	fcall	_I2c_waitMaster
 12632  198D                     l2398:
 12633                           
 12634                           ;I2c.c: 46:     SSPCON2 = SSPCON2 | 0x08;
 12635  198D  1683               	bsf	3,5	;RP0=1, select bank1
 12636  198E  1303               	bcf	3,6	;RP1=0, select bank1
 12637  198F  0811               	movf	17,w	;volatile
 12638  1990  3808               	iorlw	8
 12639  1991  0091               	movwf	17	;volatile
 12640  1992                     l472:	
 12641                           ;I2c.c: 47:     while( !( PIR1 & 0x08 ) );
 12642                           
 12643  1992  1283               	bcf	3,5	;RP0=0, select bank0
 12644  1993  1D8C               	btfss	12,3	;volatile
 12645  1994  2996               	goto	u2131
 12646  1995  2997               	goto	u2130
 12647  1996                     u2131:
 12648  1996  2992               	goto	l472
 12649  1997                     u2130:
 12650  1997                     l2400:
 12651                           
 12652                           ;I2c.c: 48:     PIR1 = PIR1 & ~0x08;
 12653  1997  080C               	movf	12,w	;volatile
 12654  1998  39F7               	andlw	247
 12655  1999  008C               	movwf	12	;volatile
 12656  199A                     l2402:
 12657                           
 12658                           ;I2c.c: 49:     I2c_waitMaster();
 12659  199A  160A  158A  206C  160A  158A  	fcall	_I2c_waitMaster
 12660  199F                     l2404:
 12661                           
 12662                           ;I2c.c: 50:     return SSPBUF;
 12663  199F  1283               	bcf	3,5	;RP0=0, select bank0
 12664  19A0  1303               	bcf	3,6	;RP1=0, select bank0
 12665  19A1  0813               	movf	19,w	;volatile
 12666  19A2                     l475:
 12667  19A2  0008               	return
 12668  19A3                     __end_of_I2c_read:
 12669                           
 12670                           	psect	text67
 12671  1879                     __ptext67:	
 12672 ;; *************** function _I2c_nack *****************
 12673 ;; Defined at:
 12674 ;;		line 60 in file "I2c.c"
 12675 ;; Parameters:    Size  Location     Type
 12676 ;;		None
 12677 ;; Auto vars:     Size  Location     Type
 12678 ;;		None
 12679 ;; Return value:  Size  Location     Type
 12680 ;;                  1    wreg      void 
 12681 ;; Registers used:
 12682 ;;		wreg, status,2, status,0, pclath, cstack
 12683 ;; Tracked objects:
 12684 ;;		On entry : 0/0
 12685 ;;		On exit  : 0/0
 12686 ;;		Unchanged: 0/0
 12687 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12688 ;;      Params:         0       0       0       0       0
 12689 ;;      Locals:         0       0       0       0       0
 12690 ;;      Temps:          0       0       0       0       0
 12691 ;;      Totals:         0       0       0       0       0
 12692 ;;Total ram usage:        0 bytes
 12693 ;; Hardware stack levels used:    1
 12694 ;; Hardware stack levels required when called:    4
 12695 ;; This function calls:
 12696 ;;		_I2c_waitMaster
 12697 ;; This function is called by:
 12698 ;;		_Eeprom_read
 12699 ;; This function uses a non-reentrant model
 12700 ;;
 12701                           
 12702                           
 12703                           ;psect for function _I2c_nack
 12704  1879                     _I2c_nack:
 12705  1879                     l2408:	
 12706                           ;incstack = 0
 12707                           ; Regs used in _I2c_nack: [wreg+status,2+status,0+pclath+cstack]
 12708                           
 12709                           
 12710                           ;I2c.c: 62:     SSPCON2 = SSPCON2 | 0x20;
 12711  1879  1683               	bsf	3,5	;RP0=1, select bank1
 12712  187A  1303               	bcf	3,6	;RP1=0, select bank1
 12713  187B  0811               	movf	17,w	;volatile
 12714  187C  3820               	iorlw	32
 12715  187D  0091               	movwf	17	;volatile
 12716  187E                     l2410:
 12717                           
 12718                           ;I2c.c: 63:     I2c_waitMaster();
 12719  187E  160A  158A  206C  160A  158A  	fcall	_I2c_waitMaster
 12720  1883                     l2412:
 12721                           
 12722                           ;I2c.c: 64:     SSPCON2 = SSPCON2 | 0x10;
 12723  1883  1683               	bsf	3,5	;RP0=1, select bank1
 12724  1884  1303               	bcf	3,6	;RP1=0, select bank1
 12725  1885  0811               	movf	17,w	;volatile
 12726  1886  3810               	iorlw	16
 12727  1887  0091               	movwf	17	;volatile
 12728  1888                     l481:
 12729  1888  0008               	return
 12730  1889                     __end_of_I2c_nack:
 12731                           
 12732                           	psect	text68
 12733  186C                     __ptext68:	
 12734 ;; *************** function _I2c_waitMaster *****************
 12735 ;; Defined at:
 12736 ;;		line 11 in file "I2c.c"
 12737 ;; Parameters:    Size  Location     Type
 12738 ;;		None
 12739 ;; Auto vars:     Size  Location     Type
 12740 ;;		None
 12741 ;; Return value:  Size  Location     Type
 12742 ;;                  1    wreg      void 
 12743 ;; Registers used:
 12744 ;;		wreg, status,2
 12745 ;; Tracked objects:
 12746 ;;		On entry : 0/0
 12747 ;;		On exit  : 0/0
 12748 ;;		Unchanged: 0/0
 12749 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12750 ;;      Params:         0       0       0       0       0
 12751 ;;      Locals:         0       0       0       0       0
 12752 ;;      Temps:          0       0       0       0       0
 12753 ;;      Totals:         0       0       0       0       0
 12754 ;;Total ram usage:        0 bytes
 12755 ;; Hardware stack levels used:    1
 12756 ;; Hardware stack levels required when called:    3
 12757 ;; This function calls:
 12758 ;;		Nothing
 12759 ;; This function is called by:
 12760 ;;		_I2c_startMaster
 12761 ;;		_I2c_repeatedStartMaster
 12762 ;;		_I2c_stopMaster
 12763 ;;		_I2c_writeMaster
 12764 ;;		_I2c_read
 12765 ;;		_I2c_ack
 12766 ;;		_I2c_nack
 12767 ;; This function uses a non-reentrant model
 12768 ;;
 12769                           
 12770                           
 12771                           ;psect for function _I2c_waitMaster
 12772  186C                     _I2c_waitMaster:
 12773  186C                     l2134:	
 12774                           ;incstack = 0
 12775                           ; Regs used in _I2c_waitMaster: [wreg+status,2]
 12776                           
 12777  186C                     l451:	
 12778                           ;I2c.c: 13:     while ( ( SSPSTAT & 0x04 ) || ( SSPCON2 & 0x1F ) );
 12779                           
 12780  186C  1683               	bsf	3,5	;RP0=1, select bank1
 12781  186D  1303               	bcf	3,6	;RP1=0, select bank1
 12782  186E  1914               	btfsc	20,2	;volatile
 12783  186F  2871               	goto	u1571
 12784  1870  2872               	goto	u1570
 12785  1871                     u1571:
 12786  1871  286C               	goto	l451
 12787  1872                     u1570:
 12788  1872                     l2136:
 12789  1872  0811               	movf	17,w	;volatile
 12790  1873  391F               	andlw	31
 12791  1874  1D03               	btfss	3,2
 12792  1875  2877               	goto	u1581
 12793  1876  2878               	goto	u1580
 12794  1877                     u1581:
 12795  1877  286C               	goto	l451
 12796  1878                     u1580:
 12797  1878                     l454:
 12798  1878  0008               	return
 12799  1879                     __end_of_I2c_waitMaster:
 12800                           
 12801                           	psect	text69
 12802  0807                     __ptext69:	
 12803 ;; *************** function _Eeprom_init *****************
 12804 ;; Defined at:
 12805 ;;		line 6 in file "Eeprom.c"
 12806 ;; Parameters:    Size  Location     Type
 12807 ;;		None
 12808 ;; Auto vars:     Size  Location     Type
 12809 ;;		None
 12810 ;; Return value:  Size  Location     Type
 12811 ;;                  1    wreg      void 
 12812 ;; Registers used:
 12813 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 12814 ;; Tracked objects:
 12815 ;;		On entry : 0/0
 12816 ;;		On exit  : 0/0
 12817 ;;		Unchanged: 0/0
 12818 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12819 ;;      Params:         0       0       0       0       0
 12820 ;;      Locals:         0       0       0       0       0
 12821 ;;      Temps:          0       0       0       0       0
 12822 ;;      Totals:         0       0       0       0       0
 12823 ;;Total ram usage:        0 bytes
 12824 ;; Hardware stack levels used:    1
 12825 ;; Hardware stack levels required when called:    5
 12826 ;; This function calls:
 12827 ;;		_Gpio_initPin
 12828 ;;		_I2c_initMaster
 12829 ;; This function is called by:
 12830 ;;		_Heater_init
 12831 ;; This function uses a non-reentrant model
 12832 ;;
 12833                           
 12834                           
 12835                           ;psect for function _Eeprom_init
 12836  0807                     _Eeprom_init:
 12837  0807                     l2642:	
 12838                           ;incstack = 0
 12839                           ; Regs used in _Eeprom_init: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
 12840                           
 12841                           
 12842                           ;Eeprom.c: 8:     I2c_initMaster( 100000 );
 12843  0807  3000               	movlw	0
 12844  0808  1283               	bcf	3,5	;RP0=0, select bank0
 12845  0809  1303               	bcf	3,6	;RP1=0, select bank0
 12846  080A  00C4               	movwf	I2c_initMaster@baudrate+3
 12847  080B  3001               	movlw	1
 12848  080C  00C3               	movwf	I2c_initMaster@baudrate+2
 12849  080D  3086               	movlw	134
 12850  080E  00C2               	movwf	I2c_initMaster@baudrate+1
 12851  080F  30A0               	movlw	160
 12852  0810  00C1               	movwf	I2c_initMaster@baudrate
 12853  0811  160A  158A  22A6  120A  158A  	fcall	_I2c_initMaster
 12854  0816                     l2644:
 12855                           
 12856                           ;Eeprom.c: 9:     Gpio_initPin(GPIO_ID_C, GPIO_PIN_3, GPIO_MODE_INPUT, GPIO_TYPE_FLOATIN
      +                          G );
 12857  0816  3003               	movlw	3
 12858  0817  00FF               	movwf	btemp+1
 12859  0818  087F               	movf	btemp+1,w
 12860  0819  1283               	bcf	3,5	;RP0=0, select bank0
 12861  081A  1303               	bcf	3,6	;RP1=0, select bank0
 12862  081B  00A3               	movwf	Gpio_initPin@pin
 12863  081C  01A4               	clrf	Gpio_initPin@mode
 12864  081D  0AA4               	incf	Gpio_initPin@mode,f
 12865  081E  01A5               	clrf	Gpio_initPin@type
 12866  081F  0AA5               	incf	Gpio_initPin@type,f
 12867  0820  3002               	movlw	2
 12868  0821  160A  118A  23A2  120A  158A  	fcall	_Gpio_initPin
 12869  0826                     l2646:
 12870                           
 12871                           ;Eeprom.c: 10:     Gpio_initPin(GPIO_ID_C, GPIO_PIN_4, GPIO_MODE_INPUT, GPIO_TYPE_FLOATI
      +                          NG );
 12872  0826  3004               	movlw	4
 12873  0827  00FF               	movwf	btemp+1
 12874  0828  087F               	movf	btemp+1,w
 12875  0829  1283               	bcf	3,5	;RP0=0, select bank0
 12876  082A  1303               	bcf	3,6	;RP1=0, select bank0
 12877  082B  00A3               	movwf	Gpio_initPin@pin
 12878  082C  01A4               	clrf	Gpio_initPin@mode
 12879  082D  0AA4               	incf	Gpio_initPin@mode,f
 12880  082E  01A5               	clrf	Gpio_initPin@type
 12881  082F  0AA5               	incf	Gpio_initPin@type,f
 12882  0830  3002               	movlw	2
 12883  0831  160A  118A  23A2  120A  158A  	fcall	_Gpio_initPin
 12884  0836                     l342:
 12885  0836  0008               	return
 12886  0837                     __end_of_Eeprom_init:
 12887                           
 12888                           	psect	text70
 12889  1AA6                     __ptext70:	
 12890 ;; *************** function _I2c_initMaster *****************
 12891 ;; Defined at:
 12892 ;;		line 3 in file "I2c.c"
 12893 ;; Parameters:    Size  Location     Type
 12894 ;;  baudrate        4   33[BANK0 ] unsigned long 
 12895 ;; Auto vars:     Size  Location     Type
 12896 ;;		None
 12897 ;; Return value:  Size  Location     Type
 12898 ;;                  1    wreg      void 
 12899 ;; Registers used:
 12900 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
 12901 ;; Tracked objects:
 12902 ;;		On entry : 0/0
 12903 ;;		On exit  : 0/0
 12904 ;;		Unchanged: 0/0
 12905 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12906 ;;      Params:         0       4       0       0       0
 12907 ;;      Locals:         0       0       0       0       0
 12908 ;;      Temps:          0       0       0       0       0
 12909 ;;      Totals:         0       4       0       0       0
 12910 ;;Total ram usage:        4 bytes
 12911 ;; Hardware stack levels used:    1
 12912 ;; Hardware stack levels required when called:    4
 12913 ;; This function calls:
 12914 ;;		___lldiv
 12915 ;; This function is called by:
 12916 ;;		_Eeprom_init
 12917 ;; This function uses a non-reentrant model
 12918 ;;
 12919                           
 12920                           
 12921                           ;psect for function _I2c_initMaster
 12922  1AA6                     _I2c_initMaster:
 12923  1AA6                     l2382:	
 12924                           ;incstack = 0
 12925                           ; Regs used in _I2c_initMaster: [wreg+status,2+status,0+btemp+1+pclath+cstack]
 12926                           
 12927                           
 12928                           ;I2c.c: 3: void I2c_initMaster( uint32_t baudrate );I2c.c: 4: {;I2c.c: 5:     SSPSTAT = 
      +                          0;
 12929  1AA6  1683               	bsf	3,5	;RP0=1, select bank1
 12930  1AA7  1303               	bcf	3,6	;RP1=0, select bank1
 12931  1AA8  0194               	clrf	20	;volatile
 12932  1AA9                     l2384:
 12933                           
 12934                           ;I2c.c: 6:     SSPCON = SSPCON | 0x28;
 12935  1AA9  1283               	bcf	3,5	;RP0=0, select bank0
 12936  1AAA  1303               	bcf	3,6	;RP1=0, select bank0
 12937  1AAB  0814               	movf	20,w	;volatile
 12938  1AAC  3828               	iorlw	40
 12939  1AAD  0094               	movwf	20	;volatile
 12940  1AAE                     l2386:
 12941                           
 12942                           ;I2c.c: 7:     SSPCON2 = 0;
 12943  1AAE  1683               	bsf	3,5	;RP0=1, select bank1
 12944  1AAF  1303               	bcf	3,6	;RP1=0, select bank1
 12945  1AB0  0191               	clrf	17	;volatile
 12946  1AB1                     l2388:
 12947                           
 12948                           ;I2c.c: 8:     SSPADD = ( ( ( 16000000 ) / ( 4 ) ) / baudrate ) - 1;
 12949  1AB1  1283               	bcf	3,5	;RP0=0, select bank0
 12950  1AB2  1303               	bcf	3,6	;RP1=0, select bank0
 12951  1AB3  0844               	movf	I2c_initMaster@baudrate+3,w
 12952  1AB4  00B6               	movwf	___lldiv@divisor+3
 12953  1AB5  0843               	movf	I2c_initMaster@baudrate+2,w
 12954  1AB6  00B5               	movwf	___lldiv@divisor+2
 12955  1AB7  0842               	movf	I2c_initMaster@baudrate+1,w
 12956  1AB8  00B4               	movwf	___lldiv@divisor+1
 12957  1AB9  0841               	movf	I2c_initMaster@baudrate,w
 12958  1ABA  00B3               	movwf	___lldiv@divisor
 12959  1ABB  3000               	movlw	0
 12960  1ABC  00BA               	movwf	___lldiv@dividend+3
 12961  1ABD  303D               	movlw	61
 12962  1ABE  00B9               	movwf	___lldiv@dividend+2
 12963  1ABF  3009               	movlw	9
 12964  1AC0  00B8               	movwf	___lldiv@dividend+1
 12965  1AC1  3000               	movlw	0
 12966  1AC2  00B7               	movwf	___lldiv@dividend
 12967  1AC3  160A  118A  21FD  160A  158A  	fcall	___lldiv
 12968  1AC8  1283               	bcf	3,5	;RP0=0, select bank0
 12969  1AC9  1303               	bcf	3,6	;RP1=0, select bank0
 12970  1ACA  0833               	movf	?___lldiv,w
 12971  1ACB  3EFF               	addlw	255
 12972  1ACC  1683               	bsf	3,5	;RP0=1, select bank1
 12973  1ACD  1303               	bcf	3,6	;RP1=0, select bank1
 12974  1ACE  0093               	movwf	19	;volatile
 12975  1ACF                     l448:
 12976  1ACF  0008               	return
 12977  1AD0                     __end_of_I2c_initMaster:
 12978                           
 12979                           	psect	text71
 12980  11FD                     __ptext71:	
 12981 ;; *************** function ___lldiv *****************
 12982 ;; Defined at:
 12983 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\__lldiv.c"
 12984 ;; Parameters:    Size  Location     Type
 12985 ;;  divisor         4   19[BANK0 ] unsigned long 
 12986 ;;  dividend        4   23[BANK0 ] unsigned long 
 12987 ;; Auto vars:     Size  Location     Type
 12988 ;;  quotient        4   28[BANK0 ] unsigned long 
 12989 ;;  counter         1   32[BANK0 ] unsigned char 
 12990 ;; Return value:  Size  Location     Type
 12991 ;;                  4   19[BANK0 ] unsigned long 
 12992 ;; Registers used:
 12993 ;;		wreg, status,2, status,0, btemp+1
 12994 ;; Tracked objects:
 12995 ;;		On entry : 0/0
 12996 ;;		On exit  : 0/0
 12997 ;;		Unchanged: 0/0
 12998 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12999 ;;      Params:         0       8       0       0       0
 13000 ;;      Locals:         0       5       0       0       0
 13001 ;;      Temps:          0       1       0       0       0
 13002 ;;      Totals:         0      14       0       0       0
 13003 ;;Total ram usage:       14 bytes
 13004 ;; Hardware stack levels used:    1
 13005 ;; Hardware stack levels required when called:    3
 13006 ;; This function calls:
 13007 ;;		Nothing
 13008 ;; This function is called by:
 13009 ;;		_I2c_initMaster
 13010 ;;		_getTempsnsrHarwareState
 13011 ;;		_getAvgTemp
 13012 ;; This function uses a non-reentrant model
 13013 ;;
 13014                           
 13015                           
 13016                           ;psect for function ___lldiv
 13017  11FD                     ___lldiv:
 13018  11FD                     l2266:	
 13019                           ;incstack = 0
 13020                           ; Regs used in ___lldiv: [wreg+status,2+status,0+btemp+1]
 13021                           
 13022  11FD  3000               	movlw	0
 13023  11FE  1283               	bcf	3,5	;RP0=0, select bank0
 13024  11FF  1303               	bcf	3,6	;RP1=0, select bank0
 13025  1200  00BF               	movwf	___lldiv@quotient+3
 13026  1201  3000               	movlw	0
 13027  1202  00BE               	movwf	___lldiv@quotient+2
 13028  1203  3000               	movlw	0
 13029  1204  00BD               	movwf	___lldiv@quotient+1
 13030  1205  3000               	movlw	0
 13031  1206  00BC               	movwf	___lldiv@quotient
 13032  1207  0836               	movf	___lldiv@divisor+3,w
 13033  1208  0435               	iorwf	___lldiv@divisor+2,w
 13034  1209  0434               	iorwf	___lldiv@divisor+1,w
 13035  120A  0433               	iorwf	___lldiv@divisor,w
 13036  120B  1903               	skipnz
 13037  120C  2A0E               	goto	u1851
 13038  120D  2A0F               	goto	u1850
 13039  120E                     u1851:
 13040  120E  2A5C               	goto	l2288
 13041  120F                     u1850:
 13042  120F                     l2268:
 13043  120F  01C0               	clrf	___lldiv@counter
 13044  1210  0AC0               	incf	___lldiv@counter,f
 13045  1211  2A1F               	goto	l2274
 13046  1212                     l2270:
 13047  1212  3001               	movlw	1
 13048  1213  00BB               	movwf	??___lldiv
 13049  1214                     u1865:
 13050  1214  1003               	clrc
 13051  1215  0DB3               	rlf	___lldiv@divisor,f
 13052  1216  0DB4               	rlf	___lldiv@divisor+1,f
 13053  1217  0DB5               	rlf	___lldiv@divisor+2,f
 13054  1218  0DB6               	rlf	___lldiv@divisor+3,f
 13055  1219  0BBB               	decfsz	??___lldiv,f
 13056  121A  2A14               	goto	u1865
 13057  121B                     l2272:
 13058  121B  3001               	movlw	1
 13059  121C  00FF               	movwf	btemp+1
 13060  121D  087F               	movf	btemp+1,w
 13061  121E  07C0               	addwf	___lldiv@counter,f
 13062  121F                     l2274:
 13063  121F  1FB6               	btfss	___lldiv@divisor+3,7
 13064  1220  2A22               	goto	u1871
 13065  1221  2A23               	goto	u1870
 13066  1222                     u1871:
 13067  1222  2A12               	goto	l2270
 13068  1223                     u1870:
 13069  1223                     l2276:
 13070  1223  3001               	movlw	1
 13071  1224  00BB               	movwf	??___lldiv
 13072  1225                     u1885:
 13073  1225  1003               	clrc
 13074  1226  0DBC               	rlf	___lldiv@quotient,f
 13075  1227  0DBD               	rlf	___lldiv@quotient+1,f
 13076  1228  0DBE               	rlf	___lldiv@quotient+2,f
 13077  1229  0DBF               	rlf	___lldiv@quotient+3,f
 13078  122A  0BBB               	decfsz	??___lldiv,f
 13079  122B  2A25               	goto	u1885
 13080  122C                     l2278:
 13081  122C  0836               	movf	___lldiv@divisor+3,w
 13082  122D  023A               	subwf	___lldiv@dividend+3,w
 13083  122E  1D03               	skipz
 13084  122F  2A3A               	goto	u1895
 13085  1230  0835               	movf	___lldiv@divisor+2,w
 13086  1231  0239               	subwf	___lldiv@dividend+2,w
 13087  1232  1D03               	skipz
 13088  1233  2A3A               	goto	u1895
 13089  1234  0834               	movf	___lldiv@divisor+1,w
 13090  1235  0238               	subwf	___lldiv@dividend+1,w
 13091  1236  1D03               	skipz
 13092  1237  2A3A               	goto	u1895
 13093  1238  0833               	movf	___lldiv@divisor,w
 13094  1239  0237               	subwf	___lldiv@dividend,w
 13095  123A                     u1895:
 13096  123A  1C03               	skipc
 13097  123B  2A3D               	goto	u1891
 13098  123C  2A3E               	goto	u1890
 13099  123D                     u1891:
 13100  123D  2A4D               	goto	l2284
 13101  123E                     u1890:
 13102  123E                     l2280:
 13103  123E  0833               	movf	___lldiv@divisor,w
 13104  123F  02B7               	subwf	___lldiv@dividend,f
 13105  1240  0834               	movf	___lldiv@divisor+1,w
 13106  1241  1C03               	skipc
 13107  1242  0F34               	incfsz	___lldiv@divisor+1,w
 13108  1243  02B8               	subwf	___lldiv@dividend+1,f
 13109  1244  0835               	movf	___lldiv@divisor+2,w
 13110  1245  1C03               	skipc
 13111  1246  0F35               	incfsz	___lldiv@divisor+2,w
 13112  1247  02B9               	subwf	___lldiv@dividend+2,f
 13113  1248  0836               	movf	___lldiv@divisor+3,w
 13114  1249  1C03               	skipc
 13115  124A  0F36               	incfsz	___lldiv@divisor+3,w
 13116  124B  02BA               	subwf	___lldiv@dividend+3,f
 13117  124C                     l2282:
 13118  124C  143C               	bsf	___lldiv@quotient,0
 13119  124D                     l2284:
 13120  124D  3001               	movlw	1
 13121  124E                     u1905:
 13122  124E  1003               	clrc
 13123  124F  0CB6               	rrf	___lldiv@divisor+3,f
 13124  1250  0CB5               	rrf	___lldiv@divisor+2,f
 13125  1251  0CB4               	rrf	___lldiv@divisor+1,f
 13126  1252  0CB3               	rrf	___lldiv@divisor,f
 13127  1253  3EFF               	addlw	-1
 13128  1254  1D03               	skipz
 13129  1255  2A4E               	goto	u1905
 13130  1256                     l2286:
 13131  1256  3001               	movlw	1
 13132  1257  02C0               	subwf	___lldiv@counter,f
 13133  1258  1D03               	btfss	3,2
 13134  1259  2A5B               	goto	u1911
 13135  125A  2A5C               	goto	u1910
 13136  125B                     u1911:
 13137  125B  2A23               	goto	l2276
 13138  125C                     u1910:
 13139  125C                     l2288:
 13140  125C  083F               	movf	___lldiv@quotient+3,w
 13141  125D  00B6               	movwf	?___lldiv+3
 13142  125E  083E               	movf	___lldiv@quotient+2,w
 13143  125F  00B5               	movwf	?___lldiv+2
 13144  1260  083D               	movf	___lldiv@quotient+1,w
 13145  1261  00B4               	movwf	?___lldiv+1
 13146  1262  083C               	movf	___lldiv@quotient,w
 13147  1263  00B3               	movwf	?___lldiv
 13148  1264                     l702:
 13149  1264  0008               	return
 13150  1265                     __end_of___lldiv:
 13151                           
 13152                           	psect	text72
 13153  13A2                     __ptext72:	
 13154 ;; *************** function _Gpio_initPin *****************
 13155 ;; Defined at:
 13156 ;;		line 18 in file "Gpio.c"
 13157 ;; Parameters:    Size  Location     Type
 13158 ;;  id              1    wreg     enum E1172
 13159 ;;  pin             1    3[BANK0 ] enum E1180
 13160 ;;  mode            1    4[BANK0 ] enum E1191
 13161 ;;  type            1    5[BANK0 ] enum E1195
 13162 ;; Auto vars:     Size  Location     Type
 13163 ;;  id              1   18[BANK0 ] enum E1172
 13164 ;; Return value:  Size  Location     Type
 13165 ;;                  1    wreg      void 
 13166 ;; Registers used:
 13167 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
 13168 ;; Tracked objects:
 13169 ;;		On entry : 0/0
 13170 ;;		On exit  : 0/0
 13171 ;;		Unchanged: 0/0
 13172 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13173 ;;      Params:         0       3       0       0       0
 13174 ;;      Locals:         0       1       0       0       0
 13175 ;;      Temps:          0      12       0       0       0
 13176 ;;      Totals:         0      16       0       0       0
 13177 ;;Total ram usage:       16 bytes
 13178 ;; Hardware stack levels used:    1
 13179 ;; Hardware stack levels required when called:    3
 13180 ;; This function calls:
 13181 ;;		Nothing
 13182 ;; This function is called by:
 13183 ;;		_initLedHardware
 13184 ;;		_initSwitchHardware
 13185 ;;		_initSsdHardware
 13186 ;;		_Eeprom_init
 13187 ;;		_initTempctrlHardware
 13188 ;;		_initTempsnsrHardware
 13189 ;; This function uses a non-reentrant model
 13190 ;;
 13191                           
 13192                           
 13193                           ;psect for function _Gpio_initPin
 13194  13A2                     _Gpio_initPin:
 13195                           
 13196                           ;incstack = 0
 13197                           ; Regs used in _Gpio_initPin: [wreg-fsr0h+status,2+status,0+btemp+1]
 13198                           ;Gpio_initPin@id stored from wreg
 13199  13A2  1283               	bcf	3,5	;RP0=0, select bank0
 13200  13A3  1303               	bcf	3,6	;RP1=0, select bank0
 13201  13A4  00B2               	movwf	Gpio_initPin@id
 13202  13A5                     l2330:
 13203                           
 13204                           ;Gpio.c: 18: void Gpio_initPin( GPIO_ID_t id, GPIO_PIN_t pin, GPIO_MODE_t mode, GPIO_TYP
      +                          E_t type );Gpio.c: 19: {;Gpio.c: 20:     if( id == GPIO_ID_E && pin > GPIO_PIN_3)
 13205  13A5  3004               	movlw	4
 13206  13A6  0632               	xorwf	Gpio_initPin@id,w
 13207  13A7  1D03               	btfss	3,2
 13208  13A8  2BAA               	goto	u2021
 13209  13A9  2BAB               	goto	u2020
 13210  13AA                     u2021:
 13211  13AA  2BB2               	goto	l2336
 13212  13AB                     u2020:
 13213  13AB                     l2332:
 13214  13AB  3004               	movlw	4
 13215  13AC  0223               	subwf	Gpio_initPin@pin,w
 13216  13AD  1C03               	skipc
 13217  13AE  2BB0               	goto	u2031
 13218  13AF  2BB1               	goto	u2030
 13219  13B0                     u2031:
 13220  13B0  2BB2               	goto	l2336
 13221  13B1                     u2030:
 13222  13B1  2C0D               	goto	l499
 13223  13B2                     l2336:
 13224                           
 13225                           ;Gpio.c: 24:  gpio[ id ]->TRIS = ( gpio[ id ]->TRIS & ~( 1 << pin ) ) | ( mode << pin );
 13226  13B2  0824               	movf	Gpio_initPin@mode,w
 13227  13B3  00A6               	movwf	??_Gpio_initPin
 13228  13B4  0A23               	incf	Gpio_initPin@pin,w
 13229  13B5  2BB8               	goto	u2044
 13230  13B6                     u2045:
 13231  13B6  1003               	clrc
 13232  13B7  0DA6               	rlf	??_Gpio_initPin,f
 13233  13B8                     u2044:
 13234  13B8  3EFF               	addlw	-1
 13235  13B9  1D03               	skipz
 13236  13BA  2BB6               	goto	u2045
 13237  13BB  0832               	movf	Gpio_initPin@id,w
 13238  13BC  00A7               	movwf	??_Gpio_initPin+1
 13239  13BD  0727               	addwf	??_Gpio_initPin+1,w
 13240  13BE  3E5C               	addlw	(low (_gpio| 0))& (0+255)
 13241  13BF  0084               	movwf	4
 13242  13C0  1383               	bcf	3,7	;select IRP bank0
 13243  13C1  0800               	movf	0,w
 13244  13C2  00A8               	movwf	??_Gpio_initPin+2
 13245  13C3  0A84               	incf	4,f
 13246  13C4  0800               	movf	0,w
 13247  13C5  00A9               	movwf	??_Gpio_initPin+3
 13248  13C6  0828               	movf	??_Gpio_initPin+2,w
 13249  13C7  3E80               	addlw	128
 13250  13C8  00AA               	movwf	??_Gpio_initPin+4
 13251  13C9  0829               	movf	??_Gpio_initPin+3,w
 13252  13CA  1803               	skipnc
 13253  13CB  3E01               	addlw	1
 13254  13CC  3E00               	addlw	0
 13255  13CD  00AB               	movwf	??_Gpio_initPin+5
 13256  13CE  082A               	movf	??_Gpio_initPin+4,w
 13257  13CF  0084               	movwf	4
 13258  13D0  1783               	bsf	3,7
 13259  13D1  1C2B               	btfss	??_Gpio_initPin+5,0
 13260  13D2  1383               	bcf	3,7
 13261  13D3  3001               	movlw	1
 13262  13D4  00AC               	movwf	??_Gpio_initPin+6
 13263  13D5  0A23               	incf	Gpio_initPin@pin,w
 13264  13D6  2BD9               	goto	u2054
 13265  13D7                     u2055:
 13266  13D7  1003               	clrc
 13267  13D8  0DAC               	rlf	??_Gpio_initPin+6,f
 13268  13D9                     u2054:
 13269  13D9  3EFF               	addlw	-1
 13270  13DA  1D03               	skipz
 13271  13DB  2BD7               	goto	u2055
 13272  13DC  082C               	movf	??_Gpio_initPin+6,w
 13273  13DD  3AFF               	xorlw	255
 13274  13DE  0500               	andwf	0,w
 13275  13DF  0426               	iorwf	??_Gpio_initPin,w
 13276  13E0  00FF               	movwf	btemp+1
 13277  13E1  0832               	movf	Gpio_initPin@id,w
 13278  13E2  00AD               	movwf	??_Gpio_initPin+7
 13279  13E3  072D               	addwf	??_Gpio_initPin+7,w
 13280  13E4  3E5C               	addlw	(low (_gpio| 0))& (0+255)
 13281  13E5  0084               	movwf	4
 13282  13E6  1383               	bcf	3,7	;select IRP bank0
 13283  13E7  0800               	movf	0,w
 13284  13E8  00AE               	movwf	??_Gpio_initPin+8
 13285  13E9  0A84               	incf	4,f
 13286  13EA  0800               	movf	0,w
 13287  13EB  00AF               	movwf	??_Gpio_initPin+9
 13288  13EC  082E               	movf	??_Gpio_initPin+8,w
 13289  13ED  3E80               	addlw	128
 13290  13EE  00B0               	movwf	??_Gpio_initPin+10
 13291  13EF  082F               	movf	??_Gpio_initPin+9,w
 13292  13F0  1803               	skipnc
 13293  13F1  3E01               	addlw	1
 13294  13F2  3E00               	addlw	0
 13295  13F3  00B1               	movwf	??_Gpio_initPin+11
 13296  13F4  0830               	movf	??_Gpio_initPin+10,w
 13297  13F5  0084               	movwf	4
 13298  13F6  1783               	bsf	3,7
 13299  13F7  1C31               	btfss	??_Gpio_initPin+11,0
 13300  13F8  1383               	bcf	3,7
 13301  13F9  087F               	movf	btemp+1,w
 13302  13FA  0080               	movwf	0
 13303  13FB                     l2338:
 13304                           
 13305                           ;Gpio.c: 25:     OPTION_REG = ( OPTION_REG & ( 1 << 7 ) ) | ( type << 7 );
 13306  13FB  0825               	movf	Gpio_initPin@type,w
 13307  13FC  00A6               	movwf	??_Gpio_initPin
 13308  13FD  3007               	movlw	7
 13309  13FE                     u2065:
 13310  13FE  1003               	clrc
 13311  13FF  0DA6               	rlf	??_Gpio_initPin,f
 13312  1400  3EFF               	addlw	-1
 13313  1401  1D03               	skipz
 13314  1402  2BFE               	goto	u2065
 13315  1403  1683               	bsf	3,5	;RP0=1, select bank1
 13316  1404  1303               	bcf	3,6	;RP1=0, select bank1
 13317  1405  0801               	movf	1,w	;volatile
 13318  1406  3980               	andlw	128
 13319  1407  1283               	bcf	3,5	;RP0=0, select bank0
 13320  1408  1303               	bcf	3,6	;RP1=0, select bank0
 13321  1409  0426               	iorwf	??_Gpio_initPin,w
 13322  140A  1683               	bsf	3,5	;RP0=1, select bank1
 13323  140B  1303               	bcf	3,6	;RP1=0, select bank1
 13324  140C  0081               	movwf	1	;volatile
 13325  140D                     l499:
 13326  140D  0008               	return
 13327  140E                     __end_of_Gpio_initPin:
 13328                           
 13329                           	psect	text73
 13330  18D3                     __ptext73:	
 13331 ;; *************** function _SysTick_Handler *****************
 13332 ;; Defined at:
 13333 ;;		line 20 in file "main.c"
 13334 ;; Parameters:    Size  Location     Type
 13335 ;;		None
 13336 ;; Auto vars:     Size  Location     Type
 13337 ;;		None
 13338 ;; Return value:  Size  Location     Type
 13339 ;;                  1    wreg      void 
 13340 ;; Registers used:
 13341 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 13342 ;; Tracked objects:
 13343 ;;		On entry : 0/0
 13344 ;;		On exit  : 0/0
 13345 ;;		Unchanged: 0/0
 13346 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13347 ;;      Params:         0       0       0       0       0
 13348 ;;      Locals:         0       0       0       0       0
 13349 ;;      Temps:          4       0       0       0       0
 13350 ;;      Totals:         4       0       0       0       0
 13351 ;;Total ram usage:        4 bytes
 13352 ;; Hardware stack levels used:    1
 13353 ;; Hardware stack levels required when called:    2
 13354 ;; This function calls:
 13355 ;;		_Scheduler_update
 13356 ;; This function is called by:
 13357 ;;		Interrupt level 1
 13358 ;; This function uses a non-reentrant model
 13359 ;;
 13360                           
 13361                           
 13362                           ;psect for function _SysTick_Handler
 13363  18D3                     _SysTick_Handler:
 13364  18D3                     i1l2998:
 13365                           
 13366                           ;main.c: 22:     ( PIR1 = PIR1 & ~0x04 );
 13367  18D3  080C               	movf	12,w	;volatile
 13368  18D4  39FB               	andlw	251
 13369  18D5  008C               	movwf	12	;volatile
 13370  18D6                     i1l3000:
 13371                           
 13372                           ;main.c: 23:     Scheduler_update();
 13373  18D6  160A  118A  24FF  160A  158A  	fcall	_Scheduler_update
 13374  18DB                     i1l43:
 13375  18DB  0879               	movf	??_SysTick_Handler+3,w
 13376  18DC  1283               	bcf	3,5	;RP0=0, select bank0
 13377  18DD  1303               	bcf	3,6	;RP1=0, select bank0
 13378  18DE  00FF               	movwf	btemp+1
 13379  18DF  0878               	movf	??_SysTick_Handler+2,w
 13380  18E0  008A               	movwf	10
 13381  18E1  0877               	movf	??_SysTick_Handler+1,w
 13382  18E2  0084               	movwf	4
 13383  18E3  0E76               	swapf	??_SysTick_Handler^(0+4294967168),w
 13384  18E4  0083               	movwf	3
 13385  18E5  0EFE               	swapf	btemp,f
 13386  18E6  0E7E               	swapf	btemp,w
 13387  18E7  0009               	retfie
 13388  18E8                     __end_of_SysTick_Handler:
 13389                           
 13390                           	psect	intentry
 13391  0004                     __pintentry:	
 13392                           ;incstack = 0
 13393                           ; Regs used in _SysTick_Handler: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
 13394                           
 13395  0004                     interrupt_function:
 13396  007E                     saved_w	set	btemp
 13397  0004  00FE               	movwf	btemp
 13398  0005  0E03               	swapf	3,w
 13399  0006  00F6               	movwf	??_SysTick_Handler
 13400  0007  0804               	movf	4,w
 13401  0008  00F7               	movwf	??_SysTick_Handler+1
 13402  0009  080A               	movf	10,w
 13403  000A  00F8               	movwf	??_SysTick_Handler+2
 13404  000B  1283               	bcf	3,5	;RP0=0, select bank0
 13405  000C  1303               	bcf	3,6	;RP1=0, select bank0
 13406  000D  087F               	movf	btemp+1,w
 13407  000E  00F9               	movwf	??_SysTick_Handler+3
 13408  000F  160A  158A  28D3   	ljmp	_SysTick_Handler
 13409                           
 13410                           	psect	text74
 13411  14FF                     __ptext74:	
 13412 ;; *************** function _Scheduler_update *****************
 13413 ;; Defined at:
 13414 ;;		line 95 in file "Scheduler.c"
 13415 ;; Parameters:    Size  Location     Type
 13416 ;;		None
 13417 ;; Auto vars:     Size  Location     Type
 13418 ;;  index           2    4[COMMON] unsigned int 
 13419 ;; Return value:  Size  Location     Type
 13420 ;;                  1    wreg      void 
 13421 ;; Registers used:
 13422 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 13423 ;; Tracked objects:
 13424 ;;		On entry : 0/0
 13425 ;;		On exit  : 0/0
 13426 ;;		Unchanged: 0/0
 13427 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13428 ;;      Params:         0       0       0       0       0
 13429 ;;      Locals:         2       0       0       0       0
 13430 ;;      Temps:          1       0       0       0       0
 13431 ;;      Totals:         3       0       0       0       0
 13432 ;;Total ram usage:        3 bytes
 13433 ;; Hardware stack levels used:    1
 13434 ;; Hardware stack levels required when called:    1
 13435 ;; This function calls:
 13436 ;;		i1___bmul
 13437 ;; This function is called by:
 13438 ;;		_SysTick_Handler
 13439 ;; This function uses a non-reentrant model
 13440 ;;
 13441                           
 13442                           
 13443                           ;psect for function _Scheduler_update
 13444  14FF                     _Scheduler_update:
 13445  14FF                     i1l2792:	
 13446                           ;incstack = 0
 13447                           ; Regs used in _Scheduler_update: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
 13448                           
 13449                           
 13450                           ;Scheduler.c: 97:  size_t index = 0;
 13451  14FF  01F4               	clrf	Scheduler_update@index
 13452  1500  01F5               	clrf	Scheduler_update@index+1
 13453                           
 13454                           ;Scheduler.c: 98:  for( index = 0; index < ( ( UBaseType_t ) 10 ); index++ )
 13455  1501  01F4               	clrf	Scheduler_update@index
 13456  1502  01F5               	clrf	Scheduler_update@index+1
 13457  1503                     i1l2798:
 13458                           
 13459                           ;Scheduler.c: 99:  {;Scheduler.c: 100:   if( scheduler.task[ index ].pointer != 0 )
 13460  1503  3006               	movlw	6
 13461  1504  00FF               	movwf	btemp+1
 13462  1505  087F               	movf	btemp+1,w
 13463  1506  00F0               	movwf	i1___bmul@multiplicand
 13464  1507  0874               	movf	Scheduler_update@index,w
 13465  1508  160A  158A  20BE  160A  118A  	fcall	i1___bmul
 13466  150D  3E10               	addlw	(low (_scheduler| (0+256)))& (0+255)
 13467  150E  0084               	movwf	4
 13468  150F  1783               	bsf	3,7	;select IRP bank2
 13469  1510  0800               	movf	0,w
 13470  1511  1903               	btfsc	3,2
 13471  1512  2D14               	goto	u292_21
 13472  1513  2D15               	goto	u292_20
 13473  1514                     u292_21:
 13474  1514  2D77               	goto	i1l2806
 13475  1515                     u292_20:
 13476  1515                     i1l2800:
 13477                           
 13478                           ;Scheduler.c: 101:   {;Scheduler.c: 102:    if( scheduler.task[ index ].delay == 0 )
 13479  1515  3006               	movlw	6
 13480  1516  00FF               	movwf	btemp+1
 13481  1517  087F               	movf	btemp+1,w
 13482  1518  00F0               	movwf	i1___bmul@multiplicand
 13483  1519  0874               	movf	Scheduler_update@index,w
 13484  151A  160A  158A  20BE  160A  118A  	fcall	i1___bmul
 13485  151F  3E13               	addlw	(low ((_scheduler| (0+256)+3)))& (0+255)
 13486  1520  0084               	movwf	4
 13487  1521  1783               	bsf	3,7	;select IRP bank2
 13488  1522  0800               	movf	0,w
 13489  1523  1D03               	btfss	3,2
 13490  1524  2D26               	goto	u293_21
 13491  1525  2D27               	goto	u293_20
 13492  1526                     u293_21:
 13493  1526  2D56               	goto	i1l137
 13494  1527                     u293_20:
 13495  1527                     i1l2802:
 13496                           
 13497                           ;Scheduler.c: 103:    {;Scheduler.c: 104:     scheduler.task[ index ].runMe = 1;
 13498  1527  3006               	movlw	6
 13499  1528  00FF               	movwf	btemp+1
 13500  1529  087F               	movf	btemp+1,w
 13501  152A  00F0               	movwf	i1___bmul@multiplicand
 13502  152B  0874               	movf	Scheduler_update@index,w
 13503  152C  160A  158A  20BE  160A  118A  	fcall	i1___bmul
 13504  1531  3E15               	addlw	(low ((_scheduler| (0+256)+5)))& (0+255)
 13505  1532  0084               	movwf	4
 13506  1533  3001               	movlw	1
 13507  1534  00FF               	movwf	btemp+1
 13508  1535  087F               	movf	btemp+1,w
 13509  1536  1783               	bsf	3,7	;select IRP bank2
 13510  1537  0080               	movwf	0
 13511                           
 13512                           ;Scheduler.c: 105:     scheduler.task[ index ].delay = scheduler.task[ index ].period;
 13513  1538  3006               	movlw	6
 13514  1539  00FF               	movwf	btemp+1
 13515  153A  087F               	movf	btemp+1,w
 13516  153B  00F0               	movwf	i1___bmul@multiplicand
 13517  153C  0874               	movf	Scheduler_update@index,w
 13518  153D  160A  158A  20BE  160A  118A  	fcall	i1___bmul
 13519  1542  3E14               	addlw	(low ((_scheduler| (0+256)+4)))& (0+255)
 13520  1543  0084               	movwf	4
 13521  1544  1783               	bsf	3,7	;select IRP bank2
 13522  1545  0800               	movf	0,w
 13523  1546  00F3               	movwf	??_Scheduler_update
 13524  1547  3006               	movlw	6
 13525  1548  00FF               	movwf	btemp+1
 13526  1549  087F               	movf	btemp+1,w
 13527  154A  00F0               	movwf	i1___bmul@multiplicand
 13528  154B  0874               	movf	Scheduler_update@index,w
 13529  154C  160A  158A  20BE  160A  118A  	fcall	i1___bmul
 13530  1551  3E13               	addlw	(low ((_scheduler| (0+256)+3)))& (0+255)
 13531  1552  0084               	movwf	4
 13532  1553  0873               	movf	??_Scheduler_update,w
 13533  1554  1783               	bsf	3,7	;select IRP bank2
 13534  1555  0080               	movwf	0
 13535  1556                     i1l137:	
 13536                           ;Scheduler.c: 106:    }
 13537                           
 13538                           
 13539                           ;Scheduler.c: 107:    if( scheduler.task[ index ].delay != 0 )
 13540  1556  3006               	movlw	6
 13541  1557  00FF               	movwf	btemp+1
 13542  1558  087F               	movf	btemp+1,w
 13543  1559  00F0               	movwf	i1___bmul@multiplicand
 13544  155A  0874               	movf	Scheduler_update@index,w
 13545  155B  160A  158A  20BE  160A  118A  	fcall	i1___bmul
 13546  1560  3E13               	addlw	(low ((_scheduler| (0+256)+3)))& (0+255)
 13547  1561  0084               	movwf	4
 13548  1562  1783               	bsf	3,7	;select IRP bank2
 13549  1563  0800               	movf	0,w
 13550  1564  1903               	btfsc	3,2
 13551  1565  2D67               	goto	u294_21
 13552  1566  2D68               	goto	u294_20
 13553  1567                     u294_21:
 13554  1567  2D77               	goto	i1l2806
 13555  1568                     u294_20:
 13556  1568                     i1l2804:
 13557                           
 13558                           ;Scheduler.c: 108:    {;Scheduler.c: 109:     scheduler.task[ index ].delay--;
 13559  1568  3006               	movlw	6
 13560  1569  00FF               	movwf	btemp+1
 13561  156A  087F               	movf	btemp+1,w
 13562  156B  00F0               	movwf	i1___bmul@multiplicand
 13563  156C  0874               	movf	Scheduler_update@index,w
 13564  156D  160A  158A  20BE  160A  118A  	fcall	i1___bmul
 13565  1572  3E13               	addlw	(low ((_scheduler| (0+256)+3)))& (0+255)
 13566  1573  0084               	movwf	4
 13567  1574  3001               	movlw	1
 13568  1575  1783               	bsf	3,7	;select IRP bank2
 13569  1576  0280               	subwf	0,f
 13570  1577                     i1l2806:
 13571                           
 13572                           ;Scheduler.c: 112:  }
 13573  1577  3001               	movlw	1
 13574  1578  07F4               	addwf	Scheduler_update@index,f
 13575  1579  1803               	skipnc
 13576  157A  0AF5               	incf	Scheduler_update@index+1,f
 13577  157B  3000               	movlw	0
 13578  157C  07F5               	addwf	Scheduler_update@index+1,f
 13579  157D                     i1l2808:
 13580  157D  3000               	movlw	0
 13581  157E  0275               	subwf	Scheduler_update@index+1,w
 13582  157F  300A               	movlw	10
 13583  1580  1903               	skipnz
 13584  1581  0274               	subwf	Scheduler_update@index,w
 13585  1582  1C03               	skipc
 13586  1583  2D85               	goto	u295_21
 13587  1584  2D86               	goto	u295_20
 13588  1585                     u295_21:
 13589  1585  2D03               	goto	i1l2798
 13590  1586                     u295_20:
 13591  1586                     i1l2810:
 13592                           
 13593                           ;Scheduler.c: 113:  scheduler.interruptFlag = 1;
 13594  1586  3001               	movlw	1
 13595  1587  00FF               	movwf	btemp+1
 13596  1588  087F               	movf	btemp+1,w
 13597  1589  1283               	bcf	3,5	;RP0=0, select bank2
 13598  158A  1703               	bsf	3,6	;RP1=1, select bank2
 13599  158B  00CD               	movwf	(_scheduler^(0+256)+61)	;volatile
 13600  158C                     i1l139:
 13601  158C  0008               	return
 13602  158D                     __end_of_Scheduler_update:
 13603                           
 13604                           	psect	text75
 13605  18BE                     __ptext75:	
 13606 ;; *************** function i1___bmul *****************
 13607 ;; Defined at:
 13608 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\Umul8.c"
 13609 ;; Parameters:    Size  Location     Type
 13610 ;;  multiplier      1    wreg     unsigned char 
 13611 ;;  multiplicand    1    0[COMMON] unsigned char 
 13612 ;; Auto vars:     Size  Location     Type
 13613 ;;  multiplier      1    2[COMMON] unsigned char 
 13614 ;;  product         1    1[COMMON] unsigned char 
 13615 ;; Return value:  Size  Location     Type
 13616 ;;                  1    wreg      unsigned char 
 13617 ;; Registers used:
 13618 ;;		wreg, status,2, status,0, btemp+1
 13619 ;; Tracked objects:
 13620 ;;		On entry : 0/0
 13621 ;;		On exit  : 0/0
 13622 ;;		Unchanged: 0/0
 13623 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13624 ;;      Params:         1       0       0       0       0
 13625 ;;      Locals:         2       0       0       0       0
 13626 ;;      Temps:          0       0       0       0       0
 13627 ;;      Totals:         3       0       0       0       0
 13628 ;;Total ram usage:        3 bytes
 13629 ;; Hardware stack levels used:    1
 13630 ;; This function calls:
 13631 ;;		Nothing
 13632 ;; This function is called by:
 13633 ;;		_Scheduler_update
 13634 ;; This function uses a non-reentrant model
 13635 ;;
 13636                           
 13637                           
 13638                           ;psect for function i1___bmul
 13639  18BE                     i1___bmul:
 13640                           
 13641                           ;incstack = 0
 13642                           ; Regs used in i1___bmul: [wreg+status,2+status,0+btemp+1]
 13643                           ;i1___bmul@multiplier stored from wreg
 13644  18BE  00F2               	movwf	i1___bmul@multiplier
 13645  18BF                     i1l2776:
 13646  18BF  01F1               	clrf	i1___bmul@product
 13647  18C0                     i1l2778:
 13648  18C0  1C72               	btfss	i1___bmul@multiplier,0
 13649  18C1  28C3               	goto	u290_21
 13650  18C2  28C4               	goto	u290_20
 13651  18C3                     u290_21:
 13652  18C3  28C8               	goto	i1l2782
 13653  18C4                     u290_20:
 13654  18C4                     i1l2780:
 13655  18C4  0870               	movf	i1___bmul@multiplicand,w
 13656  18C5  00FF               	movwf	btemp+1
 13657  18C6  087F               	movf	btemp+1,w
 13658  18C7  07F1               	addwf	i1___bmul@product,f
 13659  18C8                     i1l2782:
 13660  18C8  1003               	clrc
 13661  18C9  0DF0               	rlf	i1___bmul@multiplicand,f
 13662  18CA                     i1l2784:
 13663  18CA  1003               	clrc
 13664  18CB  0CF2               	rrf	i1___bmul@multiplier,f
 13665  18CC                     i1l2786:
 13666  18CC  0872               	movf	i1___bmul@multiplier,w
 13667  18CD  1D03               	btfss	3,2
 13668  18CE  28D0               	goto	u291_21
 13669  18CF  28D1               	goto	u291_20
 13670  18D0                     u291_21:
 13671  18D0  28C0               	goto	i1l2778
 13672  18D1                     u291_20:
 13673  18D1                     i1l2788:
 13674  18D1  0871               	movf	i1___bmul@product,w
 13675  18D2                     i1l692:
 13676  18D2  0008               	return
 13677  18D3                     __end_ofi1___bmul:
 13678  0010                     
 13679                           	psect	functab
 13680  0054                     __pfunctab:
 13681  0054                     __fptable:
 13682  0054                     fptable:
 13683  0054  00FF               	movwf	(btemp+1)& (0+127)
 13684  0055  3000               	movlw	high fptable
 13685  0056  008A               	movwf	10
 13686  0057  087F               	movf	(btemp+1)& (0+127),w
 13687  0058  0782               	addwf	2,f
 13688  0059                     fpbase:
 13689  0059  2859               	goto	fpbase	; Call via a null pointer and you will get stuck here.
 13690  005A                     fp__Tempsnsr_update:
 13691  005A  160A  118A  2F57   	ljmp	_Tempsnsr_update
 13692  005D                     fp__Switch_update:
 13693  005D  160A  118A  2EB2   	ljmp	_Switch_update
 13694  0060                     fp__Heater_update:
 13695  0060  120A  118A  286C   	ljmp	_Heater_update
 13696  0063                     fp__Tempctrl_update:
 13697  0063  160A  158A  29E4   	ljmp	_Tempctrl_update
 13698  0066                     fp__Led_update:
 13699  0066  120A  158A  28F4   	ljmp	_Led_update
 13700  0069                     fp__Ssd_update:
 13701  0069  120A  158A  2B9D   	ljmp	_Ssd_update
 13702  006C                     __end_of__fptable:
 13703  007E                     btemp	set	126	;btemp
 13704  007E                     wtemp0	set	126
 13705                           
 13706                           	psect	config
 13707                           
 13708                           ;Config register CONFIG @ 0x2007
 13709                           ;	Oscillator Selection bits
 13710                           ;	FOSC = HS, HS oscillator
 13711                           ;	Watchdog Timer Enable bit
 13712                           ;	WDTE = OFF, WDT disabled
 13713                           ;	Power-up Timer Enable bit
 13714                           ;	PWRTE = OFF, PWRT disabled
 13715                           ;	Brown-out Reset Enable bit
 13716                           ;	BOREN = OFF, BOR disabled
 13717                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
 13718                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
 13719                           ;	Data EEPROM Memory Code Protection bit
 13720                           ;	CPD = OFF, Data EEPROM code protection off
 13721                           ;	Flash Program Memory Write Enable bits
 13722                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
 13723                           ;	In-Circuit Debugger Mode bit
 13724                           ;	DEBUG = 0x1, unprogrammed default
 13725                           ;	Flash Program Memory Code Protection bit
 13726                           ;	CP = OFF, Code protection off
 13727  2007                     	org	8199
 13728  2007  3F3A               	dw	16186

Data Sizes:
    Strings     0
    Constant    0
    Data        20
    BSS         178
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      10
    BANK0            80     60      75
    BANK1            80      0      72
    BANK3            96      0      49
    BANK2            96      0      62

Pointer List with Targets:

    Scheduler_dispatchTasks$1932	volatile PTR void  size(2) Largest target is 512
		 -> RAM(DATA[512]), RAM(DATA[512]), NULL(NULL[0]), 

    Scheduler_dispatchTasks$1927	volatile PTR FTN(PTR void ,)void  size(1) Largest target is 1
		 -> Absolute function(), Ssd_update(), Led_update(), Tempctrl_update(), 
		 -> Heater_update(), Tempsnsr_update(), Switch_update(), 

    Scheduler_dispatchTasks$1899$0	PTR void  size(2) Largest target is 512
		 -> RAM(DATA[512]), RAM(DATA[512]), NULL(NULL[0]), 

    Scheduler_dispatchTasks$1904	volatile PTR void  size(2) Largest target is 512
		 -> RAM(DATA[512]), RAM(DATA[512]), NULL(NULL[0]), 

    Scheduler_dispatchTasks$1899	volatile PTR FTN(PTR void ,)void  size(1) Largest target is 1
		 -> Absolute function(), Ssd_update(), Led_update(), Tempctrl_update(), 
		 -> Heater_update(), Tempsnsr_update(), Switch_update(), 

    Absolute function$0	PTR void  size(2) Largest target is 512
		 -> RAM(DATA[512]), RAM(DATA[512]), NULL(NULL[0]), 

    task$0	PTR void  size(2) Largest target is 512
		 -> RAM(DATA[512]), RAM(DATA[512]), NULL(NULL[0]), 

    S309$0$0	PTR void  size(2) Largest target is 512
		 -> RAM(DATA[512]), RAM(DATA[512]), NULL(NULL[0]), 

    Tempsnsr_update@paramter	PTR void  size(2) Largest target is 512
		 -> RAM(DATA[512]), RAM(DATA[512]), NULL(NULL[0]), 

    Tempctrl_update@paramter	PTR void  size(2) Largest target is 512
		 -> RAM(DATA[512]), RAM(DATA[512]), NULL(NULL[0]), 

    gpio	PTR struct .[5] size(2) Largest target is 1
		 -> PORTE(SFR0[1]), PORTD(SFR0[1]), PORTC(SFR0[1]), PORTB(SFR0[1]), 
		 -> PORTA(SFR0[1]), 

    Heater_update@paramter	PTR void  size(2) Largest target is 512
		 -> RAM(DATA[512]), RAM(DATA[512]), NULL(NULL[0]), 

    Eeprom_readPage@buffer	PTR unsigned char  size(1) Largest target is 31
		 -> heater(BANK1[31]), 

    Eeprom_writePage@buffer	PTR unsigned char  size(1) Largest target is 31
		 -> heater(BANK1[31]), 

    Ssd_update@paramter	PTR void  size(2) Largest target is 512
		 -> RAM(DATA[512]), RAM(DATA[512]), NULL(NULL[0]), 

    Switch_update@paramter	PTR void  size(2) Largest target is 512
		 -> RAM(DATA[512]), RAM(DATA[512]), NULL(NULL[0]), 

    Led_update@paramter	PTR void  size(2) Largest target is 512
		 -> RAM(DATA[512]), RAM(DATA[512]), NULL(NULL[0]), 

    Scheduler_addTask@paramter	PTR void  size(2) Largest target is 512
		 -> RAM(DATA[512]), RAM(DATA[512]), NULL(NULL[0]), 

    Scheduler_addTask@task	PTR FTN(PTR void ,)void  size(1) Largest target is 1
		 -> Ssd_update(), Led_update(), Tempctrl_update(), Heater_update(), 
		 -> Tempsnsr_update(), Switch_update(), 

    S309$paramter	PTR void  size(2) Largest target is 512
		 -> RAM(DATA[512]), RAM(DATA[512]), NULL(NULL[0]), 

    scheduler.task.paramter	PTR void  size(2) Largest target is 512
		 -> RAM(DATA[512]), RAM(DATA[512]), NULL(NULL[0]), 

    S309$pointer	PTR FTN(PTR void ,)void  size(1) Largest target is 1
		 -> Absolute function(), Ssd_update(), Led_update(), Tempctrl_update(), 
		 -> Heater_update(), Tempsnsr_update(), Switch_update(), 

    scheduler.task.pointer	PTR FTN(PTR void ,)void  size(1) Largest target is 1
		 -> Absolute function(), Ssd_update(), Led_update(), Tempctrl_update(), 
		 -> Heater_update(), Tempsnsr_update(), Switch_update(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _SysTick_Handler in COMMON

    _SysTick_Handler->_Scheduler_update
    _Scheduler_update->i1___bmul

Critical Paths under _main in BANK0

    _main->_Scheduler_dispatchTasks
    _Tempsnsr_init->_initTempsnsrHardware
    _initTempsnsrHardware->_Gpio_initPin
    _Tempctrl_init->_initTempctrlHardware
    _initTempctrlHardware->_Gpio_initPin
    _Switch_init->_initSwitchHardware
    _initSwitchHardware->_Gpio_initPin
    _Ssd_init->_initSsdHardware
    _initSsdHardware->_Gpio_initPin
    _Scheduler_start->_Scheduler_initSysTick
    _Scheduler_initSysTick->_Timer_init
    _Timer_init->_Timer1_init
    _Timer1_init->___wmul
    _Timer0_init->___bmul
    _Scheduler_init->_Scheduler_deleteTask
    _Scheduler_dispatchTasks->_Heater_update
    _Tempsnsr_update->_getAvgTemp
    _getTempsnsrHarwareState->___lldiv
    ___lmul->_Adc_getState
    _Adc_getState->___bmul
    _getAvgTemp->___lldiv
    _setTempctrlHardwareState->_Gpio_setPinState
    _getSwitchHardwareState->_Gpio_getPinState
    _Gpio_getPinState->___bmul
    _setSsdHardwareSymbol->_Gpio_setPortState
    _Gpio_setPortState->___bmul
    _setSsdHardwareState->_Gpio_setPinState
    _Scheduler_reportStatus->_Scheduler_displayError
    _Scheduler_displayError->_Led_setState
    _Scheduler_deleteTask->___bmul
    _setLedHardwareState->_Gpio_setPinState
    _Gpio_setPinState->___bmul
    ___awmod->___awdiv
    ___awdiv->___bmul
    _Tempsnsr_getState->___bmul
    _Tempctrl_setState->___bmul
    _Switch_getState->___bmul
    _Ssd_setSymbol->___awmod
    _Ssd_setState->___lwdiv
    _Led_setState->___lwdiv
    _Scheduler_addTask->___bmul
    _Led_init->_initLedHardware
    _initLedHardware->_Gpio_initPin
    _Scheduler_delaySoftwareMs->_Scheduler_delaySoftwareUs
    _Eeprom_writePage->___bmul
    _Eeprom_write->___bmul
    _Eeprom_readPage->___bmul
    _Eeprom_read->_I2c_writeMaster
    _Eeprom_init->_I2c_initMaster
    _I2c_initMaster->___lldiv
    ___lldiv->___lmul
    _Gpio_initPin->___bmul

Critical Paths under _SysTick_Handler in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _SysTick_Handler in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _SysTick_Handler in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _SysTick_Handler in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  251666
                        _Heater_init
                           _Led_init
                  _Scheduler_addTask
          _Scheduler_delaySoftwareUs
            _Scheduler_dispatchTasks
                     _Scheduler_init
                    _Scheduler_start
                           _Ssd_init
                        _Switch_init
                      _Tempctrl_init
                      _Tempsnsr_init
 ---------------------------------------------------------------------------------
 (1) _Tempsnsr_init                                        8     4      4   15235
                                             20 BANK0      8     4      4
                             ___bmul
               _initTempsnsrHardware
 ---------------------------------------------------------------------------------
 (2) _initTempsnsrHardware                                 1     1      0    8413
                                             19 BANK0      1     1      0
                           _Adc_init
                       _Gpio_initPin
                             ___bmul
 ---------------------------------------------------------------------------------
 (3) _Adc_init                                             1     1      0       0
 ---------------------------------------------------------------------------------
 (1) _Tempctrl_init                                        5     1      4   15078
                                             20 BANK0      5     1      4
                             ___bmul
               _initTempctrlHardware
 ---------------------------------------------------------------------------------
 (2) _initTempctrlHardware                                 1     1      0    8435
                                             19 BANK0      1     1      0
                       _Gpio_initPin
                             ___bmul
 ---------------------------------------------------------------------------------
 (1) _Switch_init                                          3     1      2   15142
                                             20 BANK0      3     1      2
                             ___bmul
                 _initSwitchHardware
 ---------------------------------------------------------------------------------
 (2) _initSwitchHardware                                   1     1      0    8391
                                             19 BANK0      1     1      0
                       _Gpio_initPin
                             ___bmul
 ---------------------------------------------------------------------------------
 (1) _Ssd_init                                             5     1      4   15582
                                             22 BANK0      5     1      4
                             ___bmul
                    _initSsdHardware
 ---------------------------------------------------------------------------------
 (2) _initSsdHardware                                      3     3      0    8503
                                             19 BANK0      3     3      0
                       _Gpio_initPin
                             ___bmul
 ---------------------------------------------------------------------------------
 (1) _Scheduler_start                                      0     0      0   31685
              _Scheduler_initSysTick
 ---------------------------------------------------------------------------------
 (2) _Scheduler_initSysTick                                2     0      2   31685
                                             20 BANK0      2     0      2
                         _Timer_init
 ---------------------------------------------------------------------------------
 (3) _Timer_init                                           8     3      5   31587
                                             12 BANK0      8     3      5
                        _Timer0_init
                        _Timer1_init
 ---------------------------------------------------------------------------------
 (4) _Timer1_init                                          7     3      4   24716
                                              6 BANK0      6     2      4
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4   24444
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) _Timer0_init                                          5     1      4    6369
                                              3 BANK0      4     0      4
                             ___bmul
 ---------------------------------------------------------------------------------
 (1) _Scheduler_init                                       2     2      0    6320
                                              4 BANK0      2     2      0
               _Scheduler_deleteTask
 ---------------------------------------------------------------------------------
 (1) _Scheduler_dispatchTasks                              6     6      0  128935
                                             54 BANK0      6     6      0
                   Absolute function *
                      _Heater_update *
                         _Led_update *
               _Scheduler_deleteTask
                _Scheduler_goToSleep
             _Scheduler_reportStatus
                         _Ssd_update *
                      _Switch_update *
                    _Tempctrl_update *
                    _Tempsnsr_update *
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) _Tempsnsr_update                                      5     3      2   20382
                                             45 BANK0      5     3      2
                             ___bmul
                         _getAvgTemp
            _getTempsnsrHarwareState
 ---------------------------------------------------------------------------------
 (3) _getTempsnsrHarwareState                              5     5      0    7145
                                             33 BANK0      5     5      0
                       _Adc_getState
                             ___bmul
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (4) ___lmul                                              13     5      8     244
                                              6 BANK0     13     5      8
                       _Adc_getState (ARG)
                             ___bmul (ARG)
 ---------------------------------------------------------------------------------
 (4) _Adc_getState                                         4     1      3      76
                                              3 BANK0      3     0      3
                             ___bmul (ARG)
 ---------------------------------------------------------------------------------
 (3) _getAvgTemp                                          12    12      0    6875
                                             33 BANK0     12    12      0
                             ___bmul
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) _Tempctrl_update                                      4     2      2   14365
                                             45 BANK0      4     2      2
                             ___bmul
           _setTempctrlHardwareState
 ---------------------------------------------------------------------------------
 (3) _setTempctrlHardwareState                             2     1      1    8156
                                             14 BANK0      2     1      1
                   _Gpio_setPinState
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) _Switch_update                                        3     1      2   12765
                                             45 BANK0      3     1      2
                             ___bmul
             _getSwitchHardwareState
 ---------------------------------------------------------------------------------
 (3) _getSwitchHardwareState                               1     1      0    6425
                                             10 BANK0      1     1      0
                   _Gpio_getPinState
                             ___bmul
 ---------------------------------------------------------------------------------
 (4) _Gpio_getPinState                                     7     6      1     218
                                              3 BANK0      7     6      1
                             ___bmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _Ssd_update                                           7     5      2   21195
                                             45 BANK0      7     5      2
                             ___bmul
                _setSsdHardwareState
               _setSsdHardwareSymbol
 ---------------------------------------------------------------------------------
 (3) _setSsdHardwareSymbol                                 3     2      1    6524
                                             12 BANK0      3     2      1
                  _Gpio_setPortState
                             ___bmul
 ---------------------------------------------------------------------------------
 (4) _Gpio_setPortState                                    9     7      2     263
                                              3 BANK0      9     7      2
                             ___bmul (ARG)
 ---------------------------------------------------------------------------------
 (3) _setSsdHardwareState                                  2     1      1    8034
                                             14 BANK0      2     1      1
                   _Gpio_setPinState
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) _Scheduler_reportStatus                               0     0      0    1511
             _Scheduler_displayError
 ---------------------------------------------------------------------------------
 (3) _Scheduler_displayError                               1     1      0    1511
                                             14 BANK0      1     1      0
                       _Led_setState
 ---------------------------------------------------------------------------------
 (2) _Scheduler_goToSleep                                  0     0      0       0
            _Scheduler_sleepHardware
 ---------------------------------------------------------------------------------
 (3) _Scheduler_sleepHardware                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Scheduler_deleteTask                                 1     1      0    6251
                                              3 BANK0      1     1      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) _Led_update                                           7     5      2    2104
                                             45 BANK0      7     5      2
                             ___bmul (ARG)
                _setLedHardwareState
 ---------------------------------------------------------------------------------
 (3) _setLedHardwareState                                  4     3      1    1839
                                             14 BANK0      4     3      1
                   _Gpio_setPinState
 ---------------------------------------------------------------------------------
 (4) _Gpio_setPinState                                    11     9      2    1631
                                              3 BANK0     11     9      2
                             ___bmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _Heater_update                                        9     7      2   44018
                                             45 BANK0      9     7      2
                       _Eeprom_write
                       _Led_setState
                       _Ssd_setState
                      _Ssd_setSymbol
                    _Switch_getState
                  _Tempctrl_setState
                  _Tempsnsr_getState
                            ___awdiv
                            ___awmod
                             ___bmul
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4     904
                                             11 BANK0      6     2      4
                            ___awdiv (ARG)
                             ___bmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     604
                                              3 BANK0      8     4      4
                             ___bmul (ARG)
 ---------------------------------------------------------------------------------
 (3) _Tempsnsr_getState                                    1     1      0    6141
                                              3 BANK0      1     1      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (3) _Tempctrl_setState                                    2     1      1    6391
                                              3 BANK0      2     1      1
                             ___bmul
 ---------------------------------------------------------------------------------
 (3) _Switch_getState                                      2     2      0    6186
                                              3 BANK0      2     2      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (3) _Ssd_setSymbol                                        2     1      1    6467
                                             17 BANK0      2     1      1
                            ___awdiv (ARG)
                            ___awmod (ARG)
                             ___bmul
 ---------------------------------------------------------------------------------
 (3) _Ssd_setState                                         4     1      3    7737
                                              7 BANK0      4     1      3
                             ___bmul
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (4) _Led_setState                                         7     4      3    1489
                                              7 BANK0      7     4      3
                             ___bmul (ARG)
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (5) ___lwdiv                                              7     3      4     618
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (2) Absolute function(Fake)                               2     0      2       0
 ---------------------------------------------------------------------------------
 (1) _Scheduler_addTask                                    7     3      4    8694
                                              3 BANK0      7     3      4
                             ___bmul
 ---------------------------------------------------------------------------------
 (1) _Led_init                                             4     2      2    2774
                                             22 BANK0      4     2      2
                    _initLedHardware
 ---------------------------------------------------------------------------------
 (2) _initLedHardware                                      3     3      0    2272
                                             19 BANK0      3     3      0
                       _Gpio_initPin
 ---------------------------------------------------------------------------------
 (1) _Heater_init                                         14     6      8   12024
                                             37 BANK0     14     6      8
                        _Eeprom_init
                        _Eeprom_read
                    _Eeprom_readPage
                       _Eeprom_write
                   _Eeprom_writePage
          _Scheduler_delaySoftwareMs
                             ___bmul
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               3     2      1    6119
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (2) _Scheduler_delaySoftwareMs                            8     4      4     295
                                              9 BANK0      8     4      4
          _Scheduler_delaySoftwareUs
 ---------------------------------------------------------------------------------
 (1) _Scheduler_delaySoftwareUs                            9     5      4     197
                                              0 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (2) _Eeprom_writePage                                     7     5      2     286
                                              3 BANK0      7     5      2
            _I2c_repeatedStartMaster
                    _I2c_startMaster
                     _I2c_stopMaster
                    _I2c_writeMaster
                             ___bmul (ARG)
 ---------------------------------------------------------------------------------
 (3) _Eeprom_write                                         2     1      1     294
                                              3 BANK0      2     1      1
            _I2c_repeatedStartMaster
                    _I2c_startMaster
                     _I2c_stopMaster
                    _I2c_writeMaster
                             ___bmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _Eeprom_readPage                                      7     5      2     286
                                              3 BANK0      7     5      2
                            _I2c_ack
                           _I2c_read
            _I2c_repeatedStartMaster
                    _I2c_startMaster
                     _I2c_stopMaster
                    _I2c_writeMaster
                             ___bmul (ARG)
 ---------------------------------------------------------------------------------
 (3) _I2c_ack                                              0     0      0       0
                     _I2c_waitMaster
 ---------------------------------------------------------------------------------
 (2) _Eeprom_read                                          2     2      0      67
                                              1 BANK0      2     2      0
                           _I2c_nack
                           _I2c_read
            _I2c_repeatedStartMaster
                    _I2c_startMaster
                     _I2c_stopMaster
                    _I2c_writeMaster
 ---------------------------------------------------------------------------------
 (4) _I2c_writeMaster                                      1     1      0      22
                                              0 BANK0      1     1      0
                     _I2c_waitMaster
 ---------------------------------------------------------------------------------
 (4) _I2c_stopMaster                                       0     0      0       0
                     _I2c_waitMaster
 ---------------------------------------------------------------------------------
 (4) _I2c_startMaster                                      0     0      0       0
                     _I2c_waitMaster
 ---------------------------------------------------------------------------------
 (4) _I2c_repeatedStartMaster                              0     0      0       0
                     _I2c_waitMaster
 ---------------------------------------------------------------------------------
 (3) _I2c_read                                             0     0      0       0
                     _I2c_waitMaster
 ---------------------------------------------------------------------------------
 (3) _I2c_nack                                             0     0      0       0
                     _I2c_waitMaster
 ---------------------------------------------------------------------------------
 (5) _I2c_waitMaster                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Eeprom_init                                          0     0      0    2944
                       _Gpio_initPin
                     _I2c_initMaster
 ---------------------------------------------------------------------------------
 (3) _I2c_initMaster                                       4     0      4     716
                                             33 BANK0      4     0      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (4) ___lldiv                                             14     6      8     618
                                             19 BANK0     14     6      8
                       _Adc_getState (ARG)
                             ___bmul (ARG)
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (3) _Gpio_initPin                                        16    13      3    2228
                                              3 BANK0     16    13      3
                             ___bmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _SysTick_Handler                                      4     4      0     402
                                              6 COMMON     4     4      0
                   _Scheduler_update
 ---------------------------------------------------------------------------------
 (7) _Scheduler_update                                     3     3      0     402
                                              3 COMMON     3     3      0
                           i1___bmul
 ---------------------------------------------------------------------------------
 (8) i1___bmul                                             3     2      1     201
                                              0 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Heater_init
     _Eeprom_init
       _Gpio_initPin
         ___bmul (ARG)
       _I2c_initMaster
         ___lldiv
           _Adc_getState (ARG)
             ___bmul (ARG)
           ___bmul (ARG)
           ___lmul (ARG)
             _Adc_getState (ARG)
               ___bmul (ARG)
             ___bmul (ARG)
     _Eeprom_read
       _I2c_nack
         _I2c_waitMaster
       _I2c_read
         _I2c_waitMaster
       _I2c_repeatedStartMaster
         _I2c_waitMaster
       _I2c_startMaster
         _I2c_waitMaster
       _I2c_stopMaster
         _I2c_waitMaster
       _I2c_writeMaster
         _I2c_waitMaster
     _Eeprom_readPage
       _I2c_ack
         _I2c_waitMaster
       _I2c_read
         _I2c_waitMaster
       _I2c_repeatedStartMaster
         _I2c_waitMaster
       _I2c_startMaster
         _I2c_waitMaster
       _I2c_stopMaster
         _I2c_waitMaster
       _I2c_writeMaster
         _I2c_waitMaster
       ___bmul (ARG)
     _Eeprom_write
       _I2c_repeatedStartMaster
         _I2c_waitMaster
       _I2c_startMaster
         _I2c_waitMaster
       _I2c_stopMaster
         _I2c_waitMaster
       _I2c_writeMaster
         _I2c_waitMaster
       ___bmul (ARG)
     _Eeprom_writePage
       _I2c_repeatedStartMaster
         _I2c_waitMaster
       _I2c_startMaster
         _I2c_waitMaster
       _I2c_stopMaster
         _I2c_waitMaster
       _I2c_writeMaster
         _I2c_waitMaster
       ___bmul (ARG)
     _Scheduler_delaySoftwareMs
       _Scheduler_delaySoftwareUs
     ___bmul
   _Led_init
     _initLedHardware
       _Gpio_initPin
         ___bmul (ARG)
   _Scheduler_addTask
     ___bmul
   _Scheduler_delaySoftwareUs
   _Scheduler_dispatchTasks
     Absolute function(Fake) *
     _Heater_update *
       _Eeprom_write
         _I2c_repeatedStartMaster
           _I2c_waitMaster
         _I2c_startMaster
           _I2c_waitMaster
         _I2c_stopMaster
           _I2c_waitMaster
         _I2c_writeMaster
           _I2c_waitMaster
         ___bmul (ARG)
       _Led_setState
         ___bmul (ARG)
         ___lwdiv (ARG)
       _Ssd_setState
         ___bmul
         ___lwdiv
       _Ssd_setSymbol
         ___awdiv (ARG)
           ___bmul (ARG)
         ___awmod (ARG)
           ___awdiv (ARG)
             ___bmul (ARG)
           ___bmul (ARG)
         ___bmul (ARG)
       _Switch_getState
         ___bmul
       _Tempctrl_setState
         ___bmul
       _Tempsnsr_getState
         ___bmul
       ___awdiv
         ___bmul (ARG)
       ___awmod
         ___awdiv (ARG)
           ___bmul (ARG)
         ___bmul (ARG)
       ___bmul
     _Led_update *
       ___bmul (ARG)
       _setLedHardwareState (ARG)
         _Gpio_setPinState
           ___bmul (ARG)
     _Scheduler_deleteTask *
       ___bmul
     _Scheduler_goToSleep *
       _Scheduler_sleepHardware
     _Scheduler_reportStatus *
       _Scheduler_displayError
         _Led_setState
           ___bmul (ARG)
           ___lwdiv (ARG)
     _Ssd_update *
       ___bmul
       _setSsdHardwareState
         _Gpio_setPinState
           ___bmul (ARG)
         ___bmul
       _setSsdHardwareSymbol
         _Gpio_setPortState
           ___bmul (ARG)
         ___bmul
     _Switch_update *
       ___bmul
       _getSwitchHardwareState
         _Gpio_getPinState
           ___bmul (ARG)
         ___bmul
     _Tempctrl_update *
       ___bmul
       _setTempctrlHardwareState
         _Gpio_setPinState
           ___bmul (ARG)
         ___bmul
     _Tempsnsr_update *
       ___bmul
       _getAvgTemp
         ___bmul
         ___lldiv
           _Adc_getState (ARG)
             ___bmul (ARG)
           ___bmul (ARG)
           ___lmul (ARG)
             _Adc_getState (ARG)
               ___bmul (ARG)
             ___bmul (ARG)
       _getTempsnsrHarwareState
         _Adc_getState
           ___bmul (ARG)
         ___bmul
         ___lldiv
           _Adc_getState (ARG)
             ___bmul (ARG)
           ___bmul (ARG)
           ___lmul (ARG)
             _Adc_getState (ARG)
               ___bmul (ARG)
             ___bmul (ARG)
         ___lmul
           _Adc_getState (ARG)
             ___bmul (ARG)
           ___bmul (ARG)
     ___bmul *
   _Scheduler_init
     _Scheduler_deleteTask
       ___bmul
   _Scheduler_start
     _Scheduler_initSysTick
       _Timer_init
         _Timer0_init
           ___bmul
         _Timer1_init
           ___wmul
   _Ssd_init
     ___bmul
     _initSsdHardware
       _Gpio_initPin
         ___bmul (ARG)
       ___bmul
   _Switch_init
     ___bmul
     _initSwitchHardware
       _Gpio_initPin
         ___bmul (ARG)
       ___bmul
   _Tempctrl_init
     ___bmul
     _initTempctrlHardware
       _Gpio_initPin
         ___bmul (ARG)
       ___bmul
   _Tempsnsr_init
     ___bmul
     _initTempsnsrHardware
       _Adc_init
       _Gpio_initPin
         ___bmul (ARG)
       ___bmul

 _SysTick_Handler (ROOT)
   _Scheduler_update
     i1___bmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0      31       9       51.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0      3E      11       64.6%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0      48       7       90.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     3C      4B       5       93.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      A       A       1       71.4%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0     10C      12        0.0%
ABS                  0      0     10C       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Fri Apr 09 15:39:17 2021

           __end_of_Tempsnsr_update 1800                        _Adc_getState 18E8  
                   _initSsdHardware 140E  __size_of_Scheduler_delaySoftwareMs 003B  
__size_of_Scheduler_delaySoftwareUs 0039                        Led_update@id 0053  
              __size_of_Switch_init 0060                                   pc 0002  
                    ___bmul@product 0021             Tempctrl_update@paramter 004D  
                                l70 0003                                  l62 07FF  
                                l82 1C6C                                  l91 1BBD  
                                l67 19C1                        ___awdiv@sign 0028  
          setSsdHardwareState@state 002E                                  _sw 0190  
                                fsr 0004            __size_of_SysTick_Handler 0015  
               ___wmul@multiplicand 0022           ??_Scheduler_sleepHardware 0020  
          __end_of_Scheduler_update 158D                    ?_initLedHardware 0070  
        ??_setTempctrlHardwareState 002F                      ??_Led_setState 002A  
                               l200 1756                                 l120 186B  
            setSsdHardwareSymbol@id 002E                                 l113 161D  
                               l210 1133                                 l106 19E3  
                               l203 1A7D                                 l131 1958  
                               l124 1011                                 l117 1336  
                               l301 196F                                 l206 1B55  
                               l304 1A55                                 l232 08F3  
                               l321 18FC                                 l241 0CF1  
                               l146 16B1                                 l315 185F  
                               l172 1AF9                                 l244 1BF7  
                               l236 0C46                                 l252 1479  
                               l342 0836                                 l406 0FFF  
                               l502 1CEB                                 l262 1C31  
                               l318 18F0                                 l430 051C  
                               l166 09B5                                 l351 1E58  
                               l159 1196                                 l247 192A  
                               l415 019A                                 l239 0CB9  
                               l360 1D3D                                 l192 1071  
                               l345 1B64                                 l169 1E49  
                               l505 1AA5                                 l433 067B  
                               l530 1941                                 l451 186C  
                               l363 1D72                                 l179 1EEE  
                               l259 1FFF                                 l427 048B  
                               l460 183E                                 l372 10D2  
                               l348 1B84                                 l508 1B27  
                               l428 04DD                                 l524 11FC  
                               l357 1E96                                 l533 1F46  
                               l702 1264                                 l454 1878  
                               l366 1080                                 l542 0B9C  
                               l463 1854                                 l527 1A07  
                               l448 1ACF                                 l472 1992  
                               l481 1888                                 l457 1849  
                               l289 1CAA                                 l561 0A93  
                               l466 197C                                 l475 19A2  
                               l539 0B9C                                 l580 13A1  
                               l564 17CF                                 l572 1D2E  
                               l469 1987                                 l478 1898  
                               l566 17FF                                 l575 14FE  
                               l832 1FA1                                 l680 1E00  
                               l569 18AA                                 l666 1A16  
                               l499 140D                                 l819 12CD  
                               l692 1913                                 l668 1A2E  
                               l938 1DB8                                 _led 00B9  
                               _ssd 019F                                 fsr0 0004  
                               indf 0000                        ___awmod@sign 0030  
            __size_of_Switch_update 00A5                    fp__Switch_update 005D  
                   __end_of_I2c_ack 1899             __end_of_Eeprom_readPage 10D3  
                              l2200 1CAE                                l2202 1CB2  
                              l2210 1B01                                l3010 0743  
                              l3002 067C                                l2204 1A81  
                              l2212 1959                                l2140 1A0C  
                              l2220 1A50                                l2300 1C70  
                              l3020 079A                                l3012 0754  
                              l3004 071E                                l2134 186C  
                              l2214 1969                                l2142 1A10  
                              l2222 1A51                                l2302 1C71  
                              l3030 07E3                                l3022 07AC  
                              l3014 0765                                l3006 072D  
                              l2136 1872                                l2400 1997  
                              l2232 183F                                l2240 1973  
                              l2160 190B                                l2152 1900  
                              l2320 19B6                                l2208 1AFD  
                              l2144 1A1D                                l2224 1A52  
                              l2216 1A2F                                l2304 1C84  
                              l3024 07BE                                l3016 0776  
                              l3008 0732                                l2330 13A5  
                              l2410 187E                                l2402 199A  
                              l2234 1844                                l2250 184F  
                              l2242 1978                                l2162 190D  
                              l2154 1901                                l2170 1D77  
                              l2322 1E9A                                l2226 18E8  
                              l2146 1A24                                l2138 1A08  
                              l2218 1A4C                                l3026 07CE  
                              l3018 0788                                l2332 13AB  
                              l2412 1883                                l2404 199F  
                              l2236 1834                                l2244 1980  
                              l2164 1912                                l2156 1905  
                              l2180 1D8F                                l2172 1D7D  
                              l2420 189C                                l2500 12C4  
                              l2324 1E9F                                l2316 19A6  
                              l2340 10D6                                l2228 18F4  
                              l2260 1DE7                                l2252 1DB9  
                              l2148 1A2A                                l2308 1C97  
                              l3028 07DE                                l2270 1212  
                              l2238 1839                                l2414 1889  
                              l2158 1909                                l2182 1DA0  
                              l2174 1D80                                l2190 1DB4  
                              l2502 12C9                                l2510 1F4E  
                              l2326 1EC4                                l2318 19AB  
                              l2350 1130                                l2342 1101  
                              l2430 0AED                                l2262 1DF8  
                              l2254 1DC3                                l2336 13B2  
                              l2280 123E                                l2272 121B  
                              l2408 1879                                l2248 184A  
                              l2416 188E                                l2184 1DA6  
                              l2176 1D87                                l2168 1D73  
                              l2360 1A59                                l2424 192E  
                              l2520 1F64                                l2512 1F53  
                              l2328 1EC9                                l2432 0AF2  
                              l2256 1DC7                                l2600 16B8  
                              l2338 13FB                                l2282 124C  
                              l2274 121F                                l2266 11FD  
                              l2418 1893                                l2186 1DA7  
                              l2178 1D8B                                l2194 1E04  
                              l2362 1A7A                                l2530 1F80  
                              l2522 1F67                                l2514 1F55  
                              l2506 1F47                                l2370 1FD3  
                              l2434 0B44                                l2426 0A97  
                              l2450 1344                                l2442 133A  
                              l2258 1DDE                                l2610 1746  
                              l2602 16CA                                l3082 1C9F  
                              l2284 124D                                l2276 1223  
                              l2268 120F                                l2292 1B85  
                              l2188 1DAE                                l2196 1E15  
                              l2540 1F9D                                l2532 1F86  
                              l2524 1F6E                                l2516 1F59  
                              l2508 1F4A                                l2372 1FD8  
                              l2356 1132                                l2348 1103  
                              l2436 0B4A                                l2428 0A9C  
                              l2452 1372                                l2444 133A  
                              l2604 16DC                                l3084 066A  
                              l2700 0073                                l2620 143E  
                              l2612 1411                                l2380 1855  
                              l2286 1256                                l2278 122C  
                              l2382 1AA6                                l2390 1B59  
                              l2294 1B86                                l2550 1C33  
                              l2198 1E28                                l2470 1273  
                              l2462 1265                                l2534 1F8D  
                              l2526 1F72                                l2518 1F5E  
                              l2366 1FA5                                l2374 1BFB  
                              l2454 1378                                l2446 1342  
                              l2438 147D                                l2606 16E9  
                              l2710 0161                                l2702 008B  
                              l2630 0BBD                                l2622 1468  
                              l2614 143A                                l2288 125C  
                              l2384 1AA9                                l2392 1B5F  
                              l2296 1B8A                                l2552 1C40  
                              l2376 1BC1                                l2480 1288  
                              l2472 1277                                l2464 1268  
                              l2528 1F76                                l2536 1F93  
                              l2368 1FAA                                l2456 1381  
                              l2608 1711                                l2720 02F6  
                              l2712 01AF                                l2704 009D  
                              l2640 0CE1                                l2632 0BD3  
                              l2544 07EC                                l2624 1470  
                              l2386 1AAE                                l2642 0807  
                              l2394 1B6F                                l2650 1E53  
                              l2298 1B91                                l2378 1917  
                              l2490 12AB                                l2482 128B  
                              l2474 127C                                l2466 126C  
                              l2538 1F98                                l2554 12D1  
                              l2570 1949                                l2562 1000  
                              l2458 13A0                                l2730 0451  
                              l2722 030A                                l2714 01C3  
                              l2706 00F6                                l2634 0BED  
                              l2626 0B9D                                l2546 07FE  
                              l2388 1AB1                                l2644 0816  
                              l2396 1988                                l2660 1E84  
                              l2652 1E63                                l2548 1C32  
                              l2900 0E7C                                l2492 12B1  
                              l2484 1292                                l2476 1280  
                              l2468 1271                                l2572 194B  
                              l2564 1007                                l2740 050B  
                              l2732 0466                                l2724 0324  
                              l2716 01D7                                l2708 012F  
                              l2580 08F4                                l2636 0C38  
                              l2628 0BA3                                l2812 1015  
                              l2820 09DF                                l2646 0826  
                              l2398 198D                                l2670 1D5B  
                              l2662 1E91                                l2654 1E6B  
                              l2910 0ED2                                l2902 0E8F  
                              l2494 12B2                                l2486 1296  
                              l2478 1282                                l2558 12E4  
                              l2574 1950                                l2566 100B  
                              l2742 0541                                l2734 04A5  
                              l2726 0338                                l2718 02DC  
                              l2590 095A                                l2582 08FA  
                              l2638 0C63                                l2822 09F2  
                              l2814 09B9                                l2672 1D65  
                              l2664 1D32                                l2680 1075  
                              l2656 1E70                                l2648 1E4D  
                              l2920 0F22                                l2912 0EE2  
                              l2904 0EA2                                l2496 12B9  
                              l2488 129A                                l2576 1957  
                              l2568 1942                                l2744 0580  
                              l2736 04BA                                l2728 034A  
                              l2760 19FD                                l2592 097D  
                              l2584 0912                                l2840 119A  
                              l2832 0A3B                                l2824 0A05  
                              l2816 09B9                                l2674 1D6A  
                              l2666 1D38                                l2690 10B3  
                              l2682 107B                                l2658 1E7C  
                              l2930 0F7D                                l2914 0EF2  
                              l2906 0EB2                                l2578 1AD3  
                              l2850 1181                                l2842 1137  
                              l2498 12BF                                l2770 1799  
                              l2738 04F7                                l2594 098A  
                              l2586 0927                                l2754 1EF2  
                              l2762 1CEF                                l2834 0A4E  
                              l2826 0A1D                                l2818 09CC  
                              l2676 1D6F                                l2668 1D48  
                              l2692 10B8                                l2684 108B  
                              l2940 0FE4                                l2932 0F8C  
                              l2916 0F02                                l2908 0EC2  
                              l2860 0CFA                                l2852 1190  
                              l2844 1158                                l2772 17AE  
                              l2764 1757                                l2748 0653  
                              l2756 19E4                                l2588 093E  
                              l2596 1B2B                                l2836 0A54  
                              l2694 10C0                                l2686 109E  
                              l2934 0FA0                                l2926 0F42  
                              l2918 0F12                                l2870 0D5B  
                              l2862 0D0F                                l2846 1165  
                              l2774 17E3                                l2766 175D  
                              l2598 16B2                                l2758 19EA  
                              l2950 19CE                                l2942 19C2  
                              l2854 083A                                l2838 0A5D  
                              l2696 10CD                                l2688 10A3  
                              l2936 0FB9                                l2928 0F6E  
                              l2880 0DC6                                l2872 0D6E  
                              l2864 0D22                                l2856 0CF5  
                              l2848 1172                                l2768 1788  
                              l2952 19D6                                l2938 0FD5  
                              l2890 0E1D                                l2882 0DD4  
                              l2874 0D81                                l2866 0D35  
                              l2858 0CF5                                l2962 1594  
                              l2698 006C                                l2954 19DF  
                              l2892 0E30                                l2884 0DE7  
                              l2876 0D94                                l2868 0D48  
                              l2972 15C2                                l2956 1590  
                              l2948 19C8                                l2894 0E43  
                              l2886 0DF9                                l2878 0DA2  
                              l2966 15A7                                l2990 1696  
                              l2896 0E56                                l2888 0E0A  
                              l2968 15B8                                l2992 169E  
                              l2984 1624                                l2976 1860  
                              l2898 0E69                                l2994 16A7  
                              l2986 1636                                l2978 161E  
                              l2996 16AC                                l2988 168E  
                              u2020 13AB                                u2100 1FD8  
                              u2021 13AA                                u2005 1ECC  
                              u2101 1FD7                                u2030 13B1  
                              u2031 13B0                                u2015 1EDF  
                              u2120 1B6F                                u2200 1277  
                              u2121 1B6E                                u2201 1276  
                              u2130 1997                                u2210 1288  
                              u2114 1C10                                u2131 1996  
                              u2211 1287                                u2115 1C0E  
                              u2044 13B8                                u2300 1F59  
                              u2140 0A9C                                u3100 1636  
                              u2045 13B6                                u3005 1168  
                              u2301 1F58                                u2141 0A9B  
                              u3101 1635                                u2054 13D9  
                              u3030 0F6E                                u2230 129A  
                              u2310 1F64                                u2070 1101  
                              u2150 0AF2                                u3110 168E  
                              u2055 13D7                                u3031 0F6D  
                              u3015 1175                                u2231 1299  
                              u2311 1F63                                u2071 1100  
                              u2151 0AF1                                u3111 168D  
                              u3040 0F8C                                u2400 12E3  
                              u2080 1130                                u2160 0B4A  
                              u3120 16A7                                u2065 13FE  
                              u3041 0F8B                                u3025 1184  
                              u2225 128C                                u2401 12E2  
                              u2081 112F                                u2161 0B49  
                              u3121 16A6                                u3050 0FA0  
                              u2250 12AB                                u2330 1F76  
                              u2410 1007                                u2090 1FAA  
                              u3051 0F9F                                u2251 12AA  
                              u2331 1F75                                u2411 1006  
                              u2091 1FA9                                u2171 1364  
                              u2340 1F80                                u2420 1949  
                              u2180 1381                                u2172 136B  
                              u2500 093E                                u3060 19DF  
                              u1620 1A2A                                u2245 129B  
                              u2341 1F7F                                u2325 1F68  
                              u2421 1948                                u2181 1380  
                              u2173 1372                                u2501 093D  
                              u3061 19DE                                u1621 1A29  
                              u1605 1A17                                u1630 1905  
                              u3070 15A6                                u1710 1DB4  
                              u2270 12BF                                u2190 126C  
                              u2430 1957                                u1631 1904  
                              u3071 15A5                                u1711 1DB3  
                              u2271 12BE                                u2255 12A7  
                              u2191 126B                                u2431 1956  
                              u1615 1A1E                                u1640 1912  
                              u3080 15B8                                u2280 12C4  
                              u2360 1F93                                u1800 1DC7  
                              u2600 16CA                                u1641 1911  
                              u3081 15B7                                u1705 1DA8  
                              u2281 12C3                                u2265 12B3  
                              u2361 1F92                                u2345 1F7C  
                              u1801 1DC6                                u2601 16C9  
                              u1570 1872                                u3090 15C1  
                              u1650 1D7D                                u2370 1F98  
                              u2290 1F4E                                u2610 16E9  
                              u1571 1871                                u3091 15C0  
                              u1651 1D7C                                u2371 1F97  
                              u2355 1F87                                u2291 1F4D  
                              u1811 1DD0                                u2611 16E8  
                              u2515 0941                                u1580 1878  
                              u2700 1E63                                u2380 1C5E  
                              u1812 1DD7                                u2620 1711  
                              u1581 1877                                u2701 1E62  
                              u2445 1AD6                                u1725 1E09  
                              u1813 1DDE                                u2621 1710  
                              u2525 094F                                u1910 125C  
                              u2710 1E91                                u2390 1C6C  
                              u1670 1D8F                                u2470 0912  
                              u1590 1A10                                u2630 1479  
                              u1911 125B                                u2711 1E90  
                              u2391 1C6B                                u2455 1AEA  
                              u1671 1D8E                                u1735 1E3A  
                              u2535 095D                                u2471 0911  
                              u1591 1A0F                                u2631 1478  
                              _PIE1 008C                                u2720 1D48  
                              u1920 1B91                                u1744 1CB8  
                              u1840 1DF8                                u2800 02F6  
                              u2640 0BBD                                u1905 124E  
                              u2721 1D47                                u1921 1B90  
                              u2385 1C51                                u1665 1D81  
                              u1745 1CB6                                u1841 1DF7  
                              u1825 1DE0                                u2801 02F5  
                              u2545 096E                                u2465 08FD  
                              u2641 0BBC                                u1850 120F  
                              u2730 108B                                u1930 1BAF  
                              u2386 1C52                                u1690 1DA0  
                              u1754 1CD1                                u2810 0324  
                              u2650 0BED                                u1851 120E  
                              u2731 108A                                u2715 1E8D  
                              u2387 1C57                                u1691 1D9F  
                              u1755 1CCF                                u1835 1DE8  
                              u2811 0323                                u2555 0980  
                              u2651 0BEC                 Gpio_setPortState@id 002B  
                              u2740 10CD                                u1940 1BBD  
                              u2388 1C58                                u1764 1A97  
                              u1780 18F4                                u2820 0451  
                              u2580 09AA                                u2660 0C63  
                              u2741 10CC                                u1941 1BBC  
                              u2389 1C5D                                u1685 1D90  
                              u1765 1A95                                u1781 18F3  
                              u2821 0450                                u2581 09A8  
                              u2565 098D                                u2485 0915  
                              u2661 0C62                                u1870 1223  
                              u1790 1980                                u1950 19AB  
                              u1774 1AA1                                u2830 0466  
                              u2750 008B                                u2590 09AB  
                              u2670 0CA8                                u1871 1222  
                              u1791 197F                                u1935 1BA2  
                              u1695 1D9C                                u1951 19AA  
                              u1775 1A9F                                u2831 0465  
                              u2751 008A                                u2575 099B  
                              u2495 092A                                u2671 0CA6  
                              u1936 1BA3                                u1960 1E9F  
                              u2840 04A5                                u2760 00F6  
                              u2680 0CA9                                u1865 1214  
                              u2745 10C9                                u1937 1BA8  
                              u1961 1E9E                                u2841 04A4  
                              u2761 00F5                                u1890 123E  
                              u1938 1BA9                                u2850 04BA  
                              u2770 0161                                u2690 0CE1  
                              u1891 123D                                u1939 1BAE  
                              u2851 04B9                                u2771 0160  
                              u2691 0CE0                                u2860 04F7  
                              u2780 01AF                                u1885 1225  
                              u2861 04F6                                u2781 01AE  
                              u2765 00F2                                u1990 1EC9  
                              u2870 0541                                u2790 02DC  
                              u1895 123A                                u1991 1EC8  
                              u1975 1EA2                                u2871 0540  
                              u2791 02DB                                u2775 015D  
                              u2880 17AE                                u2960 0A5D  
                              u1985 1EB4                                u2881 17AD  
                              u2961 0A5C                                u2890 17E3  
                              i1l43 18DB                                u2891 17E2  
                              u2975 113C                                u2985 114D  
                              _PIR1 000C                                u2995 115B  
                  ?_I2c_writeMaster 0070                                _TMR0 0001  
                     ?_Gpio_initPin 0023                 __end_of_Heater_init 1000  
                              _main 067C                                _gpio 005C  
                              btemp 007E                                start 0012  
             Eeprom_readPage@buffer 0023               Eeprom_readPage@length 0024  
               __end_of_Eeprom_init 0837                 __end_of_Eeprom_read 1D73  
                 ___bmul@multiplier 0022                    ??_Scheduler_init 0024  
           Scheduler_addTask@period 0026                    __end_of_I2c_nack 1889  
                  __end_of_I2c_read 19A3                               ?_main 0070  
                   __end_of___awdiv 12CE                               _CCPR1 0015  
                   __end_of___awmod 1FA2                     __end_of___lldiv 1265  
                   ___awdiv@divisor 0023                               _T1CON 0010  
                   __end_of___lwdiv 1DB9                               i1l137 1556  
                             i1l139 158C                               i1l692 18D2  
                   ___awdiv@counter 0027            __size_of_Switch_getState 0028  
                             _PORTA 0005                               _PORTB 0006  
                             _PORTC 0007                               _PORTD 0008  
                             _PORTE 0009                 ___lmul@multiplicand 002A  
            ??_initTempctrlHardware 0033                  Ssd_update@paramter 004D  
                        _Led_update 08F4                               fpbase 0059  
                    ??_Gpio_initPin 0026                    __end_of_Adc_init 1860  
            Eeprom_readPage@address 0027                    __end_ofi1___bmul 18D3  
         ??_getTempsnsrHarwareState 0041                               pclath 000A  
                _initSwitchHardware 1B28                               status 0003  
                             wtemp0 007E             __end_of_initSsdHardware 147A  
                   Switch_update@id 004F             _Scheduler_dispatchTasks 161E  
        setSsdHardwareSymbol@symbol 002C                 ?_initSwitchHardware 0070  
                     _Switch_update 16B2                     __initialization 0015  
                  ??_I2c_initMaster 0045                __end_of_Eeprom_write 1B85  
                  __end_of_Led_init 1197                    ?_Tempsnsr_update 004D  
                      __end_of_main 07EC                  Led_setState@period 0028  
                  _Gpio_getPinState 1A7E            __end_of_Eeprom_writePage 1E97  
         __size_of_Gpio_setPinState 0041         __end_of_setSsdHardwareState 2000  
                 ??_Scheduler_start 0036                 _setLedHardwareState 1E97  
                            ??_main 005C                           ??_I2c_ack 0020  
  __size_of_I2c_repeatedStartMaster 000B                ??_initSwitchHardware 0033  
                 ??_SysTick_Handler 0076                    __end_of_Ssd_init 08F4  
                       _Heater_init 0CF2                              _ADCON0 001F  
                            _ADCON1 009F                   Timer_init@channel 002F  
                  ?_Eeprom_readPage 0023                              _ADRESH 001E  
                            _ADRESL 009E                    initSsdHardware@i 0033  
                  ___awdiv@dividend 0025                              i1l3000 18D6  
                            i1l2800 1515                              i1l2810 1586  
                            i1l2802 1527                              i1l2804 1568  
                            i1l2806 1577                              i1l2808 157D  
                            i1l2780 18C4                              i1l2782 18C8  
                            i1l2784 18CA                              i1l2776 18BF  
                            i1l2792 14FF                              i1l2786 18CC  
                            i1l2778 18C0                              i1l2788 18D1  
                            i1l2798 1503                              i1l2998 18D3  
                            _INTCON 000B        __end_of_Scheduler_deleteTask 1337  
              ?_setLedHardwareState 002E                              u290_20 18C4  
                            u290_21 18C3                              u291_20 18D1  
                            u291_21 18D0                              u292_20 1515  
                            u292_21 1514                              u293_20 1527  
                            u293_21 1526                              u294_20 1568  
                            u294_21 1567                              u295_20 1586  
                       _Eeprom_init 0807                              u295_21 1585  
                       _Eeprom_read 1D2F                 _Scheduler_goToSleep 1942  
             Gpio_setPortState@pins 0023                              _SSPADD 0093  
                            _SSPCON 0014                              _SSPBUF 0013  
                  _ssdSymbolPattern 01B7                    __end_of__fptable 006C  
             __end_of_Tempctrl_init 11FD                __end_of_Led_setState 1E4A  
                    ?_Switch_update 004D    Scheduler_delaySoftwareMs@msDelay 0029  
                  ??_I2c_waitMaster 0020               Tempctrl_init@gpioPinC 0037  
             Tempctrl_init@gpioPinH 0035                       ??_Timer0_init 0027  
                     ??_Timer1_init 002A               __end_of_Heater_update 067C  
                            ___bmul 18FD                              ___lmul 1DB9  
                            ___wmul 1A08                           ??___awdiv 0027  
                         ??___awmod 002F                           ??___lldiv 003B  
                         ??___lwdiv 0024                              _heater 00C9  
      __end_of_initTempsnsrHardware 1D2F     __end_of_getTempsnsrHarwareState 14FF  
                 Switch_getState@id 0024                          _Timer_init 1C6D  
              ?_Scheduler_goToSleep 0070                    ___awdiv@quotient 0029  
                   ___awmod@divisor 002B    __end_of_setTempctrlHardwareState 0B9D  
             Scheduler_update@index 0074                     ___awmod@counter 002F  
                            fptable 0054                          Ssd_init@id 003A  
                            fptotal 0010                          _Ssd_update 0B9D  
           ?_Scheduler_reportStatus 0070                              saved_w 007E  
                   Ssd_init@gpioIdC 0036                     Ssd_init@gpioIdD 0038  
                       ?_Led_update 004D                   ??_Switch_getState 0023  
             ??_setLedHardwareState 002F                           ?_I2c_nack 0070  
                         ?_I2c_read 0070             ??_Scheduler_initSysTick 0036  
         ??_Scheduler_dispatchTasks 0056               __end_of_Tempsnsr_init 0A94  
           __end_of__initialization 0050                    ??_I2c_stopMaster 0020  
          __size_of_Tempctrl_update 0024                  fp__Tempctrl_update 0063  
                  ?_initSsdHardware 0070                     _Ssd_update$1933 0051  
                   _Ssd_update$1934 0052                 ___bmul@multiplicand 0020  
                Timer0_init@channel 0025               Scheduler_addTask@task 0027  
                    __pcstackCOMMON 0070                        __pidataBANK0 182A  
                      __pidataBANK3 1820    Scheduler_delaySoftwareUs@usDelay 0020  
             ??_Scheduler_goToSleep 0020                __end_of_Gpio_initPin 140E  
               __end_of_Timer0_init 1970                 __end_of_Timer1_init 1A56  
                         ?_Adc_init 0070                           ?i1___bmul 0070  
                 ?_Scheduler_update 0070     Scheduler_displayError@errorCode 002E  
                    getAvgTemp@temp 0047      __end_of_Scheduler_reportStatus 1012  
            I2c_initMaster@baudrate 0041                  ??_Scheduler_update 0073  
                 Switch_init@gpioId 0034        __end_of_setSsdHardwareSymbol 1C32  
               Tempsnsr_getState@id 0023               Gpio_setPinState@state 0024  
                  i1___bmul@product 0071                           ?_Led_init 0036  
                        __pbssBANK0 0066                          __pbssBANK1 00A0  
                        __pbssBANK2 0110                          __pbssBANK3 0190  
                        ??_I2c_nack 0020                          ??_I2c_read 0020  
                   ??_Switch_update 004F               __size_of_Eeprom_write 002F  
          __size_of_I2c_startMaster 000B                       ??_Switch_init 0036  
             __end_of_Ssd_setSymbol 192B               setLedHardwareState@id 0031  
                        __pmaintext 067C              initTempsnsrHardware@id 0033  
                   Gpio_initPin@pin 0023                          _getAvgTemp 1337  
                           ?___bmul 0020                             ?___lmul 0026  
                         ?_Ssd_init 0036                             ?___wmul 0020  
          ??_Scheduler_displayError 002E                          __pintentry 0004  
                           _CCP1CON 0017                    _Gpio_setPinState 1CAB  
               __size_of_Led_update 00C2                         ?_Timer_init 002C  
                    ___lmul@product 002F             Tempsnsr_update@paramter 004D  
                 initSsdHardware@id 0035            ??_getSwitchHardwareState 002A  
                        ??_Adc_init 0020                          ??i1___bmul 0071  
              _Scheduler_deleteTask 12CE           Scheduler_deleteTask@index 0023  
                Eeprom_read@address 0021             _I2c_repeatedStartMaster 1834  
                           _I2c_ack 1889              Tempctrl_setState@state 0023  
                       ?_Ssd_update 004D                     Tempctrl_init@id 0038  
            Gpio_setPortState@state 0024                        _Eeprom_write 1B56  
          __size_of_initLedHardware 002A                             _SSPCON2 0091  
                        ??_Led_init 0038                             _SSPSTAT 0094  
             __size_of_Led_setState 0049            __end_of_Gpio_getPinState 1AA6  
              _initTempsnsrHardware 1CEC                 Tempsnsr_init@gpioId 0034  
 __size_of_setTempctrlHardwareState 0109           ?_setTempctrlHardwareState 002E  
                   _Scheduler_start 1860               Switch_getState@buffer 0023  
                 Tempsnsr_update@id 0051                      Timer_init@mode 002C  
          __size_of_I2c_writeMaster 0018                         _Timer0_init 1959  
                       _Timer1_init 1A2F            ?_Scheduler_sleepHardware 0070  
                 ??_Tempctrl_update 004F                  Timer1_init@channel 0028  
                        ??_Ssd_init 003A                     __size_of___bmul 0017  
                           ___awdiv 1265                     __size_of___lmul 0048  
                           ___awmod 1F47                             ___lldiv 11FD  
                   __size_of___wmul 0027                     _SysTick_Handler 18D3  
                           ___lwdiv 1D73                  Gpio_setPinState@id 002D  
               __end_of_Switch_init 1072                   ?_Eeprom_writePage 0023  
             ?_Scheduler_deleteTask 0070          ?_Scheduler_delaySoftwareMs 0029  
        ?_Scheduler_delaySoftwareUs 0020                             __ptext1 09B6  
                           __ptext2 1CEC                             __ptext3 1855  
                           __ptext4 1197                             __ptext5 1EEF  
                           __ptext6 1012                             __ptext7 1B28  
                           __ptext8 0837                             __ptext9 140E  
             Heater_update@paramter 004D                  ??_Eeprom_writePage 0025  
                      _Led_setState 1E01                    ___awmod@dividend 002D  
                     ?_Ssd_setState 0027                        ?_Heater_init 0045  
               i1___bmul@multiplier 0072                  Led_update@paramter 004D  
                _Heater_update$1935 0052                  _Heater_update$1936 0054  
                _Heater_update$1937 0053                             clrloop0 1819  
     __size_of_initTempctrlHardware 0058                end_of_initialization 0050  
                   Heater_update@id 0055               ?_initTempsnsrHardware 0070  
                      ?_Eeprom_init 0070                        ?_Eeprom_read 0070  
               __size_of_Timer_init 003E                   initLedHardware@id 0035  
     setTempctrlHardwareState@state 002E          setTempctrlHardwareState@id 002F  
                   ___lldiv@divisor 0033                     ___lldiv@counter 0040  
               __size_of_Ssd_update 0155               __size_of_Gpio_initPin 006C  
              _setSsdHardwareSymbol 1BF8                         ?_getAvgTemp 0070  
                  Ssd_init@gpioPinC 0037                    Ssd_init@gpioPinD 0039  
            Heater_init@xTempctrlId 0049     __size_of_Scheduler_displayError 001F  
                 ??_I2c_startMaster 0020           ??_I2c_repeatedStartMaster 0020  
            Heater_init@xTempsnsrId 0048                initSwitchHardware@id 0033  
   __size_of_getSwitchHardwareState 0061                     _Switch_getState 1A56  
 __end_of_Scheduler_delaySoftwareMs 1C6D   __end_of_Scheduler_delaySoftwareUs 1BBE  
      _Scheduler_dispatchTasks$1932 0057        _Scheduler_dispatchTasks$1927 0059  
          __size_of_Tempsnsr_update 00A9                  fp__Tempsnsr_update 005A  
                    ??_Ssd_setState 002A                     Ssd_setSymbol@id 0032  
           __size_of_Scheduler_init 0022         __size_of_initSwitchHardware 002E  
      __size_of_setSsdHardwareState 005E                   Tempctrl_update@id 0050  
          ?_getTempsnsrHarwareState 0070                   _Tempsnsr_getState 1899  
                      ??_Led_update 004F             __end_of_Scheduler_start 186C  
                ?_Tempsnsr_getState 0070                        _Gpio_initPin 13A2  
                     Switch_init@id 0036      __size_of_Scheduler_initSysTick 0014  
                 ??_initLedHardware 0033       __end_of_Scheduler_initSysTick 0800  
   __end_of_Scheduler_sleepHardware 0004                   __size_of_I2c_nack 0010  
                 __size_of_I2c_read 001B                 ??_Tempsnsr_getState 0023  
           __end_of_SysTick_Handler 18E8            __size_of_Eeprom_readPage 0061  
                       _Switch_init 1012               ?_setSsdHardwareSymbol 002C  
            Scheduler_addTask@delay 0025                       ?_Adc_getState 0023  
            Scheduler_addTask@index 0028                   _Scheduler_addTask 158D  
      Scheduler_dispatchTasks@index 005A              initTempctrlHardware@id 0033  
                    __end_of___bmul 1914                  ?_Scheduler_addTask 0023  
            ??_Scheduler_deleteTask 0023                      __end_of___lmul 1E01  
                    __end_of___wmul 1A2F                   ??_I2c_writeMaster 0020  
                __end_of_Led_update 09B6             __size_of_I2c_initMaster 002A  
               ??_Scheduler_addTask 0027                      Adc_getState@id 0070  
                 __size_of_Adc_init 000B           __end_of_Tempsnsr_getState 18AB  
                 __size_ofi1___bmul 0015              __size_of_Tempctrl_init 0066  
               start_initialization 0015         __end_of_setLedHardwareState 1EEF  
    Scheduler_delaySoftwareUs@delay 0028                   Heater_init@aSsdId 004B  
                 Heater_init@bSsdId 004C                   Led_setState@state 0027  
            __size_of_Heater_update 0610                    fp__Heater_update 0060  
                 Heater_init@xLedId 004A              _Scheduler_displayError 19A3  
            ??_initTempsnsrHardware 0033                 __size_of_getAvgTemp 006B  
                   getAvgTemp@index 004B                 Gpio_getPinState@pin 0023  
                 _Tempctrl_setState 192B            __end_of_Gpio_setPinState 1CEC  
         __size_of_Scheduler_update 008E              _getSwitchHardwareState 10D3  
                 __size_of_Led_init 0063                  ?_Tempctrl_setState 0023  
                Switch_init@gpioPin 0035           __end_of_Scheduler_addTask 161E  
                  Timer_init@period 002D                      ??_Adc_getState 0026  
       __end_of_Scheduler_goToSleep 1959                Tempctrl_init@gpioIdC 0036  
              Tempctrl_init@gpioIdH 0034                       Heater_init@id 0052  
                 _Led_setState$1877 002B                            ??___bmul 0021  
               ??_Tempctrl_setState 0024             __end_of_Switch_getState 1A7E  
                          ??___lmul 002E                            ??___wmul 0024  
                        init_fetch0 18AB            __size_of_initSsdHardware 006C  
                       __pdataBANK0 005C                         __pdataBANK3 01B7  
                      ??_Timer_init 0031                   __size_of_Ssd_init 00BD  
            __size_of_Tempsnsr_init 00DE             __size_of_I2c_waitMaster 000D  
                          ?_I2c_ack 0070                        ??_Ssd_update 004F  
                         ___latbits 0002                       __pcstackBANK0 0020  
                 __size_of__fptable 0018            ?_Scheduler_dispatchTasks 0070  
         __end_of_Tempctrl_setState 1942                   ??_Tempsnsr_update 004F  
              __size_of_Heater_init 030E                   Timer0_init@period 0023  
                  ?_Scheduler_start 0070                   ?_Gpio_getPinState 0023  
                   _Tempctrl_update 19E4                     Led_init@gpioPin 0037  
                ??_Gpio_getPinState 0024                  __end_of_Timer_init 1CAB  
              __size_of_Eeprom_init 0030                __size_of_Eeprom_read 0044  
            ??_setSsdHardwareSymbol 002D               __end_of_Switch_update 1757  
                     _Tempctrl_init 1197                    ?_SysTick_Handler 0070  
              __end_of_Ssd_setState 1BF8                    ___lwdiv@dividend 0022  
          setLedHardwareState@state 002E                        ?_Timer0_init 0023  
                    Gpio_initPin@id 0032                        ?_Timer1_init 0026  
                __end_of_Ssd_update 0CF2                           __pfunctab 0054  
                  Gpio_initPin@mode 0024                       _Heater_update 006C  
                  Gpio_initPin@type 0025                            ?___awdiv 0023  
                          ?___awmod 002B                            ?___lldiv 0033  
                          ?___lwdiv 0020             __size_of_I2c_stopMaster 000B  
                 ??_Eeprom_readPage 0025                   Eeprom_read@buffer 0022  
       ??_Scheduler_delaySoftwareMs 002D         ??_Scheduler_delaySoftwareUs 0024  
                Tempsnsr_init@adcId 0036                  Tempsnsr_init@index 0039  
        __size_of_Tempsnsr_getState 0012                _Tempctrl_update$1938 004F  
                    _Scheduler_init 19C2    __size_of_Scheduler_sleepHardware 0001  
            __size_of_Ssd_setSymbol 0017                 Scheduler_init@index 0024  
                  ___lwdiv@quotient 0024                   Timer1_init@period 0026  
         __size_of_Eeprom_writePage 004D                            _I2c_nack 1879  
                          _I2c_read 1988                   interrupt_function 0004  
                         _scheduler 0110                       _Tempsnsr_init 09B6  
                    ___wmul@product 0024                   _Gpio_setPortState 1AFA  
                   _I2c_startMaster 183F                       fp__Led_update 0066  
                    ?_Tempctrl_init 0034                           clear_ram0 1818  
             I2c_writeMaster@buffer 0020          __size_of_Scheduler_addTask 0091  
                ?_Gpio_setPortState 0023               i1___bmul@multiplicand 0070  
               _setSsdHardwareState 1FA2                      ?_Heater_update 004D  
                      ??_getAvgTemp 0041        __end_of_initTempctrlHardware 1F47  
                    Ssd_setState@id 002A                    ?_Switch_getState 0070  
          ??_Scheduler_reportStatus 002F                 ??_Gpio_setPortState 0025  
                          _Adc_init 1855                            i1___bmul 18BE  
            __end_of_Scheduler_init 19E4                   ___wmul@multiplier 0020  
                    _I2c_initMaster 1AA6     __end_of_Scheduler_dispatchTasks 16B2  
         getTempsnsrHarwareState@id 0045                   ??_initSsdHardware 0033  
                  __size_of_I2c_ack 0010             __end_of_Tempctrl_update 1A08  
              ?_setSsdHardwareState 002E                Tempsnsr_init@gpioPin 0035  
                   _initLedHardware 1AD0                __end_of_Adc_getState 18FD  
        __size_of_Tempctrl_setState 0017            _setTempctrlHardwareState 0A94  
                 ___lmul@multiplier 0026                            _Led_init 1134  
                __end_of_getAvgTemp 13A2           __end_of_Gpio_setPortState 1B28  
                  _Scheduler_update 14FF                      ?_Tempsnsr_init 0034  
         _Scheduler_delaySoftwareMs 1C32           _Scheduler_delaySoftwareUs 1B85  
                  Heater_init@mSwId 0046                    Heater_init@pSwId 0047  
                Gpio_getPinState@id 0029                    Heater_init@sSwId 0045  
                  Heater_init@index 0050                          Adc_init@id 0070  
          getSwitchHardwareState@id 002A                     _I2c_writeMaster 1970  
  __size_of_getTempsnsrHarwareState 0085                     Timer_init@event 0030  
                      ?_Switch_init 0034                       _Ssd_setSymbol 1914  
                          _Ssd_init 0837                  Ssd_setState@period 0028  
                  __size_of___awdiv 0069                    __size_of___awmod 005B  
                  __size_of___lldiv 0068                    __size_of___lwdiv 0046  
            __end_of_I2c_initMaster 1AD0                      _I2c_waitMaster 186C  
                  Timer0_init@event 0026                     ?_Scheduler_init 0070  
                      getAvgTemp@id 0046          __end_of_initSwitchHardware 1B56  
               Gpio_setPinState@pin 0023                      Led_init@gpioId 0036  
                          __fptable 0054               ??_setSsdHardwareState 002F  
           ?_Scheduler_displayError 0070  Scheduler_initSysTick@systickPeriod 0034  
                   ___lwdiv@divisor 0020                     ___lwdiv@counter 0026  
                   Tempsnsr_init@id 003B                            __ptext10 1860  
                          __ptext11 07EC                            __ptext20 19E4  
                          __ptext12 1C6D                            __ptext21 006C  
                          __ptext13 1A2F                            __ptext30 1A7E  
                          __ptext22 16B2                            __ptext14 1A08  
                          __ptext31 1BF8                            __ptext23 1757  
                          __ptext15 1959                            __ptext40 1CAB  
                          __ptext32 1AFA                            __ptext24 147A  
                          __ptext16 19C2                            __ptext41 1F47  
                          __ptext33 1FA2                            __ptext25 1DB9  
                          __ptext17 161E                            __ptext50 158D  
                          __ptext42 1265                            __ptext34 1000  
                          __ptext26 18E8                            __ptext18 0B9D  
                          __ptext51 1134                            __ptext43 1899  
                          __ptext35 19A3                            __ptext27 1337  
                          __ptext19 08F4                            __ptext60 1889  
                          __ptext52 1AD0                            __ptext44 192B  
                          __ptext36 1942                            __ptext28 0A94  
                          __ptext61 1D2F                            __ptext53 0CF2  
                          __ptext45 1A56                            __ptext37 0003  
                          __ptext29 10D3                            __ptext70 1AA6  
                          __ptext62 1970                            __ptext54 18FD  
                          __ptext46 1914                            __ptext38 12CE  
                          __ptext71 11FD                            __ptext63 184A  
                          __ptext55 1C32                            __ptext47 1BBE  
                          __ptext39 1E97                            __ptext72 13A2  
                          __ptext64 183F                            __ptext56 1B85  
                          __ptext48 1E01                            __ptext73 18D3  
                          __ptext65 1834                            __ptext57 1E4A  
                          __ptext49 1D73                            __ptext74 14FF  
                          __ptext66 1988                            __ptext58 1B56  
                          __ptext75 18BE                            __ptext67 1879  
                          __ptext59 1072                            __ptext68 186C  
                          __ptext69 0807                 Eeprom_write@address 0024  
           __end_of_I2c_startMaster 184A             ?_getSwitchHardwareState 0070  
                     fp__Ssd_update 0069                    Eeprom_readPage@i 0028  
                      Timer_init@id 0033                     ??_Tempctrl_init 0038  
                 ?_Gpio_setPinState 0023               __size_of_Ssd_setState 003A  
                     __size_of_main 0170                    Timer1_init@event 0029  
           Eeprom_writePage@address 0027                  ??_Gpio_setPinState 0025  
                   ??_Heater_update 004F                      ?_Ssd_setSymbol 0031  
             _Scheduler_initSysTick 07EC            ?_I2c_repeatedStartMaster 0070  
                          _tempctrl 0066                            _tempsnsr 00A0  
                    _I2c_stopMaster 184A     __size_of_Scheduler_reportStatus 0012  
              __size_of_Timer0_init 0017                __size_of_Timer1_init 0027  
            __end_of_I2c_waitMaster 1879           Scheduler_addTask@paramter 0023  
                   ?_I2c_initMaster 0041             __end_of_initLedHardware 1AFA  
                   _Tempsnsr_update 1757       __size_of_Scheduler_deleteTask 0069  
    __end_of_Scheduler_displayError 19C2             _Scheduler_sleepHardware 0003  
                        _INTCONbits 000B      __end_of_getSwitchHardwareState 1134  
                  ?_Tempctrl_update 004D                        _Ssd_setState 1BBE  
                     ?_Eeprom_write 0023                            init_ram0 18AF  
                 Ssd_setState@state 0027                _initTempctrlHardware 1EEF  
                   ??_Tempsnsr_init 0038                     Timer0_init@mode 0070  
           __end_of_I2c_writeMaster 1988                    _Eeprom_writePage 1E4A  
        __size_of_Gpio_setPortState 002E                            intlevel1 0054  
     __size_of_initTempsnsrHardware 0043        __size_of_setLedHardwareState 0058  
               Tempctrl_setState@id 0024                    ___lldiv@dividend 0037  
                   _Eeprom_readPage 1072                  Eeprom_write@buffer 0023  
               Adc_getState@channel 0023                     Timer1_init@mode 0070  
               Ssd_setSymbol@symbol 0031    __size_of_Scheduler_dispatchTasks 0094  
            __end_of_I2c_stopMaster 1855              Eeprom_writePage@buffer 0023  
            Eeprom_writePage@length 0024               Switch_update@paramter 004D  
         __size_of_Gpio_getPinState 0028                     ?_I2c_waitMaster 0070  
                    Led_setState@id 002D        __size_of_Scheduler_goToSleep 0017  
             __size_of_Adc_getState 0015                        Ssd_update@id 0053  
                        _OPTION_REG 0081                       ?_Led_setState 0027  
                  ___lldiv@quotient 003C                       ??_Heater_init 004D  
                    ??_Eeprom_write 0024                   Eeprom_writePage@i 0028  
             ?_initTempctrlHardware 0070                    ?_I2c_startMaster 0070  
            _Scheduler_reportStatus 1000                       ??_Eeprom_init 0045  
                     ??_Eeprom_read 0021             Tempsnsr_init@adcChannel 0037  
   __end_of_I2c_repeatedStartMaster 183F                          Led_init@id 0039  
           _getTempsnsrHarwareState 147A                     ??_Ssd_setSymbol 0032  
            ?_Scheduler_initSysTick 0034            __size_of_Scheduler_start 000C  
                   ?_I2c_stopMaster 0070       __size_of_setSsdHardwareSymbol 003A  
             setSsdHardwareState@id 002F  
