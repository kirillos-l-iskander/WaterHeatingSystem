

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Fri Mar 12 17:07:42 2021

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK3,global,class=CODE,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
    11                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,noexec
    12                           	psect	inittext,global,class=CODE,delta=2
    13                           	psect	clrtext,global,class=CODE,delta=2
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	maintext,global,class=CODE,split=1,delta=2
    17                           	psect	text1,local,class=CODE,merge=1,delta=2
    18                           	psect	text2,local,class=CODE,merge=1,delta=2
    19                           	psect	text3,local,class=CODE,merge=1,delta=2
    20                           	psect	text4,local,class=CODE,merge=1,delta=2
    21                           	psect	text5,local,class=CODE,merge=1,delta=2
    22                           	psect	text6,local,class=CODE,merge=1,delta=2
    23                           	psect	text7,local,class=CODE,merge=1,delta=2
    24                           	psect	text8,local,class=CODE,merge=1,delta=2
    25                           	psect	text9,local,class=CODE,merge=1,delta=2
    26                           	psect	text10,local,class=CODE,merge=1,delta=2
    27                           	psect	text11,local,class=CODE,merge=1,delta=2
    28                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    29                           	psect	text13,local,class=CODE,merge=1,delta=2
    30                           	psect	text14,local,class=CODE,merge=1,delta=2
    31                           	psect	text15,local,class=CODE,merge=1,delta=2
    32                           	psect	text16,local,class=CODE,merge=1,delta=2
    33                           	psect	text17,local,class=CODE,merge=1,delta=2
    34                           	psect	text18,local,class=CODE,merge=1,delta=2
    35                           	psect	text19,local,class=CODE,merge=1,delta=2
    36                           	psect	text20,local,class=CODE,merge=1,delta=2
    37                           	psect	text21,local,class=CODE,merge=1,delta=2
    38                           	psect	text22,local,class=CODE,merge=1,delta=2
    39                           	psect	text23,local,class=CODE,merge=1,delta=2,group=1
    40                           	psect	text24,local,class=CODE,merge=1,delta=2
    41                           	psect	text25,local,class=CODE,merge=1,delta=2
    42                           	psect	text26,local,class=CODE,merge=1,delta=2
    43                           	psect	text27,local,class=CODE,merge=1,delta=2
    44                           	psect	text28,local,class=CODE,merge=1,delta=2
    45                           	psect	text29,local,class=CODE,merge=1,delta=2
    46                           	psect	text30,local,class=CODE,merge=1,delta=2
    47                           	psect	text31,local,class=CODE,merge=1,delta=2
    48                           	psect	text32,local,class=CODE,merge=1,delta=2
    49                           	psect	text33,local,class=CODE,merge=1,delta=2
    50                           	psect	text34,local,class=CODE,merge=1,delta=2
    51                           	psect	text35,local,class=CODE,merge=1,delta=2
    52                           	psect	text36,local,class=CODE,merge=1,delta=2
    53                           	psect	text37,local,class=CODE,merge=1,delta=2
    54                           	psect	text38,local,class=CODE,merge=1,delta=2,group=1
    55                           	psect	text39,local,class=CODE,merge=1,delta=2,group=1
    56                           	psect	text40,local,class=CODE,merge=1,delta=2
    57                           	psect	text41,local,class=CODE,merge=1,delta=2
    58                           	psect	text42,local,class=CODE,merge=1,delta=2
    59                           	psect	text43,local,class=CODE,merge=1,delta=2
    60                           	psect	text44,local,class=CODE,merge=1,delta=2
    61                           	psect	text45,local,class=CODE,merge=1,delta=2
    62                           	psect	text46,local,class=CODE,merge=1,delta=2,group=1
    63                           	psect	text47,local,class=CODE,merge=1,delta=2
    64                           	psect	text48,local,class=CODE,merge=1,delta=2
    65                           	psect	text49,local,class=CODE,merge=1,delta=2
    66                           	psect	text50,local,class=CODE,merge=1,delta=2
    67                           	psect	text51,local,class=CODE,merge=1,delta=2,group=1
    68                           	psect	text52,local,class=CODE,merge=1,delta=2
    69                           	psect	text53,local,class=CODE,merge=1,delta=2
    70                           	psect	text54,local,class=CODE,merge=1,delta=2
    71                           	psect	text55,local,class=CODE,merge=1,delta=2
    72                           	psect	text56,local,class=CODE,merge=1,delta=2
    73                           	psect	text57,local,class=CODE,merge=1,delta=2
    74                           	psect	text58,local,class=CODE,merge=1,delta=2
    75                           	psect	text59,local,class=CODE,merge=1,delta=2
    76                           	psect	text60,local,class=CODE,merge=1,delta=2
    77                           	psect	text61,local,class=CODE,merge=1,delta=2
    78                           	psect	text62,local,class=CODE,merge=1,delta=2
    79                           	psect	text63,local,class=CODE,merge=1,delta=2
    80                           	psect	text64,local,class=CODE,merge=1,delta=2
    81                           	psect	text65,local,class=CODE,merge=1,delta=2
    82                           	psect	text66,local,class=CODE,merge=1,delta=2
    83                           	psect	text67,local,class=CODE,merge=1,delta=2
    84                           	psect	text68,local,class=CODE,merge=1,delta=2,group=1
    85                           	psect	text69,local,class=CODE,merge=1,delta=2
    86                           	psect	text70,local,class=CODE,merge=1,delta=2
    87                           	psect	intentry,global,class=CODE,delta=2
    88                           	psect	text71,local,class=CODE,merge=1,delta=2
    89                           	psect	text72,local,class=CODE,merge=1,delta=2
    90                           	psect	functab,global,class=ENTRY,delta=2
    91                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    92                           	dabs	1,0x7E,2
    93  0000                     
    94                           ; Version 2.20
    95                           ; Generated 12/02/2020 GMT
    96                           ; 
    97                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    98                           ; All rights reserved.
    99                           ; 
   100                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   101                           ; 
   102                           ; Redistribution and use in source and binary forms, with or without modification, are
   103                           ; permitted provided that the following conditions are met:
   104                           ; 
   105                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   106                           ;        conditions and the following disclaimer.
   107                           ; 
   108                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   109                           ;        of conditions and the following disclaimer in the documentation and/or other
   110                           ;        materials provided with the distribution.
   111                           ; 
   112                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   113                           ;        software without specific prior written permission.
   114                           ; 
   115                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   116                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   117                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   118                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   119                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   120                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   121                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   122                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   123                           ; 
   124                           ; 
   125                           ; Code-generator required, PIC16F877A Definitions
   126                           ; 
   127                           ; SFR Addresses
   128  0000                     	;# 
   129  0001                     	;# 
   130  0002                     	;# 
   131  0003                     	;# 
   132  0004                     	;# 
   133  0005                     	;# 
   134  0006                     	;# 
   135  0007                     	;# 
   136  0008                     	;# 
   137  0009                     	;# 
   138  000A                     	;# 
   139  000B                     	;# 
   140  000C                     	;# 
   141  000D                     	;# 
   142  000E                     	;# 
   143  000E                     	;# 
   144  000F                     	;# 
   145  0010                     	;# 
   146  0011                     	;# 
   147  0012                     	;# 
   148  0013                     	;# 
   149  0014                     	;# 
   150  0015                     	;# 
   151  0015                     	;# 
   152  0016                     	;# 
   153  0017                     	;# 
   154  0018                     	;# 
   155  0019                     	;# 
   156  001A                     	;# 
   157  001B                     	;# 
   158  001B                     	;# 
   159  001C                     	;# 
   160  001D                     	;# 
   161  001E                     	;# 
   162  001F                     	;# 
   163  0081                     	;# 
   164  0085                     	;# 
   165  0086                     	;# 
   166  0087                     	;# 
   167  0088                     	;# 
   168  0089                     	;# 
   169  008C                     	;# 
   170  008D                     	;# 
   171  008E                     	;# 
   172  0091                     	;# 
   173  0092                     	;# 
   174  0093                     	;# 
   175  0094                     	;# 
   176  0098                     	;# 
   177  0099                     	;# 
   178  009C                     	;# 
   179  009D                     	;# 
   180  009E                     	;# 
   181  009F                     	;# 
   182  010C                     	;# 
   183  010D                     	;# 
   184  010E                     	;# 
   185  010F                     	;# 
   186  018C                     	;# 
   187  018D                     	;# 
   188  0000                     	;# 
   189  0001                     	;# 
   190  0002                     	;# 
   191  0003                     	;# 
   192  0004                     	;# 
   193  0005                     	;# 
   194  0006                     	;# 
   195  0007                     	;# 
   196  0008                     	;# 
   197  0009                     	;# 
   198  000A                     	;# 
   199  000B                     	;# 
   200  000C                     	;# 
   201  000D                     	;# 
   202  000E                     	;# 
   203  000E                     	;# 
   204  000F                     	;# 
   205  0010                     	;# 
   206  0011                     	;# 
   207  0012                     	;# 
   208  0013                     	;# 
   209  0014                     	;# 
   210  0015                     	;# 
   211  0015                     	;# 
   212  0016                     	;# 
   213  0017                     	;# 
   214  0018                     	;# 
   215  0019                     	;# 
   216  001A                     	;# 
   217  001B                     	;# 
   218  001B                     	;# 
   219  001C                     	;# 
   220  001D                     	;# 
   221  001E                     	;# 
   222  001F                     	;# 
   223  0081                     	;# 
   224  0085                     	;# 
   225  0086                     	;# 
   226  0087                     	;# 
   227  0088                     	;# 
   228  0089                     	;# 
   229  008C                     	;# 
   230  008D                     	;# 
   231  008E                     	;# 
   232  0091                     	;# 
   233  0092                     	;# 
   234  0093                     	;# 
   235  0094                     	;# 
   236  0098                     	;# 
   237  0099                     	;# 
   238  009C                     	;# 
   239  009D                     	;# 
   240  009E                     	;# 
   241  009F                     	;# 
   242  010C                     	;# 
   243  010D                     	;# 
   244  010E                     	;# 
   245  010F                     	;# 
   246  018C                     	;# 
   247  018D                     	;# 
   248  0000                     	;# 
   249  0001                     	;# 
   250  0002                     	;# 
   251  0003                     	;# 
   252  0004                     	;# 
   253  0005                     	;# 
   254  0006                     	;# 
   255  0007                     	;# 
   256  0008                     	;# 
   257  0009                     	;# 
   258  000A                     	;# 
   259  000B                     	;# 
   260  000C                     	;# 
   261  000D                     	;# 
   262  000E                     	;# 
   263  000E                     	;# 
   264  000F                     	;# 
   265  0010                     	;# 
   266  0011                     	;# 
   267  0012                     	;# 
   268  0013                     	;# 
   269  0014                     	;# 
   270  0015                     	;# 
   271  0015                     	;# 
   272  0016                     	;# 
   273  0017                     	;# 
   274  0018                     	;# 
   275  0019                     	;# 
   276  001A                     	;# 
   277  001B                     	;# 
   278  001B                     	;# 
   279  001C                     	;# 
   280  001D                     	;# 
   281  001E                     	;# 
   282  001F                     	;# 
   283  0081                     	;# 
   284  0085                     	;# 
   285  0086                     	;# 
   286  0087                     	;# 
   287  0088                     	;# 
   288  0089                     	;# 
   289  008C                     	;# 
   290  008D                     	;# 
   291  008E                     	;# 
   292  0091                     	;# 
   293  0092                     	;# 
   294  0093                     	;# 
   295  0094                     	;# 
   296  0098                     	;# 
   297  0099                     	;# 
   298  009C                     	;# 
   299  009D                     	;# 
   300  009E                     	;# 
   301  009F                     	;# 
   302  010C                     	;# 
   303  010D                     	;# 
   304  010E                     	;# 
   305  010F                     	;# 
   306  018C                     	;# 
   307  018D                     	;# 
   308  0000                     	;# 
   309  0001                     	;# 
   310  0002                     	;# 
   311  0003                     	;# 
   312  0004                     	;# 
   313  0005                     	;# 
   314  0006                     	;# 
   315  0007                     	;# 
   316  0008                     	;# 
   317  0009                     	;# 
   318  000A                     	;# 
   319  000B                     	;# 
   320  000C                     	;# 
   321  000D                     	;# 
   322  000E                     	;# 
   323  000E                     	;# 
   324  000F                     	;# 
   325  0010                     	;# 
   326  0011                     	;# 
   327  0012                     	;# 
   328  0013                     	;# 
   329  0014                     	;# 
   330  0015                     	;# 
   331  0015                     	;# 
   332  0016                     	;# 
   333  0017                     	;# 
   334  0018                     	;# 
   335  0019                     	;# 
   336  001A                     	;# 
   337  001B                     	;# 
   338  001B                     	;# 
   339  001C                     	;# 
   340  001D                     	;# 
   341  001E                     	;# 
   342  001F                     	;# 
   343  0081                     	;# 
   344  0085                     	;# 
   345  0086                     	;# 
   346  0087                     	;# 
   347  0088                     	;# 
   348  0089                     	;# 
   349  008C                     	;# 
   350  008D                     	;# 
   351  008E                     	;# 
   352  0091                     	;# 
   353  0092                     	;# 
   354  0093                     	;# 
   355  0094                     	;# 
   356  0098                     	;# 
   357  0099                     	;# 
   358  009C                     	;# 
   359  009D                     	;# 
   360  009E                     	;# 
   361  009F                     	;# 
   362  010C                     	;# 
   363  010D                     	;# 
   364  010E                     	;# 
   365  010F                     	;# 
   366  018C                     	;# 
   367  018D                     	;# 
   368  0000                     	;# 
   369  0001                     	;# 
   370  0002                     	;# 
   371  0003                     	;# 
   372  0004                     	;# 
   373  0005                     	;# 
   374  0006                     	;# 
   375  0007                     	;# 
   376  0008                     	;# 
   377  0009                     	;# 
   378  000A                     	;# 
   379  000B                     	;# 
   380  000C                     	;# 
   381  000D                     	;# 
   382  000E                     	;# 
   383  000E                     	;# 
   384  000F                     	;# 
   385  0010                     	;# 
   386  0011                     	;# 
   387  0012                     	;# 
   388  0013                     	;# 
   389  0014                     	;# 
   390  0015                     	;# 
   391  0015                     	;# 
   392  0016                     	;# 
   393  0017                     	;# 
   394  0018                     	;# 
   395  0019                     	;# 
   396  001A                     	;# 
   397  001B                     	;# 
   398  001B                     	;# 
   399  001C                     	;# 
   400  001D                     	;# 
   401  001E                     	;# 
   402  001F                     	;# 
   403  0081                     	;# 
   404  0085                     	;# 
   405  0086                     	;# 
   406  0087                     	;# 
   407  0088                     	;# 
   408  0089                     	;# 
   409  008C                     	;# 
   410  008D                     	;# 
   411  008E                     	;# 
   412  0091                     	;# 
   413  0092                     	;# 
   414  0093                     	;# 
   415  0094                     	;# 
   416  0098                     	;# 
   417  0099                     	;# 
   418  009C                     	;# 
   419  009D                     	;# 
   420  009E                     	;# 
   421  009F                     	;# 
   422  010C                     	;# 
   423  010D                     	;# 
   424  010E                     	;# 
   425  010F                     	;# 
   426  018C                     	;# 
   427  018D                     	;# 
   428  0000                     	;# 
   429  0001                     	;# 
   430  0002                     	;# 
   431  0003                     	;# 
   432  0004                     	;# 
   433  0005                     	;# 
   434  0006                     	;# 
   435  0007                     	;# 
   436  0008                     	;# 
   437  0009                     	;# 
   438  000A                     	;# 
   439  000B                     	;# 
   440  000C                     	;# 
   441  000D                     	;# 
   442  000E                     	;# 
   443  000E                     	;# 
   444  000F                     	;# 
   445  0010                     	;# 
   446  0011                     	;# 
   447  0012                     	;# 
   448  0013                     	;# 
   449  0014                     	;# 
   450  0015                     	;# 
   451  0015                     	;# 
   452  0016                     	;# 
   453  0017                     	;# 
   454  0018                     	;# 
   455  0019                     	;# 
   456  001A                     	;# 
   457  001B                     	;# 
   458  001B                     	;# 
   459  001C                     	;# 
   460  001D                     	;# 
   461  001E                     	;# 
   462  001F                     	;# 
   463  0081                     	;# 
   464  0085                     	;# 
   465  0086                     	;# 
   466  0087                     	;# 
   467  0088                     	;# 
   468  0089                     	;# 
   469  008C                     	;# 
   470  008D                     	;# 
   471  008E                     	;# 
   472  0091                     	;# 
   473  0092                     	;# 
   474  0093                     	;# 
   475  0094                     	;# 
   476  0098                     	;# 
   477  0099                     	;# 
   478  009C                     	;# 
   479  009D                     	;# 
   480  009E                     	;# 
   481  009F                     	;# 
   482  010C                     	;# 
   483  010D                     	;# 
   484  010E                     	;# 
   485  010F                     	;# 
   486  018C                     	;# 
   487  018D                     	;# 
   488  0000                     	;# 
   489  0001                     	;# 
   490  0002                     	;# 
   491  0003                     	;# 
   492  0004                     	;# 
   493  0005                     	;# 
   494  0006                     	;# 
   495  0007                     	;# 
   496  0008                     	;# 
   497  0009                     	;# 
   498  000A                     	;# 
   499  000B                     	;# 
   500  000C                     	;# 
   501  000D                     	;# 
   502  000E                     	;# 
   503  000E                     	;# 
   504  000F                     	;# 
   505  0010                     	;# 
   506  0011                     	;# 
   507  0012                     	;# 
   508  0013                     	;# 
   509  0014                     	;# 
   510  0015                     	;# 
   511  0015                     	;# 
   512  0016                     	;# 
   513  0017                     	;# 
   514  0018                     	;# 
   515  0019                     	;# 
   516  001A                     	;# 
   517  001B                     	;# 
   518  001B                     	;# 
   519  001C                     	;# 
   520  001D                     	;# 
   521  001E                     	;# 
   522  001F                     	;# 
   523  0081                     	;# 
   524  0085                     	;# 
   525  0086                     	;# 
   526  0087                     	;# 
   527  0088                     	;# 
   528  0089                     	;# 
   529  008C                     	;# 
   530  008D                     	;# 
   531  008E                     	;# 
   532  0091                     	;# 
   533  0092                     	;# 
   534  0093                     	;# 
   535  0094                     	;# 
   536  0098                     	;# 
   537  0099                     	;# 
   538  009C                     	;# 
   539  009D                     	;# 
   540  009E                     	;# 
   541  009F                     	;# 
   542  010C                     	;# 
   543  010D                     	;# 
   544  010E                     	;# 
   545  010F                     	;# 
   546  018C                     	;# 
   547  018D                     	;# 
   548  0000                     	;# 
   549  0001                     	;# 
   550  0002                     	;# 
   551  0003                     	;# 
   552  0004                     	;# 
   553  0005                     	;# 
   554  0006                     	;# 
   555  0007                     	;# 
   556  0008                     	;# 
   557  0009                     	;# 
   558  000A                     	;# 
   559  000B                     	;# 
   560  000C                     	;# 
   561  000D                     	;# 
   562  000E                     	;# 
   563  000E                     	;# 
   564  000F                     	;# 
   565  0010                     	;# 
   566  0011                     	;# 
   567  0012                     	;# 
   568  0013                     	;# 
   569  0014                     	;# 
   570  0015                     	;# 
   571  0015                     	;# 
   572  0016                     	;# 
   573  0017                     	;# 
   574  0018                     	;# 
   575  0019                     	;# 
   576  001A                     	;# 
   577  001B                     	;# 
   578  001B                     	;# 
   579  001C                     	;# 
   580  001D                     	;# 
   581  001E                     	;# 
   582  001F                     	;# 
   583  0081                     	;# 
   584  0085                     	;# 
   585  0086                     	;# 
   586  0087                     	;# 
   587  0088                     	;# 
   588  0089                     	;# 
   589  008C                     	;# 
   590  008D                     	;# 
   591  008E                     	;# 
   592  0091                     	;# 
   593  0092                     	;# 
   594  0093                     	;# 
   595  0094                     	;# 
   596  0098                     	;# 
   597  0099                     	;# 
   598  009C                     	;# 
   599  009D                     	;# 
   600  009E                     	;# 
   601  009F                     	;# 
   602  010C                     	;# 
   603  010D                     	;# 
   604  010E                     	;# 
   605  010F                     	;# 
   606  018C                     	;# 
   607  018D                     	;# 
   608  0000                     	;# 
   609  0001                     	;# 
   610  0002                     	;# 
   611  0003                     	;# 
   612  0004                     	;# 
   613  0005                     	;# 
   614  0006                     	;# 
   615  0007                     	;# 
   616  0008                     	;# 
   617  0009                     	;# 
   618  000A                     	;# 
   619  000B                     	;# 
   620  000C                     	;# 
   621  000D                     	;# 
   622  000E                     	;# 
   623  000E                     	;# 
   624  000F                     	;# 
   625  0010                     	;# 
   626  0011                     	;# 
   627  0012                     	;# 
   628  0013                     	;# 
   629  0014                     	;# 
   630  0015                     	;# 
   631  0015                     	;# 
   632  0016                     	;# 
   633  0017                     	;# 
   634  0018                     	;# 
   635  0019                     	;# 
   636  001A                     	;# 
   637  001B                     	;# 
   638  001B                     	;# 
   639  001C                     	;# 
   640  001D                     	;# 
   641  001E                     	;# 
   642  001F                     	;# 
   643  0081                     	;# 
   644  0085                     	;# 
   645  0086                     	;# 
   646  0087                     	;# 
   647  0088                     	;# 
   648  0089                     	;# 
   649  008C                     	;# 
   650  008D                     	;# 
   651  008E                     	;# 
   652  0091                     	;# 
   653  0092                     	;# 
   654  0093                     	;# 
   655  0094                     	;# 
   656  0098                     	;# 
   657  0099                     	;# 
   658  009C                     	;# 
   659  009D                     	;# 
   660  009E                     	;# 
   661  009F                     	;# 
   662  010C                     	;# 
   663  010D                     	;# 
   664  010E                     	;# 
   665  010F                     	;# 
   666  018C                     	;# 
   667  018D                     	;# 
   668  0000                     	;# 
   669  0001                     	;# 
   670  0002                     	;# 
   671  0003                     	;# 
   672  0004                     	;# 
   673  0005                     	;# 
   674  0006                     	;# 
   675  0007                     	;# 
   676  0008                     	;# 
   677  0009                     	;# 
   678  000A                     	;# 
   679  000B                     	;# 
   680  000C                     	;# 
   681  000D                     	;# 
   682  000E                     	;# 
   683  000E                     	;# 
   684  000F                     	;# 
   685  0010                     	;# 
   686  0011                     	;# 
   687  0012                     	;# 
   688  0013                     	;# 
   689  0014                     	;# 
   690  0015                     	;# 
   691  0015                     	;# 
   692  0016                     	;# 
   693  0017                     	;# 
   694  0018                     	;# 
   695  0019                     	;# 
   696  001A                     	;# 
   697  001B                     	;# 
   698  001B                     	;# 
   699  001C                     	;# 
   700  001D                     	;# 
   701  001E                     	;# 
   702  001F                     	;# 
   703  0081                     	;# 
   704  0085                     	;# 
   705  0086                     	;# 
   706  0087                     	;# 
   707  0088                     	;# 
   708  0089                     	;# 
   709  008C                     	;# 
   710  008D                     	;# 
   711  008E                     	;# 
   712  0091                     	;# 
   713  0092                     	;# 
   714  0093                     	;# 
   715  0094                     	;# 
   716  0098                     	;# 
   717  0099                     	;# 
   718  009C                     	;# 
   719  009D                     	;# 
   720  009E                     	;# 
   721  009F                     	;# 
   722  010C                     	;# 
   723  010D                     	;# 
   724  010E                     	;# 
   725  010F                     	;# 
   726  018C                     	;# 
   727  018D                     	;# 
   728  0000                     	;# 
   729  0001                     	;# 
   730  0002                     	;# 
   731  0003                     	;# 
   732  0004                     	;# 
   733  0005                     	;# 
   734  0006                     	;# 
   735  0007                     	;# 
   736  0008                     	;# 
   737  0009                     	;# 
   738  000A                     	;# 
   739  000B                     	;# 
   740  000C                     	;# 
   741  000D                     	;# 
   742  000E                     	;# 
   743  000E                     	;# 
   744  000F                     	;# 
   745  0010                     	;# 
   746  0011                     	;# 
   747  0012                     	;# 
   748  0013                     	;# 
   749  0014                     	;# 
   750  0015                     	;# 
   751  0015                     	;# 
   752  0016                     	;# 
   753  0017                     	;# 
   754  0018                     	;# 
   755  0019                     	;# 
   756  001A                     	;# 
   757  001B                     	;# 
   758  001B                     	;# 
   759  001C                     	;# 
   760  001D                     	;# 
   761  001E                     	;# 
   762  001F                     	;# 
   763  0081                     	;# 
   764  0085                     	;# 
   765  0086                     	;# 
   766  0087                     	;# 
   767  0088                     	;# 
   768  0089                     	;# 
   769  008C                     	;# 
   770  008D                     	;# 
   771  008E                     	;# 
   772  0091                     	;# 
   773  0092                     	;# 
   774  0093                     	;# 
   775  0094                     	;# 
   776  0098                     	;# 
   777  0099                     	;# 
   778  009C                     	;# 
   779  009D                     	;# 
   780  009E                     	;# 
   781  009F                     	;# 
   782  010C                     	;# 
   783  010D                     	;# 
   784  010E                     	;# 
   785  010F                     	;# 
   786  018C                     	;# 
   787  018D                     	;# 
   788  0000                     	;# 
   789  0001                     	;# 
   790  0002                     	;# 
   791  0003                     	;# 
   792  0004                     	;# 
   793  0005                     	;# 
   794  0006                     	;# 
   795  0007                     	;# 
   796  0008                     	;# 
   797  0009                     	;# 
   798  000A                     	;# 
   799  000B                     	;# 
   800  000C                     	;# 
   801  000D                     	;# 
   802  000E                     	;# 
   803  000E                     	;# 
   804  000F                     	;# 
   805  0010                     	;# 
   806  0011                     	;# 
   807  0012                     	;# 
   808  0013                     	;# 
   809  0014                     	;# 
   810  0015                     	;# 
   811  0015                     	;# 
   812  0016                     	;# 
   813  0017                     	;# 
   814  0018                     	;# 
   815  0019                     	;# 
   816  001A                     	;# 
   817  001B                     	;# 
   818  001B                     	;# 
   819  001C                     	;# 
   820  001D                     	;# 
   821  001E                     	;# 
   822  001F                     	;# 
   823  0081                     	;# 
   824  0085                     	;# 
   825  0086                     	;# 
   826  0087                     	;# 
   827  0088                     	;# 
   828  0089                     	;# 
   829  008C                     	;# 
   830  008D                     	;# 
   831  008E                     	;# 
   832  0091                     	;# 
   833  0092                     	;# 
   834  0093                     	;# 
   835  0094                     	;# 
   836  0098                     	;# 
   837  0099                     	;# 
   838  009C                     	;# 
   839  009D                     	;# 
   840  009E                     	;# 
   841  009F                     	;# 
   842  010C                     	;# 
   843  010D                     	;# 
   844  010E                     	;# 
   845  010F                     	;# 
   846  018C                     	;# 
   847  018D                     	;# 
   848  0000                     	;# 
   849  0001                     	;# 
   850  0002                     	;# 
   851  0003                     	;# 
   852  0004                     	;# 
   853  0005                     	;# 
   854  0006                     	;# 
   855  0007                     	;# 
   856  0008                     	;# 
   857  0009                     	;# 
   858  000A                     	;# 
   859  000B                     	;# 
   860  000C                     	;# 
   861  000D                     	;# 
   862  000E                     	;# 
   863  000E                     	;# 
   864  000F                     	;# 
   865  0010                     	;# 
   866  0011                     	;# 
   867  0012                     	;# 
   868  0013                     	;# 
   869  0014                     	;# 
   870  0015                     	;# 
   871  0015                     	;# 
   872  0016                     	;# 
   873  0017                     	;# 
   874  0018                     	;# 
   875  0019                     	;# 
   876  001A                     	;# 
   877  001B                     	;# 
   878  001B                     	;# 
   879  001C                     	;# 
   880  001D                     	;# 
   881  001E                     	;# 
   882  001F                     	;# 
   883  0081                     	;# 
   884  0085                     	;# 
   885  0086                     	;# 
   886  0087                     	;# 
   887  0088                     	;# 
   888  0089                     	;# 
   889  008C                     	;# 
   890  008D                     	;# 
   891  008E                     	;# 
   892  0091                     	;# 
   893  0092                     	;# 
   894  0093                     	;# 
   895  0094                     	;# 
   896  0098                     	;# 
   897  0099                     	;# 
   898  009C                     	;# 
   899  009D                     	;# 
   900  009E                     	;# 
   901  009F                     	;# 
   902  010C                     	;# 
   903  010D                     	;# 
   904  010E                     	;# 
   905  010F                     	;# 
   906  018C                     	;# 
   907  018D                     	;# 
   908  0000                     	;# 
   909  0001                     	;# 
   910  0002                     	;# 
   911  0003                     	;# 
   912  0004                     	;# 
   913  0005                     	;# 
   914  0006                     	;# 
   915  0007                     	;# 
   916  0008                     	;# 
   917  0009                     	;# 
   918  000A                     	;# 
   919  000B                     	;# 
   920  000C                     	;# 
   921  000D                     	;# 
   922  000E                     	;# 
   923  000E                     	;# 
   924  000F                     	;# 
   925  0010                     	;# 
   926  0011                     	;# 
   927  0012                     	;# 
   928  0013                     	;# 
   929  0014                     	;# 
   930  0015                     	;# 
   931  0015                     	;# 
   932  0016                     	;# 
   933  0017                     	;# 
   934  0018                     	;# 
   935  0019                     	;# 
   936  001A                     	;# 
   937  001B                     	;# 
   938  001B                     	;# 
   939  001C                     	;# 
   940  001D                     	;# 
   941  001E                     	;# 
   942  001F                     	;# 
   943  0081                     	;# 
   944  0085                     	;# 
   945  0086                     	;# 
   946  0087                     	;# 
   947  0088                     	;# 
   948  0089                     	;# 
   949  008C                     	;# 
   950  008D                     	;# 
   951  008E                     	;# 
   952  0091                     	;# 
   953  0092                     	;# 
   954  0093                     	;# 
   955  0094                     	;# 
   956  0098                     	;# 
   957  0099                     	;# 
   958  009C                     	;# 
   959  009D                     	;# 
   960  009E                     	;# 
   961  009F                     	;# 
   962  010C                     	;# 
   963  010D                     	;# 
   964  010E                     	;# 
   965  010F                     	;# 
   966  018C                     	;# 
   967  018D                     	;# 
   968  0000                     	;# 
   969  0001                     	;# 
   970  0002                     	;# 
   971  0003                     	;# 
   972  0004                     	;# 
   973  0005                     	;# 
   974  0006                     	;# 
   975  0007                     	;# 
   976  0008                     	;# 
   977  0009                     	;# 
   978  000A                     	;# 
   979  000B                     	;# 
   980  000C                     	;# 
   981  000D                     	;# 
   982  000E                     	;# 
   983  000E                     	;# 
   984  000F                     	;# 
   985  0010                     	;# 
   986  0011                     	;# 
   987  0012                     	;# 
   988  0013                     	;# 
   989  0014                     	;# 
   990  0015                     	;# 
   991  0015                     	;# 
   992  0016                     	;# 
   993  0017                     	;# 
   994  0018                     	;# 
   995  0019                     	;# 
   996  001A                     	;# 
   997  001B                     	;# 
   998  001B                     	;# 
   999  001C                     	;# 
  1000  001D                     	;# 
  1001  001E                     	;# 
  1002  001F                     	;# 
  1003  0081                     	;# 
  1004  0085                     	;# 
  1005  0086                     	;# 
  1006  0087                     	;# 
  1007  0088                     	;# 
  1008  0089                     	;# 
  1009  008C                     	;# 
  1010  008D                     	;# 
  1011  008E                     	;# 
  1012  0091                     	;# 
  1013  0092                     	;# 
  1014  0093                     	;# 
  1015  0094                     	;# 
  1016  0098                     	;# 
  1017  0099                     	;# 
  1018  009C                     	;# 
  1019  009D                     	;# 
  1020  009E                     	;# 
  1021  009F                     	;# 
  1022  010C                     	;# 
  1023  010D                     	;# 
  1024  010E                     	;# 
  1025  010F                     	;# 
  1026  018C                     	;# 
  1027  018D                     	;# 
  1028  0000                     	;# 
  1029  0001                     	;# 
  1030  0002                     	;# 
  1031  0003                     	;# 
  1032  0004                     	;# 
  1033  0005                     	;# 
  1034  0006                     	;# 
  1035  0007                     	;# 
  1036  0008                     	;# 
  1037  0009                     	;# 
  1038  000A                     	;# 
  1039  000B                     	;# 
  1040  000C                     	;# 
  1041  000D                     	;# 
  1042  000E                     	;# 
  1043  000E                     	;# 
  1044  000F                     	;# 
  1045  0010                     	;# 
  1046  0011                     	;# 
  1047  0012                     	;# 
  1048  0013                     	;# 
  1049  0014                     	;# 
  1050  0015                     	;# 
  1051  0015                     	;# 
  1052  0016                     	;# 
  1053  0017                     	;# 
  1054  0018                     	;# 
  1055  0019                     	;# 
  1056  001A                     	;# 
  1057  001B                     	;# 
  1058  001B                     	;# 
  1059  001C                     	;# 
  1060  001D                     	;# 
  1061  001E                     	;# 
  1062  001F                     	;# 
  1063  0081                     	;# 
  1064  0085                     	;# 
  1065  0086                     	;# 
  1066  0087                     	;# 
  1067  0088                     	;# 
  1068  0089                     	;# 
  1069  008C                     	;# 
  1070  008D                     	;# 
  1071  008E                     	;# 
  1072  0091                     	;# 
  1073  0092                     	;# 
  1074  0093                     	;# 
  1075  0094                     	;# 
  1076  0098                     	;# 
  1077  0099                     	;# 
  1078  009C                     	;# 
  1079  009D                     	;# 
  1080  009E                     	;# 
  1081  009F                     	;# 
  1082  010C                     	;# 
  1083  010D                     	;# 
  1084  010E                     	;# 
  1085  010F                     	;# 
  1086  018C                     	;# 
  1087  018D                     	;# 
  1088  0000                     	;# 
  1089  0001                     	;# 
  1090  0002                     	;# 
  1091  0003                     	;# 
  1092  0004                     	;# 
  1093  0005                     	;# 
  1094  0006                     	;# 
  1095  0007                     	;# 
  1096  0008                     	;# 
  1097  0009                     	;# 
  1098  000A                     	;# 
  1099  000B                     	;# 
  1100  000C                     	;# 
  1101  000D                     	;# 
  1102  000E                     	;# 
  1103  000E                     	;# 
  1104  000F                     	;# 
  1105  0010                     	;# 
  1106  0011                     	;# 
  1107  0012                     	;# 
  1108  0013                     	;# 
  1109  0014                     	;# 
  1110  0015                     	;# 
  1111  0015                     	;# 
  1112  0016                     	;# 
  1113  0017                     	;# 
  1114  0018                     	;# 
  1115  0019                     	;# 
  1116  001A                     	;# 
  1117  001B                     	;# 
  1118  001B                     	;# 
  1119  001C                     	;# 
  1120  001D                     	;# 
  1121  001E                     	;# 
  1122  001F                     	;# 
  1123  0081                     	;# 
  1124  0085                     	;# 
  1125  0086                     	;# 
  1126  0087                     	;# 
  1127  0088                     	;# 
  1128  0089                     	;# 
  1129  008C                     	;# 
  1130  008D                     	;# 
  1131  008E                     	;# 
  1132  0091                     	;# 
  1133  0092                     	;# 
  1134  0093                     	;# 
  1135  0094                     	;# 
  1136  0098                     	;# 
  1137  0099                     	;# 
  1138  009C                     	;# 
  1139  009D                     	;# 
  1140  009E                     	;# 
  1141  009F                     	;# 
  1142  010C                     	;# 
  1143  010D                     	;# 
  1144  010E                     	;# 
  1145  010F                     	;# 
  1146  018C                     	;# 
  1147  018D                     	;# 
  1148  0000                     	;# 
  1149  0001                     	;# 
  1150  0002                     	;# 
  1151  0003                     	;# 
  1152  0004                     	;# 
  1153  0005                     	;# 
  1154  0006                     	;# 
  1155  0007                     	;# 
  1156  0008                     	;# 
  1157  0009                     	;# 
  1158  000A                     	;# 
  1159  000B                     	;# 
  1160  000C                     	;# 
  1161  000D                     	;# 
  1162  000E                     	;# 
  1163  000E                     	;# 
  1164  000F                     	;# 
  1165  0010                     	;# 
  1166  0011                     	;# 
  1167  0012                     	;# 
  1168  0013                     	;# 
  1169  0014                     	;# 
  1170  0015                     	;# 
  1171  0015                     	;# 
  1172  0016                     	;# 
  1173  0017                     	;# 
  1174  0018                     	;# 
  1175  0019                     	;# 
  1176  001A                     	;# 
  1177  001B                     	;# 
  1178  001B                     	;# 
  1179  001C                     	;# 
  1180  001D                     	;# 
  1181  001E                     	;# 
  1182  001F                     	;# 
  1183  0081                     	;# 
  1184  0085                     	;# 
  1185  0086                     	;# 
  1186  0087                     	;# 
  1187  0088                     	;# 
  1188  0089                     	;# 
  1189  008C                     	;# 
  1190  008D                     	;# 
  1191  008E                     	;# 
  1192  0091                     	;# 
  1193  0092                     	;# 
  1194  0093                     	;# 
  1195  0094                     	;# 
  1196  0098                     	;# 
  1197  0099                     	;# 
  1198  009C                     	;# 
  1199  009D                     	;# 
  1200  009E                     	;# 
  1201  009F                     	;# 
  1202  010C                     	;# 
  1203  010D                     	;# 
  1204  010E                     	;# 
  1205  010F                     	;# 
  1206  018C                     	;# 
  1207  018D                     	;# 
  1208  0000                     	;# 
  1209  0001                     	;# 
  1210  0002                     	;# 
  1211  0003                     	;# 
  1212  0004                     	;# 
  1213  0005                     	;# 
  1214  0006                     	;# 
  1215  0007                     	;# 
  1216  0008                     	;# 
  1217  0009                     	;# 
  1218  000A                     	;# 
  1219  000B                     	;# 
  1220  000C                     	;# 
  1221  000D                     	;# 
  1222  000E                     	;# 
  1223  000E                     	;# 
  1224  000F                     	;# 
  1225  0010                     	;# 
  1226  0011                     	;# 
  1227  0012                     	;# 
  1228  0013                     	;# 
  1229  0014                     	;# 
  1230  0015                     	;# 
  1231  0015                     	;# 
  1232  0016                     	;# 
  1233  0017                     	;# 
  1234  0018                     	;# 
  1235  0019                     	;# 
  1236  001A                     	;# 
  1237  001B                     	;# 
  1238  001B                     	;# 
  1239  001C                     	;# 
  1240  001D                     	;# 
  1241  001E                     	;# 
  1242  001F                     	;# 
  1243  0081                     	;# 
  1244  0085                     	;# 
  1245  0086                     	;# 
  1246  0087                     	;# 
  1247  0088                     	;# 
  1248  0089                     	;# 
  1249  008C                     	;# 
  1250  008D                     	;# 
  1251  008E                     	;# 
  1252  0091                     	;# 
  1253  0092                     	;# 
  1254  0093                     	;# 
  1255  0094                     	;# 
  1256  0098                     	;# 
  1257  0099                     	;# 
  1258  009C                     	;# 
  1259  009D                     	;# 
  1260  009E                     	;# 
  1261  009F                     	;# 
  1262  010C                     	;# 
  1263  010D                     	;# 
  1264  010E                     	;# 
  1265  010F                     	;# 
  1266  018C                     	;# 
  1267  018D                     	;# 
  1268  0000                     	;# 
  1269  0001                     	;# 
  1270  0002                     	;# 
  1271  0003                     	;# 
  1272  0004                     	;# 
  1273  0005                     	;# 
  1274  0006                     	;# 
  1275  0007                     	;# 
  1276  0008                     	;# 
  1277  0009                     	;# 
  1278  000A                     	;# 
  1279  000B                     	;# 
  1280  000C                     	;# 
  1281  000D                     	;# 
  1282  000E                     	;# 
  1283  000E                     	;# 
  1284  000F                     	;# 
  1285  0010                     	;# 
  1286  0011                     	;# 
  1287  0012                     	;# 
  1288  0013                     	;# 
  1289  0014                     	;# 
  1290  0015                     	;# 
  1291  0015                     	;# 
  1292  0016                     	;# 
  1293  0017                     	;# 
  1294  0018                     	;# 
  1295  0019                     	;# 
  1296  001A                     	;# 
  1297  001B                     	;# 
  1298  001B                     	;# 
  1299  001C                     	;# 
  1300  001D                     	;# 
  1301  001E                     	;# 
  1302  001F                     	;# 
  1303  0081                     	;# 
  1304  0085                     	;# 
  1305  0086                     	;# 
  1306  0087                     	;# 
  1307  0088                     	;# 
  1308  0089                     	;# 
  1309  008C                     	;# 
  1310  008D                     	;# 
  1311  008E                     	;# 
  1312  0091                     	;# 
  1313  0092                     	;# 
  1314  0093                     	;# 
  1315  0094                     	;# 
  1316  0098                     	;# 
  1317  0099                     	;# 
  1318  009C                     	;# 
  1319  009D                     	;# 
  1320  009E                     	;# 
  1321  009F                     	;# 
  1322  010C                     	;# 
  1323  010D                     	;# 
  1324  010E                     	;# 
  1325  010F                     	;# 
  1326  018C                     	;# 
  1327  018D                     	;# 
  1328                           
  1329                           	psect	idataBANK1
  1330  1000                     __pidataBANK1:
  1331                           
  1332                           ;initializer for _Gpio
  1333  1000  3405               	retlw	5
  1334  1001  3400               	retlw	0
  1335  1002  3406               	retlw	6
  1336  1003  3400               	retlw	0
  1337  1004  3407               	retlw	7
  1338  1005  3400               	retlw	0
  1339  1006  3408               	retlw	8
  1340  1007  3400               	retlw	0
  1341  1008  3409               	retlw	9
  1342  1009  3400               	retlw	0
  1343                           
  1344                           	psect	idataBANK3
  1345  1BE4                     __pidataBANK3:
  1346                           
  1347                           ;initializer for _SsdSymbolPattern
  1348  1BE4  343F               	retlw	63
  1349  1BE5  3406               	retlw	6
  1350  1BE6  345B               	retlw	91
  1351  1BE7  344F               	retlw	79
  1352  1BE8  3466               	retlw	102
  1353  1BE9  346D               	retlw	109
  1354  1BEA  347D               	retlw	125
  1355  1BEB  3407               	retlw	7
  1356  1BEC  347F               	retlw	127
  1357  1BED  346F               	retlw	111
  1358  0013                     _SSPBUF	set	19
  1359  0014                     _SSPCON	set	20
  1360  001E                     _ADRESH	set	30
  1361  001F                     _ADCON0	set	31
  1362  0017                     _CCP1CON	set	23
  1363  0015                     _CCPR1L	set	21
  1364  0016                     _CCPR1H	set	22
  1365  0010                     _T1CON	set	16
  1366  000E                     _TMR1L	set	14
  1367  000F                     _TMR1H	set	15
  1368  000B                     _INTCON	set	11
  1369  0001                     _TMR0	set	1
  1370  000B                     _INTCONbits	set	11
  1371  000C                     _PIR1	set	12
  1372  0009                     _PORTE	set	9
  1373  0008                     _PORTD	set	8
  1374  0007                     _PORTC	set	7
  1375  0006                     _PORTB	set	6
  1376  0005                     _PORTA	set	5
  1377  0093                     _SSPADD	set	147
  1378  0091                     _SSPCON2	set	145
  1379  0094                     _SSPSTAT	set	148
  1380  009E                     _ADRESL	set	158
  1381  009F                     _ADCON1	set	159
  1382  008C                     _PIE1	set	140
  1383  0081                     _OPTION_REG	set	129
  1384                           
  1385                           	psect	cinit
  1386  0015                     start_initialization:	
  1387                           ; #config settings
  1388                           
  1389  0015                     __initialization:
  1390                           
  1391                           ; Initialize objects allocated to BANK3
  1392  0015  1783               	bsf	3,7	;select IRP bank2
  1393  0016  30E6               	movlw	low (__pdataBANK3+10)
  1394  0017  00FD               	movwf	btemp+-1
  1395  0018  301B               	movlw	high __pidataBANK3
  1396  0019  00FE               	movwf	btemp
  1397  001A  30E4               	movlw	low __pidataBANK3
  1398  001B  00FF               	movwf	btemp+1
  1399  001C  30DC               	movlw	low __pdataBANK3
  1400  001D  0084               	movwf	4
  1401  001E  160A  158A  249A  120A  118A  	fcall	init_ram0
  1402                           
  1403                           ; Initialize objects allocated to BANK1
  1404  0023  1383               	bcf	3,7	;select IRP bank0
  1405  0024  30F0               	movlw	low (__pdataBANK1+10)
  1406  0025  00FD               	movwf	btemp+-1
  1407  0026  3010               	movlw	high __pidataBANK1
  1408  0027  00FE               	movwf	btemp
  1409  0028  3000               	movlw	low __pidataBANK1
  1410  0029  00FF               	movwf	btemp+1
  1411  002A  30E6               	movlw	low __pdataBANK1
  1412  002B  0084               	movwf	4
  1413  002C  160A  158A  249A  120A  118A  	fcall	init_ram0
  1414                           
  1415                           ; Clear objects allocated to BANK3
  1416  0031  1783               	bsf	3,7	;select IRP bank2
  1417  0032  3090               	movlw	low __pbssBANK3
  1418  0033  0084               	movwf	4
  1419  0034  30DC               	movlw	low (__pbssBANK3+76)
  1420  0035  160A  158A  23DC  120A  118A  	fcall	clear_ram0
  1421                           
  1422                           ; Clear objects allocated to BANK1
  1423  003A  1383               	bcf	3,7	;select IRP bank0
  1424  003B  30A0               	movlw	low __pbssBANK1
  1425  003C  0084               	movwf	4
  1426  003D  30E6               	movlw	low (__pbssBANK1+70)
  1427  003E  160A  158A  23DC  120A  118A  	fcall	clear_ram0
  1428                           
  1429                           ; Clear objects allocated to BANK0
  1430  0043  3051               	movlw	low __pbssBANK0
  1431  0044  0084               	movwf	4
  1432  0045  306D               	movlw	low (__pbssBANK0+28)
  1433  0046  160A  158A  23DC  120A  118A  	fcall	clear_ram0
  1434  004B                     end_of_initialization:	
  1435                           ;End of C runtime variable initialization code
  1436                           
  1437  004B                     __end_of__initialization:
  1438  004B  0183               	clrf	3
  1439  004C  120A  158A  2EA7   	ljmp	_main	;jump to C main() function
  1440                           
  1441                           	psect	bssBANK0
  1442  0051                     __pbssBANK0:
  1443  0051                     _TempControl:
  1444  0051                     	ds	4
  1445  0055                     _TempControlTask:
  1446  0055                     	ds	1
  1447  0056                     _Heater:
  1448  0056                     	ds	23
  1449                           
  1450                           	psect	bssBANK1
  1451  00A0                     __pbssBANK1:
  1452  00A0                     _SsdTask:
  1453  00A0                     	ds	16
  1454  00B0                     _TempSensor:
  1455  00B0                     	ds	13
  1456  00BD                     _LedTask:
  1457  00BD                     	ds	12
  1458  00C9                     _SwitchTask:
  1459  00C9                     	ds	9
  1460  00D2                     _Switch:
  1461  00D2                     	ds	6
  1462  00D8                     _Led:
  1463  00D8                     	ds	6
  1464  00DE                     _Ssd:
  1465  00DE                     	ds	8
  1466                           
  1467                           	psect	dataBANK1
  1468  00E6                     __pdataBANK1:
  1469  00E6                     _Gpio:
  1470  00E6                     	ds	10
  1471                           
  1472                           	psect	bssBANK3
  1473  0190                     __pbssBANK3:
  1474  0190                     _scheduler:
  1475  0190                     	ds	62
  1476  01CE                     _TempSensorTask:
  1477  01CE                     	ds	14
  1478                           
  1479                           	psect	dataBANK3
  1480  01DC                     __pdataBANK3:
  1481  01DC                     _SsdSymbolPattern:
  1482  01DC                     	ds	10
  1483                           
  1484                           	psect	inittext
  1485  1C96                     init_fetch0:	
  1486                           ;	Called with low address in FSR and high address in W
  1487                           
  1488  1C96  087E               	movf	btemp,w
  1489  1C97  008A               	movwf	10
  1490  1C98  087F               	movf	btemp+1,w
  1491  1C99  0082               	movwf	2
  1492  1C9A                     init_ram0:	
  1493                           ;Called with:
  1494                           ;	high address of idata address in btemp 
  1495                           ;	low address of idata address in btemp+1 
  1496                           ;	low address of data in FSR
  1497                           ;	high address + 1 of data in btemp-1
  1498                           
  1499  1C9A  160A  158A  2496  160A  158A  	fcall	init_fetch0
  1500  1C9F  0080               	movwf	0
  1501  1CA0  0A84               	incf	4,f
  1502  1CA1  0804               	movf	4,w
  1503  1CA2  067D               	xorwf	btemp+-1,w
  1504  1CA3  1903               	btfsc	3,2
  1505  1CA4  3400               	retlw	0
  1506  1CA5  0AFF               	incf	btemp+1,f
  1507  1CA6  1903               	btfsc	3,2
  1508  1CA7  0AFE               	incf	btemp,f
  1509  1CA8  2C9A               	goto	init_ram0
  1510                           
  1511                           	psect	clrtext
  1512  1BDC                     clear_ram0:	
  1513                           ;	Called with FSR containing the base address, and
  1514                           ;	W with the last address+1
  1515                           
  1516  1BDC  0064               	clrwdt	;clear the watchdog before getting into this loop
  1517  1BDD                     clrloop0:
  1518  1BDD  0180               	clrf	0	;clear RAM location pointed to by FSR
  1519  1BDE  0A84               	incf	4,f	;increment pointer
  1520  1BDF  0604               	xorwf	4,w	;XOR with final address
  1521  1BE0  1903               	btfsc	3,2	;have we reached the end yet?
  1522  1BE1  3400               	retlw	0	;all done for this memory range, return
  1523  1BE2  0604               	xorwf	4,w	;XOR again to restore value
  1524  1BE3  2BDD               	goto	clrloop0	;do the next byte
  1525                           
  1526                           	psect	cstackCOMMON
  1527  0070                     __pcstackCOMMON:
  1528  0070                     ?_Scheduler_update:
  1529  0070                     ?_HeaterTask_Init:	
  1530                           ; 1 bytes @ 0x0
  1531                           
  1532  0070                     ?_Scheduler_init:	
  1533                           ; 1 bytes @ 0x0
  1534                           
  1535  0070                     ?_Scheduler_start:	
  1536                           ; 1 bytes @ 0x0
  1537                           
  1538  0070                     ?_Scheduler_dispatchTasks:	
  1539                           ; 1 bytes @ 0x0
  1540                           
  1541  0070                     ?_Scheduler_deleteTask:	
  1542                           ; 1 bytes @ 0x0
  1543                           
  1544  0070                     ?_I2c_MasterStart:	
  1545                           ; 1 bytes @ 0x0
  1546                           
  1547  0070                     ?_I2c_MasterRepeatedStart:	
  1548                           ; 1 bytes @ 0x0
  1549                           
  1550  0070                     ?_I2c_MasterWrite:	
  1551                           ; 1 bytes @ 0x0
  1552                           
  1553  0070                     ?_I2c_MasterStop:	
  1554                           ; 1 bytes @ 0x0
  1555                           
  1556  0070                     ?_I2c_Read:	
  1557                           ; 1 bytes @ 0x0
  1558                           
  1559  0070                     ?_I2c_NACK:	
  1560                           ; 1 bytes @ 0x0
  1561                           
  1562  0070                     ?_I2c_ACK:	
  1563                           ; 1 bytes @ 0x0
  1564                           
  1565  0070                     ?_SwitchTask_GetState:	
  1566                           ; 1 bytes @ 0x0
  1567                           
  1568  0070                     ?_TempSensorTask_GetAverage:	
  1569                           ; 1 bytes @ 0x0
  1570                           
  1571  0070                     ?_TempSensor_GetState:	
  1572                           ; 1 bytes @ 0x0
  1573                           
  1574  0070                     ?_SysTick_Handler:	
  1575                           ; 1 bytes @ 0x0
  1576                           
  1577  0070                     ?_Scheduler_displayError:	
  1578                           ; 1 bytes @ 0x0
  1579                           
  1580  0070                     ?_Scheduler_sleepHardware:	
  1581                           ; 1 bytes @ 0x0
  1582                           
  1583  0070                     ?_Scheduler_reportStatus:	
  1584                           ; 1 bytes @ 0x0
  1585                           
  1586  0070                     ?_Scheduler_goToSleep:	
  1587                           ; 1 bytes @ 0x0
  1588                           
  1589  0070                     ?_Switch_GetState:	
  1590                           ; 1 bytes @ 0x0
  1591                           
  1592  0070                     ?_Adc_Init:	
  1593                           ; 1 bytes @ 0x0
  1594                           
  1595  0070                     ?_Eeprom_Init:	
  1596                           ; 1 bytes @ 0x0
  1597                           
  1598  0070                     ?_Eeprom_Read:	
  1599                           ; 1 bytes @ 0x0
  1600                           
  1601  0070                     ?_I2c_MasterWait:	
  1602                           ; 1 bytes @ 0x0
  1603                           
  1604  0070                     ?i1___bmul:	
  1605                           ; 1 bytes @ 0x0
  1606                           
  1607  0070                     ?_main:	
  1608                           ; 1 bytes @ 0x0
  1609                           
  1610  0070                     Adc_Init@Id:	
  1611                           ; 2 bytes @ 0x0
  1612                           
  1613  0070                     Adc_GetState@Id:	
  1614                           ; 1 bytes @ 0x0
  1615                           
  1616  0070                     i1___bmul@multiplicand:	
  1617                           ; 1 bytes @ 0x0
  1618                           
  1619                           
  1620                           ; 1 bytes @ 0x0
  1621  0070                     	ds	1
  1622  0071                     ??i1___bmul:
  1623  0071                     i1___bmul@product:	
  1624                           ; 1 bytes @ 0x1
  1625                           
  1626                           
  1627                           ; 1 bytes @ 0x1
  1628  0071                     	ds	1
  1629  0072                     i1___bmul@multiplier:
  1630                           
  1631                           ; 1 bytes @ 0x2
  1632  0072                     	ds	1
  1633  0073                     ??_Scheduler_update:
  1634                           
  1635                           ; 1 bytes @ 0x3
  1636  0073                     	ds	1
  1637  0074                     Scheduler_update@index:
  1638                           
  1639                           ; 2 bytes @ 0x4
  1640  0074                     	ds	2
  1641  0076                     ??_SysTick_Handler:
  1642                           
  1643                           ; 1 bytes @ 0x6
  1644  0076                     	ds	4
  1645                           
  1646                           	psect	cstackBANK0
  1647  0020                     __pcstackBANK0:
  1648  0020                     ?_Scheduler_delaySoftwareUs:
  1649  0020                     ?_Timer1Init:	
  1650                           ; 1 bytes @ 0x0
  1651                           
  1652  0020                     ?_Gpio_GetPinState:	
  1653                           ; 1 bytes @ 0x0
  1654                           
  1655  0020                     ?_Gpio_SetPortState:	
  1656                           ; 1 bytes @ 0x0
  1657                           
  1658  0020                     ??_I2c_MasterStart:	
  1659                           ; 1 bytes @ 0x0
  1660                           
  1661  0020                     ??_I2c_MasterRepeatedStart:	
  1662                           ; 1 bytes @ 0x0
  1663                           
  1664  0020                     ??_I2c_MasterWrite:	
  1665                           ; 1 bytes @ 0x0
  1666                           
  1667  0020                     ??_I2c_MasterStop:	
  1668                           ; 1 bytes @ 0x0
  1669                           
  1670  0020                     ??_I2c_Read:	
  1671                           ; 1 bytes @ 0x0
  1672                           
  1673  0020                     ??_I2c_NACK:	
  1674                           ; 1 bytes @ 0x0
  1675                           
  1676  0020                     ??_I2c_ACK:	
  1677                           ; 1 bytes @ 0x0
  1678                           
  1679  0020                     ?_TempControlTask_SetState:	
  1680                           ; 1 bytes @ 0x0
  1681                           
  1682  0020                     ??_Scheduler_sleepHardware:	
  1683                           ; 1 bytes @ 0x0
  1684                           
  1685  0020                     ??_Scheduler_goToSleep:	
  1686                           ; 1 bytes @ 0x0
  1687                           
  1688  0020                     ??_Adc_Init:	
  1689                           ; 1 bytes @ 0x0
  1690                           
  1691  0020                     ??_I2c_MasterWait:	
  1692                           ; 1 bytes @ 0x0
  1693                           
  1694  0020                     ?___bmul:	
  1695                           ; 1 bytes @ 0x0
  1696                           
  1697  0020                     ?_Adc_GetState:	
  1698                           ; 1 bytes @ 0x0
  1699                           
  1700  0020                     ?___wmul:	
  1701                           ; 2 bytes @ 0x0
  1702                           
  1703  0020                     TempControlTask_SetState@State:	
  1704                           ; 2 bytes @ 0x0
  1705                           
  1706  0020                     I2c_MasterWrite@Buffer:	
  1707                           ; 1 bytes @ 0x0
  1708                           
  1709  0020                     Gpio_GetPinState@Pin:	
  1710                           ; 1 bytes @ 0x0
  1711                           
  1712  0020                     Gpio_SetPortState@Pins:	
  1713                           ; 1 bytes @ 0x0
  1714                           
  1715  0020                     ___bmul@multiplicand:	
  1716                           ; 1 bytes @ 0x0
  1717                           
  1718  0020                     Timer1Init@TicksNumber:	
  1719                           ; 1 bytes @ 0x0
  1720                           
  1721  0020                     ___wmul@multiplier:	
  1722                           ; 2 bytes @ 0x0
  1723                           
  1724  0020                     Scheduler_delaySoftwareUs@usDelay:	
  1725                           ; 2 bytes @ 0x0
  1726                           
  1727                           
  1728                           ; 4 bytes @ 0x0
  1729  0020                     	ds	1
  1730  0021                     ??_Gpio_GetPinState:
  1731  0021                     ??_TempControlTask_SetState:	
  1732                           ; 1 bytes @ 0x1
  1733                           
  1734  0021                     ??_Eeprom_Read:	
  1735                           ; 1 bytes @ 0x1
  1736                           
  1737  0021                     ??___bmul:	
  1738                           ; 1 bytes @ 0x1
  1739                           
  1740  0021                     Eeprom_Read@Address:	
  1741                           ; 1 bytes @ 0x1
  1742                           
  1743  0021                     TempControlTask_SetState@Id:	
  1744                           ; 1 bytes @ 0x1
  1745                           
  1746  0021                     Gpio_SetPortState@State:	
  1747                           ; 1 bytes @ 0x1
  1748                           
  1749  0021                     ___bmul@product:	
  1750                           ; 1 bytes @ 0x1
  1751                           
  1752                           
  1753                           ; 1 bytes @ 0x1
  1754  0021                     	ds	1
  1755  0022                     ??_Timer1Init:
  1756  0022                     ??_Gpio_SetPortState:	
  1757                           ; 1 bytes @ 0x2
  1758                           
  1759  0022                     Eeprom_Read@Buffer:	
  1760                           ; 1 bytes @ 0x2
  1761                           
  1762  0022                     ___bmul@multiplier:	
  1763                           ; 1 bytes @ 0x2
  1764                           
  1765  0022                     ___wmul@multiplicand:	
  1766                           ; 1 bytes @ 0x2
  1767                           
  1768                           
  1769                           ; 2 bytes @ 0x2
  1770  0022                     	ds	1
  1771  0023                     ?_Scheduler_addTask:
  1772  0023                     ??_Scheduler_deleteTask:	
  1773                           ; 1 bytes @ 0x3
  1774                           
  1775  0023                     ?_Gpio_InitPin:	
  1776                           ; 1 bytes @ 0x3
  1777                           
  1778  0023                     ?_Gpio_SetPinState:	
  1779                           ; 1 bytes @ 0x3
  1780                           
  1781  0023                     ??_SwitchTask_GetState:	
  1782                           ; 1 bytes @ 0x3
  1783                           
  1784  0023                     ??_TempSensorTask_GetAverage:	
  1785                           ; 1 bytes @ 0x3
  1786                           
  1787  0023                     ??_Adc_GetState:	
  1788                           ; 1 bytes @ 0x3
  1789                           
  1790  0023                     ?_Eeprom_Write:	
  1791                           ; 1 bytes @ 0x3
  1792                           
  1793  0023                     ?_Eeprom_WritePage:	
  1794                           ; 1 bytes @ 0x3
  1795                           
  1796  0023                     ?_Eeprom_ReadPage:	
  1797                           ; 1 bytes @ 0x3
  1798                           
  1799  0023                     ?___awdiv:	
  1800                           ; 1 bytes @ 0x3
  1801                           
  1802  0023                     ?___lwdiv:	
  1803                           ; 2 bytes @ 0x3
  1804                           
  1805  0023                     ?___lmul:	
  1806                           ; 2 bytes @ 0x3
  1807                           
  1808  0023                     Scheduler_deleteTask@index:	
  1809                           ; 4 bytes @ 0x3
  1810                           
  1811  0023                     Eeprom_Write@Buffer:	
  1812                           ; 1 bytes @ 0x3
  1813                           
  1814  0023                     Eeprom_WritePage@Buffer:	
  1815                           ; 1 bytes @ 0x3
  1816                           
  1817  0023                     Eeprom_ReadPage@Buffer:	
  1818                           ; 1 bytes @ 0x3
  1819                           
  1820  0023                     SwitchTask_GetState@Buffer:	
  1821                           ; 1 bytes @ 0x3
  1822                           
  1823  0023                     TempSensorTask_GetAverage@Id:	
  1824                           ; 1 bytes @ 0x3
  1825                           
  1826  0023                     Gpio_InitPin@Pin:	
  1827                           ; 1 bytes @ 0x3
  1828                           
  1829  0023                     Gpio_SetPinState@Pin:	
  1830                           ; 1 bytes @ 0x3
  1831                           
  1832  0023                     Scheduler_addTask@paramter:	
  1833                           ; 1 bytes @ 0x3
  1834                           
  1835  0023                     ___awdiv@divisor:	
  1836                           ; 2 bytes @ 0x3
  1837                           
  1838  0023                     ___lwdiv@divisor:	
  1839                           ; 2 bytes @ 0x3
  1840                           
  1841  0023                     ___lmul@multiplier:	
  1842                           ; 2 bytes @ 0x3
  1843                           
  1844                           
  1845                           ; 4 bytes @ 0x3
  1846  0023                     	ds	1
  1847  0024                     ??_Scheduler_delaySoftwareUs:
  1848  0024                     ??_Scheduler_init:	
  1849                           ; 1 bytes @ 0x4
  1850                           
  1851  0024                     ??_Eeprom_Write:	
  1852                           ; 1 bytes @ 0x4
  1853                           
  1854  0024                     ??___wmul:	
  1855                           ; 1 bytes @ 0x4
  1856                           
  1857  0024                     Eeprom_Write@Address:	
  1858                           ; 1 bytes @ 0x4
  1859                           
  1860  0024                     Eeprom_WritePage@Length:	
  1861                           ; 1 bytes @ 0x4
  1862                           
  1863  0024                     Eeprom_ReadPage@Length:	
  1864                           ; 1 bytes @ 0x4
  1865                           
  1866  0024                     SwitchTask_GetState@Id:	
  1867                           ; 1 bytes @ 0x4
  1868                           
  1869  0024                     Gpio_InitPin@Mode:	
  1870                           ; 1 bytes @ 0x4
  1871                           
  1872  0024                     Gpio_SetPinState@State:	
  1873                           ; 1 bytes @ 0x4
  1874                           
  1875  0024                     Scheduler_init@index:	
  1876                           ; 1 bytes @ 0x4
  1877                           
  1878  0024                     ___wmul@product:	
  1879                           ; 2 bytes @ 0x4
  1880                           
  1881                           
  1882                           ; 2 bytes @ 0x4
  1883  0024                     	ds	1
  1884  0025                     ??_Gpio_InitPin:
  1885  0025                     ??_Gpio_SetPinState:	
  1886                           ; 1 bytes @ 0x5
  1887                           
  1888  0025                     ??_Eeprom_WritePage:	
  1889                           ; 1 bytes @ 0x5
  1890                           
  1891  0025                     ??_Eeprom_ReadPage:	
  1892                           ; 1 bytes @ 0x5
  1893                           
  1894  0025                     Scheduler_addTask@delay:	
  1895                           ; 1 bytes @ 0x5
  1896                           
  1897  0025                     ___awdiv@dividend:	
  1898                           ; 1 bytes @ 0x5
  1899                           
  1900  0025                     ___lwdiv@dividend:	
  1901                           ; 2 bytes @ 0x5
  1902                           
  1903                           
  1904                           ; 2 bytes @ 0x5
  1905  0025                     	ds	1
  1906  0026                     ?_Scheduler_initSysTick:
  1907  0026                     Scheduler_addTask@period:	
  1908                           ; 1 bytes @ 0x6
  1909                           
  1910  0026                     Gpio_GetPinState@Id:	
  1911                           ; 1 bytes @ 0x6
  1912                           
  1913  0026                     Scheduler_initSysTick@msTickPeriod:	
  1914                           ; 1 bytes @ 0x6
  1915                           
  1916                           
  1917                           ; 2 bytes @ 0x6
  1918  0026                     	ds	1
  1919  0027                     ??_Scheduler_addTask:
  1920  0027                     ??_Switch_GetState:	
  1921                           ; 1 bytes @ 0x7
  1922                           
  1923  0027                     ??___awdiv:	
  1924                           ; 1 bytes @ 0x7
  1925                           
  1926  0027                     ??___lwdiv:	
  1927                           ; 1 bytes @ 0x7
  1928                           
  1929  0027                     Scheduler_addTask@task:	
  1930                           ; 1 bytes @ 0x7
  1931                           
  1932  0027                     Eeprom_WritePage@Address:	
  1933                           ; 1 bytes @ 0x7
  1934                           
  1935  0027                     Eeprom_ReadPage@Address:	
  1936                           ; 1 bytes @ 0x7
  1937                           
  1938  0027                     ___awdiv@counter:	
  1939                           ; 1 bytes @ 0x7
  1940                           
  1941  0027                     ___lwdiv@quotient:	
  1942                           ; 1 bytes @ 0x7
  1943                           
  1944  0027                     ___lmul@multiplicand:	
  1945                           ; 2 bytes @ 0x7
  1946                           
  1947                           
  1948                           ; 4 bytes @ 0x7
  1949  0027                     	ds	1
  1950  0028                     ??_Scheduler_initSysTick:
  1951  0028                     Scheduler_delaySoftwareUs@delay:	
  1952                           ; 1 bytes @ 0x8
  1953                           
  1954  0028                     ___awdiv@sign:	
  1955                           ; 1 bytes @ 0x8
  1956                           
  1957  0028                     Scheduler_initSysTick@tickNumber:	
  1958                           ; 1 bytes @ 0x8
  1959                           
  1960  0028                     Scheduler_addTask@index:	
  1961                           ; 2 bytes @ 0x8
  1962                           
  1963  0028                     Eeprom_WritePage@i:	
  1964                           ; 2 bytes @ 0x8
  1965                           
  1966  0028                     Eeprom_ReadPage@i:	
  1967                           ; 2 bytes @ 0x8
  1968                           
  1969                           
  1970                           ; 2 bytes @ 0x8
  1971  0028                     	ds	1
  1972  0029                     ?_Scheduler_delaySoftwareMs:
  1973  0029                     Switch_GetState@Id:	
  1974                           ; 1 bytes @ 0x9
  1975                           
  1976  0029                     Gpio_SetPortState@Id:	
  1977                           ; 1 bytes @ 0x9
  1978                           
  1979  0029                     ___lwdiv@counter:	
  1980                           ; 1 bytes @ 0x9
  1981                           
  1982  0029                     ___awdiv@quotient:	
  1983                           ; 1 bytes @ 0x9
  1984                           
  1985  0029                     Scheduler_delaySoftwareMs@msDelay:	
  1986                           ; 2 bytes @ 0x9
  1987                           
  1988                           
  1989                           ; 4 bytes @ 0x9
  1990  0029                     	ds	1
  1991  002A                     ??_Scheduler_start:
  1992  002A                     ?_LedTask_SetState:	
  1993                           ; 1 bytes @ 0xA
  1994                           
  1995  002A                     ?_SsdTask_SetState:	
  1996                           ; 1 bytes @ 0xA
  1997                           
  1998  002A                     ?_Ssd_SetSymbol:	
  1999                           ; 1 bytes @ 0xA
  2000                           
  2001  002A                     Ssd_SetSymbol@Symbol:	
  2002                           ; 1 bytes @ 0xA
  2003                           
  2004  002A                     SsdTask_SetState@State:	
  2005                           ; 1 bytes @ 0xA
  2006                           
  2007  002A                     LedTask_SetState@State:	
  2008                           ; 1 bytes @ 0xA
  2009                           
  2010                           
  2011                           ; 1 bytes @ 0xA
  2012  002A                     	ds	1
  2013  002B                     ??_Ssd_SetSymbol:
  2014  002B                     ??___lmul:	
  2015                           ; 1 bytes @ 0xB
  2016                           
  2017  002B                     ?___awmod:	
  2018                           ; 1 bytes @ 0xB
  2019                           
  2020  002B                     SsdTask_SetState@Period:	
  2021                           ; 2 bytes @ 0xB
  2022                           
  2023  002B                     LedTask_SetState@Period:	
  2024                           ; 2 bytes @ 0xB
  2025                           
  2026  002B                     ___awmod@divisor:	
  2027                           ; 2 bytes @ 0xB
  2028                           
  2029                           
  2030                           ; 2 bytes @ 0xB
  2031  002B                     	ds	1
  2032  002C                     ___lmul@product:
  2033                           
  2034                           ; 4 bytes @ 0xC
  2035  002C                     	ds	1
  2036  002D                     ??_LedTask_SetState:
  2037  002D                     ??_SsdTask_SetState:	
  2038                           ; 1 bytes @ 0xD
  2039                           
  2040  002D                     ??_Scheduler_delaySoftwareMs:	
  2041                           ; 1 bytes @ 0xD
  2042                           
  2043  002D                     Gpio_SetPinState@Id:	
  2044                           ; 1 bytes @ 0xD
  2045                           
  2046  002D                     ___awmod@dividend:	
  2047                           ; 1 bytes @ 0xD
  2048                           
  2049  002D                     _LedTask_SetState$1398:	
  2050                           ; 2 bytes @ 0xD
  2051                           
  2052                           
  2053                           ; 2 bytes @ 0xD
  2054  002D                     	ds	1
  2055  002E                     ?_TempControl_SetState:
  2056  002E                     ?_Led_SetState:	
  2057                           ; 1 bytes @ 0xE
  2058                           
  2059  002E                     ?_Ssd_SetState:	
  2060                           ; 1 bytes @ 0xE
  2061                           
  2062  002E                     Led_SetState@State:	
  2063                           ; 1 bytes @ 0xE
  2064                           
  2065  002E                     Ssd_SetState@State:	
  2066                           ; 1 bytes @ 0xE
  2067                           
  2068  002E                     Ssd_SetSymbol@Id:	
  2069                           ; 1 bytes @ 0xE
  2070                           
  2071  002E                     SsdTask_SetState@Id:	
  2072                           ; 1 bytes @ 0xE
  2073                           
  2074  002E                     TempControl_SetState@State:	
  2075                           ; 1 bytes @ 0xE
  2076                           
  2077                           
  2078                           ; 1 bytes @ 0xE
  2079  002E                     	ds	1
  2080  002F                     ??_TempControl_SetState:
  2081  002F                     ??_Led_SetState:	
  2082                           ; 1 bytes @ 0xF
  2083                           
  2084  002F                     ??_Ssd_SetState:	
  2085                           ; 1 bytes @ 0xF
  2086                           
  2087  002F                     ??___awmod:	
  2088                           ; 1 bytes @ 0xF
  2089                           
  2090  002F                     Led_SetState@Id:	
  2091                           ; 1 bytes @ 0xF
  2092                           
  2093  002F                     LedTask_SetState@Id:	
  2094                           ; 1 bytes @ 0xF
  2095                           
  2096  002F                     ___awmod@counter:	
  2097                           ; 1 bytes @ 0xF
  2098                           
  2099                           
  2100                           ; 1 bytes @ 0xF
  2101  002F                     	ds	1
  2102  0030                     ??_Scheduler_displayError:
  2103  0030                     ?___lldiv:	
  2104                           ; 1 bytes @ 0x10
  2105                           
  2106  0030                     Scheduler_displayError@errorCode:	
  2107                           ; 4 bytes @ 0x10
  2108                           
  2109  0030                     ___awmod@sign:	
  2110                           ; 1 bytes @ 0x10
  2111                           
  2112  0030                     ___lldiv@divisor:	
  2113                           ; 1 bytes @ 0x10
  2114                           
  2115                           
  2116                           ; 4 bytes @ 0x10
  2117  0030                     	ds	1
  2118  0031                     ?_SsdTask_SetSymbol:
  2119  0031                     ??_Scheduler_reportStatus:	
  2120                           ; 1 bytes @ 0x11
  2121                           
  2122  0031                     Ssd_SetState@Id:	
  2123                           ; 1 bytes @ 0x11
  2124                           
  2125  0031                     SsdTask_SetSymbol@Symbol:	
  2126                           ; 1 bytes @ 0x11
  2127                           
  2128  0031                     Gpio_InitPin@Id:	
  2129                           ; 1 bytes @ 0x11
  2130                           
  2131                           
  2132                           ; 1 bytes @ 0x11
  2133  0031                     	ds	1
  2134  0032                     ??_SsdTask_SetSymbol:
  2135  0032                     ?_TempSensor_Init:	
  2136                           ; 1 bytes @ 0x12
  2137                           
  2138  0032                     ?_TempControl_Init:	
  2139                           ; 1 bytes @ 0x12
  2140                           
  2141  0032                     ?_Led_Init:	
  2142                           ; 1 bytes @ 0x12
  2143                           
  2144  0032                     ?_Switch_Init:	
  2145                           ; 1 bytes @ 0x12
  2146                           
  2147  0032                     ?_Ssd_Init:	
  2148                           ; 1 bytes @ 0x12
  2149                           
  2150  0032                     Led_Init@GpioId:	
  2151                           ; 1 bytes @ 0x12
  2152                           
  2153  0032                     Switch_Init@GpioId:	
  2154                           ; 1 bytes @ 0x12
  2155                           
  2156  0032                     Ssd_Init@ctrlGpioId:	
  2157                           ; 1 bytes @ 0x12
  2158                           
  2159  0032                     TempSensor_Init@GpioId:	
  2160                           ; 1 bytes @ 0x12
  2161                           
  2162  0032                     TempControl_Init@hGpioId:	
  2163                           ; 1 bytes @ 0x12
  2164                           
  2165  0032                     TempControl_SetState@Id:	
  2166                           ; 1 bytes @ 0x12
  2167                           
  2168                           
  2169                           ; 1 bytes @ 0x12
  2170  0032                     	ds	1
  2171  0033                     Led_Init@Pin:
  2172  0033                     Switch_Init@Pin:	
  2173                           ; 1 bytes @ 0x13
  2174                           
  2175  0033                     Ssd_Init@ctrlPin:	
  2176                           ; 1 bytes @ 0x13
  2177                           
  2178  0033                     SsdTask_SetSymbol@Id:	
  2179                           ; 1 bytes @ 0x13
  2180                           
  2181  0033                     TempSensor_Init@Pin:	
  2182                           ; 1 bytes @ 0x13
  2183                           
  2184  0033                     TempControl_Init@hPin:	
  2185                           ; 1 bytes @ 0x13
  2186                           
  2187                           
  2188                           ; 1 bytes @ 0x13
  2189  0033                     	ds	1
  2190  0034                     ??_Led_Init:
  2191  0034                     ??_Switch_Init:	
  2192                           ; 1 bytes @ 0x14
  2193                           
  2194  0034                     Led_Init@Id:	
  2195                           ; 1 bytes @ 0x14
  2196                           
  2197  0034                     Ssd_Init@dataGpioId:	
  2198                           ; 1 bytes @ 0x14
  2199                           
  2200  0034                     TempSensor_Init@AdcId:	
  2201                           ; 1 bytes @ 0x14
  2202                           
  2203  0034                     TempControl_Init@cGpioId:	
  2204                           ; 1 bytes @ 0x14
  2205                           
  2206  0034                     ___lldiv@dividend:	
  2207                           ; 1 bytes @ 0x14
  2208                           
  2209                           
  2210                           ; 4 bytes @ 0x14
  2211  0034                     	ds	1
  2212  0035                     ?_LedTask_Init:
  2213  0035                     ??_TempSensor_Init:	
  2214                           ; 1 bytes @ 0x15
  2215                           
  2216  0035                     Ssd_Init@dataPin:	
  2217                           ; 1 bytes @ 0x15
  2218                           
  2219  0035                     TempSensor_Init@Id:	
  2220                           ; 1 bytes @ 0x15
  2221                           
  2222  0035                     TempControl_Init@cPin:	
  2223                           ; 1 bytes @ 0x15
  2224                           
  2225  0035                     LedTask_Init@GpioId:	
  2226                           ; 1 bytes @ 0x15
  2227                           
  2228                           
  2229                           ; 1 bytes @ 0x15
  2230  0035                     	ds	1
  2231  0036                     ?_TempSensorTask_Init:
  2232  0036                     ??_TempControl_Init:	
  2233                           ; 1 bytes @ 0x16
  2234                           
  2235  0036                     ??_Ssd_Init:	
  2236                           ; 1 bytes @ 0x16
  2237                           
  2238  0036                     Switch_Init@Id:	
  2239                           ; 1 bytes @ 0x16
  2240                           
  2241  0036                     TempSensorTask_Init@GpioId:	
  2242                           ; 1 bytes @ 0x16
  2243                           
  2244  0036                     LedTask_Init@Pin:	
  2245                           ; 1 bytes @ 0x16
  2246                           
  2247                           
  2248                           ; 1 bytes @ 0x16
  2249  0036                     	ds	1
  2250  0037                     ?_SwitchTask_Init:
  2251  0037                     ??_LedTask_Init:	
  2252                           ; 1 bytes @ 0x17
  2253                           
  2254  0037                     SwitchTask_Init@GpioId:	
  2255                           ; 1 bytes @ 0x17
  2256                           
  2257  0037                     TempSensorTask_Init@Pin:	
  2258                           ; 1 bytes @ 0x17
  2259                           
  2260  0037                     LedTask_Init@Id:	
  2261                           ; 1 bytes @ 0x17
  2262                           
  2263                           
  2264                           ; 1 bytes @ 0x17
  2265  0037                     	ds	1
  2266  0038                     ??___lldiv:
  2267  0038                     SwitchTask_Init@Pin:	
  2268                           ; 1 bytes @ 0x18
  2269                           
  2270  0038                     TempSensorTask_Init@AdcId:	
  2271                           ; 1 bytes @ 0x18
  2272                           
  2273  0038                     TempControl_Init@Id:	
  2274                           ; 1 bytes @ 0x18
  2275                           
  2276                           
  2277                           ; 1 bytes @ 0x18
  2278  0038                     	ds	1
  2279  0039                     ??_SwitchTask_Init:
  2280  0039                     ??_TempSensorTask_Init:	
  2281                           ; 1 bytes @ 0x19
  2282                           
  2283  0039                     ?_TempControlTask_Init:	
  2284                           ; 1 bytes @ 0x19
  2285                           
  2286  0039                     SwitchTask_Init@Id:	
  2287                           ; 1 bytes @ 0x19
  2288                           
  2289  0039                     TempControlTask_Init@hGpioId:	
  2290                           ; 1 bytes @ 0x19
  2291                           
  2292  0039                     Ssd_Init@Pin:	
  2293                           ; 1 bytes @ 0x19
  2294                           
  2295  0039                     ___lldiv@quotient:	
  2296                           ; 2 bytes @ 0x19
  2297                           
  2298                           
  2299                           ; 4 bytes @ 0x19
  2300  0039                     	ds	1
  2301  003A                     TempControlTask_Init@hPin:
  2302  003A                     TempSensorTask_Init@Index:	
  2303                           ; 1 bytes @ 0x1A
  2304                           
  2305                           
  2306                           ; 2 bytes @ 0x1A
  2307  003A                     	ds	1
  2308  003B                     Ssd_Init@Id:
  2309  003B                     TempControlTask_Init@cGpioId:	
  2310                           ; 1 bytes @ 0x1B
  2311                           
  2312                           
  2313                           ; 1 bytes @ 0x1B
  2314  003B                     	ds	1
  2315  003C                     ?_SsdTask_Init:
  2316  003C                     SsdTask_Init@ctrlGpioId:	
  2317                           ; 1 bytes @ 0x1C
  2318                           
  2319  003C                     TempSensorTask_Init@Id:	
  2320                           ; 1 bytes @ 0x1C
  2321                           
  2322  003C                     TempControlTask_Init@cPin:	
  2323                           ; 1 bytes @ 0x1C
  2324                           
  2325                           
  2326                           ; 1 bytes @ 0x1C
  2327  003C                     	ds	1
  2328  003D                     ??_TempControlTask_Init:
  2329  003D                     SsdTask_Init@ctrlPin:	
  2330                           ; 1 bytes @ 0x1D
  2331                           
  2332  003D                     TempControlTask_Init@Id:	
  2333                           ; 1 bytes @ 0x1D
  2334                           
  2335  003D                     ___lldiv@counter:	
  2336                           ; 1 bytes @ 0x1D
  2337                           
  2338                           
  2339                           ; 1 bytes @ 0x1D
  2340  003D                     	ds	1
  2341  003E                     ?_I2c_MasterInit:
  2342  003E                     ??_TempSensor_GetState:	
  2343                           ; 1 bytes @ 0x1E
  2344                           
  2345  003E                     SsdTask_Init@dataGpioId:	
  2346                           ; 1 bytes @ 0x1E
  2347                           
  2348  003E                     I2c_MasterInit@BaudRate:	
  2349                           ; 1 bytes @ 0x1E
  2350                           
  2351                           
  2352                           ; 4 bytes @ 0x1E
  2353  003E                     	ds	1
  2354  003F                     SsdTask_Init@dataPin:
  2355                           
  2356                           ; 1 bytes @ 0x1F
  2357  003F                     	ds	1
  2358  0040                     ??_SsdTask_Init:
  2359                           
  2360                           ; 1 bytes @ 0x20
  2361  0040                     	ds	1
  2362  0041                     SsdTask_Init@Id:
  2363                           
  2364                           ; 1 bytes @ 0x21
  2365  0041                     	ds	1
  2366  0042                     ??_HeaterTask_Init:
  2367  0042                     ??_I2c_MasterInit:	
  2368                           ; 1 bytes @ 0x22
  2369                           
  2370  0042                     ??_Eeprom_Init:	
  2371                           ; 1 bytes @ 0x22
  2372                           
  2373  0042                     TempSensor_GetState@Id:	
  2374                           ; 1 bytes @ 0x22
  2375                           
  2376                           
  2377                           ; 1 bytes @ 0x22
  2378  0042                     	ds	1
  2379  0043                     ?_SwitchTask_Update:
  2380  0043                     ?_TempSensorTask_Update:	
  2381                           ; 1 bytes @ 0x23
  2382                           
  2383  0043                     ?_HeaterTask_Update:	
  2384                           ; 1 bytes @ 0x23
  2385                           
  2386  0043                     ?_TempControlTask_Update:	
  2387                           ; 1 bytes @ 0x23
  2388                           
  2389  0043                     ?_LedTask_Update:	
  2390                           ; 1 bytes @ 0x23
  2391                           
  2392  0043                     ?_SsdTask_Update:	
  2393                           ; 1 bytes @ 0x23
  2394                           
  2395  0043                     HeaterTask_Update@Paramter:	
  2396                           ; 1 bytes @ 0x23
  2397                           
  2398  0043                     SwitchTask_Update@Paramter:	
  2399                           ; 2 bytes @ 0x23
  2400                           
  2401  0043                     SsdTask_Update@Paramter:	
  2402                           ; 2 bytes @ 0x23
  2403                           
  2404  0043                     TempSensorTask_Update@Paramter:	
  2405                           ; 2 bytes @ 0x23
  2406                           
  2407  0043                     TempControlTask_Update@Paramter:	
  2408                           ; 2 bytes @ 0x23
  2409                           
  2410  0043                     LedTask_Update@Paramter:	
  2411                           ; 2 bytes @ 0x23
  2412                           
  2413                           
  2414                           ; 2 bytes @ 0x23
  2415  0043                     	ds	2
  2416  0045                     ??_SwitchTask_Update:
  2417  0045                     ??_TempSensorTask_Update:	
  2418                           ; 1 bytes @ 0x25
  2419                           
  2420  0045                     ??_HeaterTask_Update:	
  2421                           ; 1 bytes @ 0x25
  2422                           
  2423  0045                     ??_TempControlTask_Update:	
  2424                           ; 1 bytes @ 0x25
  2425                           
  2426  0045                     ??_LedTask_Update:	
  2427                           ; 1 bytes @ 0x25
  2428                           
  2429  0045                     ??_SsdTask_Update:	
  2430                           ; 1 bytes @ 0x25
  2431                           
  2432  0045                     SwitchTask_Update@Id:	
  2433                           ; 1 bytes @ 0x25
  2434                           
  2435  0045                     TempControlTask_Update@Id:	
  2436                           ; 1 bytes @ 0x25
  2437                           
  2438  0045                     HeaterTask_Init@Index:	
  2439                           ; 1 bytes @ 0x25
  2440                           
  2441                           
  2442                           ; 2 bytes @ 0x25
  2443  0045                     	ds	2
  2444  0047                     HeaterTask_Init@Id:
  2445  0047                     _LedTask_Update$1434:	
  2446                           ; 1 bytes @ 0x27
  2447                           
  2448                           
  2449                           ; 1 bytes @ 0x27
  2450  0047                     	ds	1
  2451  0048                     HeaterTask_Update@Id:
  2452  0048                     LedTask_Update@Id:	
  2453                           ; 1 bytes @ 0x28
  2454                           
  2455  0048                     TempSensorTask_Update@Index:	
  2456                           ; 1 bytes @ 0x28
  2457                           
  2458                           
  2459                           ; 2 bytes @ 0x28
  2460  0048                     	ds	1
  2461  0049                     SsdTask_Update@Id:
  2462                           
  2463                           ; 1 bytes @ 0x29
  2464  0049                     	ds	1
  2465  004A                     TempSensorTask_Update@Id:
  2466                           
  2467                           ; 1 bytes @ 0x2A
  2468  004A                     	ds	1
  2469  004B                     ??_Scheduler_dispatchTasks:
  2470                           
  2471                           ; 1 bytes @ 0x2B
  2472  004B                     	ds	1
  2473  004C                     _Scheduler_dispatchTasks$1433:
  2474                           
  2475                           ; 2 bytes @ 0x2C
  2476  004C                     	ds	2
  2477  004E                     _Scheduler_dispatchTasks$1428:
  2478                           
  2479                           ; 1 bytes @ 0x2E
  2480  004E                     	ds	1
  2481  004F                     Scheduler_dispatchTasks@index:
  2482                           
  2483                           ; 2 bytes @ 0x2F
  2484  004F                     	ds	2
  2485  0051                     ??_main:
  2486                           
  2487                           	psect	maintext
  2488  0EA7                     __pmaintext:	
  2489                           ; 1 bytes @ 0x31
  2490 ;;
  2491 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2492 ;;
  2493 ;; *************** function _main *****************
  2494 ;; Defined at:
  2495 ;;		line 31 in file "main.c"
  2496 ;; Parameters:    Size  Location     Type
  2497 ;;		None
  2498 ;; Auto vars:     Size  Location     Type
  2499 ;;		None
  2500 ;; Return value:  Size  Location     Type
  2501 ;;                  2   47[None  ] int 
  2502 ;; Registers used:
  2503 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2504 ;; Tracked objects:
  2505 ;;		On entry : B00/0
  2506 ;;		On exit  : 0/0
  2507 ;;		Unchanged: 0/0
  2508 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2509 ;;      Params:         0       0       0       0       0
  2510 ;;      Locals:         0       0       0       0       0
  2511 ;;      Temps:          0       0       0       0       0
  2512 ;;      Totals:         0       0       0       0       0
  2513 ;;Total ram usage:        0 bytes
  2514 ;; Hardware stack levels required when called:    8
  2515 ;; This function calls:
  2516 ;;		_HeaterTask_Init
  2517 ;;		_LedTask_Init
  2518 ;;		_Scheduler_addTask
  2519 ;;		_Scheduler_delaySoftwareUs
  2520 ;;		_Scheduler_dispatchTasks
  2521 ;;		_Scheduler_init
  2522 ;;		_Scheduler_start
  2523 ;;		_SsdTask_Init
  2524 ;;		_SwitchTask_Init
  2525 ;;		_TempControlTask_Init
  2526 ;;		_TempSensorTask_Init
  2527 ;; This function is called by:
  2528 ;;		Startup code after reset
  2529 ;; This function uses a non-reentrant model
  2530 ;;
  2531                           
  2532                           
  2533                           ;psect for function _main
  2534  0EA7                     _main:
  2535  0EA7                     l2771:	
  2536                           ;incstack = 0
  2537                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2538                           
  2539                           
  2540                           ;main.c: 33:     SwitchTask_Init( 0, ( 1 ), 0 );
  2541  0EA7  1283               	bcf	3,5	;RP0=0, select bank0
  2542  0EA8  1303               	bcf	3,6	;RP1=0, select bank0
  2543  0EA9  01B7               	clrf	SwitchTask_Init@GpioId
  2544  0EAA  0AB7               	incf	SwitchTask_Init@GpioId,f
  2545  0EAB  01B8               	clrf	SwitchTask_Init@Pin
  2546  0EAC  3000               	movlw	0
  2547  0EAD  160A  118A  2043  120A  158A  	fcall	_SwitchTask_Init
  2548                           
  2549                           ;main.c: 34:     SwitchTask_Init( 1, ( 1 ), 1 );
  2550  0EB2  1283               	bcf	3,5	;RP0=0, select bank0
  2551  0EB3  1303               	bcf	3,6	;RP1=0, select bank0
  2552  0EB4  01B7               	clrf	SwitchTask_Init@GpioId
  2553  0EB5  0AB7               	incf	SwitchTask_Init@GpioId,f
  2554  0EB6  01B8               	clrf	SwitchTask_Init@Pin
  2555  0EB7  0AB8               	incf	SwitchTask_Init@Pin,f
  2556  0EB8  3001               	movlw	1
  2557  0EB9  160A  118A  2043  120A  158A  	fcall	_SwitchTask_Init
  2558                           
  2559                           ;main.c: 35:     SwitchTask_Init( 2, ( 1 ), 2 );
  2560  0EBE  1283               	bcf	3,5	;RP0=0, select bank0
  2561  0EBF  1303               	bcf	3,6	;RP1=0, select bank0
  2562  0EC0  01B7               	clrf	SwitchTask_Init@GpioId
  2563  0EC1  0AB7               	incf	SwitchTask_Init@GpioId,f
  2564  0EC2  3002               	movlw	2
  2565  0EC3  00FF               	movwf	btemp+1
  2566  0EC4  087F               	movf	btemp+1,w
  2567  0EC5  00B8               	movwf	SwitchTask_Init@Pin
  2568  0EC6  3002               	movlw	2
  2569  0EC7  160A  118A  2043  120A  158A  	fcall	_SwitchTask_Init
  2570                           
  2571                           ;main.c: 37:     TempSensorTask_Init( 0, ( 0 ), 2, 0 );
  2572  0ECC  1283               	bcf	3,5	;RP0=0, select bank0
  2573  0ECD  1303               	bcf	3,6	;RP1=0, select bank0
  2574  0ECE  01B6               	clrf	TempSensorTask_Init@GpioId
  2575  0ECF  3002               	movlw	2
  2576  0ED0  00FF               	movwf	btemp+1
  2577  0ED1  087F               	movf	btemp+1,w
  2578  0ED2  00B7               	movwf	TempSensorTask_Init@Pin
  2579  0ED3  01B8               	clrf	TempSensorTask_Init@AdcId
  2580  0ED4  3000               	movlw	0
  2581  0ED5  160A  118A  2594  120A  158A  	fcall	_TempSensorTask_Init
  2582                           
  2583                           ;main.c: 39:     TempControlTask_Init( 0, ( 2 ), 5, ( 2 ), 2 );
  2584  0EDA  3002               	movlw	2
  2585  0EDB  00FF               	movwf	btemp+1
  2586  0EDC  087F               	movf	btemp+1,w
  2587  0EDD  1283               	bcf	3,5	;RP0=0, select bank0
  2588  0EDE  1303               	bcf	3,6	;RP1=0, select bank0
  2589  0EDF  00B9               	movwf	TempControlTask_Init@hGpioId
  2590  0EE0  3005               	movlw	5
  2591  0EE1  00FF               	movwf	btemp+1
  2592  0EE2  087F               	movf	btemp+1,w
  2593  0EE3  00BA               	movwf	TempControlTask_Init@hPin
  2594  0EE4  3002               	movlw	2
  2595  0EE5  00FF               	movwf	btemp+1
  2596  0EE6  087F               	movf	btemp+1,w
  2597  0EE7  00BB               	movwf	TempControlTask_Init@cGpioId
  2598  0EE8  3002               	movlw	2
  2599  0EE9  00FF               	movwf	btemp+1
  2600  0EEA  087F               	movf	btemp+1,w
  2601  0EEB  00BC               	movwf	TempControlTask_Init@cPin
  2602  0EEC  3000               	movlw	0
  2603  0EED  160A  158A  25AB  120A  158A  	fcall	_TempControlTask_Init
  2604                           
  2605                           ;main.c: 41:     LedTask_Init( 0, ( 1 ), 6 );
  2606  0EF2  1283               	bcf	3,5	;RP0=0, select bank0
  2607  0EF3  1303               	bcf	3,6	;RP1=0, select bank0
  2608  0EF4  01B5               	clrf	LedTask_Init@GpioId
  2609  0EF5  0AB5               	incf	LedTask_Init@GpioId,f
  2610  0EF6  3006               	movlw	6
  2611  0EF7  00FF               	movwf	btemp+1
  2612  0EF8  087F               	movf	btemp+1,w
  2613  0EF9  00B6               	movwf	LedTask_Init@Pin
  2614  0EFA  3000               	movlw	0
  2615  0EFB  160A  118A  228E  120A  158A  	fcall	_LedTask_Init
  2616                           
  2617                           ;main.c: 42:     LedTask_Init( 1, ( 1 ), 7 );
  2618  0F00  1283               	bcf	3,5	;RP0=0, select bank0
  2619  0F01  1303               	bcf	3,6	;RP1=0, select bank0
  2620  0F02  01B5               	clrf	LedTask_Init@GpioId
  2621  0F03  0AB5               	incf	LedTask_Init@GpioId,f
  2622  0F04  3007               	movlw	7
  2623  0F05  00FF               	movwf	btemp+1
  2624  0F06  087F               	movf	btemp+1,w
  2625  0F07  00B6               	movwf	LedTask_Init@Pin
  2626  0F08  3001               	movlw	1
  2627  0F09  160A  118A  228E  120A  158A  	fcall	_LedTask_Init
  2628                           
  2629                           ;main.c: 44:     SsdTask_Init( 0, ( 0 ), 5, ( 3 ), 0 );
  2630  0F0E  1283               	bcf	3,5	;RP0=0, select bank0
  2631  0F0F  1303               	bcf	3,6	;RP1=0, select bank0
  2632  0F10  01BC               	clrf	SsdTask_Init@ctrlGpioId
  2633  0F11  3005               	movlw	5
  2634  0F12  00FF               	movwf	btemp+1
  2635  0F13  087F               	movf	btemp+1,w
  2636  0F14  00BD               	movwf	SsdTask_Init@ctrlPin
  2637  0F15  3003               	movlw	3
  2638  0F16  00FF               	movwf	btemp+1
  2639  0F17  087F               	movf	btemp+1,w
  2640  0F18  00BE               	movwf	SsdTask_Init@dataGpioId
  2641  0F19  01BF               	clrf	SsdTask_Init@dataPin
  2642  0F1A  3000               	movlw	0
  2643  0F1B  160A  118A  2602  120A  158A  	fcall	_SsdTask_Init
  2644                           
  2645                           ;main.c: 45:     SsdTask_Init( 1, ( 0 ), 4, ( 3 ), 0 );
  2646  0F20  1283               	bcf	3,5	;RP0=0, select bank0
  2647  0F21  1303               	bcf	3,6	;RP1=0, select bank0
  2648  0F22  01BC               	clrf	SsdTask_Init@ctrlGpioId
  2649  0F23  3004               	movlw	4
  2650  0F24  00FF               	movwf	btemp+1
  2651  0F25  087F               	movf	btemp+1,w
  2652  0F26  00BD               	movwf	SsdTask_Init@ctrlPin
  2653  0F27  3003               	movlw	3
  2654  0F28  00FF               	movwf	btemp+1
  2655  0F29  087F               	movf	btemp+1,w
  2656  0F2A  00BE               	movwf	SsdTask_Init@dataGpioId
  2657  0F2B  01BF               	clrf	SsdTask_Init@dataPin
  2658  0F2C  3001               	movlw	1
  2659  0F2D  160A  118A  2602  120A  158A  	fcall	_SsdTask_Init
  2660                           
  2661                           ;main.c: 47:     HeaterTask_Init( 0 );
  2662  0F32  3000               	movlw	0
  2663  0F33  120A  118A  254B  120A  158A  	fcall	_HeaterTask_Init
  2664  0F38                     l2773:
  2665                           
  2666                           ;main.c: 49:     Scheduler_delaySoftwareUs( 1000 );
  2667  0F38  3000               	movlw	0
  2668  0F39  1283               	bcf	3,5	;RP0=0, select bank0
  2669  0F3A  1303               	bcf	3,6	;RP1=0, select bank0
  2670  0F3B  00A3               	movwf	Scheduler_delaySoftwareUs@usDelay+3
  2671  0F3C  3000               	movlw	0
  2672  0F3D  00A2               	movwf	Scheduler_delaySoftwareUs@usDelay+2
  2673  0F3E  3003               	movlw	3
  2674  0F3F  00A1               	movwf	Scheduler_delaySoftwareUs@usDelay+1
  2675  0F40  30E8               	movlw	232
  2676  0F41  00A0               	movwf	Scheduler_delaySoftwareUs@usDelay
  2677  0F42  160A  158A  27C7  120A  158A  	fcall	_Scheduler_delaySoftwareUs
  2678  0F47                     l2775:
  2679                           
  2680                           ;main.c: 51:     Scheduler_init();
  2681  0F47  160A  158A  25CA  120A  158A  	fcall	_Scheduler_init
  2682  0F4C                     l2777:
  2683                           
  2684                           ;main.c: 52:     Scheduler_addTask( SwitchTask_Update, (void *) 0, 0, ( 10 / ( ( TickTyp
      +                          e_t ) 5 ) ) );
  2685  0F4C  3000               	movlw	0
  2686  0F4D  1283               	bcf	3,5	;RP0=0, select bank0
  2687  0F4E  1303               	bcf	3,6	;RP1=0, select bank0
  2688  0F4F  00A3               	movwf	Scheduler_addTask@paramter
  2689  0F50  3000               	movlw	0
  2690  0F51  00A4               	movwf	Scheduler_addTask@paramter+1
  2691  0F52  01A5               	clrf	Scheduler_addTask@delay
  2692  0F53  3002               	movlw	2
  2693  0F54  00FF               	movwf	btemp+1
  2694  0F55  087F               	movf	btemp+1,w
  2695  0F56  00A6               	movwf	Scheduler_addTask@period
  2696  0F57  3004               	movlw	(low (fp__SwitchTask_Update-fpbase))& (0+255)
  2697  0F58  120A  158A  2041  120A  158A  	fcall	_Scheduler_addTask
  2698  0F5D                     l2779:
  2699                           
  2700                           ;main.c: 53:     Scheduler_addTask( SwitchTask_Update, (void *) 1, 0, ( 10 / ( ( TickTyp
      +                          e_t ) 5 ) ) );
  2701  0F5D  3001               	movlw	1
  2702  0F5E  1283               	bcf	3,5	;RP0=0, select bank0
  2703  0F5F  1303               	bcf	3,6	;RP1=0, select bank0
  2704  0F60  00A3               	movwf	Scheduler_addTask@paramter
  2705  0F61  3000               	movlw	0
  2706  0F62  00A4               	movwf	Scheduler_addTask@paramter+1
  2707  0F63  01A5               	clrf	Scheduler_addTask@delay
  2708  0F64  3002               	movlw	2
  2709  0F65  00FF               	movwf	btemp+1
  2710  0F66  087F               	movf	btemp+1,w
  2711  0F67  00A6               	movwf	Scheduler_addTask@period
  2712  0F68  3004               	movlw	(low (fp__SwitchTask_Update-fpbase))& (0+255)
  2713  0F69  120A  158A  2041  120A  158A  	fcall	_Scheduler_addTask
  2714  0F6E                     l2781:
  2715                           
  2716                           ;main.c: 54:     Scheduler_addTask( SwitchTask_Update, (void *) 2, 0, ( 10 / ( ( TickTyp
      +                          e_t ) 5 ) ) );
  2717  0F6E  3002               	movlw	2
  2718  0F6F  1283               	bcf	3,5	;RP0=0, select bank0
  2719  0F70  1303               	bcf	3,6	;RP1=0, select bank0
  2720  0F71  00A3               	movwf	Scheduler_addTask@paramter
  2721  0F72  3000               	movlw	0
  2722  0F73  00A4               	movwf	Scheduler_addTask@paramter+1
  2723  0F74  01A5               	clrf	Scheduler_addTask@delay
  2724  0F75  3002               	movlw	2
  2725  0F76  00FF               	movwf	btemp+1
  2726  0F77  087F               	movf	btemp+1,w
  2727  0F78  00A6               	movwf	Scheduler_addTask@period
  2728  0F79  3004               	movlw	(low (fp__SwitchTask_Update-fpbase))& (0+255)
  2729  0F7A  120A  158A  2041  120A  158A  	fcall	_Scheduler_addTask
  2730  0F7F                     l2783:
  2731                           
  2732                           ;main.c: 55:     Scheduler_addTask( TempSensorTask_Update, (void *) 0, 0, ( 100 / ( ( Ti
      +                          ckType_t ) 5 ) ) );
  2733  0F7F  3000               	movlw	0
  2734  0F80  1283               	bcf	3,5	;RP0=0, select bank0
  2735  0F81  1303               	bcf	3,6	;RP1=0, select bank0
  2736  0F82  00A3               	movwf	Scheduler_addTask@paramter
  2737  0F83  3000               	movlw	0
  2738  0F84  00A4               	movwf	Scheduler_addTask@paramter+1
  2739  0F85  01A5               	clrf	Scheduler_addTask@delay
  2740  0F86  3014               	movlw	20
  2741  0F87  00FF               	movwf	btemp+1
  2742  0F88  087F               	movf	btemp+1,w
  2743  0F89  00A6               	movwf	Scheduler_addTask@period
  2744  0F8A  3001               	movlw	(low (fp__TempSensorTask_Update-fpbase))& (0+255)
  2745  0F8B  120A  158A  2041  120A  158A  	fcall	_Scheduler_addTask
  2746  0F90                     l2785:
  2747                           
  2748                           ;main.c: 56:     Scheduler_addTask( HeaterTask_Update, (void *) 0, 0, ( 100 / ( ( TickTy
      +                          pe_t ) 5 ) ) );
  2749  0F90  3000               	movlw	0
  2750  0F91  1283               	bcf	3,5	;RP0=0, select bank0
  2751  0F92  1303               	bcf	3,6	;RP1=0, select bank0
  2752  0F93  00A3               	movwf	Scheduler_addTask@paramter
  2753  0F94  3000               	movlw	0
  2754  0F95  00A4               	movwf	Scheduler_addTask@paramter+1
  2755  0F96  01A5               	clrf	Scheduler_addTask@delay
  2756  0F97  3014               	movlw	20
  2757  0F98  00FF               	movwf	btemp+1
  2758  0F99  087F               	movf	btemp+1,w
  2759  0F9A  00A6               	movwf	Scheduler_addTask@period
  2760  0F9B  3007               	movlw	(low (fp__HeaterTask_Update-fpbase))& (0+255)
  2761  0F9C  120A  158A  2041  120A  158A  	fcall	_Scheduler_addTask
  2762  0FA1                     l2787:
  2763                           
  2764                           ;main.c: 57:     Scheduler_addTask( TempControlTask_Update, (void *) 0, 0, ( 100 / ( ( T
      +                          ickType_t ) 5 ) ) );
  2765  0FA1  3000               	movlw	0
  2766  0FA2  1283               	bcf	3,5	;RP0=0, select bank0
  2767  0FA3  1303               	bcf	3,6	;RP1=0, select bank0
  2768  0FA4  00A3               	movwf	Scheduler_addTask@paramter
  2769  0FA5  3000               	movlw	0
  2770  0FA6  00A4               	movwf	Scheduler_addTask@paramter+1
  2771  0FA7  01A5               	clrf	Scheduler_addTask@delay
  2772  0FA8  3014               	movlw	20
  2773  0FA9  00FF               	movwf	btemp+1
  2774  0FAA  087F               	movf	btemp+1,w
  2775  0FAB  00A6               	movwf	Scheduler_addTask@period
  2776  0FAC  300A               	movlw	(low (fp__TempControlTask_Update-fpbase))& (0+255)
  2777  0FAD  120A  158A  2041  120A  158A  	fcall	_Scheduler_addTask
  2778  0FB2                     l2789:
  2779                           
  2780                           ;main.c: 58:     Scheduler_addTask( LedTask_Update, (void *) 0, 0, ( 100 / ( ( TickType_
      +                          t ) 5 ) ) );
  2781  0FB2  3000               	movlw	0
  2782  0FB3  1283               	bcf	3,5	;RP0=0, select bank0
  2783  0FB4  1303               	bcf	3,6	;RP1=0, select bank0
  2784  0FB5  00A3               	movwf	Scheduler_addTask@paramter
  2785  0FB6  3000               	movlw	0
  2786  0FB7  00A4               	movwf	Scheduler_addTask@paramter+1
  2787  0FB8  01A5               	clrf	Scheduler_addTask@delay
  2788  0FB9  3014               	movlw	20
  2789  0FBA  00FF               	movwf	btemp+1
  2790  0FBB  087F               	movf	btemp+1,w
  2791  0FBC  00A6               	movwf	Scheduler_addTask@period
  2792  0FBD  300D               	movlw	(low (fp__LedTask_Update-fpbase))& (0+255)
  2793  0FBE  120A  158A  2041  120A  158A  	fcall	_Scheduler_addTask
  2794  0FC3                     l2791:
  2795                           
  2796                           ;main.c: 59:     Scheduler_addTask( LedTask_Update, (void *) 1, 0, ( 100 / ( ( TickType_
      +                          t ) 5 ) ) );
  2797  0FC3  3001               	movlw	1
  2798  0FC4  1283               	bcf	3,5	;RP0=0, select bank0
  2799  0FC5  1303               	bcf	3,6	;RP1=0, select bank0
  2800  0FC6  00A3               	movwf	Scheduler_addTask@paramter
  2801  0FC7  3000               	movlw	0
  2802  0FC8  00A4               	movwf	Scheduler_addTask@paramter+1
  2803  0FC9  01A5               	clrf	Scheduler_addTask@delay
  2804  0FCA  3014               	movlw	20
  2805  0FCB  00FF               	movwf	btemp+1
  2806  0FCC  087F               	movf	btemp+1,w
  2807  0FCD  00A6               	movwf	Scheduler_addTask@period
  2808  0FCE  300D               	movlw	(low (fp__LedTask_Update-fpbase))& (0+255)
  2809  0FCF  120A  158A  2041  120A  158A  	fcall	_Scheduler_addTask
  2810  0FD4                     l2793:
  2811                           
  2812                           ;main.c: 60:     Scheduler_addTask( SsdTask_Update, (void *) 0, 0, ( 5 / ( ( TickType_t 
      +                          ) 5 ) ) );
  2813  0FD4  3000               	movlw	0
  2814  0FD5  1283               	bcf	3,5	;RP0=0, select bank0
  2815  0FD6  1303               	bcf	3,6	;RP1=0, select bank0
  2816  0FD7  00A3               	movwf	Scheduler_addTask@paramter
  2817  0FD8  3000               	movlw	0
  2818  0FD9  00A4               	movwf	Scheduler_addTask@paramter+1
  2819  0FDA  01A5               	clrf	Scheduler_addTask@delay
  2820  0FDB  01A6               	clrf	Scheduler_addTask@period
  2821  0FDC  0AA6               	incf	Scheduler_addTask@period,f
  2822  0FDD  3010               	movlw	(low (fp__SsdTask_Update-fpbase))& (0+255)
  2823  0FDE  120A  158A  2041  120A  158A  	fcall	_Scheduler_addTask
  2824  0FE3                     l2795:
  2825                           
  2826                           ;main.c: 61:     Scheduler_addTask( SsdTask_Update, (void *) 1, 0, ( 5 / ( ( TickType_t 
      +                          ) 5 ) ) );
  2827  0FE3  3001               	movlw	1
  2828  0FE4  1283               	bcf	3,5	;RP0=0, select bank0
  2829  0FE5  1303               	bcf	3,6	;RP1=0, select bank0
  2830  0FE6  00A3               	movwf	Scheduler_addTask@paramter
  2831  0FE7  3000               	movlw	0
  2832  0FE8  00A4               	movwf	Scheduler_addTask@paramter+1
  2833  0FE9  01A5               	clrf	Scheduler_addTask@delay
  2834  0FEA  01A6               	clrf	Scheduler_addTask@period
  2835  0FEB  0AA6               	incf	Scheduler_addTask@period,f
  2836  0FEC  3010               	movlw	(low (fp__SsdTask_Update-fpbase))& (0+255)
  2837  0FED  120A  158A  2041  120A  158A  	fcall	_Scheduler_addTask
  2838  0FF2                     l2797:
  2839                           
  2840                           ;main.c: 63:     Scheduler_start();
  2841  0FF2  160A  158A  2426  120A  158A  	fcall	_Scheduler_start
  2842  0FF7                     l2799:
  2843                           
  2844                           ;main.c: 65:     {;main.c: 66:         Scheduler_dispatchTasks();
  2845  0FF7  120A  158A  20D2  120A  158A  	fcall	_Scheduler_dispatchTasks
  2846  0FFC  2FF7               	goto	l2799
  2847  0FFD  120A  118A  2812   	ljmp	start
  2848  1000                     __end_of_main:
  2849                           
  2850                           	psect	text1
  2851  1594                     __ptext1:	
  2852 ;; *************** function _TempSensorTask_Init *****************
  2853 ;; Defined at:
  2854 ;;		line 13 in file "TempSensorTask.c"
  2855 ;; Parameters:    Size  Location     Type
  2856 ;;  Id              1    wreg     unsigned char 
  2857 ;;  GpioId          1   22[BANK0 ] unsigned char 
  2858 ;;  Pin             1   23[BANK0 ] unsigned char 
  2859 ;;  AdcId           1   24[BANK0 ] unsigned char 
  2860 ;; Auto vars:     Size  Location     Type
  2861 ;;  Id              1   28[BANK0 ] unsigned char 
  2862 ;;  Index           2   26[BANK0 ] unsigned int 
  2863 ;; Return value:  Size  Location     Type
  2864 ;;                  1    wreg      void 
  2865 ;; Registers used:
  2866 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2867 ;; Tracked objects:
  2868 ;;		On entry : 0/0
  2869 ;;		On exit  : 0/0
  2870 ;;		Unchanged: 0/0
  2871 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2872 ;;      Params:         0       3       0       0       0
  2873 ;;      Locals:         0       3       0       0       0
  2874 ;;      Temps:          0       1       0       0       0
  2875 ;;      Totals:         0       7       0       0       0
  2876 ;;Total ram usage:        7 bytes
  2877 ;; Hardware stack levels used:    1
  2878 ;; Hardware stack levels required when called:    5
  2879 ;; This function calls:
  2880 ;;		_TempSensor_Init
  2881 ;;		___bmul
  2882 ;; This function is called by:
  2883 ;;		_main
  2884 ;; This function uses a non-reentrant model
  2885 ;;
  2886                           
  2887                           
  2888                           ;psect for function _TempSensorTask_Init
  2889  1594                     _TempSensorTask_Init:
  2890                           
  2891                           ;incstack = 0
  2892                           ; Regs used in _TempSensorTask_Init: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack
      +                          ]
  2893                           ;TempSensorTask_Init@Id stored from wreg
  2894  1594  1283               	bcf	3,5	;RP0=0, select bank0
  2895  1595  1303               	bcf	3,6	;RP1=0, select bank0
  2896  1596  00BC               	movwf	TempSensorTask_Init@Id
  2897  1597                     l2607:
  2898                           
  2899                           ;TempSensorTask.c: 13: void TempSensorTask_Init( Id_t Id, Id_t GpioId, uint8_t Pin, Id_t
      +                           AdcId );TempSensorTask.c: 14: {;TempSensorTask.c: 15:     size_t Index = 0;
  2900  1597  01BA               	clrf	TempSensorTask_Init@Index
  2901  1598  01BB               	clrf	TempSensorTask_Init@Index+1
  2902                           
  2903                           ;TempSensorTask.c: 16:     for( Index = 0; Index < 10; Index++ )
  2904  1599  01BA               	clrf	TempSensorTask_Init@Index
  2905  159A  01BB               	clrf	TempSensorTask_Init@Index+1
  2906  159B                     l2613:
  2907                           
  2908                           ;TempSensorTask.c: 17:     {;TempSensorTask.c: 18:         TempSensorTask[ Id ].Array[ I
      +                          ndex ] = 0;
  2909  159B  300E               	movlw	14
  2910  159C  00FF               	movwf	btemp+1
  2911  159D  087F               	movf	btemp+1,w
  2912  159E  00A0               	movwf	___bmul@multiplicand
  2913  159F  083C               	movf	TempSensorTask_Init@Id,w
  2914  15A0  160A  158A  2512  160A  118A  	fcall	___bmul
  2915  15A5  3ECE               	addlw	(low (_TempSensorTask| (0+256)))& (0+255)
  2916  15A6  1283               	bcf	3,5	;RP0=0, select bank0
  2917  15A7  1303               	bcf	3,6	;RP1=0, select bank0
  2918  15A8  073A               	addwf	TempSensorTask_Init@Index,w
  2919  15A9  00B9               	movwf	??_TempSensorTask_Init
  2920  15AA  0839               	movf	??_TempSensorTask_Init,w
  2921  15AB  0084               	movwf	4
  2922  15AC  1783               	bsf	3,7	;select IRP bank3
  2923  15AD  0180               	clrf	0
  2924  15AE                     l2615:
  2925                           
  2926                           ;TempSensorTask.c: 19:     }
  2927  15AE  3001               	movlw	1
  2928  15AF  07BA               	addwf	TempSensorTask_Init@Index,f
  2929  15B0  1803               	skipnc
  2930  15B1  0ABB               	incf	TempSensorTask_Init@Index+1,f
  2931  15B2  3000               	movlw	0
  2932  15B3  07BB               	addwf	TempSensorTask_Init@Index+1,f
  2933  15B4                     l2617:
  2934  15B4  3000               	movlw	0
  2935  15B5  023B               	subwf	TempSensorTask_Init@Index+1,w
  2936  15B6  300A               	movlw	10
  2937  15B7  1903               	skipnz
  2938  15B8  023A               	subwf	TempSensorTask_Init@Index,w
  2939  15B9  1C03               	skipc
  2940  15BA  2DBC               	goto	u3201
  2941  15BB  2DBD               	goto	u3200
  2942  15BC                     u3201:
  2943  15BC  2D9B               	goto	l2613
  2944  15BD                     u3200:
  2945  15BD                     l2619:
  2946                           
  2947                           ;TempSensorTask.c: 20:     TempSensorTask[ Id ].Index = 0;
  2948  15BD  300E               	movlw	14
  2949  15BE  00FF               	movwf	btemp+1
  2950  15BF  087F               	movf	btemp+1,w
  2951  15C0  00A0               	movwf	___bmul@multiplicand
  2952  15C1  083C               	movf	TempSensorTask_Init@Id,w
  2953  15C2  160A  158A  2512  160A  118A  	fcall	___bmul
  2954  15C7  3ED8               	addlw	(low ((_TempSensorTask| (0+256)+10)))& (0+255)
  2955  15C8  0084               	movwf	4
  2956  15C9  1783               	bsf	3,7	;select IRP bank3
  2957  15CA  0180               	clrf	0
  2958                           
  2959                           ;TempSensorTask.c: 21:     TempSensorTask[ Id ].AvgFlag = 0;
  2960  15CB  300E               	movlw	14
  2961  15CC  00FF               	movwf	btemp+1
  2962  15CD  087F               	movf	btemp+1,w
  2963  15CE  1283               	bcf	3,5	;RP0=0, select bank0
  2964  15CF  1303               	bcf	3,6	;RP1=0, select bank0
  2965  15D0  00A0               	movwf	___bmul@multiplicand
  2966  15D1  083C               	movf	TempSensorTask_Init@Id,w
  2967  15D2  160A  158A  2512  160A  118A  	fcall	___bmul
  2968  15D7  3ED9               	addlw	(low ((_TempSensorTask| (0+256)+11)))& (0+255)
  2969  15D8  0084               	movwf	4
  2970  15D9  1783               	bsf	3,7	;select IRP bank3
  2971  15DA  0180               	clrf	0
  2972                           
  2973                           ;TempSensorTask.c: 22:     TempSensorTask[ Id ].AvgTemp = 0;
  2974  15DB  300E               	movlw	14
  2975  15DC  00FF               	movwf	btemp+1
  2976  15DD  087F               	movf	btemp+1,w
  2977  15DE  1283               	bcf	3,5	;RP0=0, select bank0
  2978  15DF  1303               	bcf	3,6	;RP1=0, select bank0
  2979  15E0  00A0               	movwf	___bmul@multiplicand
  2980  15E1  083C               	movf	TempSensorTask_Init@Id,w
  2981  15E2  160A  158A  2512  160A  118A  	fcall	___bmul
  2982  15E7  3EDA               	addlw	(low ((_TempSensorTask| (0+256)+12)))& (0+255)
  2983  15E8  0084               	movwf	4
  2984  15E9  1783               	bsf	3,7	;select IRP bank3
  2985  15EA  0180               	clrf	0
  2986  15EB  0A84               	incf	4,f
  2987  15EC  0180               	clrf	0
  2988                           
  2989                           ;TempSensorTask.c: 23:     TempSensor_Init( Id, GpioId, Pin, AdcId );
  2990  15ED  1283               	bcf	3,5	;RP0=0, select bank0
  2991  15EE  1303               	bcf	3,6	;RP1=0, select bank0
  2992  15EF  0836               	movf	TempSensorTask_Init@GpioId,w
  2993  15F0  00FF               	movwf	btemp+1
  2994  15F1  087F               	movf	btemp+1,w
  2995  15F2  00B2               	movwf	TempSensor_Init@GpioId
  2996  15F3  0837               	movf	TempSensorTask_Init@Pin,w
  2997  15F4  00FF               	movwf	btemp+1
  2998  15F5  087F               	movf	btemp+1,w
  2999  15F6  00B3               	movwf	TempSensor_Init@Pin
  3000  15F7  0838               	movf	TempSensorTask_Init@AdcId,w
  3001  15F8  00FF               	movwf	btemp+1
  3002  15F9  087F               	movf	btemp+1,w
  3003  15FA  00B4               	movwf	TempSensor_Init@AdcId
  3004  15FB  083C               	movf	TempSensorTask_Init@Id,w
  3005  15FC  120A  158A  22C7  160A  118A  	fcall	_TempSensor_Init
  3006  1601                     l404:
  3007  1601  0008               	return
  3008  1602                     __end_of_TempSensorTask_Init:
  3009                           
  3010                           	psect	text2
  3011  0AC7                     __ptext2:	
  3012 ;; *************** function _TempSensor_Init *****************
  3013 ;; Defined at:
  3014 ;;		line 16 in file "TempSensor.c"
  3015 ;; Parameters:    Size  Location     Type
  3016 ;;  Id              1    wreg     unsigned char 
  3017 ;;  GpioId          1   18[BANK0 ] unsigned char 
  3018 ;;  Pin             1   19[BANK0 ] unsigned char 
  3019 ;;  AdcId           1   20[BANK0 ] unsigned char 
  3020 ;; Auto vars:     Size  Location     Type
  3021 ;;  Id              1   21[BANK0 ] unsigned char 
  3022 ;; Return value:  Size  Location     Type
  3023 ;;                  1    wreg      void 
  3024 ;; Registers used:
  3025 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3026 ;; Tracked objects:
  3027 ;;		On entry : 0/0
  3028 ;;		On exit  : 0/0
  3029 ;;		Unchanged: 0/0
  3030 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3031 ;;      Params:         0       3       0       0       0
  3032 ;;      Locals:         0       1       0       0       0
  3033 ;;      Temps:          0       0       0       0       0
  3034 ;;      Totals:         0       4       0       0       0
  3035 ;;Total ram usage:        4 bytes
  3036 ;; Hardware stack levels used:    1
  3037 ;; Hardware stack levels required when called:    4
  3038 ;; This function calls:
  3039 ;;		_Adc_Init
  3040 ;;		_Gpio_InitPin
  3041 ;;		___bmul
  3042 ;; This function is called by:
  3043 ;;		_TempSensorTask_Init
  3044 ;; This function uses a non-reentrant model
  3045 ;;
  3046                           
  3047                           
  3048                           ;psect for function _TempSensor_Init
  3049  0AC7                     _TempSensor_Init:
  3050                           
  3051                           ;incstack = 0
  3052                           ; Regs used in _TempSensor_Init: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3053                           ;TempSensor_Init@Id stored from wreg
  3054  0AC7  1283               	bcf	3,5	;RP0=0, select bank0
  3055  0AC8  1303               	bcf	3,6	;RP1=0, select bank0
  3056  0AC9  00B5               	movwf	TempSensor_Init@Id
  3057  0ACA                     l2519:
  3058                           
  3059                           ;TempSensor.c: 16: void TempSensor_Init( Id_t Id, Id_t GpioId, uint8_t Pin, Id_t AdcId )
      +                          ;TempSensor.c: 17: {;TempSensor.c: 18:     TempSensor[ Id ].GpioId = GpioId;
  3060  0ACA  300D               	movlw	13
  3061  0ACB  00FF               	movwf	btemp+1
  3062  0ACC  087F               	movf	btemp+1,w
  3063  0ACD  00A0               	movwf	___bmul@multiplicand
  3064  0ACE  0835               	movf	TempSensor_Init@Id,w
  3065  0ACF  160A  158A  2512  120A  158A  	fcall	___bmul
  3066  0AD4  3EB0               	addlw	(low (_TempSensor| 0))& (0+255)
  3067  0AD5  0084               	movwf	4
  3068  0AD6  1283               	bcf	3,5	;RP0=0, select bank0
  3069  0AD7  1303               	bcf	3,6	;RP1=0, select bank0
  3070  0AD8  0832               	movf	TempSensor_Init@GpioId,w
  3071  0AD9  00FF               	movwf	btemp+1
  3072  0ADA  087F               	movf	btemp+1,w
  3073  0ADB  1383               	bcf	3,7	;select IRP bank1
  3074  0ADC  0080               	movwf	0
  3075                           
  3076                           ;TempSensor.c: 19:     TempSensor[ Id ].Pin = Pin;
  3077  0ADD  300D               	movlw	13
  3078  0ADE  00FF               	movwf	btemp+1
  3079  0ADF  087F               	movf	btemp+1,w
  3080  0AE0  00A0               	movwf	___bmul@multiplicand
  3081  0AE1  0835               	movf	TempSensor_Init@Id,w
  3082  0AE2  160A  158A  2512  120A  158A  	fcall	___bmul
  3083  0AE7  3EB1               	addlw	(low ((_TempSensor| 0+1)))& (0+255)
  3084  0AE8  0084               	movwf	4
  3085  0AE9  1283               	bcf	3,5	;RP0=0, select bank0
  3086  0AEA  1303               	bcf	3,6	;RP1=0, select bank0
  3087  0AEB  0833               	movf	TempSensor_Init@Pin,w
  3088  0AEC  00FF               	movwf	btemp+1
  3089  0AED  087F               	movf	btemp+1,w
  3090  0AEE  1383               	bcf	3,7	;select IRP bank1
  3091  0AEF  0080               	movwf	0
  3092                           
  3093                           ;TempSensor.c: 20:     TempSensor[ Id ].AdcId = AdcId;
  3094  0AF0  300D               	movlw	13
  3095  0AF1  00FF               	movwf	btemp+1
  3096  0AF2  087F               	movf	btemp+1,w
  3097  0AF3  00A0               	movwf	___bmul@multiplicand
  3098  0AF4  0835               	movf	TempSensor_Init@Id,w
  3099  0AF5  160A  158A  2512  120A  158A  	fcall	___bmul
  3100  0AFA  3EB2               	addlw	(low ((_TempSensor| 0+2)))& (0+255)
  3101  0AFB  0084               	movwf	4
  3102  0AFC  1283               	bcf	3,5	;RP0=0, select bank0
  3103  0AFD  1303               	bcf	3,6	;RP1=0, select bank0
  3104  0AFE  0834               	movf	TempSensor_Init@AdcId,w
  3105  0AFF  00FF               	movwf	btemp+1
  3106  0B00  087F               	movf	btemp+1,w
  3107  0B01  1383               	bcf	3,7	;select IRP bank1
  3108  0B02  0080               	movwf	0
  3109                           
  3110                           ;TempSensor.c: 21:     TempSensor[ Id ].Channel = 2;
  3111  0B03  300D               	movlw	13
  3112  0B04  00FF               	movwf	btemp+1
  3113  0B05  087F               	movf	btemp+1,w
  3114  0B06  00A0               	movwf	___bmul@multiplicand
  3115  0B07  0835               	movf	TempSensor_Init@Id,w
  3116  0B08  160A  158A  2512  120A  158A  	fcall	___bmul
  3117  0B0D  3EB3               	addlw	(low ((_TempSensor| 0+3)))& (0+255)
  3118  0B0E  0084               	movwf	4
  3119  0B0F  3002               	movlw	2
  3120  0B10  00FF               	movwf	btemp+1
  3121  0B11  087F               	movf	btemp+1,w
  3122  0B12  1383               	bcf	3,7	;select IRP bank1
  3123  0B13  0080               	movwf	0
  3124                           
  3125                           ;TempSensor.c: 22:     TempSensor[ Id ].VoltMulti = 488281;
  3126  0B14  300D               	movlw	13
  3127  0B15  00FF               	movwf	btemp+1
  3128  0B16  087F               	movf	btemp+1,w
  3129  0B17  1283               	bcf	3,5	;RP0=0, select bank0
  3130  0B18  1303               	bcf	3,6	;RP1=0, select bank0
  3131  0B19  00A0               	movwf	___bmul@multiplicand
  3132  0B1A  0835               	movf	TempSensor_Init@Id,w
  3133  0B1B  160A  158A  2512  120A  158A  	fcall	___bmul
  3134  0B20  3EB4               	addlw	(low ((_TempSensor| 0+4)))& (0+255)
  3135  0B21  0084               	movwf	4
  3136  0B22  3059               	movlw	89
  3137  0B23  1383               	bcf	3,7	;select IRP bank1
  3138  0B24  0080               	movwf	0
  3139  0B25  0A84               	incf	4,f
  3140  0B26  3073               	movlw	115
  3141  0B27  0080               	movwf	0
  3142  0B28  0A84               	incf	4,f
  3143  0B29  3007               	movlw	7
  3144  0B2A  0080               	movwf	0
  3145  0B2B  0A84               	incf	4,f
  3146  0B2C  3000               	movlw	0
  3147  0B2D  0080               	movwf	0
  3148                           
  3149                           ;TempSensor.c: 23:     TempSensor[ Id ].VoltDivide = 1000000;
  3150  0B2E  300D               	movlw	13
  3151  0B2F  00FF               	movwf	btemp+1
  3152  0B30  087F               	movf	btemp+1,w
  3153  0B31  1283               	bcf	3,5	;RP0=0, select bank0
  3154  0B32  1303               	bcf	3,6	;RP1=0, select bank0
  3155  0B33  00A0               	movwf	___bmul@multiplicand
  3156  0B34  0835               	movf	TempSensor_Init@Id,w
  3157  0B35  160A  158A  2512  120A  158A  	fcall	___bmul
  3158  0B3A  3EB8               	addlw	(low ((_TempSensor| 0+8)))& (0+255)
  3159  0B3B  0084               	movwf	4
  3160  0B3C  3040               	movlw	64
  3161  0B3D  1383               	bcf	3,7	;select IRP bank1
  3162  0B3E  0080               	movwf	0
  3163  0B3F  0A84               	incf	4,f
  3164  0B40  3042               	movlw	66
  3165  0B41  0080               	movwf	0
  3166  0B42  0A84               	incf	4,f
  3167  0B43  300F               	movlw	15
  3168  0B44  0080               	movwf	0
  3169  0B45  0A84               	incf	4,f
  3170  0B46  3000               	movlw	0
  3171  0B47  0080               	movwf	0
  3172                           
  3173                           ;TempSensor.c: 24:     TempSensor[ Id ].Result = 0;
  3174  0B48  300D               	movlw	13
  3175  0B49  00FF               	movwf	btemp+1
  3176  0B4A  087F               	movf	btemp+1,w
  3177  0B4B  1283               	bcf	3,5	;RP0=0, select bank0
  3178  0B4C  1303               	bcf	3,6	;RP1=0, select bank0
  3179  0B4D  00A0               	movwf	___bmul@multiplicand
  3180  0B4E  0835               	movf	TempSensor_Init@Id,w
  3181  0B4F  160A  158A  2512  120A  158A  	fcall	___bmul
  3182  0B54  3EBC               	addlw	(low ((_TempSensor| 0+12)))& (0+255)
  3183  0B55  0084               	movwf	4
  3184  0B56  1383               	bcf	3,7	;select IRP bank1
  3185  0B57  0180               	clrf	0
  3186                           
  3187                           ;TempSensor.c: 25:     Gpio_InitPin( TempSensor[ Id ].GpioId, TempSensor[ Id ].Pin, ( 1 
      +                          ) );
  3188  0B58  300D               	movlw	13
  3189  0B59  00FF               	movwf	btemp+1
  3190  0B5A  087F               	movf	btemp+1,w
  3191  0B5B  1283               	bcf	3,5	;RP0=0, select bank0
  3192  0B5C  1303               	bcf	3,6	;RP1=0, select bank0
  3193  0B5D  00A0               	movwf	___bmul@multiplicand
  3194  0B5E  0835               	movf	TempSensor_Init@Id,w
  3195  0B5F  160A  158A  2512  120A  158A  	fcall	___bmul
  3196  0B64  3EB1               	addlw	(low ((_TempSensor| 0+1)))& (0+255)
  3197  0B65  0084               	movwf	4
  3198  0B66  1383               	bcf	3,7	;select IRP bank1
  3199  0B67  0800               	movf	0,w
  3200  0B68  00FF               	movwf	btemp+1
  3201  0B69  087F               	movf	btemp+1,w
  3202  0B6A  1283               	bcf	3,5	;RP0=0, select bank0
  3203  0B6B  1303               	bcf	3,6	;RP1=0, select bank0
  3204  0B6C  00A3               	movwf	Gpio_InitPin@Pin
  3205  0B6D  01A4               	clrf	Gpio_InitPin@Mode
  3206  0B6E  0AA4               	incf	Gpio_InitPin@Mode,f
  3207  0B6F  300D               	movlw	13
  3208  0B70  00FF               	movwf	btemp+1
  3209  0B71  087F               	movf	btemp+1,w
  3210  0B72  00A0               	movwf	___bmul@multiplicand
  3211  0B73  0835               	movf	TempSensor_Init@Id,w
  3212  0B74  160A  158A  2512  120A  158A  	fcall	___bmul
  3213  0B79  3EB0               	addlw	(low (_TempSensor| 0))& (0+255)
  3214  0B7A  0084               	movwf	4
  3215  0B7B  1383               	bcf	3,7	;select IRP bank1
  3216  0B7C  0800               	movf	0,w
  3217  0B7D  160A  118A  2157  120A  158A  	fcall	_Gpio_InitPin
  3218                           
  3219                           ;TempSensor.c: 26:     Adc_Init( TempSensor[ Id ].AdcId );
  3220  0B82  300D               	movlw	13
  3221  0B83  00FF               	movwf	btemp+1
  3222  0B84  087F               	movf	btemp+1,w
  3223  0B85  1283               	bcf	3,5	;RP0=0, select bank0
  3224  0B86  1303               	bcf	3,6	;RP1=0, select bank0
  3225  0B87  00A0               	movwf	___bmul@multiplicand
  3226  0B88  0835               	movf	TempSensor_Init@Id,w
  3227  0B89  160A  158A  2512  120A  158A  	fcall	___bmul
  3228  0B8E  3EB2               	addlw	(low ((_TempSensor| 0+2)))& (0+255)
  3229  0B8F  0084               	movwf	4
  3230  0B90  1383               	bcf	3,7	;select IRP bank1
  3231  0B91  0800               	movf	0,w
  3232  0B92  160A  158A  240F  120A  158A  	fcall	_Adc_Init
  3233  0B97                     l425:
  3234  0B97  0008               	return
  3235  0B98                     __end_of_TempSensor_Init:
  3236                           
  3237                           	psect	text3
  3238  1C0F                     __ptext3:	
  3239 ;; *************** function _Adc_Init *****************
  3240 ;; Defined at:
  3241 ;;		line 3 in file "Adc.c"
  3242 ;; Parameters:    Size  Location     Type
  3243 ;;  Id              1    wreg     unsigned char 
  3244 ;; Auto vars:     Size  Location     Type
  3245 ;;  Id              1    0[COMMON] unsigned char 
  3246 ;; Return value:  Size  Location     Type
  3247 ;;                  1    wreg      void 
  3248 ;; Registers used:
  3249 ;;		wreg, status,2
  3250 ;; Tracked objects:
  3251 ;;		On entry : 0/0
  3252 ;;		On exit  : 0/0
  3253 ;;		Unchanged: 0/0
  3254 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3255 ;;      Params:         0       0       0       0       0
  3256 ;;      Locals:         0       0       0       0       0
  3257 ;;      Temps:          0       0       0       0       0
  3258 ;;      Totals:         0       0       0       0       0
  3259 ;;Total ram usage:        0 bytes
  3260 ;; Hardware stack levels used:    1
  3261 ;; Hardware stack levels required when called:    3
  3262 ;; This function calls:
  3263 ;;		Nothing
  3264 ;; This function is called by:
  3265 ;;		_TempSensor_Init
  3266 ;; This function uses a non-reentrant model
  3267 ;;
  3268                           
  3269                           
  3270                           ;psect for function _Adc_Init
  3271  1C0F                     _Adc_Init:
  3272  1C0F                     l2147:	
  3273                           ;incstack = 0
  3274                           ; Regs used in _Adc_Init: [wreg+status,2]
  3275                           
  3276                           
  3277                           ;Adc.c: 3: void Adc_Init( Id_t Id );Adc.c: 4: {;Adc.c: 5:     ADCON0 = ADCON0 | 0x41;
  3278  1C0F  1283               	bcf	3,5	;RP0=0, select bank0
  3279  1C10  1303               	bcf	3,6	;RP1=0, select bank0
  3280  1C11  081F               	movf	31,w	;volatile
  3281  1C12  3841               	iorlw	65
  3282  1C13  009F               	movwf	31	;volatile
  3283                           
  3284                           ;Adc.c: 6:     ADCON1 = ADCON1 | 0xC0;
  3285  1C14  1683               	bsf	3,5	;RP0=1, select bank1
  3286  1C15  1303               	bcf	3,6	;RP1=0, select bank1
  3287  1C16  081F               	movf	31,w	;volatile
  3288  1C17  38C0               	iorlw	192
  3289  1C18  009F               	movwf	31	;volatile
  3290  1C19                     l229:
  3291  1C19  0008               	return
  3292  1C1A                     __end_of_Adc_Init:
  3293                           
  3294                           	psect	text4
  3295  1DAB                     __ptext4:	
  3296 ;; *************** function _TempControlTask_Init *****************
  3297 ;; Defined at:
  3298 ;;		line 10 in file "TempControlTask.c"
  3299 ;; Parameters:    Size  Location     Type
  3300 ;;  Id              1    wreg     unsigned char 
  3301 ;;  hGpioId         1   25[BANK0 ] unsigned char 
  3302 ;;  hPin            1   26[BANK0 ] unsigned char 
  3303 ;;  cGpioId         1   27[BANK0 ] unsigned char 
  3304 ;;  cPin            1   28[BANK0 ] unsigned char 
  3305 ;; Auto vars:     Size  Location     Type
  3306 ;;  Id              1   29[BANK0 ] unsigned char 
  3307 ;; Return value:  Size  Location     Type
  3308 ;;                  1    wreg      void 
  3309 ;; Registers used:
  3310 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3311 ;; Tracked objects:
  3312 ;;		On entry : 0/0
  3313 ;;		On exit  : 0/0
  3314 ;;		Unchanged: 0/0
  3315 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3316 ;;      Params:         0       4       0       0       0
  3317 ;;      Locals:         0       1       0       0       0
  3318 ;;      Temps:          0       0       0       0       0
  3319 ;;      Totals:         0       5       0       0       0
  3320 ;;Total ram usage:        5 bytes
  3321 ;; Hardware stack levels used:    1
  3322 ;; Hardware stack levels required when called:    5
  3323 ;; This function calls:
  3324 ;;		_TempControl_Init
  3325 ;; This function is called by:
  3326 ;;		_main
  3327 ;; This function uses a non-reentrant model
  3328 ;;
  3329                           
  3330                           
  3331                           ;psect for function _TempControlTask_Init
  3332  1DAB                     _TempControlTask_Init:
  3333                           
  3334                           ;incstack = 0
  3335                           ; Regs used in _TempControlTask_Init: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstac
      +                          k]
  3336                           ;TempControlTask_Init@Id stored from wreg
  3337  1DAB  1283               	bcf	3,5	;RP0=0, select bank0
  3338  1DAC  1303               	bcf	3,6	;RP1=0, select bank0
  3339  1DAD  00BD               	movwf	TempControlTask_Init@Id
  3340  1DAE                     l2621:
  3341                           
  3342                           ;TempControlTask.c: 10: void TempControlTask_Init( Id_t Id, Id_t hGpioId, uint8_t hPin, 
      +                          Id_t cGpioId, uint8_t cPin );TempControlTask.c: 11: {;TempControlTask.c: 12:     TempCon
      +                          trolTask[ Id ].State = 0;
  3343  1DAE  083D               	movf	TempControlTask_Init@Id,w
  3344  1DAF  3E55               	addlw	(low (_TempControlTask| 0))& (0+255)
  3345  1DB0  0084               	movwf	4
  3346  1DB1  1383               	bcf	3,7	;select IRP bank0
  3347  1DB2  0180               	clrf	0
  3348  1DB3                     l2623:
  3349                           
  3350                           ;TempControlTask.c: 13:     TempControl_Init( Id, hGpioId, hPin, cGpioId, cPin );
  3351  1DB3  0839               	movf	TempControlTask_Init@hGpioId,w
  3352  1DB4  00FF               	movwf	btemp+1
  3353  1DB5  087F               	movf	btemp+1,w
  3354  1DB6  00B2               	movwf	TempControl_Init@hGpioId
  3355  1DB7  083A               	movf	TempControlTask_Init@hPin,w
  3356  1DB8  00FF               	movwf	btemp+1
  3357  1DB9  087F               	movf	btemp+1,w
  3358  1DBA  00B3               	movwf	TempControl_Init@hPin
  3359  1DBB  083B               	movf	TempControlTask_Init@cGpioId,w
  3360  1DBC  00FF               	movwf	btemp+1
  3361  1DBD  087F               	movf	btemp+1,w
  3362  1DBE  00B4               	movwf	TempControl_Init@cGpioId
  3363  1DBF  083C               	movf	TempControlTask_Init@cPin,w
  3364  1DC0  00FF               	movwf	btemp+1
  3365  1DC1  087F               	movf	btemp+1,w
  3366  1DC2  00B5               	movwf	TempControl_Init@cPin
  3367  1DC3  083D               	movf	TempControlTask_Init@Id,w
  3368  1DC4  160A  118A  2772  160A  158A  	fcall	_TempControl_Init
  3369  1DC9                     l437:
  3370  1DC9  0008               	return
  3371  1DCA                     __end_of_TempControlTask_Init:
  3372                           
  3373                           	psect	text5
  3374  1772                     __ptext5:	
  3375 ;; *************** function _TempControl_Init *****************
  3376 ;; Defined at:
  3377 ;;		line 13 in file "TempControl.c"
  3378 ;; Parameters:    Size  Location     Type
  3379 ;;  Id              1    wreg     unsigned char 
  3380 ;;  hGpioId         1   18[BANK0 ] unsigned char 
  3381 ;;  hPin            1   19[BANK0 ] unsigned char 
  3382 ;;  cGpioId         1   20[BANK0 ] unsigned char 
  3383 ;;  cPin            1   21[BANK0 ] unsigned char 
  3384 ;; Auto vars:     Size  Location     Type
  3385 ;;  Id              1   24[BANK0 ] unsigned char 
  3386 ;; Return value:  Size  Location     Type
  3387 ;;                  1    wreg      void 
  3388 ;; Registers used:
  3389 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3390 ;; Tracked objects:
  3391 ;;		On entry : 0/0
  3392 ;;		On exit  : 0/0
  3393 ;;		Unchanged: 0/0
  3394 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3395 ;;      Params:         0       4       0       0       0
  3396 ;;      Locals:         0       1       0       0       0
  3397 ;;      Temps:          0       2       0       0       0
  3398 ;;      Totals:         0       7       0       0       0
  3399 ;;Total ram usage:        7 bytes
  3400 ;; Hardware stack levels used:    1
  3401 ;; Hardware stack levels required when called:    4
  3402 ;; This function calls:
  3403 ;;		_Gpio_InitPin
  3404 ;; This function is called by:
  3405 ;;		_TempControlTask_Init
  3406 ;; This function uses a non-reentrant model
  3407 ;;
  3408                           
  3409                           
  3410                           ;psect for function _TempControl_Init
  3411  1772                     _TempControl_Init:
  3412                           
  3413                           ;incstack = 0
  3414                           ; Regs used in _TempControl_Init: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3415                           ;TempControl_Init@Id stored from wreg
  3416  1772  1283               	bcf	3,5	;RP0=0, select bank0
  3417  1773  1303               	bcf	3,6	;RP1=0, select bank0
  3418  1774  00B8               	movwf	TempControl_Init@Id
  3419  1775                     l2547:
  3420                           
  3421                           ;TempControl.c: 13: void TempControl_Init( Id_t Id, Id_t hGpioId, uint8_t hPin, Id_t cGp
      +                          ioId, uint8_t cPin );TempControl.c: 14: {;TempControl.c: 15:     TempControl[ Id ].GpioI
      +                          dH = hGpioId;
  3422  1775  0832               	movf	TempControl_Init@hGpioId,w
  3423  1776  00FF               	movwf	btemp+1
  3424  1777  0838               	movf	TempControl_Init@Id,w
  3425  1778  00B6               	movwf	??_TempControl_Init
  3426  1779  3001               	movlw	1
  3427  177A                     u3025:
  3428  177A  1003               	clrc
  3429  177B  0DB6               	rlf	??_TempControl_Init,f
  3430  177C  3EFF               	addlw	-1
  3431  177D  1D03               	skipz
  3432  177E  2F7A               	goto	u3025
  3433  177F  1003               	clrc
  3434  1780  0D36               	rlf	??_TempControl_Init,w
  3435  1781  3E51               	addlw	(low (_TempControl| 0))& (0+255)
  3436  1782  0084               	movwf	4
  3437  1783  087F               	movf	btemp+1,w
  3438  1784  1383               	bcf	3,7	;select IRP bank0
  3439  1785  0080               	movwf	0
  3440                           
  3441                           ;TempControl.c: 16:     TempControl[ Id ].PinH = hPin;
  3442  1786  0833               	movf	TempControl_Init@hPin,w
  3443  1787  00FF               	movwf	btemp+1
  3444  1788  0838               	movf	TempControl_Init@Id,w
  3445  1789  00B6               	movwf	??_TempControl_Init
  3446  178A  3001               	movlw	1
  3447  178B                     u3035:
  3448  178B  1003               	clrc
  3449  178C  0DB6               	rlf	??_TempControl_Init,f
  3450  178D  3EFF               	addlw	-1
  3451  178E  1D03               	skipz
  3452  178F  2F8B               	goto	u3035
  3453  1790  1003               	clrc
  3454  1791  0D36               	rlf	??_TempControl_Init,w
  3455  1792  3E52               	addlw	(low ((_TempControl| 0+1)))& (0+255)
  3456  1793  0084               	movwf	4
  3457  1794  087F               	movf	btemp+1,w
  3458  1795  0080               	movwf	0
  3459                           
  3460                           ;TempControl.c: 17:     TempControl[ Id ].GpioIdC = cGpioId;
  3461  1796  0834               	movf	TempControl_Init@cGpioId,w
  3462  1797  00FF               	movwf	btemp+1
  3463  1798  0838               	movf	TempControl_Init@Id,w
  3464  1799  00B6               	movwf	??_TempControl_Init
  3465  179A  3001               	movlw	1
  3466  179B                     u3045:
  3467  179B  1003               	clrc
  3468  179C  0DB6               	rlf	??_TempControl_Init,f
  3469  179D  3EFF               	addlw	-1
  3470  179E  1D03               	skipz
  3471  179F  2F9B               	goto	u3045
  3472  17A0  1003               	clrc
  3473  17A1  0D36               	rlf	??_TempControl_Init,w
  3474  17A2  3E53               	addlw	(low ((_TempControl| 0+2)))& (0+255)
  3475  17A3  0084               	movwf	4
  3476  17A4  087F               	movf	btemp+1,w
  3477  17A5  0080               	movwf	0
  3478                           
  3479                           ;TempControl.c: 18:     TempControl[ Id ].PinC = cPin;
  3480  17A6  0835               	movf	TempControl_Init@cPin,w
  3481  17A7  00FF               	movwf	btemp+1
  3482  17A8  0838               	movf	TempControl_Init@Id,w
  3483  17A9  00B6               	movwf	??_TempControl_Init
  3484  17AA  3001               	movlw	1
  3485  17AB                     u3055:
  3486  17AB  1003               	clrc
  3487  17AC  0DB6               	rlf	??_TempControl_Init,f
  3488  17AD  3EFF               	addlw	-1
  3489  17AE  1D03               	skipz
  3490  17AF  2FAB               	goto	u3055
  3491  17B0  1003               	clrc
  3492  17B1  0D36               	rlf	??_TempControl_Init,w
  3493  17B2  3E54               	addlw	(low ((_TempControl| 0+3)))& (0+255)
  3494  17B3  0084               	movwf	4
  3495  17B4  087F               	movf	btemp+1,w
  3496  17B5  0080               	movwf	0
  3497  17B6                     l2549:
  3498                           
  3499                           ;TempControl.c: 19:     Gpio_InitPin( TempControl[ Id ].GpioIdH, TempControl[ Id ].PinH,
      +                           ( 0 ) );
  3500  17B6  0838               	movf	TempControl_Init@Id,w
  3501  17B7  00B6               	movwf	??_TempControl_Init
  3502  17B8  3001               	movlw	1
  3503  17B9                     u3065:
  3504  17B9  1003               	clrc
  3505  17BA  0DB6               	rlf	??_TempControl_Init,f
  3506  17BB  3EFF               	addlw	-1
  3507  17BC  1D03               	skipz
  3508  17BD  2FB9               	goto	u3065
  3509  17BE  1003               	clrc
  3510  17BF  0D36               	rlf	??_TempControl_Init,w
  3511  17C0  3E52               	addlw	(low ((_TempControl| 0+1)))& (0+255)
  3512  17C1  0084               	movwf	4
  3513  17C2  0800               	movf	0,w
  3514  17C3  00FF               	movwf	btemp+1
  3515  17C4  087F               	movf	btemp+1,w
  3516  17C5  00A3               	movwf	Gpio_InitPin@Pin
  3517  17C6  01A4               	clrf	Gpio_InitPin@Mode
  3518  17C7  0838               	movf	TempControl_Init@Id,w
  3519  17C8  00B7               	movwf	??_TempControl_Init+1
  3520  17C9  3001               	movlw	1
  3521  17CA                     u3075:
  3522  17CA  1003               	clrc
  3523  17CB  0DB7               	rlf	??_TempControl_Init+1,f
  3524  17CC  3EFF               	addlw	-1
  3525  17CD  1D03               	skipz
  3526  17CE  2FCA               	goto	u3075
  3527  17CF  1003               	clrc
  3528  17D0  0D37               	rlf	??_TempControl_Init+1,w
  3529  17D1  3E51               	addlw	(low (_TempControl| 0))& (0+255)
  3530  17D2  0084               	movwf	4
  3531  17D3  0800               	movf	0,w
  3532  17D4  160A  118A  2157  160A  118A  	fcall	_Gpio_InitPin
  3533  17D9                     l2551:
  3534                           
  3535                           ;TempControl.c: 20:     Gpio_InitPin( TempControl[ Id ].GpioIdC, TempControl[ Id ].PinC,
      +                           ( 0 ) );
  3536  17D9  1283               	bcf	3,5	;RP0=0, select bank0
  3537  17DA  1303               	bcf	3,6	;RP1=0, select bank0
  3538  17DB  0838               	movf	TempControl_Init@Id,w
  3539  17DC  00B6               	movwf	??_TempControl_Init
  3540  17DD  3001               	movlw	1
  3541  17DE                     u3085:
  3542  17DE  1003               	clrc
  3543  17DF  0DB6               	rlf	??_TempControl_Init,f
  3544  17E0  3EFF               	addlw	-1
  3545  17E1  1D03               	skipz
  3546  17E2  2FDE               	goto	u3085
  3547  17E3  1003               	clrc
  3548  17E4  0D36               	rlf	??_TempControl_Init,w
  3549  17E5  3E54               	addlw	(low ((_TempControl| 0+3)))& (0+255)
  3550  17E6  0084               	movwf	4
  3551  17E7  1383               	bcf	3,7	;select IRP bank0
  3552  17E8  0800               	movf	0,w
  3553  17E9  00FF               	movwf	btemp+1
  3554  17EA  087F               	movf	btemp+1,w
  3555  17EB  00A3               	movwf	Gpio_InitPin@Pin
  3556  17EC  01A4               	clrf	Gpio_InitPin@Mode
  3557  17ED  0838               	movf	TempControl_Init@Id,w
  3558  17EE  00B7               	movwf	??_TempControl_Init+1
  3559  17EF  3001               	movlw	1
  3560  17F0                     u3095:
  3561  17F0  1003               	clrc
  3562  17F1  0DB7               	rlf	??_TempControl_Init+1,f
  3563  17F2  3EFF               	addlw	-1
  3564  17F3  1D03               	skipz
  3565  17F4  2FF0               	goto	u3095
  3566  17F5  1003               	clrc
  3567  17F6  0D37               	rlf	??_TempControl_Init+1,w
  3568  17F7  3E53               	addlw	(low ((_TempControl| 0+2)))& (0+255)
  3569  17F8  0084               	movwf	4
  3570  17F9  0800               	movf	0,w
  3571  17FA  160A  118A  2157  160A  118A  	fcall	_Gpio_InitPin
  3572  17FF                     l452:
  3573  17FF  0008               	return
  3574  1800                     __end_of_TempControl_Init:
  3575                           
  3576                           	psect	text6
  3577  1043                     __ptext6:	
  3578 ;; *************** function _SwitchTask_Init *****************
  3579 ;; Defined at:
  3580 ;;		line 12 in file "SwitchTask.c"
  3581 ;; Parameters:    Size  Location     Type
  3582 ;;  Id              1    wreg     unsigned char 
  3583 ;;  GpioId          1   23[BANK0 ] unsigned char 
  3584 ;;  Pin             1   24[BANK0 ] unsigned char 
  3585 ;; Auto vars:     Size  Location     Type
  3586 ;;  Id              1   25[BANK0 ] unsigned char 
  3587 ;; Return value:  Size  Location     Type
  3588 ;;                  1    wreg      void 
  3589 ;; Registers used:
  3590 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3591 ;; Tracked objects:
  3592 ;;		On entry : 0/0
  3593 ;;		On exit  : 0/0
  3594 ;;		Unchanged: 0/0
  3595 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3596 ;;      Params:         0       2       0       0       0
  3597 ;;      Locals:         0       1       0       0       0
  3598 ;;      Temps:          0       0       0       0       0
  3599 ;;      Totals:         0       3       0       0       0
  3600 ;;Total ram usage:        3 bytes
  3601 ;; Hardware stack levels used:    1
  3602 ;; Hardware stack levels required when called:    5
  3603 ;; This function calls:
  3604 ;;		_Switch_Init
  3605 ;;		___bmul
  3606 ;; This function is called by:
  3607 ;;		_main
  3608 ;; This function uses a non-reentrant model
  3609 ;;
  3610                           
  3611                           
  3612                           ;psect for function _SwitchTask_Init
  3613  1043                     _SwitchTask_Init:
  3614                           
  3615                           ;incstack = 0
  3616                           ; Regs used in _SwitchTask_Init: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3617                           ;SwitchTask_Init@Id stored from wreg
  3618  1043  1283               	bcf	3,5	;RP0=0, select bank0
  3619  1044  1303               	bcf	3,6	;RP1=0, select bank0
  3620  1045  00B9               	movwf	SwitchTask_Init@Id
  3621  1046                     l2605:
  3622                           
  3623                           ;SwitchTask.c: 12: void SwitchTask_Init( Id_t Id, Id_t GpioId, uint8_t Pin );SwitchTask.
      +                          c: 13: {;SwitchTask.c: 14:     SwitchTask[ Id ].Lock = 0;
  3624  1046  3003               	movlw	3
  3625  1047  00FF               	movwf	btemp+1
  3626  1048  087F               	movf	btemp+1,w
  3627  1049  00A0               	movwf	___bmul@multiplicand
  3628  104A  0839               	movf	SwitchTask_Init@Id,w
  3629  104B  160A  158A  2512  160A  118A  	fcall	___bmul
  3630  1050  3EC9               	addlw	(low (_SwitchTask| 0))& (0+255)
  3631  1051  0084               	movwf	4
  3632  1052  1383               	bcf	3,7	;select IRP bank1
  3633  1053  0180               	clrf	0
  3634                           
  3635                           ;SwitchTask.c: 15:     SwitchTask[ Id ].Counter = 0;
  3636  1054  3003               	movlw	3
  3637  1055  00FF               	movwf	btemp+1
  3638  1056  087F               	movf	btemp+1,w
  3639  1057  1283               	bcf	3,5	;RP0=0, select bank0
  3640  1058  1303               	bcf	3,6	;RP1=0, select bank0
  3641  1059  00A0               	movwf	___bmul@multiplicand
  3642  105A  0839               	movf	SwitchTask_Init@Id,w
  3643  105B  160A  158A  2512  160A  118A  	fcall	___bmul
  3644  1060  3ECA               	addlw	(low ((_SwitchTask| 0+1)))& (0+255)
  3645  1061  0084               	movwf	4
  3646  1062  1383               	bcf	3,7	;select IRP bank1
  3647  1063  0180               	clrf	0
  3648                           
  3649                           ;SwitchTask.c: 16:     SwitchTask[ Id ].State = ( 0 );
  3650  1064  3003               	movlw	3
  3651  1065  00FF               	movwf	btemp+1
  3652  1066  087F               	movf	btemp+1,w
  3653  1067  1283               	bcf	3,5	;RP0=0, select bank0
  3654  1068  1303               	bcf	3,6	;RP1=0, select bank0
  3655  1069  00A0               	movwf	___bmul@multiplicand
  3656  106A  0839               	movf	SwitchTask_Init@Id,w
  3657  106B  160A  158A  2512  160A  118A  	fcall	___bmul
  3658  1070  3ECB               	addlw	(low ((_SwitchTask| 0+2)))& (0+255)
  3659  1071  0084               	movwf	4
  3660  1072  1383               	bcf	3,7	;select IRP bank1
  3661  1073  0180               	clrf	0
  3662                           
  3663                           ;SwitchTask.c: 17:     Switch_Init( Id, GpioId, Pin );
  3664  1074  1283               	bcf	3,5	;RP0=0, select bank0
  3665  1075  1303               	bcf	3,6	;RP1=0, select bank0
  3666  1076  0837               	movf	SwitchTask_Init@GpioId,w
  3667  1077  00FF               	movwf	btemp+1
  3668  1078  087F               	movf	btemp+1,w
  3669  1079  00B2               	movwf	Switch_Init@GpioId
  3670  107A  0838               	movf	SwitchTask_Init@Pin,w
  3671  107B  00FF               	movwf	btemp+1
  3672  107C  087F               	movf	btemp+1,w
  3673  107D  00B3               	movwf	Switch_Init@Pin
  3674  107E  0839               	movf	SwitchTask_Init@Id,w
  3675  107F  160A  158A  2735  160A  118A  	fcall	_Switch_Init
  3676  1084                     l356:
  3677  1084  0008               	return
  3678  1085                     __end_of_SwitchTask_Init:
  3679                           
  3680                           	psect	text7
  3681  1F35                     __ptext7:	
  3682 ;; *************** function _Switch_Init *****************
  3683 ;; Defined at:
  3684 ;;		line 11 in file "Switch.c"
  3685 ;; Parameters:    Size  Location     Type
  3686 ;;  Id              1    wreg     unsigned char 
  3687 ;;  GpioId          1   18[BANK0 ] unsigned char 
  3688 ;;  Pin             1   19[BANK0 ] unsigned char 
  3689 ;; Auto vars:     Size  Location     Type
  3690 ;;  Id              1   22[BANK0 ] unsigned char 
  3691 ;; Return value:  Size  Location     Type
  3692 ;;                  1    wreg      void 
  3693 ;; Registers used:
  3694 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3695 ;; Tracked objects:
  3696 ;;		On entry : 0/0
  3697 ;;		On exit  : 0/0
  3698 ;;		Unchanged: 0/0
  3699 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3700 ;;      Params:         0       2       0       0       0
  3701 ;;      Locals:         0       1       0       0       0
  3702 ;;      Temps:          0       2       0       0       0
  3703 ;;      Totals:         0       5       0       0       0
  3704 ;;Total ram usage:        5 bytes
  3705 ;; Hardware stack levels used:    1
  3706 ;; Hardware stack levels required when called:    4
  3707 ;; This function calls:
  3708 ;;		_Gpio_InitPin
  3709 ;; This function is called by:
  3710 ;;		_SwitchTask_Init
  3711 ;; This function uses a non-reentrant model
  3712 ;;
  3713                           
  3714                           
  3715                           ;psect for function _Switch_Init
  3716  1F35                     _Switch_Init:
  3717                           
  3718                           ;incstack = 0
  3719                           ; Regs used in _Switch_Init: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3720                           ;Switch_Init@Id stored from wreg
  3721  1F35  1283               	bcf	3,5	;RP0=0, select bank0
  3722  1F36  1303               	bcf	3,6	;RP1=0, select bank0
  3723  1F37  00B6               	movwf	Switch_Init@Id
  3724  1F38                     l2343:
  3725                           
  3726                           ;Switch.c: 11: void Switch_Init( Id_t Id, Id_t GpioId, uint8_t Pin );Switch.c: 12: {;Swi
      +                          tch.c: 13:     Switch[ Id ].GpioId = GpioId;
  3727  1F38  0832               	movf	Switch_Init@GpioId,w
  3728  1F39  00FF               	movwf	btemp+1
  3729  1F3A  0836               	movf	Switch_Init@Id,w
  3730  1F3B  00B4               	movwf	??_Switch_Init
  3731  1F3C  0734               	addwf	??_Switch_Init,w
  3732  1F3D  3ED2               	addlw	(low (_Switch| 0))& (0+255)
  3733  1F3E  0084               	movwf	4
  3734  1F3F  087F               	movf	btemp+1,w
  3735  1F40  1383               	bcf	3,7	;select IRP bank1
  3736  1F41  0080               	movwf	0
  3737                           
  3738                           ;Switch.c: 14:     Switch[ Id ].Pin = Pin;
  3739  1F42  0833               	movf	Switch_Init@Pin,w
  3740  1F43  00FF               	movwf	btemp+1
  3741  1F44  0836               	movf	Switch_Init@Id,w
  3742  1F45  00B4               	movwf	??_Switch_Init
  3743  1F46  0734               	addwf	??_Switch_Init,w
  3744  1F47  3ED3               	addlw	(low ((_Switch| 0+1)))& (0+255)
  3745  1F48  0084               	movwf	4
  3746  1F49  087F               	movf	btemp+1,w
  3747  1F4A  0080               	movwf	0
  3748  1F4B                     l2345:
  3749                           
  3750                           ;Switch.c: 15:     Gpio_InitPin( Switch[ Id ].GpioId, Switch[ Id ].Pin, ( 1 ) );
  3751  1F4B  0836               	movf	Switch_Init@Id,w
  3752  1F4C  00B4               	movwf	??_Switch_Init
  3753  1F4D  0734               	addwf	??_Switch_Init,w
  3754  1F4E  3ED3               	addlw	(low ((_Switch| 0+1)))& (0+255)
  3755  1F4F  0084               	movwf	4
  3756  1F50  0800               	movf	0,w
  3757  1F51  00FF               	movwf	btemp+1
  3758  1F52  087F               	movf	btemp+1,w
  3759  1F53  00A3               	movwf	Gpio_InitPin@Pin
  3760  1F54  01A4               	clrf	Gpio_InitPin@Mode
  3761  1F55  0AA4               	incf	Gpio_InitPin@Mode,f
  3762  1F56  0836               	movf	Switch_Init@Id,w
  3763  1F57  00B5               	movwf	??_Switch_Init+1
  3764  1F58  0735               	addwf	??_Switch_Init+1,w
  3765  1F59  3ED2               	addlw	(low (_Switch| 0))& (0+255)
  3766  1F5A  0084               	movwf	4
  3767  1F5B  0800               	movf	0,w
  3768  1F5C  160A  118A  2157  160A  158A  	fcall	_Gpio_InitPin
  3769  1F61                     l167:
  3770  1F61  0008               	return
  3771  1F62                     __end_of_Switch_Init:
  3772                           
  3773                           	psect	text8
  3774  1602                     __ptext8:	
  3775 ;; *************** function _SsdTask_Init *****************
  3776 ;; Defined at:
  3777 ;;		line 15 in file "SsdTask.c"
  3778 ;; Parameters:    Size  Location     Type
  3779 ;;  Id              1    wreg     unsigned char 
  3780 ;;  ctrlGpioId      1   28[BANK0 ] unsigned char 
  3781 ;;  ctrlPin         1   29[BANK0 ] unsigned char 
  3782 ;;  dataGpioId      1   30[BANK0 ] unsigned char 
  3783 ;;  dataPin         1   31[BANK0 ] unsigned char 
  3784 ;; Auto vars:     Size  Location     Type
  3785 ;;  Id              1   33[BANK0 ] unsigned char 
  3786 ;; Return value:  Size  Location     Type
  3787 ;;                  1    wreg      void 
  3788 ;; Registers used:
  3789 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3790 ;; Tracked objects:
  3791 ;;		On entry : 0/0
  3792 ;;		On exit  : 0/0
  3793 ;;		Unchanged: 0/0
  3794 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3795 ;;      Params:         0       4       0       0       0
  3796 ;;      Locals:         0       1       0       0       0
  3797 ;;      Temps:          0       1       0       0       0
  3798 ;;      Totals:         0       6       0       0       0
  3799 ;;Total ram usage:        6 bytes
  3800 ;; Hardware stack levels used:    1
  3801 ;; Hardware stack levels required when called:    5
  3802 ;; This function calls:
  3803 ;;		_Ssd_Init
  3804 ;; This function is called by:
  3805 ;;		_main
  3806 ;; This function uses a non-reentrant model
  3807 ;;
  3808                           
  3809                           
  3810                           ;psect for function _SsdTask_Init
  3811  1602                     _SsdTask_Init:
  3812                           
  3813                           ;incstack = 0
  3814                           ; Regs used in _SsdTask_Init: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3815                           ;SsdTask_Init@Id stored from wreg
  3816  1602  1283               	bcf	3,5	;RP0=0, select bank0
  3817  1603  1303               	bcf	3,6	;RP1=0, select bank0
  3818  1604  00C1               	movwf	SsdTask_Init@Id
  3819  1605                     l2627:
  3820                           
  3821                           ;SsdTask.c: 15: void SsdTask_Init( Id_t Id, Id_t ctrlGpioId, uint8_t ctrlPin, Id_t dataG
      +                          pioId, uint8_t dataPin );SsdTask.c: 16: {;SsdTask.c: 17:     SsdTask[ Id ].Counter = Id;
  3822  1605  0841               	movf	SsdTask_Init@Id,w
  3823  1606  00FF               	movwf	btemp+1
  3824  1607  0841               	movf	SsdTask_Init@Id,w
  3825  1608  00C0               	movwf	??_SsdTask_Init
  3826  1609  3002               	movlw	2
  3827  160A                     u3215:
  3828  160A  1003               	clrc
  3829  160B  0DC0               	rlf	??_SsdTask_Init,f
  3830  160C  3EFF               	addlw	-1
  3831  160D  1D03               	skipz
  3832  160E  2E0A               	goto	u3215
  3833  160F  1003               	clrc
  3834  1610  0D40               	rlf	??_SsdTask_Init,w
  3835  1611  3EA0               	addlw	(low (_SsdTask| 0))& (0+255)
  3836  1612  0084               	movwf	4
  3837  1613  087F               	movf	btemp+1,w
  3838  1614  1383               	bcf	3,7	;select IRP bank1
  3839  1615  0080               	movwf	0
  3840  1616                     l2629:
  3841                           
  3842                           ;SsdTask.c: 18:     SsdTask[ Id ].Symbol = 0;
  3843  1616  0841               	movf	SsdTask_Init@Id,w
  3844  1617  00C0               	movwf	??_SsdTask_Init
  3845  1618  3002               	movlw	2
  3846  1619                     u3225:
  3847  1619  1003               	clrc
  3848  161A  0DC0               	rlf	??_SsdTask_Init,f
  3849  161B  3EFF               	addlw	-1
  3850  161C  1D03               	skipz
  3851  161D  2E19               	goto	u3225
  3852  161E  1003               	clrc
  3853  161F  0D40               	rlf	??_SsdTask_Init,w
  3854  1620  3EA1               	addlw	(low ((_SsdTask| 0+1)))& (0+255)
  3855  1621  0084               	movwf	4
  3856  1622  0180               	clrf	0
  3857  1623                     l2631:
  3858                           
  3859                           ;SsdTask.c: 19:     SsdTask[ Id ].State = ( 0 );
  3860  1623  0841               	movf	SsdTask_Init@Id,w
  3861  1624  00C0               	movwf	??_SsdTask_Init
  3862  1625  3002               	movlw	2
  3863  1626                     u3235:
  3864  1626  1003               	clrc
  3865  1627  0DC0               	rlf	??_SsdTask_Init,f
  3866  1628  3EFF               	addlw	-1
  3867  1629  1D03               	skipz
  3868  162A  2E26               	goto	u3235
  3869  162B  1003               	clrc
  3870  162C  0D40               	rlf	??_SsdTask_Init,w
  3871  162D  3EA2               	addlw	(low ((_SsdTask| 0+2)))& (0+255)
  3872  162E  0084               	movwf	4
  3873  162F  0180               	clrf	0
  3874  1630                     l2633:
  3875                           
  3876                           ;SsdTask.c: 20:     SsdTask[ Id ].Blink = 0;
  3877  1630  0841               	movf	SsdTask_Init@Id,w
  3878  1631  00C0               	movwf	??_SsdTask_Init
  3879  1632  3002               	movlw	2
  3880  1633                     u3245:
  3881  1633  1003               	clrc
  3882  1634  0DC0               	rlf	??_SsdTask_Init,f
  3883  1635  3EFF               	addlw	-1
  3884  1636  1D03               	skipz
  3885  1637  2E33               	goto	u3245
  3886  1638  1003               	clrc
  3887  1639  0D40               	rlf	??_SsdTask_Init,w
  3888  163A  3EA3               	addlw	(low ((_SsdTask| 0+3)))& (0+255)
  3889  163B  0084               	movwf	4
  3890  163C  0180               	clrf	0
  3891  163D                     l2635:
  3892                           
  3893                           ;SsdTask.c: 21:     SsdTask[ Id ].Period = 0;
  3894  163D  0841               	movf	SsdTask_Init@Id,w
  3895  163E  00C0               	movwf	??_SsdTask_Init
  3896  163F  3002               	movlw	2
  3897  1640                     u3255:
  3898  1640  1003               	clrc
  3899  1641  0DC0               	rlf	??_SsdTask_Init,f
  3900  1642  3EFF               	addlw	-1
  3901  1643  1D03               	skipz
  3902  1644  2E40               	goto	u3255
  3903  1645  1003               	clrc
  3904  1646  0D40               	rlf	??_SsdTask_Init,w
  3905  1647  3EA4               	addlw	(low ((_SsdTask| 0+4)))& (0+255)
  3906  1648  0084               	movwf	4
  3907  1649  0180               	clrf	0
  3908  164A  0A84               	incf	4,f
  3909  164B  0180               	clrf	0
  3910  164C                     l2637:
  3911                           
  3912                           ;SsdTask.c: 22:     SsdTask[ Id ].Delay = 0;
  3913  164C  0841               	movf	SsdTask_Init@Id,w
  3914  164D  00C0               	movwf	??_SsdTask_Init
  3915  164E  3002               	movlw	2
  3916  164F                     u3265:
  3917  164F  1003               	clrc
  3918  1650  0DC0               	rlf	??_SsdTask_Init,f
  3919  1651  3EFF               	addlw	-1
  3920  1652  1D03               	skipz
  3921  1653  2E4F               	goto	u3265
  3922  1654  1003               	clrc
  3923  1655  0D40               	rlf	??_SsdTask_Init,w
  3924  1656  3EA6               	addlw	(low ((_SsdTask| 0+6)))& (0+255)
  3925  1657  0084               	movwf	4
  3926  1658  0180               	clrf	0
  3927  1659  0A84               	incf	4,f
  3928  165A  0180               	clrf	0
  3929  165B                     l2639:
  3930                           
  3931                           ;SsdTask.c: 23:     Ssd_Init( Id, ctrlGpioId, ctrlPin, dataGpioId, dataPin );
  3932  165B  083C               	movf	SsdTask_Init@ctrlGpioId,w
  3933  165C  00FF               	movwf	btemp+1
  3934  165D  087F               	movf	btemp+1,w
  3935  165E  00B2               	movwf	Ssd_Init@ctrlGpioId
  3936  165F  083D               	movf	SsdTask_Init@ctrlPin,w
  3937  1660  00FF               	movwf	btemp+1
  3938  1661  087F               	movf	btemp+1,w
  3939  1662  00B3               	movwf	Ssd_Init@ctrlPin
  3940  1663  083E               	movf	SsdTask_Init@dataGpioId,w
  3941  1664  00FF               	movwf	btemp+1
  3942  1665  087F               	movf	btemp+1,w
  3943  1666  00B4               	movwf	Ssd_Init@dataGpioId
  3944  1667  083F               	movf	SsdTask_Init@dataPin,w
  3945  1668  00FF               	movwf	btemp+1
  3946  1669  087F               	movf	btemp+1,w
  3947  166A  00B5               	movwf	Ssd_Init@dataPin
  3948  166B  0841               	movf	SsdTask_Init@Id,w
  3949  166C  120A  158A  220B  160A  118A  	fcall	_Ssd_Init
  3950  1671                     l378:
  3951  1671  0008               	return
  3952  1672                     __end_of_SsdTask_Init:
  3953                           
  3954                           	psect	text9
  3955  0A0B                     __ptext9:	
  3956 ;; *************** function _Ssd_Init *****************
  3957 ;; Defined at:
  3958 ;;		line 14 in file "Ssd.c"
  3959 ;; Parameters:    Size  Location     Type
  3960 ;;  Id              1    wreg     unsigned char 
  3961 ;;  ctrlGpioId      1   18[BANK0 ] unsigned char 
  3962 ;;  ctrlPin         1   19[BANK0 ] unsigned char 
  3963 ;;  dataGpioId      1   20[BANK0 ] unsigned char 
  3964 ;;  dataPin         1   21[BANK0 ] unsigned char 
  3965 ;; Auto vars:     Size  Location     Type
  3966 ;;  Id              1   27[BANK0 ] unsigned char 
  3967 ;;  Pin             2   25[BANK0 ] unsigned int 
  3968 ;; Return value:  Size  Location     Type
  3969 ;;                  1    wreg      void 
  3970 ;; Registers used:
  3971 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3972 ;; Tracked objects:
  3973 ;;		On entry : 0/0
  3974 ;;		On exit  : 0/0
  3975 ;;		Unchanged: 0/0
  3976 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3977 ;;      Params:         0       4       0       0       0
  3978 ;;      Locals:         0       3       0       0       0
  3979 ;;      Temps:          0       3       0       0       0
  3980 ;;      Totals:         0      10       0       0       0
  3981 ;;Total ram usage:       10 bytes
  3982 ;; Hardware stack levels used:    1
  3983 ;; Hardware stack levels required when called:    4
  3984 ;; This function calls:
  3985 ;;		_Gpio_InitPin
  3986 ;; This function is called by:
  3987 ;;		_SsdTask_Init
  3988 ;; This function uses a non-reentrant model
  3989 ;;
  3990                           
  3991                           
  3992                           ;psect for function _Ssd_Init
  3993  0A0B                     _Ssd_Init:
  3994                           
  3995                           ;incstack = 0
  3996                           ; Regs used in _Ssd_Init: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3997                           ;Ssd_Init@Id stored from wreg
  3998  0A0B  1283               	bcf	3,5	;RP0=0, select bank0
  3999  0A0C  1303               	bcf	3,6	;RP1=0, select bank0
  4000  0A0D  00BB               	movwf	Ssd_Init@Id
  4001  0A0E                     l2347:
  4002  0A0E                     l2349:
  4003                           
  4004                           ;Ssd.c: 17:     Ssd[ Id ].GpioIdCtrl = ctrlGpioId;
  4005  0A0E  0832               	movf	Ssd_Init@ctrlGpioId,w
  4006  0A0F  00FF               	movwf	btemp+1
  4007  0A10  083B               	movf	Ssd_Init@Id,w
  4008  0A11  00B6               	movwf	??_Ssd_Init
  4009  0A12  3001               	movlw	1
  4010  0A13                     u2475:
  4011  0A13  1003               	clrc
  4012  0A14  0DB6               	rlf	??_Ssd_Init,f
  4013  0A15  3EFF               	addlw	-1
  4014  0A16  1D03               	skipz
  4015  0A17  2A13               	goto	u2475
  4016  0A18  1003               	clrc
  4017  0A19  0D36               	rlf	??_Ssd_Init,w
  4018  0A1A  3EDE               	addlw	(low (_Ssd| 0))& (0+255)
  4019  0A1B  0084               	movwf	4
  4020  0A1C  087F               	movf	btemp+1,w
  4021  0A1D  1383               	bcf	3,7	;select IRP bank1
  4022  0A1E  0080               	movwf	0
  4023  0A1F                     l2351:
  4024                           
  4025                           ;Ssd.c: 18:     Ssd[ Id ].PinCtrl = ctrlPin;
  4026  0A1F  0833               	movf	Ssd_Init@ctrlPin,w
  4027  0A20  00FF               	movwf	btemp+1
  4028  0A21  083B               	movf	Ssd_Init@Id,w
  4029  0A22  00B6               	movwf	??_Ssd_Init
  4030  0A23  3001               	movlw	1
  4031  0A24                     u2485:
  4032  0A24  1003               	clrc
  4033  0A25  0DB6               	rlf	??_Ssd_Init,f
  4034  0A26  3EFF               	addlw	-1
  4035  0A27  1D03               	skipz
  4036  0A28  2A24               	goto	u2485
  4037  0A29  1003               	clrc
  4038  0A2A  0D36               	rlf	??_Ssd_Init,w
  4039  0A2B  3EDF               	addlw	(low ((_Ssd| 0+1)))& (0+255)
  4040  0A2C  0084               	movwf	4
  4041  0A2D  087F               	movf	btemp+1,w
  4042  0A2E  0080               	movwf	0
  4043  0A2F                     l2353:
  4044                           
  4045                           ;Ssd.c: 19:     Ssd[ Id ].GpioIdD0 = dataGpioId;
  4046  0A2F  0834               	movf	Ssd_Init@dataGpioId,w
  4047  0A30  00FF               	movwf	btemp+1
  4048  0A31  083B               	movf	Ssd_Init@Id,w
  4049  0A32  00B6               	movwf	??_Ssd_Init
  4050  0A33  3001               	movlw	1
  4051  0A34                     u2495:
  4052  0A34  1003               	clrc
  4053  0A35  0DB6               	rlf	??_Ssd_Init,f
  4054  0A36  3EFF               	addlw	-1
  4055  0A37  1D03               	skipz
  4056  0A38  2A34               	goto	u2495
  4057  0A39  1003               	clrc
  4058  0A3A  0D36               	rlf	??_Ssd_Init,w
  4059  0A3B  3EE0               	addlw	(low ((_Ssd| 0+2)))& (0+255)
  4060  0A3C  0084               	movwf	4
  4061  0A3D  087F               	movf	btemp+1,w
  4062  0A3E  0080               	movwf	0
  4063  0A3F                     l2355:
  4064                           
  4065                           ;Ssd.c: 20:     Ssd[ Id ].PinD0 = dataPin;
  4066  0A3F  0835               	movf	Ssd_Init@dataPin,w
  4067  0A40  00FF               	movwf	btemp+1
  4068  0A41  083B               	movf	Ssd_Init@Id,w
  4069  0A42  00B6               	movwf	??_Ssd_Init
  4070  0A43  3001               	movlw	1
  4071  0A44                     u2505:
  4072  0A44  1003               	clrc
  4073  0A45  0DB6               	rlf	??_Ssd_Init,f
  4074  0A46  3EFF               	addlw	-1
  4075  0A47  1D03               	skipz
  4076  0A48  2A44               	goto	u2505
  4077  0A49  1003               	clrc
  4078  0A4A  0D36               	rlf	??_Ssd_Init,w
  4079  0A4B  3EE1               	addlw	(low ((_Ssd| 0+3)))& (0+255)
  4080  0A4C  0084               	movwf	4
  4081  0A4D  087F               	movf	btemp+1,w
  4082  0A4E  0080               	movwf	0
  4083  0A4F                     l2357:
  4084                           
  4085                           ;Ssd.c: 21:     Gpio_InitPin( Ssd[ Id ].GpioIdCtrl, Ssd[ Id ].PinCtrl, ( 0 ) );
  4086  0A4F  083B               	movf	Ssd_Init@Id,w
  4087  0A50  00B6               	movwf	??_Ssd_Init
  4088  0A51  3001               	movlw	1
  4089  0A52                     u2515:
  4090  0A52  1003               	clrc
  4091  0A53  0DB6               	rlf	??_Ssd_Init,f
  4092  0A54  3EFF               	addlw	-1
  4093  0A55  1D03               	skipz
  4094  0A56  2A52               	goto	u2515
  4095  0A57  1003               	clrc
  4096  0A58  0D36               	rlf	??_Ssd_Init,w
  4097  0A59  3EDF               	addlw	(low ((_Ssd| 0+1)))& (0+255)
  4098  0A5A  0084               	movwf	4
  4099  0A5B  0800               	movf	0,w
  4100  0A5C  00FF               	movwf	btemp+1
  4101  0A5D  087F               	movf	btemp+1,w
  4102  0A5E  00A3               	movwf	Gpio_InitPin@Pin
  4103  0A5F  01A4               	clrf	Gpio_InitPin@Mode
  4104  0A60  083B               	movf	Ssd_Init@Id,w
  4105  0A61  00B7               	movwf	??_Ssd_Init+1
  4106  0A62  3001               	movlw	1
  4107  0A63                     u2525:
  4108  0A63  1003               	clrc
  4109  0A64  0DB7               	rlf	??_Ssd_Init+1,f
  4110  0A65  3EFF               	addlw	-1
  4111  0A66  1D03               	skipz
  4112  0A67  2A63               	goto	u2525
  4113  0A68  1003               	clrc
  4114  0A69  0D37               	rlf	??_Ssd_Init+1,w
  4115  0A6A  3EDE               	addlw	(low (_Ssd| 0))& (0+255)
  4116  0A6B  0084               	movwf	4
  4117  0A6C  0800               	movf	0,w
  4118  0A6D  160A  118A  2157  120A  158A  	fcall	_Gpio_InitPin
  4119  0A72                     l2359:
  4120                           
  4121                           ;Ssd.c: 22:     for ( Pin = Ssd[ Id ].PinD0; Pin < ( Ssd[ Id ].PinD0 + 8 ); Pin++ )
  4122  0A72  1283               	bcf	3,5	;RP0=0, select bank0
  4123  0A73  1303               	bcf	3,6	;RP1=0, select bank0
  4124  0A74  083B               	movf	Ssd_Init@Id,w
  4125  0A75  00B6               	movwf	??_Ssd_Init
  4126  0A76  3001               	movlw	1
  4127  0A77                     u2535:
  4128  0A77  1003               	clrc
  4129  0A78  0DB6               	rlf	??_Ssd_Init,f
  4130  0A79  3EFF               	addlw	-1
  4131  0A7A  1D03               	skipz
  4132  0A7B  2A77               	goto	u2535
  4133  0A7C  1003               	clrc
  4134  0A7D  0D36               	rlf	??_Ssd_Init,w
  4135  0A7E  3EE1               	addlw	(low ((_Ssd| 0+3)))& (0+255)
  4136  0A7F  0084               	movwf	4
  4137  0A80  1383               	bcf	3,7	;select IRP bank1
  4138  0A81  0800               	movf	0,w
  4139  0A82  00B7               	movwf	??_Ssd_Init+1
  4140  0A83  01B8               	clrf	??_Ssd_Init+2
  4141  0A84  0837               	movf	??_Ssd_Init+1,w
  4142  0A85  00B9               	movwf	Ssd_Init@Pin
  4143  0A86  0838               	movf	??_Ssd_Init+2,w
  4144  0A87  00BA               	movwf	Ssd_Init@Pin+1
  4145  0A88  2AA8               	goto	l2365
  4146  0A89                     l2361:
  4147                           
  4148                           ;Ssd.c: 23:     {;Ssd.c: 24:         Gpio_InitPin( Ssd[ Id ].GpioIdD0, Pin, ( 0 ) );
  4149  0A89  0839               	movf	Ssd_Init@Pin,w
  4150  0A8A  00FF               	movwf	btemp+1
  4151  0A8B  087F               	movf	btemp+1,w
  4152  0A8C  00A3               	movwf	Gpio_InitPin@Pin
  4153  0A8D  01A4               	clrf	Gpio_InitPin@Mode
  4154  0A8E  083B               	movf	Ssd_Init@Id,w
  4155  0A8F  00B6               	movwf	??_Ssd_Init
  4156  0A90  3001               	movlw	1
  4157  0A91                     u2545:
  4158  0A91  1003               	clrc
  4159  0A92  0DB6               	rlf	??_Ssd_Init,f
  4160  0A93  3EFF               	addlw	-1
  4161  0A94  1D03               	skipz
  4162  0A95  2A91               	goto	u2545
  4163  0A96  1003               	clrc
  4164  0A97  0D36               	rlf	??_Ssd_Init,w
  4165  0A98  3EE0               	addlw	(low ((_Ssd| 0+2)))& (0+255)
  4166  0A99  0084               	movwf	4
  4167  0A9A  0800               	movf	0,w
  4168  0A9B  160A  118A  2157  120A  158A  	fcall	_Gpio_InitPin
  4169  0AA0                     l2363:
  4170                           
  4171                           ;Ssd.c: 25:     }
  4172  0AA0  3001               	movlw	1
  4173  0AA1  1283               	bcf	3,5	;RP0=0, select bank0
  4174  0AA2  1303               	bcf	3,6	;RP1=0, select bank0
  4175  0AA3  07B9               	addwf	Ssd_Init@Pin,f
  4176  0AA4  1803               	skipnc
  4177  0AA5  0ABA               	incf	Ssd_Init@Pin+1,f
  4178  0AA6  3000               	movlw	0
  4179  0AA7  07BA               	addwf	Ssd_Init@Pin+1,f
  4180  0AA8                     l2365:
  4181  0AA8  083B               	movf	Ssd_Init@Id,w
  4182  0AA9  00B6               	movwf	??_Ssd_Init
  4183  0AAA  3001               	movlw	1
  4184  0AAB                     u2555:
  4185  0AAB  1003               	clrc
  4186  0AAC  0DB6               	rlf	??_Ssd_Init,f
  4187  0AAD  3EFF               	addlw	-1
  4188  0AAE  1D03               	skipz
  4189  0AAF  2AAB               	goto	u2555
  4190  0AB0  1003               	clrc
  4191  0AB1  0D36               	rlf	??_Ssd_Init,w
  4192  0AB2  3EE1               	addlw	(low ((_Ssd| 0+3)))& (0+255)
  4193  0AB3  0084               	movwf	4
  4194  0AB4  1383               	bcf	3,7	;select IRP bank1
  4195  0AB5  0800               	movf	0,w
  4196  0AB6  3E08               	addlw	8
  4197  0AB7  00B7               	movwf	??_Ssd_Init+1
  4198  0AB8  3000               	movlw	0
  4199  0AB9  1803               	skipnc
  4200  0ABA  3001               	movlw	1
  4201  0ABB  00B8               	movwf	??_Ssd_Init+2
  4202  0ABC  0838               	movf	??_Ssd_Init+2,w
  4203  0ABD  023A               	subwf	Ssd_Init@Pin+1,w
  4204  0ABE  1D03               	skipz
  4205  0ABF  2AC2               	goto	u2565
  4206  0AC0  0837               	movf	??_Ssd_Init+1,w
  4207  0AC1  0239               	subwf	Ssd_Init@Pin,w
  4208  0AC2                     u2565:
  4209  0AC2  1C03               	skipc
  4210  0AC3  2AC5               	goto	u2561
  4211  0AC4  2AC6               	goto	u2560
  4212  0AC5                     u2561:
  4213  0AC5  2A89               	goto	l2361
  4214  0AC6                     u2560:
  4215  0AC6                     l186:
  4216  0AC6  0008               	return
  4217  0AC7                     __end_of_Ssd_Init:
  4218                           
  4219                           	psect	text10
  4220  1C26                     __ptext10:	
  4221 ;; *************** function _Scheduler_start *****************
  4222 ;; Defined at:
  4223 ;;		line 68 in file "Scheduler.c"
  4224 ;; Parameters:    Size  Location     Type
  4225 ;;		None
  4226 ;; Auto vars:     Size  Location     Type
  4227 ;;		None
  4228 ;; Return value:  Size  Location     Type
  4229 ;;                  1    wreg      void 
  4230 ;; Registers used:
  4231 ;;		wreg, status,2, status,0, pclath, cstack
  4232 ;; Tracked objects:
  4233 ;;		On entry : 0/0
  4234 ;;		On exit  : 0/0
  4235 ;;		Unchanged: 0/0
  4236 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4237 ;;      Params:         0       0       0       0       0
  4238 ;;      Locals:         0       0       0       0       0
  4239 ;;      Temps:          0       0       0       0       0
  4240 ;;      Totals:         0       0       0       0       0
  4241 ;;Total ram usage:        0 bytes
  4242 ;; Hardware stack levels used:    1
  4243 ;; Hardware stack levels required when called:    5
  4244 ;; This function calls:
  4245 ;;		_Scheduler_initSysTick
  4246 ;; This function is called by:
  4247 ;;		_main
  4248 ;; This function uses a non-reentrant model
  4249 ;;
  4250                           
  4251                           
  4252                           ;psect for function _Scheduler_start
  4253  1C26                     _Scheduler_start:
  4254  1C26                     l2745:	
  4255                           ;incstack = 0
  4256                           ; Regs used in _Scheduler_start: [wreg+status,2+status,0+pclath+cstack]
  4257                           
  4258                           
  4259                           ;Scheduler.c: 70:  Scheduler_initSysTick( ( ( TickType_t ) 5 ) );
  4260  1C26  3005               	movlw	5
  4261  1C27  1283               	bcf	3,5	;RP0=0, select bank0
  4262  1C28  1303               	bcf	3,6	;RP1=0, select bank0
  4263  1C29  00A6               	movwf	Scheduler_initSysTick@msTickPeriod
  4264  1C2A  3000               	movlw	0
  4265  1C2B  00A7               	movwf	Scheduler_initSysTick@msTickPeriod+1
  4266  1C2C  160A  158A  25EC  160A  158A  	fcall	_Scheduler_initSysTick
  4267  1C31                     l120:
  4268  1C31  0008               	return
  4269  1C32                     __end_of_Scheduler_start:
  4270                           
  4271                           	psect	text11
  4272  1DEC                     __ptext11:	
  4273 ;; *************** function _Scheduler_initSysTick *****************
  4274 ;; Defined at:
  4275 ;;		line 5 in file "SchedulerConfig.c"
  4276 ;; Parameters:    Size  Location     Type
  4277 ;;  msTickPeriod    2    6[BANK0 ] unsigned int 
  4278 ;; Auto vars:     Size  Location     Type
  4279 ;;  tickNumber      2    8[BANK0 ] unsigned int 
  4280 ;; Return value:  Size  Location     Type
  4281 ;;                  1    wreg      void 
  4282 ;; Registers used:
  4283 ;;		wreg, status,2, status,0, pclath, cstack
  4284 ;; Tracked objects:
  4285 ;;		On entry : 0/0
  4286 ;;		On exit  : 0/0
  4287 ;;		Unchanged: 0/0
  4288 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4289 ;;      Params:         0       2       0       0       0
  4290 ;;      Locals:         0       2       0       0       0
  4291 ;;      Temps:          0       0       0       0       0
  4292 ;;      Totals:         0       4       0       0       0
  4293 ;;Total ram usage:        4 bytes
  4294 ;; Hardware stack levels used:    1
  4295 ;; Hardware stack levels required when called:    4
  4296 ;; This function calls:
  4297 ;;		_Timer1Init
  4298 ;;		___wmul
  4299 ;; This function is called by:
  4300 ;;		_Scheduler_start
  4301 ;; This function uses a non-reentrant model
  4302 ;;
  4303                           
  4304                           
  4305                           ;psect for function _Scheduler_initSysTick
  4306  1DEC                     _Scheduler_initSysTick:
  4307  1DEC                     l2307:	
  4308                           ;incstack = 0
  4309                           ; Regs used in _Scheduler_initSysTick: [wreg+status,2+status,0+pclath+cstack]
  4310                           
  4311                           
  4312                           ;SchedulerConfig.c: 5: void Scheduler_initSysTick( TickType_t msTickPeriod );SchedulerCo
      +                          nfig.c: 6: {;SchedulerConfig.c: 7:  TickType_t tickNumber = ( TickType_t )( ( ( ( ( ( 16
      +                          000000 ) / ( 4 ) ) / ( ( TickType_t ) 1 ) ) / 1000 ) * msTickPeriod ) - 1 );
  4313  1DEC  1283               	bcf	3,5	;RP0=0, select bank0
  4314  1DED  1303               	bcf	3,6	;RP1=0, select bank0
  4315  1DEE  0827               	movf	Scheduler_initSysTick@msTickPeriod+1,w
  4316  1DEF  00A1               	movwf	___wmul@multiplier+1
  4317  1DF0  0826               	movf	Scheduler_initSysTick@msTickPeriod,w
  4318  1DF1  00A0               	movwf	___wmul@multiplier
  4319  1DF2  30A0               	movlw	160
  4320  1DF3  00A2               	movwf	___wmul@multiplicand
  4321  1DF4  300F               	movlw	15
  4322  1DF5  00A3               	movwf	___wmul@multiplicand+1
  4323  1DF6  160A  158A  2610  160A  158A  	fcall	___wmul
  4324  1DFB  1283               	bcf	3,5	;RP0=0, select bank0
  4325  1DFC  1303               	bcf	3,6	;RP1=0, select bank0
  4326  1DFD  0820               	movf	?___wmul,w
  4327  1DFE  3EFF               	addlw	255
  4328  1DFF  00A8               	movwf	Scheduler_initSysTick@tickNumber
  4329  1E00  0821               	movf	?___wmul+1,w
  4330  1E01  1803               	skipnc
  4331  1E02  3E01               	addlw	1
  4332  1E03  3EFF               	addlw	255
  4333  1E04  00A9               	movwf	Scheduler_initSysTick@tickNumber+1
  4334                           
  4335                           ;SchedulerConfig.c: 8:     Timer1Init( tickNumber );
  4336  1E05  0829               	movf	Scheduler_initSysTick@tickNumber+1,w
  4337  1E06  00A1               	movwf	Timer1Init@TicksNumber+1
  4338  1E07  0828               	movf	Scheduler_initSysTick@tickNumber,w
  4339  1E08  00A0               	movwf	Timer1Init@TicksNumber
  4340  1E09  160A  158A  2483  160A  158A  	fcall	_Timer1Init
  4341  1E0E                     l2309:
  4342                           
  4343                           ;SchedulerConfig.c: 9:     (INTCONbits.GIE = 1);
  4344  1E0E  178B               	bsf	11,7	;volatile
  4345  1E0F                     l62:
  4346  1E0F  0008               	return
  4347  1E10                     __end_of_Scheduler_initSysTick:
  4348                           
  4349                           	psect	text12
  4350  1E10                     __ptext12:	
  4351 ;; *************** function ___wmul *****************
  4352 ;; Defined at:
  4353 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\Umul16.c"
  4354 ;; Parameters:    Size  Location     Type
  4355 ;;  multiplier      2    0[BANK0 ] unsigned int 
  4356 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  4357 ;; Auto vars:     Size  Location     Type
  4358 ;;  product         2    4[BANK0 ] unsigned int 
  4359 ;; Return value:  Size  Location     Type
  4360 ;;                  2    0[BANK0 ] unsigned int 
  4361 ;; Registers used:
  4362 ;;		wreg, status,2, status,0
  4363 ;; Tracked objects:
  4364 ;;		On entry : 0/0
  4365 ;;		On exit  : 0/0
  4366 ;;		Unchanged: 0/0
  4367 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4368 ;;      Params:         0       4       0       0       0
  4369 ;;      Locals:         0       2       0       0       0
  4370 ;;      Temps:          0       0       0       0       0
  4371 ;;      Totals:         0       6       0       0       0
  4372 ;;Total ram usage:        6 bytes
  4373 ;; Hardware stack levels used:    1
  4374 ;; Hardware stack levels required when called:    3
  4375 ;; This function calls:
  4376 ;;		Nothing
  4377 ;; This function is called by:
  4378 ;;		_Scheduler_initSysTick
  4379 ;; This function uses a non-reentrant model
  4380 ;;
  4381                           
  4382                           
  4383                           ;psect for function ___wmul
  4384  1E10                     ___wmul:
  4385  1E10                     l2211:	
  4386                           ;incstack = 0
  4387                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  4388                           
  4389  1E10  1283               	bcf	3,5	;RP0=0, select bank0
  4390  1E11  1303               	bcf	3,6	;RP1=0, select bank0
  4391  1E12  01A4               	clrf	___wmul@product
  4392  1E13  01A5               	clrf	___wmul@product+1
  4393  1E14                     l2213:
  4394  1E14  1C20               	btfss	___wmul@multiplier,0
  4395  1E15  2E17               	goto	u2181
  4396  1E16  2E18               	goto	u2180
  4397  1E17                     u2181:
  4398  1E17  2E1E               	goto	l635
  4399  1E18                     u2180:
  4400  1E18                     l2215:
  4401  1E18  0822               	movf	___wmul@multiplicand,w
  4402  1E19  07A4               	addwf	___wmul@product,f
  4403  1E1A  1803               	skipnc
  4404  1E1B  0AA5               	incf	___wmul@product+1,f
  4405  1E1C  0823               	movf	___wmul@multiplicand+1,w
  4406  1E1D  07A5               	addwf	___wmul@product+1,f
  4407  1E1E                     l635:
  4408  1E1E  3001               	movlw	1
  4409  1E1F                     u2195:
  4410  1E1F  1003               	clrc
  4411  1E20  0DA2               	rlf	___wmul@multiplicand,f
  4412  1E21  0DA3               	rlf	___wmul@multiplicand+1,f
  4413  1E22  3EFF               	addlw	-1
  4414  1E23  1D03               	skipz
  4415  1E24  2E1F               	goto	u2195
  4416  1E25                     l2217:
  4417  1E25  3001               	movlw	1
  4418  1E26                     u2205:
  4419  1E26  1003               	clrc
  4420  1E27  0CA1               	rrf	___wmul@multiplier+1,f
  4421  1E28  0CA0               	rrf	___wmul@multiplier,f
  4422  1E29  3EFF               	addlw	-1
  4423  1E2A  1D03               	skipz
  4424  1E2B  2E26               	goto	u2205
  4425  1E2C                     l2219:
  4426  1E2C  0820               	movf	___wmul@multiplier,w
  4427  1E2D  0421               	iorwf	___wmul@multiplier+1,w
  4428  1E2E  1D03               	btfss	3,2
  4429  1E2F  2E31               	goto	u2211
  4430  1E30  2E32               	goto	u2210
  4431  1E31                     u2211:
  4432  1E31  2E14               	goto	l2213
  4433  1E32                     u2210:
  4434  1E32                     l2221:
  4435  1E32  0825               	movf	___wmul@product+1,w
  4436  1E33  00A1               	movwf	?___wmul+1
  4437  1E34  0824               	movf	___wmul@product,w
  4438  1E35  00A0               	movwf	?___wmul
  4439  1E36                     l637:
  4440  1E36  0008               	return
  4441  1E37                     __end_of___wmul:
  4442                           
  4443                           	psect	text13
  4444  1C83                     __ptext13:	
  4445 ;; *************** function _Timer1Init *****************
  4446 ;; Defined at:
  4447 ;;		line 16 in file "Timer.c"
  4448 ;; Parameters:    Size  Location     Type
  4449 ;;  TicksNumber     2    0[BANK0 ] unsigned int 
  4450 ;; Auto vars:     Size  Location     Type
  4451 ;;		None
  4452 ;; Return value:  Size  Location     Type
  4453 ;;                  1    wreg      void 
  4454 ;; Registers used:
  4455 ;;		wreg, status,2
  4456 ;; Tracked objects:
  4457 ;;		On entry : 0/0
  4458 ;;		On exit  : 0/0
  4459 ;;		Unchanged: 0/0
  4460 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4461 ;;      Params:         0       2       0       0       0
  4462 ;;      Locals:         0       0       0       0       0
  4463 ;;      Temps:          0       0       0       0       0
  4464 ;;      Totals:         0       2       0       0       0
  4465 ;;Total ram usage:        2 bytes
  4466 ;; Hardware stack levels used:    1
  4467 ;; Hardware stack levels required when called:    3
  4468 ;; This function calls:
  4469 ;;		Nothing
  4470 ;; This function is called by:
  4471 ;;		_Scheduler_initSysTick
  4472 ;; This function uses a non-reentrant model
  4473 ;;
  4474                           
  4475                           
  4476                           ;psect for function _Timer1Init
  4477  1C83                     _Timer1Init:
  4478  1C83                     l2117:	
  4479                           ;incstack = 0
  4480                           ; Regs used in _Timer1Init: [wreg+status,2]
  4481                           
  4482                           
  4483                           ;Timer.c: 16: void Timer1Init( uint16_t TicksNumber );Timer.c: 17: {;Timer.c: 19:     TM
      +                          R1H = 0;
  4484  1C83  1283               	bcf	3,5	;RP0=0, select bank0
  4485  1C84  1303               	bcf	3,6	;RP1=0, select bank0
  4486  1C85  018F               	clrf	15	;volatile
  4487                           
  4488                           ;Timer.c: 20:     TMR1L = 0;
  4489  1C86  018E               	clrf	14	;volatile
  4490  1C87                     l2119:
  4491                           
  4492                           ;Timer.c: 23:     T1CON = 0x01;
  4493  1C87  3001               	movlw	1
  4494  1C88  0090               	movwf	16	;volatile
  4495                           
  4496                           ;Timer.c: 26:     CCPR1H = TicksNumber >> 8;
  4497  1C89  0821               	movf	Timer1Init@TicksNumber+1,w
  4498  1C8A  0096               	movwf	22	;volatile
  4499  1C8B                     l2121:
  4500                           
  4501                           ;Timer.c: 27:     CCPR1L = TicksNumber;
  4502  1C8B  0820               	movf	Timer1Init@TicksNumber,w
  4503  1C8C  0095               	movwf	21	;volatile
  4504  1C8D                     l2123:
  4505                           
  4506                           ;Timer.c: 29:     CCP1CON = 0x0B;
  4507  1C8D  300B               	movlw	11
  4508  1C8E  0097               	movwf	23	;volatile
  4509  1C8F                     l2125:
  4510                           
  4511                           ;Timer.c: 32:     PIE1 = 0x04;
  4512  1C8F  3004               	movlw	4
  4513  1C90  1683               	bsf	3,5	;RP0=1, select bank1
  4514  1C91  1303               	bcf	3,6	;RP1=0, select bank1
  4515  1C92  008C               	movwf	12	;volatile
  4516  1C93                     l2127:
  4517                           
  4518                           ;Timer.c: 34:     INTCON = 0x40;
  4519  1C93  3040               	movlw	64
  4520  1C94  008B               	movwf	11	;volatile
  4521  1C95                     l218:
  4522  1C95  0008               	return
  4523  1C96                     __end_of_Timer1Init:
  4524                           
  4525                           	psect	text14
  4526  1DCA                     __ptext14:	
  4527 ;; *************** function _Scheduler_init *****************
  4528 ;; Defined at:
  4529 ;;		line 21 in file "Scheduler.c"
  4530 ;; Parameters:    Size  Location     Type
  4531 ;;		None
  4532 ;; Auto vars:     Size  Location     Type
  4533 ;;  index           2    4[BANK0 ] unsigned int 
  4534 ;; Return value:  Size  Location     Type
  4535 ;;                  1    wreg      void 
  4536 ;; Registers used:
  4537 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4538 ;; Tracked objects:
  4539 ;;		On entry : 0/0
  4540 ;;		On exit  : 0/0
  4541 ;;		Unchanged: 0/0
  4542 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4543 ;;      Params:         0       0       0       0       0
  4544 ;;      Locals:         0       2       0       0       0
  4545 ;;      Temps:          0       0       0       0       0
  4546 ;;      Totals:         0       2       0       0       0
  4547 ;;Total ram usage:        2 bytes
  4548 ;; Hardware stack levels used:    1
  4549 ;; Hardware stack levels required when called:    5
  4550 ;; This function calls:
  4551 ;;		_Scheduler_deleteTask
  4552 ;; This function is called by:
  4553 ;;		_main
  4554 ;; This function uses a non-reentrant model
  4555 ;;
  4556                           
  4557                           
  4558                           ;psect for function _Scheduler_init
  4559  1DCA                     _Scheduler_init:
  4560  1DCA                     l2711:	
  4561                           ;incstack = 0
  4562                           ; Regs used in _Scheduler_init: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4563                           
  4564                           
  4565                           ;Scheduler.c: 23:  size_t index = 0;
  4566  1DCA  1283               	bcf	3,5	;RP0=0, select bank0
  4567  1DCB  1303               	bcf	3,6	;RP1=0, select bank0
  4568  1DCC  01A4               	clrf	Scheduler_init@index
  4569  1DCD  01A5               	clrf	Scheduler_init@index+1
  4570                           
  4571                           ;Scheduler.c: 24:  for( index = 0; index < ( ( UBaseType_t ) 10 ); index++ )
  4572  1DCE  01A4               	clrf	Scheduler_init@index
  4573  1DCF  01A5               	clrf	Scheduler_init@index+1
  4574  1DD0                     l2717:
  4575                           
  4576                           ;Scheduler.c: 25:  {;Scheduler.c: 26:   Scheduler_deleteTask( index );
  4577  1DD0  0824               	movf	Scheduler_init@index,w
  4578  1DD1  160A  118A  252B  160A  158A  	fcall	_Scheduler_deleteTask
  4579  1DD6                     l2719:
  4580                           
  4581                           ;Scheduler.c: 27:  }
  4582  1DD6  3001               	movlw	1
  4583  1DD7  1283               	bcf	3,5	;RP0=0, select bank0
  4584  1DD8  1303               	bcf	3,6	;RP1=0, select bank0
  4585  1DD9  07A4               	addwf	Scheduler_init@index,f
  4586  1DDA  1803               	skipnc
  4587  1DDB  0AA5               	incf	Scheduler_init@index+1,f
  4588  1DDC  3000               	movlw	0
  4589  1DDD  07A5               	addwf	Scheduler_init@index+1,f
  4590  1DDE                     l2721:
  4591  1DDE  3000               	movlw	0
  4592  1DDF  0225               	subwf	Scheduler_init@index+1,w
  4593  1DE0  300A               	movlw	10
  4594  1DE1  1903               	skipnz
  4595  1DE2  0224               	subwf	Scheduler_init@index,w
  4596  1DE3  1C03               	skipc
  4597  1DE4  2DE6               	goto	u3301
  4598  1DE5  2DE7               	goto	u3300
  4599  1DE6                     u3301:
  4600  1DE6  2DD0               	goto	l2717
  4601  1DE7                     u3300:
  4602  1DE7                     l2723:
  4603                           
  4604                           ;Scheduler.c: 28:  scheduler.errorCode = 0;
  4605  1DE7  1683               	bsf	3,5	;RP0=1, select bank3
  4606  1DE8  1703               	bsf	3,6	;RP1=1, select bank3
  4607  1DE9  01CC               	clrf	(_scheduler^(0+384)+60)	;volatile
  4608                           
  4609                           ;Scheduler.c: 29:  scheduler.interruptFlag = 0;
  4610  1DEA  01CD               	clrf	(_scheduler^(0+384)+61)	;volatile
  4611  1DEB                     l106:
  4612  1DEB  0008               	return
  4613  1DEC                     __end_of_Scheduler_init:
  4614                           
  4615                           	psect	text15
  4616  08D2                     __ptext15:	
  4617 ;; *************** function _Scheduler_dispatchTasks *****************
  4618 ;; Defined at:
  4619 ;;		line 116 in file "Scheduler.c"
  4620 ;; Parameters:    Size  Location     Type
  4621 ;;		None
  4622 ;; Auto vars:     Size  Location     Type
  4623 ;;  index           2   47[BANK0 ] unsigned int 
  4624 ;; Return value:  Size  Location     Type
  4625 ;;                  1    wreg      void 
  4626 ;; Registers used:
  4627 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4628 ;; Tracked objects:
  4629 ;;		On entry : 0/0
  4630 ;;		On exit  : 0/0
  4631 ;;		Unchanged: 0/0
  4632 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4633 ;;      Params:         0       0       0       0       0
  4634 ;;      Locals:         0       5       0       0       0
  4635 ;;      Temps:          0       1       0       0       0
  4636 ;;      Totals:         0       6       0       0       0
  4637 ;;Total ram usage:        6 bytes
  4638 ;; Hardware stack levels used:    1
  4639 ;; Hardware stack levels required when called:    7
  4640 ;; This function calls:
  4641 ;;		Absolute function
  4642 ;;		_HeaterTask_Update
  4643 ;;		_LedTask_Update
  4644 ;;		_Scheduler_deleteTask
  4645 ;;		_Scheduler_goToSleep
  4646 ;;		_Scheduler_reportStatus
  4647 ;;		_SsdTask_Update
  4648 ;;		_SwitchTask_Update
  4649 ;;		_TempControlTask_Update
  4650 ;;		_TempSensorTask_Update
  4651 ;;		___bmul
  4652 ;; This function is called by:
  4653 ;;		_main
  4654 ;; This function uses a non-reentrant model
  4655 ;;
  4656                           
  4657                           
  4658                           ;psect for function _Scheduler_dispatchTasks
  4659  08D2                     _Scheduler_dispatchTasks:
  4660  08D2                     l2747:	
  4661                           ;incstack = 0
  4662                           ; Regs used in _Scheduler_dispatchTasks: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cs
      +                          tack]
  4663                           
  4664                           
  4665                           ;Scheduler.c: 118:  size_t index = 0;
  4666  08D2  1283               	bcf	3,5	;RP0=0, select bank0
  4667  08D3  1303               	bcf	3,6	;RP1=0, select bank0
  4668  08D4  01CF               	clrf	Scheduler_dispatchTasks@index
  4669  08D5  01D0               	clrf	Scheduler_dispatchTasks@index+1
  4670                           
  4671                           ;Scheduler.c: 119:  for( index = 0; index < ( ( UBaseType_t ) 10 ); index++ )
  4672  08D6  01CF               	clrf	Scheduler_dispatchTasks@index
  4673  08D7  01D0               	clrf	Scheduler_dispatchTasks@index+1
  4674  08D8                     l2753:
  4675                           
  4676                           ;Scheduler.c: 120:  {;Scheduler.c: 121:   if( scheduler.task[ index ].runMe != 0 )
  4677  08D8  3006               	movlw	6
  4678  08D9  00FF               	movwf	btemp+1
  4679  08DA  087F               	movf	btemp+1,w
  4680  08DB  00A0               	movwf	___bmul@multiplicand
  4681  08DC  084F               	movf	Scheduler_dispatchTasks@index,w
  4682  08DD  160A  158A  2512  120A  158A  	fcall	___bmul
  4683  08E2  3E95               	addlw	(low ((_scheduler| (0+256)+5)))& (0+255)
  4684  08E3  0084               	movwf	4
  4685  08E4  1783               	bsf	3,7	;select IRP bank3
  4686  08E5  0800               	movf	0,w
  4687  08E6  1903               	btfsc	3,2
  4688  08E7  28E9               	goto	u3341
  4689  08E8  28EA               	goto	u3340
  4690  08E9                     u3341:
  4691  08E9  294A               	goto	l2759
  4692  08EA                     u3340:
  4693  08EA                     l2755:
  4694                           
  4695                           ;Scheduler.c: 122:   {;Scheduler.c: 123:    (*scheduler.task[ index ].pointer)( schedule
      +                          r.task[ index ].paramter );
  4696  08EA  3006               	movlw	6
  4697  08EB  00FF               	movwf	btemp+1
  4698  08EC  087F               	movf	btemp+1,w
  4699  08ED  1283               	bcf	3,5	;RP0=0, select bank0
  4700  08EE  1303               	bcf	3,6	;RP1=0, select bank0
  4701  08EF  00A0               	movwf	___bmul@multiplicand
  4702  08F0  084F               	movf	Scheduler_dispatchTasks@index,w
  4703  08F1  160A  158A  2512  120A  158A  	fcall	___bmul
  4704  08F6  3E90               	addlw	(low (_scheduler| (0+256)))& (0+255)
  4705  08F7  0084               	movwf	4
  4706  08F8  1783               	bsf	3,7	;select IRP bank3
  4707  08F9  0800               	movf	0,w
  4708  08FA  00FF               	movwf	btemp+1
  4709  08FB  087F               	movf	btemp+1,w
  4710  08FC  1283               	bcf	3,5	;RP0=0, select bank0
  4711  08FD  1303               	bcf	3,6	;RP1=0, select bank0
  4712  08FE  00CE               	movwf	_Scheduler_dispatchTasks$1428	;volatile
  4713                           
  4714                           ;Scheduler.c: 122:   {;Scheduler.c: 123:    (*scheduler.task[ index ].pointer)( schedule
      +                          r.task[ index ].paramter );
  4715  08FF  3006               	movlw	6
  4716  0900  00FF               	movwf	btemp+1
  4717  0901  087F               	movf	btemp+1,w
  4718  0902  00A0               	movwf	___bmul@multiplicand
  4719  0903  084F               	movf	Scheduler_dispatchTasks@index,w
  4720  0904  160A  158A  2512  120A  158A  	fcall	___bmul
  4721  0909  3E91               	addlw	(low ((_scheduler| (0+256)+1)))& (0+255)
  4722  090A  0084               	movwf	4
  4723  090B  1783               	bsf	3,7	;select IRP bank3
  4724  090C  0800               	movf	0,w
  4725  090D  1283               	bcf	3,5	;RP0=0, select bank0
  4726  090E  1303               	bcf	3,6	;RP1=0, select bank0
  4727  090F  00CC               	movwf	_Scheduler_dispatchTasks$1433	;volatile
  4728  0910  0A84               	incf	4,f
  4729  0911  0800               	movf	0,w
  4730  0912  0384               	decf	4,f
  4731  0913  00CD               	movwf	_Scheduler_dispatchTasks$1433+1	;volatile
  4732                           
  4733                           ;Scheduler.c: 122:   {;Scheduler.c: 123:    (*scheduler.task[ index ].pointer)( schedule
      +                          r.task[ index ].paramter );
  4734  0914  084C               	movf	_Scheduler_dispatchTasks$1433,w	;volatile
  4735  0915  00C3               	movwf	SsdTask_Update@Paramter
  4736  0916  084D               	movf	_Scheduler_dispatchTasks$1433+1,w	;volatile
  4737  0917  00C4               	movwf	SsdTask_Update@Paramter+1
  4738  0918  084E               	movf	_Scheduler_dispatchTasks$1428,w	;volatile
  4739  0919  120A  118A  204F  120A  158A  	fcall	fptable
  4740                           
  4741                           ;Scheduler.c: 124:    scheduler.task[ index ].runMe = 0;
  4742  091E  3006               	movlw	6
  4743  091F  00FF               	movwf	btemp+1
  4744  0920  087F               	movf	btemp+1,w
  4745  0921  1283               	bcf	3,5	;RP0=0, select bank0
  4746  0922  1303               	bcf	3,6	;RP1=0, select bank0
  4747  0923  00A0               	movwf	___bmul@multiplicand
  4748  0924  084F               	movf	Scheduler_dispatchTasks@index,w
  4749  0925  160A  158A  2512  120A  158A  	fcall	___bmul
  4750  092A  3E95               	addlw	(low ((_scheduler| (0+256)+5)))& (0+255)
  4751  092B  0084               	movwf	4
  4752  092C  1783               	bsf	3,7	;select IRP bank3
  4753  092D  0180               	clrf	0
  4754                           
  4755                           ;Scheduler.c: 125:    if( scheduler.task[ index ].period == 0 )
  4756  092E  3006               	movlw	6
  4757  092F  00FF               	movwf	btemp+1
  4758  0930  087F               	movf	btemp+1,w
  4759  0931  1283               	bcf	3,5	;RP0=0, select bank0
  4760  0932  1303               	bcf	3,6	;RP1=0, select bank0
  4761  0933  00A0               	movwf	___bmul@multiplicand
  4762  0934  084F               	movf	Scheduler_dispatchTasks@index,w
  4763  0935  160A  158A  2512  120A  158A  	fcall	___bmul
  4764  093A  3E94               	addlw	(low ((_scheduler| (0+256)+4)))& (0+255)
  4765  093B  0084               	movwf	4
  4766  093C  1783               	bsf	3,7	;select IRP bank3
  4767  093D  0800               	movf	0,w
  4768  093E  1D03               	btfss	3,2
  4769  093F  2941               	goto	u3351
  4770  0940  2942               	goto	u3350
  4771  0941                     u3351:
  4772  0941  294A               	goto	l2759
  4773  0942                     u3350:
  4774  0942                     l2757:
  4775                           
  4776                           ;Scheduler.c: 126:    {;Scheduler.c: 127:     Scheduler_deleteTask( index );
  4777  0942  1283               	bcf	3,5	;RP0=0, select bank0
  4778  0943  1303               	bcf	3,6	;RP1=0, select bank0
  4779  0944  084F               	movf	Scheduler_dispatchTasks@index,w
  4780  0945  160A  118A  252B  120A  158A  	fcall	_Scheduler_deleteTask
  4781  094A                     l2759:
  4782                           
  4783                           ;Scheduler.c: 130:  }
  4784  094A  3001               	movlw	1
  4785  094B  1283               	bcf	3,5	;RP0=0, select bank0
  4786  094C  1303               	bcf	3,6	;RP1=0, select bank0
  4787  094D  07CF               	addwf	Scheduler_dispatchTasks@index,f
  4788  094E  1803               	skipnc
  4789  094F  0AD0               	incf	Scheduler_dispatchTasks@index+1,f
  4790  0950  3000               	movlw	0
  4791  0951  07D0               	addwf	Scheduler_dispatchTasks@index+1,f
  4792  0952                     l2761:
  4793  0952  3000               	movlw	0
  4794  0953  0250               	subwf	Scheduler_dispatchTasks@index+1,w
  4795  0954  300A               	movlw	10
  4796  0955  1903               	skipnz
  4797  0956  024F               	subwf	Scheduler_dispatchTasks@index,w
  4798  0957  1C03               	skipc
  4799  0958  295A               	goto	u3361
  4800  0959  295B               	goto	u3360
  4801  095A                     u3361:
  4802  095A  28D8               	goto	l2753
  4803  095B                     u3360:
  4804  095B                     l2763:
  4805                           
  4806                           ;Scheduler.c: 131:  Scheduler_reportStatus();
  4807  095B  160A  158A  2471  120A  158A  	fcall	_Scheduler_reportStatus
  4808  0960                     l2765:
  4809                           
  4810                           ;Scheduler.c: 132:  Scheduler_goToSleep();
  4811  0960  160A  158A  2529  120A  158A  	fcall	_Scheduler_goToSleep
  4812  0965                     l146:
  4813  0965  0008               	return
  4814  0966                     __end_of_Scheduler_dispatchTasks:
  4815                           
  4816                           	psect	text16
  4817  0D7F                     __ptext16:	
  4818 ;; *************** function _SsdTask_Update *****************
  4819 ;; Defined at:
  4820 ;;		line 37 in file "SsdTask.c"
  4821 ;; Parameters:    Size  Location     Type
  4822 ;;  Paramter        2   35[BANK0 ] PTR void 
  4823 ;;		 -> RAM(512), RAM(512), NULL(0), 
  4824 ;; Auto vars:     Size  Location     Type
  4825 ;;  Id              1   41[BANK0 ] unsigned char 
  4826 ;; Return value:  Size  Location     Type
  4827 ;;                  1    wreg      void 
  4828 ;; Registers used:
  4829 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4830 ;; Tracked objects:
  4831 ;;		On entry : 0/0
  4832 ;;		On exit  : 0/0
  4833 ;;		Unchanged: 0/0
  4834 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4835 ;;      Params:         0       2       0       0       0
  4836 ;;      Locals:         0       1       0       0       0
  4837 ;;      Temps:          0       4       0       0       0
  4838 ;;      Totals:         0       7       0       0       0
  4839 ;;Total ram usage:        7 bytes
  4840 ;; Hardware stack levels used:    1
  4841 ;; Hardware stack levels required when called:    5
  4842 ;; This function calls:
  4843 ;;		_Ssd_SetState
  4844 ;;		_Ssd_SetSymbol
  4845 ;; This function is called by:
  4846 ;;		_main
  4847 ;;		_Scheduler_dispatchTasks
  4848 ;; This function uses a non-reentrant model
  4849 ;;
  4850                           
  4851                           
  4852                           ;psect for function _SsdTask_Update
  4853  0D7F                     _SsdTask_Update:
  4854  0D7F                     l2493:	
  4855                           ;incstack = 0
  4856                           ; Regs used in _SsdTask_Update: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4857                           
  4858                           
  4859                           ;SsdTask.c: 37: void SsdTask_Update( void *Paramter );SsdTask.c: 38: {;SsdTask.c: 39:   
      +                            Id_t Id = (Id_t) Paramter;
  4860  0D7F  1283               	bcf	3,5	;RP0=0, select bank0
  4861  0D80  1303               	bcf	3,6	;RP1=0, select bank0
  4862  0D81  0843               	movf	SsdTask_Update@Paramter,w
  4863  0D82  00FF               	movwf	btemp+1
  4864  0D83  087F               	movf	btemp+1,w
  4865  0D84  00C9               	movwf	SsdTask_Update@Id
  4866  0D85                     l2495:
  4867                           
  4868                           ;SsdTask.c: 40:     if( SsdTask[ Id ].Delay )
  4869  0D85  0849               	movf	SsdTask_Update@Id,w
  4870  0D86  00C5               	movwf	??_SsdTask_Update
  4871  0D87  3002               	movlw	2
  4872  0D88                     u2785:
  4873  0D88  1003               	clrc
  4874  0D89  0DC5               	rlf	??_SsdTask_Update,f
  4875  0D8A  3EFF               	addlw	-1
  4876  0D8B  1D03               	skipz
  4877  0D8C  2D88               	goto	u2785
  4878  0D8D  1003               	clrc
  4879  0D8E  0D45               	rlf	??_SsdTask_Update,w
  4880  0D8F  3EA6               	addlw	(low ((_SsdTask| 0+6)))& (0+255)
  4881  0D90  0084               	movwf	4
  4882  0D91  1383               	bcf	3,7	;select IRP bank1
  4883  0D92  0800               	movf	0,w
  4884  0D93  00C6               	movwf	??_SsdTask_Update+1
  4885  0D94  0A84               	incf	4,f
  4886  0D95  0800               	movf	0,w
  4887  0D96  00C7               	movwf	??_SsdTask_Update+2
  4888  0D97  0846               	movf	??_SsdTask_Update+1,w
  4889  0D98  0447               	iorwf	??_SsdTask_Update+2,w
  4890  0D99  1903               	btfsc	3,2
  4891  0D9A  2D9C               	goto	u2791
  4892  0D9B  2D9D               	goto	u2790
  4893  0D9C                     u2791:
  4894  0D9C  2DB2               	goto	l2499
  4895  0D9D                     u2790:
  4896  0D9D                     l2497:
  4897                           
  4898                           ;SsdTask.c: 41:     {;SsdTask.c: 42:         SsdTask[ Id ].Delay--;
  4899  0D9D  0849               	movf	SsdTask_Update@Id,w
  4900  0D9E  00C5               	movwf	??_SsdTask_Update
  4901  0D9F  3002               	movlw	2
  4902  0DA0                     u2805:
  4903  0DA0  1003               	clrc
  4904  0DA1  0DC5               	rlf	??_SsdTask_Update,f
  4905  0DA2  3EFF               	addlw	-1
  4906  0DA3  1D03               	skipz
  4907  0DA4  2DA0               	goto	u2805
  4908  0DA5  1003               	clrc
  4909  0DA6  0D45               	rlf	??_SsdTask_Update,w
  4910  0DA7  3EA6               	addlw	(low ((_SsdTask| 0+6)))& (0+255)
  4911  0DA8  0084               	movwf	4
  4912  0DA9  3001               	movlw	1
  4913  0DAA  0280               	subwf	0,f
  4914  0DAB  0F84               	incfsz	4,f
  4915  0DAC  3000               	movlw	0
  4916  0DAD  1C03               	skipc
  4917  0DAE  0380               	decf	0,f
  4918  0DAF  0280               	subwf	0,f
  4919  0DB0  0384               	decf	4,f
  4920                           
  4921                           ;SsdTask.c: 43:     }else if( SsdTask[ Id ].Period )
  4922  0DB1  2E15               	goto	l2507
  4923  0DB2                     l2499:
  4924  0DB2  0849               	movf	SsdTask_Update@Id,w
  4925  0DB3  00C5               	movwf	??_SsdTask_Update
  4926  0DB4  3002               	movlw	2
  4927  0DB5                     u2815:
  4928  0DB5  1003               	clrc
  4929  0DB6  0DC5               	rlf	??_SsdTask_Update,f
  4930  0DB7  3EFF               	addlw	-1
  4931  0DB8  1D03               	skipz
  4932  0DB9  2DB5               	goto	u2815
  4933  0DBA  1003               	clrc
  4934  0DBB  0D45               	rlf	??_SsdTask_Update,w
  4935  0DBC  3EA4               	addlw	(low ((_SsdTask| 0+4)))& (0+255)
  4936  0DBD  0084               	movwf	4
  4937  0DBE  0800               	movf	0,w
  4938  0DBF  00C6               	movwf	??_SsdTask_Update+1
  4939  0DC0  0A84               	incf	4,f
  4940  0DC1  0800               	movf	0,w
  4941  0DC2  00C7               	movwf	??_SsdTask_Update+2
  4942  0DC3  0846               	movf	??_SsdTask_Update+1,w
  4943  0DC4  0447               	iorwf	??_SsdTask_Update+2,w
  4944  0DC5  1903               	btfsc	3,2
  4945  0DC6  2DC8               	goto	u2821
  4946  0DC7  2DC9               	goto	u2820
  4947  0DC8                     u2821:
  4948  0DC8  2E08               	goto	l2505
  4949  0DC9                     u2820:
  4950  0DC9                     l2501:
  4951                           
  4952                           ;SsdTask.c: 44:     {;SsdTask.c: 45:         SsdTask[ Id ].Blink ^= SsdTask[ Id ].State;
  4953  0DC9  0849               	movf	SsdTask_Update@Id,w
  4954  0DCA  00C5               	movwf	??_SsdTask_Update
  4955  0DCB  3002               	movlw	2
  4956  0DCC                     u2835:
  4957  0DCC  1003               	clrc
  4958  0DCD  0DC5               	rlf	??_SsdTask_Update,f
  4959  0DCE  3EFF               	addlw	-1
  4960  0DCF  1D03               	skipz
  4961  0DD0  2DCC               	goto	u2835
  4962  0DD1  1003               	clrc
  4963  0DD2  0D45               	rlf	??_SsdTask_Update,w
  4964  0DD3  3EA2               	addlw	(low ((_SsdTask| 0+2)))& (0+255)
  4965  0DD4  0084               	movwf	4
  4966  0DD5  0800               	movf	0,w
  4967  0DD6  00FF               	movwf	btemp+1
  4968  0DD7  0849               	movf	SsdTask_Update@Id,w
  4969  0DD8  00C6               	movwf	??_SsdTask_Update+1
  4970  0DD9  3002               	movlw	2
  4971  0DDA                     u2845:
  4972  0DDA  1003               	clrc
  4973  0DDB  0DC6               	rlf	??_SsdTask_Update+1,f
  4974  0DDC  3EFF               	addlw	-1
  4975  0DDD  1D03               	skipz
  4976  0DDE  2DDA               	goto	u2845
  4977  0DDF  1003               	clrc
  4978  0DE0  0D46               	rlf	??_SsdTask_Update+1,w
  4979  0DE1  3EA3               	addlw	(low ((_SsdTask| 0+3)))& (0+255)
  4980  0DE2  0084               	movwf	4
  4981  0DE3  087F               	movf	btemp+1,w
  4982  0DE4  0680               	xorwf	0,f
  4983  0DE5                     l2503:
  4984                           
  4985                           ;SsdTask.c: 46:         SsdTask[ Id ].Delay = SsdTask[ Id ].Period;
  4986  0DE5  0849               	movf	SsdTask_Update@Id,w
  4987  0DE6  00C5               	movwf	??_SsdTask_Update
  4988  0DE7  3002               	movlw	2
  4989  0DE8                     u2855:
  4990  0DE8  1003               	clrc
  4991  0DE9  0DC5               	rlf	??_SsdTask_Update,f
  4992  0DEA  3EFF               	addlw	-1
  4993  0DEB  1D03               	skipz
  4994  0DEC  2DE8               	goto	u2855
  4995  0DED  1003               	clrc
  4996  0DEE  0D45               	rlf	??_SsdTask_Update,w
  4997  0DEF  3EA4               	addlw	(low ((_SsdTask| 0+4)))& (0+255)
  4998  0DF0  0084               	movwf	4
  4999  0DF1  0800               	movf	0,w
  5000  0DF2  00C6               	movwf	??_SsdTask_Update+1
  5001  0DF3  0A84               	incf	4,f
  5002  0DF4  0800               	movf	0,w
  5003  0DF5  00C7               	movwf	??_SsdTask_Update+2
  5004  0DF6  0849               	movf	SsdTask_Update@Id,w
  5005  0DF7  00C8               	movwf	??_SsdTask_Update+3
  5006  0DF8  3002               	movlw	2
  5007  0DF9                     u2865:
  5008  0DF9  1003               	clrc
  5009  0DFA  0DC8               	rlf	??_SsdTask_Update+3,f
  5010  0DFB  3EFF               	addlw	-1
  5011  0DFC  1D03               	skipz
  5012  0DFD  2DF9               	goto	u2865
  5013  0DFE  1003               	clrc
  5014  0DFF  0D48               	rlf	??_SsdTask_Update+3,w
  5015  0E00  3EA6               	addlw	(low ((_SsdTask| 0+6)))& (0+255)
  5016  0E01  0084               	movwf	4
  5017  0E02  0846               	movf	??_SsdTask_Update+1,w
  5018  0E03  0080               	movwf	0
  5019  0E04  0A84               	incf	4,f
  5020  0E05  0847               	movf	??_SsdTask_Update+2,w
  5021  0E06  0080               	movwf	0
  5022                           
  5023                           ;SsdTask.c: 47:     }else
  5024  0E07  2E15               	goto	l2507
  5025  0E08                     l2505:
  5026                           
  5027                           ;SsdTask.c: 48:     {;SsdTask.c: 49:         SsdTask[ Id ].Blink = 0;
  5028  0E08  0849               	movf	SsdTask_Update@Id,w
  5029  0E09  00C5               	movwf	??_SsdTask_Update
  5030  0E0A  3002               	movlw	2
  5031  0E0B                     u2875:
  5032  0E0B  1003               	clrc
  5033  0E0C  0DC5               	rlf	??_SsdTask_Update,f
  5034  0E0D  3EFF               	addlw	-1
  5035  0E0E  1D03               	skipz
  5036  0E0F  2E0B               	goto	u2875
  5037  0E10  1003               	clrc
  5038  0E11  0D45               	rlf	??_SsdTask_Update,w
  5039  0E12  3EA3               	addlw	(low ((_SsdTask| 0+3)))& (0+255)
  5040  0E13  0084               	movwf	4
  5041  0E14  0180               	clrf	0
  5042  0E15                     l2507:
  5043                           
  5044                           ;SsdTask.c: 51:     Ssd_SetState( Id, ( 0 ) );
  5045  0E15  01AE               	clrf	Ssd_SetState@State
  5046  0E16  0849               	movf	SsdTask_Update@Id,w
  5047  0E17  160A  158A  26B1  120A  158A  	fcall	_Ssd_SetState
  5048  0E1C                     l2509:
  5049                           
  5050                           ;SsdTask.c: 52:     if( SsdTask[ Id ].Counter == 0 )
  5051  0E1C  1283               	bcf	3,5	;RP0=0, select bank0
  5052  0E1D  1303               	bcf	3,6	;RP1=0, select bank0
  5053  0E1E  0849               	movf	SsdTask_Update@Id,w
  5054  0E1F  00C5               	movwf	??_SsdTask_Update
  5055  0E20  3002               	movlw	2
  5056  0E21                     u2885:
  5057  0E21  1003               	clrc
  5058  0E22  0DC5               	rlf	??_SsdTask_Update,f
  5059  0E23  3EFF               	addlw	-1
  5060  0E24  1D03               	skipz
  5061  0E25  2E21               	goto	u2885
  5062  0E26  1003               	clrc
  5063  0E27  0D45               	rlf	??_SsdTask_Update,w
  5064  0E28  3EA0               	addlw	(low (_SsdTask| 0))& (0+255)
  5065  0E29  0084               	movwf	4
  5066  0E2A  1383               	bcf	3,7	;select IRP bank1
  5067  0E2B  0800               	movf	0,w
  5068  0E2C  1D03               	btfss	3,2
  5069  0E2D  2E2F               	goto	u2891
  5070  0E2E  2E30               	goto	u2890
  5071  0E2F                     u2891:
  5072  0E2F  2E74               	goto	l2513
  5073  0E30                     u2890:
  5074  0E30                     l2511:
  5075                           
  5076                           ;SsdTask.c: 53:     {;SsdTask.c: 54:         Ssd_SetSymbol( Id, SsdTask[ Id ].Symbol );
  5077  0E30  0849               	movf	SsdTask_Update@Id,w
  5078  0E31  00C5               	movwf	??_SsdTask_Update
  5079  0E32  3002               	movlw	2
  5080  0E33                     u2905:
  5081  0E33  1003               	clrc
  5082  0E34  0DC5               	rlf	??_SsdTask_Update,f
  5083  0E35  3EFF               	addlw	-1
  5084  0E36  1D03               	skipz
  5085  0E37  2E33               	goto	u2905
  5086  0E38  1003               	clrc
  5087  0E39  0D45               	rlf	??_SsdTask_Update,w
  5088  0E3A  3EA1               	addlw	(low ((_SsdTask| 0+1)))& (0+255)
  5089  0E3B  0084               	movwf	4
  5090  0E3C  0800               	movf	0,w
  5091  0E3D  00FF               	movwf	btemp+1
  5092  0E3E  087F               	movf	btemp+1,w
  5093  0E3F  00AA               	movwf	Ssd_SetSymbol@Symbol
  5094  0E40  0849               	movf	SsdTask_Update@Id,w
  5095  0E41  160A  118A  200A  120A  158A  	fcall	_Ssd_SetSymbol
  5096                           
  5097                           ;SsdTask.c: 55:         Ssd_SetState( Id, SsdTask[ Id ].State & !SsdTask[ Id ].Blink );
  5098  0E46  1283               	bcf	3,5	;RP0=0, select bank0
  5099  0E47  1303               	bcf	3,6	;RP1=0, select bank0
  5100  0E48  0849               	movf	SsdTask_Update@Id,w
  5101  0E49  00C5               	movwf	??_SsdTask_Update
  5102  0E4A  3002               	movlw	2
  5103  0E4B                     u2915:
  5104  0E4B  1003               	clrc
  5105  0E4C  0DC5               	rlf	??_SsdTask_Update,f
  5106  0E4D  3EFF               	addlw	-1
  5107  0E4E  1D03               	skipz
  5108  0E4F  2E4B               	goto	u2915
  5109  0E50  1003               	clrc
  5110  0E51  0D45               	rlf	??_SsdTask_Update,w
  5111  0E52  3EA2               	addlw	(low ((_SsdTask| 0+2)))& (0+255)
  5112  0E53  0084               	movwf	4
  5113  0E54  1383               	bcf	3,7	;select IRP bank1
  5114  0E55  0800               	movf	0,w
  5115  0E56  00C6               	movwf	??_SsdTask_Update+1
  5116  0E57  0849               	movf	SsdTask_Update@Id,w
  5117  0E58  00C7               	movwf	??_SsdTask_Update+2
  5118  0E59  3002               	movlw	2
  5119  0E5A                     u2925:
  5120  0E5A  1003               	clrc
  5121  0E5B  0DC7               	rlf	??_SsdTask_Update+2,f
  5122  0E5C  3EFF               	addlw	-1
  5123  0E5D  1D03               	skipz
  5124  0E5E  2E5A               	goto	u2925
  5125  0E5F  1003               	clrc
  5126  0E60  0D47               	rlf	??_SsdTask_Update+2,w
  5127  0E61  3EA3               	addlw	(low ((_SsdTask| 0+3)))& (0+255)
  5128  0E62  0084               	movwf	4
  5129  0E63  0800               	movf	0,w
  5130  0E64  1903               	btfsc	3,2
  5131  0E65  2E67               	goto	u2931
  5132  0E66  2E69               	goto	u2930
  5133  0E67                     u2931:
  5134  0E67  3001               	movlw	1
  5135  0E68  2E6A               	goto	u2940
  5136  0E69                     u2930:
  5137  0E69  3000               	movlw	0
  5138  0E6A                     u2940:
  5139  0E6A  0546               	andwf	??_SsdTask_Update+1,w
  5140  0E6B  00FF               	movwf	btemp+1
  5141  0E6C  087F               	movf	btemp+1,w
  5142  0E6D  00AE               	movwf	Ssd_SetState@State
  5143  0E6E  0849               	movf	SsdTask_Update@Id,w
  5144  0E6F  160A  158A  26B1  120A  158A  	fcall	_Ssd_SetState
  5145  0E74                     l2513:
  5146                           
  5147                           ;SsdTask.c: 57:     SsdTask[ Id ].Counter++;
  5148  0E74  3001               	movlw	1
  5149  0E75  00FF               	movwf	btemp+1
  5150  0E76  1283               	bcf	3,5	;RP0=0, select bank0
  5151  0E77  1303               	bcf	3,6	;RP1=0, select bank0
  5152  0E78  0849               	movf	SsdTask_Update@Id,w
  5153  0E79  00C5               	movwf	??_SsdTask_Update
  5154  0E7A  3002               	movlw	2
  5155  0E7B                     u2955:
  5156  0E7B  1003               	clrc
  5157  0E7C  0DC5               	rlf	??_SsdTask_Update,f
  5158  0E7D  3EFF               	addlw	-1
  5159  0E7E  1D03               	skipz
  5160  0E7F  2E7B               	goto	u2955
  5161  0E80  1003               	clrc
  5162  0E81  0D45               	rlf	??_SsdTask_Update,w
  5163  0E82  3EA0               	addlw	(low (_SsdTask| 0))& (0+255)
  5164  0E83  0084               	movwf	4
  5165  0E84  087F               	movf	btemp+1,w
  5166  0E85  1383               	bcf	3,7	;select IRP bank1
  5167  0E86  0780               	addwf	0,f
  5168  0E87                     l2515:
  5169                           
  5170                           ;SsdTask.c: 58:     if( SsdTask[ Id ].Counter == ( 2 ) )
  5171  0E87  0849               	movf	SsdTask_Update@Id,w
  5172  0E88  00C5               	movwf	??_SsdTask_Update
  5173  0E89  3002               	movlw	2
  5174  0E8A                     u2965:
  5175  0E8A  1003               	clrc
  5176  0E8B  0DC5               	rlf	??_SsdTask_Update,f
  5177  0E8C  3EFF               	addlw	-1
  5178  0E8D  1D03               	skipz
  5179  0E8E  2E8A               	goto	u2965
  5180  0E8F  1003               	clrc
  5181  0E90  0D45               	rlf	??_SsdTask_Update,w
  5182  0E91  3EA0               	addlw	(low (_SsdTask| 0))& (0+255)
  5183  0E92  0084               	movwf	4
  5184  0E93  3002               	movlw	2
  5185  0E94  0600               	xorwf	0,w
  5186  0E95  1D03               	btfss	3,2
  5187  0E96  2E98               	goto	u2971
  5188  0E97  2E99               	goto	u2970
  5189  0E98                     u2971:
  5190  0E98  2EA6               	goto	l393
  5191  0E99                     u2970:
  5192  0E99                     l2517:
  5193                           
  5194                           ;SsdTask.c: 59:     {;SsdTask.c: 60:         SsdTask[ Id ].Counter = 0;
  5195  0E99  0849               	movf	SsdTask_Update@Id,w
  5196  0E9A  00C5               	movwf	??_SsdTask_Update
  5197  0E9B  3002               	movlw	2
  5198  0E9C                     u2985:
  5199  0E9C  1003               	clrc
  5200  0E9D  0DC5               	rlf	??_SsdTask_Update,f
  5201  0E9E  3EFF               	addlw	-1
  5202  0E9F  1D03               	skipz
  5203  0EA0  2E9C               	goto	u2985
  5204  0EA1  1003               	clrc
  5205  0EA2  0D45               	rlf	??_SsdTask_Update,w
  5206  0EA3  3EA0               	addlw	(low (_SsdTask| 0))& (0+255)
  5207  0EA4  0084               	movwf	4
  5208  0EA5  0180               	clrf	0
  5209  0EA6                     l393:
  5210  0EA6  0008               	return
  5211  0EA7                     __end_of_SsdTask_Update:
  5212                           
  5213                           	psect	text17
  5214  0B98                     __ptext17:	
  5215 ;; *************** function _LedTask_Update *****************
  5216 ;; Defined at:
  5217 ;;		line 28 in file "LedTask.c"
  5218 ;; Parameters:    Size  Location     Type
  5219 ;;  Paramter        2   35[BANK0 ] PTR void 
  5220 ;;		 -> RAM(512), RAM(512), NULL(0), 
  5221 ;; Auto vars:     Size  Location     Type
  5222 ;;  Id              1   40[BANK0 ] unsigned char 
  5223 ;; Return value:  Size  Location     Type
  5224 ;;                  1    wreg      void 
  5225 ;; Registers used:
  5226 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5227 ;; Tracked objects:
  5228 ;;		On entry : 0/0
  5229 ;;		On exit  : 0/0
  5230 ;;		Unchanged: 0/0
  5231 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5232 ;;      Params:         0       2       0       0       0
  5233 ;;      Locals:         0       2       0       0       0
  5234 ;;      Temps:          0       2       0       0       0
  5235 ;;      Totals:         0       6       0       0       0
  5236 ;;Total ram usage:        6 bytes
  5237 ;; Hardware stack levels used:    1
  5238 ;; Hardware stack levels required when called:    5
  5239 ;; This function calls:
  5240 ;;		_Led_SetState
  5241 ;;		___bmul
  5242 ;; This function is called by:
  5243 ;;		_main
  5244 ;;		_Scheduler_dispatchTasks
  5245 ;; This function uses a non-reentrant model
  5246 ;;
  5247                           
  5248                           
  5249                           ;psect for function _LedTask_Update
  5250  0B98                     _LedTask_Update:
  5251  0B98                     l2557:	
  5252                           ;incstack = 0
  5253                           ; Regs used in _LedTask_Update: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5254                           
  5255                           
  5256                           ;LedTask.c: 28: void LedTask_Update( void *Paramter );LedTask.c: 29: {;LedTask.c: 30:   
      +                            Id_t Id = (Id_t) Paramter;
  5257  0B98  1283               	bcf	3,5	;RP0=0, select bank0
  5258  0B99  1303               	bcf	3,6	;RP1=0, select bank0
  5259  0B9A  0843               	movf	LedTask_Update@Paramter,w
  5260  0B9B  00FF               	movwf	btemp+1
  5261  0B9C  087F               	movf	btemp+1,w
  5262  0B9D  00C8               	movwf	LedTask_Update@Id
  5263  0B9E                     l2559:
  5264                           
  5265                           ;LedTask.c: 31:     if( LedTask[ Id ].Delay )
  5266  0B9E  3006               	movlw	6
  5267  0B9F  00FF               	movwf	btemp+1
  5268  0BA0  087F               	movf	btemp+1,w
  5269  0BA1  00A0               	movwf	___bmul@multiplicand
  5270  0BA2  0848               	movf	LedTask_Update@Id,w
  5271  0BA3  160A  158A  2512  120A  158A  	fcall	___bmul
  5272  0BA8  3EC1               	addlw	(low ((_LedTask| 0+4)))& (0+255)
  5273  0BA9  0084               	movwf	4
  5274  0BAA  1383               	bcf	3,7	;select IRP bank1
  5275  0BAB  0800               	movf	0,w
  5276  0BAC  1283               	bcf	3,5	;RP0=0, select bank0
  5277  0BAD  1303               	bcf	3,6	;RP1=0, select bank0
  5278  0BAE  00C5               	movwf	??_LedTask_Update
  5279  0BAF  0A84               	incf	4,f
  5280  0BB0  0800               	movf	0,w
  5281  0BB1  00C6               	movwf	??_LedTask_Update+1
  5282  0BB2  0845               	movf	??_LedTask_Update,w
  5283  0BB3  0446               	iorwf	??_LedTask_Update+1,w
  5284  0BB4  1903               	btfsc	3,2
  5285  0BB5  2BB7               	goto	u3101
  5286  0BB6  2BB8               	goto	u3100
  5287  0BB7                     u3101:
  5288  0BB7  2BCE               	goto	l2563
  5289  0BB8                     u3100:
  5290  0BB8                     l2561:
  5291                           
  5292                           ;LedTask.c: 32:     {;LedTask.c: 33:         LedTask[ Id ].Delay--;
  5293  0BB8  3006               	movlw	6
  5294  0BB9  00FF               	movwf	btemp+1
  5295  0BBA  087F               	movf	btemp+1,w
  5296  0BBB  00A0               	movwf	___bmul@multiplicand
  5297  0BBC  0848               	movf	LedTask_Update@Id,w
  5298  0BBD  160A  158A  2512  120A  158A  	fcall	___bmul
  5299  0BC2  3EC1               	addlw	(low ((_LedTask| 0+4)))& (0+255)
  5300  0BC3  0084               	movwf	4
  5301  0BC4  3001               	movlw	1
  5302  0BC5  1383               	bcf	3,7	;select IRP bank1
  5303  0BC6  0280               	subwf	0,f
  5304  0BC7  0F84               	incfsz	4,f
  5305  0BC8  3000               	movlw	0
  5306  0BC9  1C03               	skipc
  5307  0BCA  0380               	decf	0,f
  5308  0BCB  0280               	subwf	0,f
  5309  0BCC  0384               	decf	4,f
  5310                           
  5311                           ;LedTask.c: 34:     }else if( LedTask[ Id ].Period )
  5312  0BCD  2C41               	goto	l471
  5313  0BCE                     l2563:
  5314  0BCE  3006               	movlw	6
  5315  0BCF  00FF               	movwf	btemp+1
  5316  0BD0  087F               	movf	btemp+1,w
  5317  0BD1  00A0               	movwf	___bmul@multiplicand
  5318  0BD2  0848               	movf	LedTask_Update@Id,w
  5319  0BD3  160A  158A  2512  120A  158A  	fcall	___bmul
  5320  0BD8  3EBF               	addlw	(low ((_LedTask| 0+2)))& (0+255)
  5321  0BD9  0084               	movwf	4
  5322  0BDA  1383               	bcf	3,7	;select IRP bank1
  5323  0BDB  0800               	movf	0,w
  5324  0BDC  1283               	bcf	3,5	;RP0=0, select bank0
  5325  0BDD  1303               	bcf	3,6	;RP1=0, select bank0
  5326  0BDE  00C5               	movwf	??_LedTask_Update
  5327  0BDF  0A84               	incf	4,f
  5328  0BE0  0800               	movf	0,w
  5329  0BE1  00C6               	movwf	??_LedTask_Update+1
  5330  0BE2  0845               	movf	??_LedTask_Update,w
  5331  0BE3  0446               	iorwf	??_LedTask_Update+1,w
  5332  0BE4  1903               	btfsc	3,2
  5333  0BE5  2BE7               	goto	u3111
  5334  0BE6  2BE8               	goto	u3110
  5335  0BE7                     u3111:
  5336  0BE7  2C33               	goto	l2567
  5337  0BE8                     u3110:
  5338  0BE8                     l2565:
  5339                           
  5340                           ;LedTask.c: 35:     {;LedTask.c: 36:         LedTask[ Id ].Blink ^= LedTask[ Id ].State;
  5341  0BE8  3006               	movlw	6
  5342  0BE9  00FF               	movwf	btemp+1
  5343  0BEA  087F               	movf	btemp+1,w
  5344  0BEB  00A0               	movwf	___bmul@multiplicand
  5345  0BEC  0848               	movf	LedTask_Update@Id,w
  5346  0BED  160A  158A  2512  120A  158A  	fcall	___bmul
  5347  0BF2  3EBD               	addlw	(low (_LedTask| 0))& (0+255)
  5348  0BF3  0084               	movwf	4
  5349  0BF4  1383               	bcf	3,7	;select IRP bank1
  5350  0BF5  0800               	movf	0,w
  5351  0BF6  1283               	bcf	3,5	;RP0=0, select bank0
  5352  0BF7  1303               	bcf	3,6	;RP1=0, select bank0
  5353  0BF8  00C5               	movwf	??_LedTask_Update
  5354  0BF9  3006               	movlw	6
  5355  0BFA  00FF               	movwf	btemp+1
  5356  0BFB  087F               	movf	btemp+1,w
  5357  0BFC  00A0               	movwf	___bmul@multiplicand
  5358  0BFD  0848               	movf	LedTask_Update@Id,w
  5359  0BFE  160A  158A  2512  120A  158A  	fcall	___bmul
  5360  0C03  3EBE               	addlw	(low ((_LedTask| 0+1)))& (0+255)
  5361  0C04  0084               	movwf	4
  5362  0C05  1283               	bcf	3,5	;RP0=0, select bank0
  5363  0C06  1303               	bcf	3,6	;RP1=0, select bank0
  5364  0C07  0845               	movf	??_LedTask_Update,w
  5365  0C08  1383               	bcf	3,7	;select IRP bank1
  5366  0C09  0680               	xorwf	0,f
  5367                           
  5368                           ;LedTask.c: 37:         LedTask[ Id ].Delay = LedTask[ Id ].Period;
  5369  0C0A  3006               	movlw	6
  5370  0C0B  00FF               	movwf	btemp+1
  5371  0C0C  087F               	movf	btemp+1,w
  5372  0C0D  00A0               	movwf	___bmul@multiplicand
  5373  0C0E  0848               	movf	LedTask_Update@Id,w
  5374  0C0F  160A  158A  2512  120A  158A  	fcall	___bmul
  5375  0C14  3EBF               	addlw	(low ((_LedTask| 0+2)))& (0+255)
  5376  0C15  0084               	movwf	4
  5377  0C16  1383               	bcf	3,7	;select IRP bank1
  5378  0C17  0800               	movf	0,w
  5379  0C18  1283               	bcf	3,5	;RP0=0, select bank0
  5380  0C19  1303               	bcf	3,6	;RP1=0, select bank0
  5381  0C1A  00C5               	movwf	??_LedTask_Update
  5382  0C1B  0A84               	incf	4,f
  5383  0C1C  0800               	movf	0,w
  5384  0C1D  00C6               	movwf	??_LedTask_Update+1
  5385  0C1E  3006               	movlw	6
  5386  0C1F  00FF               	movwf	btemp+1
  5387  0C20  087F               	movf	btemp+1,w
  5388  0C21  00A0               	movwf	___bmul@multiplicand
  5389  0C22  0848               	movf	LedTask_Update@Id,w
  5390  0C23  160A  158A  2512  120A  158A  	fcall	___bmul
  5391  0C28  3EC1               	addlw	(low ((_LedTask| 0+4)))& (0+255)
  5392  0C29  0084               	movwf	4
  5393  0C2A  1283               	bcf	3,5	;RP0=0, select bank0
  5394  0C2B  1303               	bcf	3,6	;RP1=0, select bank0
  5395  0C2C  0845               	movf	??_LedTask_Update,w
  5396  0C2D  1383               	bcf	3,7	;select IRP bank1
  5397  0C2E  0080               	movwf	0
  5398  0C2F  0A84               	incf	4,f
  5399  0C30  0846               	movf	??_LedTask_Update+1,w
  5400  0C31  0080               	movwf	0
  5401                           
  5402                           ;LedTask.c: 38:     }else
  5403  0C32  2C41               	goto	l471
  5404  0C33                     l2567:
  5405                           
  5406                           ;LedTask.c: 39:     {;LedTask.c: 40:         LedTask[ Id ].Blink = 0;
  5407  0C33  3006               	movlw	6
  5408  0C34  00FF               	movwf	btemp+1
  5409  0C35  087F               	movf	btemp+1,w
  5410  0C36  00A0               	movwf	___bmul@multiplicand
  5411  0C37  0848               	movf	LedTask_Update@Id,w
  5412  0C38  160A  158A  2512  120A  158A  	fcall	___bmul
  5413  0C3D  3EBE               	addlw	(low ((_LedTask| 0+1)))& (0+255)
  5414  0C3E  0084               	movwf	4
  5415  0C3F  1383               	bcf	3,7	;select IRP bank1
  5416  0C40  0180               	clrf	0
  5417  0C41                     l471:
  5418                           
  5419                           ;LedTask.c: 42:     Led_SetState( Id, ( LedTask[ Id ].State & !LedTask[ Id ].Blink ) );
  5420  0C41  3006               	movlw	6
  5421  0C42  00FF               	movwf	btemp+1
  5422  0C43  087F               	movf	btemp+1,w
  5423  0C44  1283               	bcf	3,5	;RP0=0, select bank0
  5424  0C45  1303               	bcf	3,6	;RP1=0, select bank0
  5425  0C46  00A0               	movwf	___bmul@multiplicand
  5426  0C47  0848               	movf	LedTask_Update@Id,w
  5427  0C48  160A  158A  2512  120A  158A  	fcall	___bmul
  5428  0C4D  3EBD               	addlw	(low (_LedTask| 0))& (0+255)
  5429  0C4E  0084               	movwf	4
  5430  0C4F  1383               	bcf	3,7	;select IRP bank1
  5431  0C50  0800               	movf	0,w
  5432  0C51  1283               	bcf	3,5	;RP0=0, select bank0
  5433  0C52  1303               	bcf	3,6	;RP1=0, select bank0
  5434  0C53  00C5               	movwf	??_LedTask_Update
  5435  0C54  3006               	movlw	6
  5436  0C55  00FF               	movwf	btemp+1
  5437  0C56  087F               	movf	btemp+1,w
  5438  0C57  00A0               	movwf	___bmul@multiplicand
  5439  0C58  0848               	movf	LedTask_Update@Id,w
  5440  0C59  160A  158A  2512  120A  158A  	fcall	___bmul
  5441  0C5E  3EBE               	addlw	(low ((_LedTask| 0+1)))& (0+255)
  5442  0C5F  0084               	movwf	4
  5443  0C60  1383               	bcf	3,7	;select IRP bank1
  5444  0C61  0800               	movf	0,w
  5445  0C62  1903               	btfsc	3,2
  5446  0C63  2C65               	goto	u3121
  5447  0C64  2C67               	goto	u3120
  5448  0C65                     u3121:
  5449  0C65  3001               	movlw	1
  5450  0C66  2C68               	goto	u3130
  5451  0C67                     u3120:
  5452  0C67  3000               	movlw	0
  5453  0C68                     u3130:
  5454  0C68  1283               	bcf	3,5	;RP0=0, select bank0
  5455  0C69  1303               	bcf	3,6	;RP1=0, select bank0
  5456  0C6A  0545               	andwf	??_LedTask_Update,w
  5457  0C6B  00FF               	movwf	btemp+1
  5458  0C6C  087F               	movf	btemp+1,w
  5459  0C6D  00C7               	movwf	_LedTask_Update$1434
  5460                           
  5461                           ;LedTask.c: 42:     Led_SetState( Id, ( LedTask[ Id ].State & !LedTask[ Id ].Blink ) );
  5462  0C6E  0847               	movf	_LedTask_Update$1434,w
  5463  0C6F  00FF               	movwf	btemp+1
  5464  0C70  087F               	movf	btemp+1,w
  5465  0C71  00AE               	movwf	Led_SetState@State
  5466  0C72  0848               	movf	LedTask_Update@Id,w
  5467  0C73  160A  118A  223E  120A  158A  	fcall	_Led_SetState
  5468  0C78                     l474:
  5469  0C78  0008               	return
  5470  0C79                     __end_of_LedTask_Update:
  5471                           
  5472                           	psect	text18
  5473  1CFD                     __ptext18:	
  5474 ;; *************** function _TempControlTask_Update *****************
  5475 ;; Defined at:
  5476 ;;		line 21 in file "TempControlTask.c"
  5477 ;; Parameters:    Size  Location     Type
  5478 ;;  Paramter        2   35[BANK0 ] PTR void 
  5479 ;;		 -> RAM(512), RAM(512), NULL(0), 
  5480 ;; Auto vars:     Size  Location     Type
  5481 ;;  Id              1   37[BANK0 ] unsigned char 
  5482 ;; Return value:  Size  Location     Type
  5483 ;;                  1    wreg      void 
  5484 ;; Registers used:
  5485 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5486 ;; Tracked objects:
  5487 ;;		On entry : 0/0
  5488 ;;		On exit  : 0/0
  5489 ;;		Unchanged: 0/0
  5490 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5491 ;;      Params:         0       2       0       0       0
  5492 ;;      Locals:         0       1       0       0       0
  5493 ;;      Temps:          0       0       0       0       0
  5494 ;;      Totals:         0       3       0       0       0
  5495 ;;Total ram usage:        3 bytes
  5496 ;; Hardware stack levels used:    1
  5497 ;; Hardware stack levels required when called:    5
  5498 ;; This function calls:
  5499 ;;		_TempControl_SetState
  5500 ;; This function is called by:
  5501 ;;		_main
  5502 ;;		_Scheduler_dispatchTasks
  5503 ;; This function uses a non-reentrant model
  5504 ;;
  5505                           
  5506                           
  5507                           ;psect for function _TempControlTask_Update
  5508  1CFD                     _TempControlTask_Update:
  5509  1CFD                     l2553:	
  5510                           ;incstack = 0
  5511                           ; Regs used in _TempControlTask_Update: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cst
      +                          ack]
  5512                           
  5513                           
  5514                           ;TempControlTask.c: 21: void TempControlTask_Update( void *Paramter );TempControlTask.c:
      +                           22: {;TempControlTask.c: 23:     Id_t Id = (Id_t) Paramter;
  5515  1CFD  1283               	bcf	3,5	;RP0=0, select bank0
  5516  1CFE  1303               	bcf	3,6	;RP1=0, select bank0
  5517  1CFF  0843               	movf	TempControlTask_Update@Paramter,w
  5518  1D00  00FF               	movwf	btemp+1
  5519  1D01  087F               	movf	btemp+1,w
  5520  1D02  00C5               	movwf	TempControlTask_Update@Id
  5521  1D03                     l2555:
  5522                           
  5523                           ;TempControlTask.c: 24:     TempControl_SetState( Id, TempControlTask[ Id ].State );
  5524  1D03  0845               	movf	TempControlTask_Update@Id,w
  5525  1D04  3E55               	addlw	(low (_TempControlTask| 0))& (0+255)
  5526  1D05  0084               	movwf	4
  5527  1D06  1383               	bcf	3,7	;select IRP bank0
  5528  1D07  0800               	movf	0,w
  5529  1D08  00FF               	movwf	btemp+1
  5530  1D09  087F               	movf	btemp+1,w
  5531  1D0A  00AE               	movwf	TempControl_SetState@State
  5532  1D0B  0845               	movf	TempControlTask_Update@Id,w
  5533  1D0C  160A  118A  22E4  160A  158A  	fcall	_TempControl_SetState
  5534  1D11                     l443:
  5535  1D11  0008               	return
  5536  1D12                     __end_of_TempControlTask_Update:
  5537                           
  5538                           	psect	text19
  5539  0067                     __ptext19:	
  5540 ;; *************** function _HeaterTask_Update *****************
  5541 ;; Defined at:
  5542 ;;		line 75 in file "WaterHeater.c"
  5543 ;; Parameters:    Size  Location     Type
  5544 ;;  Paramter        2   35[BANK0 ] PTR void 
  5545 ;;		 -> RAM(512), RAM(512), NULL(0), 
  5546 ;; Auto vars:     Size  Location     Type
  5547 ;;  Id              1   40[BANK0 ] unsigned char 
  5548 ;; Return value:  Size  Location     Type
  5549 ;;                  1    wreg      void 
  5550 ;; Registers used:
  5551 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5552 ;; Tracked objects:
  5553 ;;		On entry : 0/0
  5554 ;;		On exit  : 0/0
  5555 ;;		Unchanged: 0/0
  5556 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5557 ;;      Params:         0       2       0       0       0
  5558 ;;      Locals:         0       1       0       0       0
  5559 ;;      Temps:          0       3       0       0       0
  5560 ;;      Totals:         0       6       0       0       0
  5561 ;;Total ram usage:        6 bytes
  5562 ;; Hardware stack levels used:    1
  5563 ;; Hardware stack levels required when called:    6
  5564 ;; This function calls:
  5565 ;;		_Eeprom_Write
  5566 ;;		_LedTask_SetState
  5567 ;;		_SsdTask_SetState
  5568 ;;		_SsdTask_SetSymbol
  5569 ;;		_SwitchTask_GetState
  5570 ;;		_TempControlTask_SetState
  5571 ;;		_TempSensorTask_GetAverage
  5572 ;;		___awdiv
  5573 ;;		___awmod
  5574 ;;		___bmul
  5575 ;; This function is called by:
  5576 ;;		_main
  5577 ;;		_Scheduler_dispatchTasks
  5578 ;; This function uses a non-reentrant model
  5579 ;;
  5580                           
  5581                           
  5582                           ;psect for function _HeaterTask_Update
  5583  0067                     _HeaterTask_Update:
  5584  0067                     l2423:	
  5585                           ;incstack = 0
  5586                           ; Regs used in _HeaterTask_Update: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5587                           
  5588                           
  5589                           ;WaterHeater.c: 75: void HeaterTask_Update( void *Paramter );WaterHeater.c: 76: {;WaterH
      +                          eater.c: 77:     Id_t Id = (Id_t) Paramter;
  5590  0067  1283               	bcf	3,5	;RP0=0, select bank0
  5591  0068  1303               	bcf	3,6	;RP1=0, select bank0
  5592  0069  0843               	movf	HeaterTask_Update@Paramter,w
  5593  006A  00FF               	movwf	btemp+1
  5594  006B  087F               	movf	btemp+1,w
  5595  006C  00C8               	movwf	HeaterTask_Update@Id
  5596                           
  5597                           ;WaterHeater.c: 78:     switch( Heater[ Id ].State )
  5598  006D  2D22               	goto	l2473
  5599  006E                     l2425:
  5600                           
  5601                           ;WaterHeater.c: 81:         {;WaterHeater.c: 82:             if( SwitchTask_GetState( Id
      +                          *3 ) )
  5602  006E  3003               	movlw	3
  5603  006F  00FF               	movwf	btemp+1
  5604  0070  087F               	movf	btemp+1,w
  5605  0071  00A0               	movwf	___bmul@multiplicand
  5606  0072  0848               	movf	HeaterTask_Update@Id,w
  5607  0073  160A  158A  2512  120A  118A  	fcall	___bmul
  5608  0078  160A  158A  2637  120A  118A  	fcall	_SwitchTask_GetState
  5609  007D  3A00               	xorlw	0
  5610  007E  1903               	skipnz
  5611  007F  2881               	goto	u2621
  5612  0080  2882               	goto	u2620
  5613  0081                     u2621:
  5614  0081  2D4A               	goto	l347
  5615  0082                     u2620:
  5616  0082                     l2427:
  5617                           
  5618                           ;WaterHeater.c: 83:             {;WaterHeater.c: 84:                 Heater[ Id ].State 
      +                          = OperationMode;
  5619  0082  3017               	movlw	23
  5620  0083  00FF               	movwf	btemp+1
  5621  0084  087F               	movf	btemp+1,w
  5622  0085  1283               	bcf	3,5	;RP0=0, select bank0
  5623  0086  1303               	bcf	3,6	;RP1=0, select bank0
  5624  0087  00A0               	movwf	___bmul@multiplicand
  5625  0088  0848               	movf	HeaterTask_Update@Id,w
  5626  0089  160A  158A  2512  120A  118A  	fcall	___bmul
  5627  008E  3E56               	addlw	(low (_Heater| 0))& (0+255)
  5628  008F  0084               	movwf	4
  5629  0090  1383               	bcf	3,7	;select IRP bank0
  5630  0091  0180               	clrf	0
  5631  0092  0A80               	incf	0,f
  5632  0093  2D4A               	goto	l347
  5633  0094                     l2429:
  5634                           
  5635                           ;WaterHeater.c: 89:         {;WaterHeater.c: 90:             Heater[ Id ].AvgTemp = Temp
      +                          SensorTask_GetAverage( Id );
  5636  0094  0848               	movf	HeaterTask_Update@Id,w
  5637  0095  160A  158A  245F  120A  118A  	fcall	_TempSensorTask_GetAverage
  5638  009A  1283               	bcf	3,5	;RP0=0, select bank0
  5639  009B  1303               	bcf	3,6	;RP1=0, select bank0
  5640  009C  00C5               	movwf	??_HeaterTask_Update
  5641  009D  3017               	movlw	23
  5642  009E  00FF               	movwf	btemp+1
  5643  009F  087F               	movf	btemp+1,w
  5644  00A0  00A0               	movwf	___bmul@multiplicand
  5645  00A1  0848               	movf	HeaterTask_Update@Id,w
  5646  00A2  160A  158A  2512  120A  118A  	fcall	___bmul
  5647  00A7  3E58               	addlw	(low ((_Heater| 0+2)))& (0+255)
  5648  00A8  0084               	movwf	4
  5649  00A9  1283               	bcf	3,5	;RP0=0, select bank0
  5650  00AA  1303               	bcf	3,6	;RP1=0, select bank0
  5651  00AB  0845               	movf	??_HeaterTask_Update,w
  5652  00AC  1383               	bcf	3,7	;select IRP bank0
  5653  00AD  0080               	movwf	0
  5654                           
  5655                           ;WaterHeater.c: 91:             if( Heater[ Id ].AvgTemp <= ( Heater[ Id ].TargetTemp - 
      +                          5 ) )
  5656  00AE  3017               	movlw	23
  5657  00AF  00FF               	movwf	btemp+1
  5658  00B0  087F               	movf	btemp+1,w
  5659  00B1  00A0               	movwf	___bmul@multiplicand
  5660  00B2  0848               	movf	HeaterTask_Update@Id,w
  5661  00B3  160A  158A  2512  120A  118A  	fcall	___bmul
  5662  00B8  3E59               	addlw	(low ((_Heater| 0+3)))& (0+255)
  5663  00B9  0084               	movwf	4
  5664  00BA  1383               	bcf	3,7	;select IRP bank0
  5665  00BB  0800               	movf	0,w
  5666  00BC  3EFB               	addlw	251
  5667  00BD  1283               	bcf	3,5	;RP0=0, select bank0
  5668  00BE  1303               	bcf	3,6	;RP1=0, select bank0
  5669  00BF  00C5               	movwf	??_HeaterTask_Update
  5670  00C0  30FF               	movlw	255
  5671  00C1  1803               	skipnc
  5672  00C2  3000               	movlw	0
  5673  00C3  00C6               	movwf	??_HeaterTask_Update+1
  5674  00C4  3017               	movlw	23
  5675  00C5  00FF               	movwf	btemp+1
  5676  00C6  087F               	movf	btemp+1,w
  5677  00C7  00A0               	movwf	___bmul@multiplicand
  5678  00C8  0848               	movf	HeaterTask_Update@Id,w
  5679  00C9  160A  158A  2512  120A  118A  	fcall	___bmul
  5680  00CE  3E58               	addlw	(low ((_Heater| 0+2)))& (0+255)
  5681  00CF  0084               	movwf	4
  5682  00D0  1283               	bcf	3,5	;RP0=0, select bank0
  5683  00D1  1303               	bcf	3,6	;RP1=0, select bank0
  5684  00D2  0846               	movf	??_HeaterTask_Update+1,w
  5685  00D3  3A80               	xorlw	128
  5686  00D4  00C7               	movwf	??_HeaterTask_Update+2
  5687  00D5  3080               	movlw	128
  5688  00D6  0247               	subwf	??_HeaterTask_Update+2,w
  5689  00D7  1D03               	skipz
  5690  00D8  28DC               	goto	u2635
  5691  00D9  1383               	bcf	3,7	;select IRP bank0
  5692  00DA  0800               	movf	0,w
  5693  00DB  0245               	subwf	??_HeaterTask_Update,w
  5694  00DC                     u2635:
  5695  00DC  1C03               	skipc
  5696  00DD  28DF               	goto	u2631
  5697  00DE  28E0               	goto	u2630
  5698  00DF                     u2631:
  5699  00DF  28F9               	goto	l2433
  5700  00E0                     u2630:
  5701  00E0                     l2431:
  5702                           
  5703                           ;WaterHeater.c: 92:             {;WaterHeater.c: 93:                 TempControlTask_Set
      +                          State( Id, 1 );
  5704  00E0  1283               	bcf	3,5	;RP0=0, select bank0
  5705  00E1  1303               	bcf	3,6	;RP1=0, select bank0
  5706  00E2  01A0               	clrf	TempControlTask_SetState@State
  5707  00E3  0AA0               	incf	TempControlTask_SetState@State,f
  5708  00E4  0848               	movf	HeaterTask_Update@Id,w
  5709  00E5  160A  158A  241A  120A  118A  	fcall	_TempControlTask_SetState
  5710                           
  5711                           ;WaterHeater.c: 94:                 LedTask_SetState( Id, ( 1 ), 1000 );
  5712  00EA  1283               	bcf	3,5	;RP0=0, select bank0
  5713  00EB  1303               	bcf	3,6	;RP1=0, select bank0
  5714  00EC  01AA               	clrf	LedTask_SetState@State
  5715  00ED  0AAA               	incf	LedTask_SetState@State,f
  5716  00EE  30E8               	movlw	232
  5717  00EF  00AB               	movwf	LedTask_SetState@Period
  5718  00F0  3003               	movlw	3
  5719  00F1  00AC               	movwf	LedTask_SetState@Period+1
  5720  00F2  0848               	movf	HeaterTask_Update@Id,w
  5721  00F3  160A  118A  21F1  120A  118A  	fcall	_LedTask_SetState
  5722                           
  5723                           ;WaterHeater.c: 95:             }else if( Heater[ Id ].AvgTemp >= ( Heater[ Id ].TargetT
      +                          emp + 5 ) )
  5724  00F8  2944               	goto	l329
  5725  00F9                     l2433:
  5726  00F9  3017               	movlw	23
  5727  00FA  00FF               	movwf	btemp+1
  5728  00FB  087F               	movf	btemp+1,w
  5729  00FC  1283               	bcf	3,5	;RP0=0, select bank0
  5730  00FD  1303               	bcf	3,6	;RP1=0, select bank0
  5731  00FE  00A0               	movwf	___bmul@multiplicand
  5732  00FF  0848               	movf	HeaterTask_Update@Id,w
  5733  0100  160A  158A  2512  120A  118A  	fcall	___bmul
  5734  0105  3E59               	addlw	(low ((_Heater| 0+3)))& (0+255)
  5735  0106  0084               	movwf	4
  5736  0107  1383               	bcf	3,7	;select IRP bank0
  5737  0108  0800               	movf	0,w
  5738  0109  3E05               	addlw	5
  5739  010A  1283               	bcf	3,5	;RP0=0, select bank0
  5740  010B  1303               	bcf	3,6	;RP1=0, select bank0
  5741  010C  00C5               	movwf	??_HeaterTask_Update
  5742  010D  3000               	movlw	0
  5743  010E  1803               	skipnc
  5744  010F  3001               	movlw	1
  5745  0110  00C6               	movwf	??_HeaterTask_Update+1
  5746  0111  3017               	movlw	23
  5747  0112  00FF               	movwf	btemp+1
  5748  0113  087F               	movf	btemp+1,w
  5749  0114  00A0               	movwf	___bmul@multiplicand
  5750  0115  0848               	movf	HeaterTask_Update@Id,w
  5751  0116  160A  158A  2512  120A  118A  	fcall	___bmul
  5752  011B  3E58               	addlw	(low ((_Heater| 0+2)))& (0+255)
  5753  011C  0084               	movwf	4
  5754  011D  1283               	bcf	3,5	;RP0=0, select bank0
  5755  011E  1303               	bcf	3,6	;RP1=0, select bank0
  5756  011F  0846               	movf	??_HeaterTask_Update+1,w
  5757  0120  3A80               	xorlw	128
  5758  0121  3C80               	sublw	128
  5759  0122  1D03               	skipz
  5760  0123  2927               	goto	u2645
  5761  0124  0845               	movf	??_HeaterTask_Update,w
  5762  0125  1383               	bcf	3,7	;select IRP bank0
  5763  0126  0200               	subwf	0,w
  5764  0127                     u2645:
  5765  0127  1C03               	skipc
  5766  0128  292A               	goto	u2641
  5767  0129  292B               	goto	u2640
  5768  012A                     u2641:
  5769  012A  2944               	goto	l329
  5770  012B                     u2640:
  5771  012B                     l2435:
  5772                           
  5773                           ;WaterHeater.c: 96:             {;WaterHeater.c: 97:                 TempControlTask_Set
      +                          State( Id, 2 );
  5774  012B  3002               	movlw	2
  5775  012C  00FF               	movwf	btemp+1
  5776  012D  087F               	movf	btemp+1,w
  5777  012E  1283               	bcf	3,5	;RP0=0, select bank0
  5778  012F  1303               	bcf	3,6	;RP1=0, select bank0
  5779  0130  00A0               	movwf	TempControlTask_SetState@State
  5780  0131  0848               	movf	HeaterTask_Update@Id,w
  5781  0132  160A  158A  241A  120A  118A  	fcall	_TempControlTask_SetState
  5782                           
  5783                           ;WaterHeater.c: 98:                 LedTask_SetState( Id, ( 1 ), 0 );
  5784  0137  1283               	bcf	3,5	;RP0=0, select bank0
  5785  0138  1303               	bcf	3,6	;RP1=0, select bank0
  5786  0139  01AA               	clrf	LedTask_SetState@State
  5787  013A  0AAA               	incf	LedTask_SetState@State,f
  5788  013B  3000               	movlw	0
  5789  013C  00AB               	movwf	LedTask_SetState@Period
  5790  013D  00AC               	movwf	LedTask_SetState@Period+1
  5791  013E  0848               	movf	HeaterTask_Update@Id,w
  5792  013F  160A  118A  21F1  120A  118A  	fcall	_LedTask_SetState
  5793  0144                     l329:
  5794                           
  5795                           ;WaterHeater.c: 100:             if( Heater[ Id ].PreState == TempSetMode )
  5796  0144  3017               	movlw	23
  5797  0145  00FF               	movwf	btemp+1
  5798  0146  087F               	movf	btemp+1,w
  5799  0147  1283               	bcf	3,5	;RP0=0, select bank0
  5800  0148  1303               	bcf	3,6	;RP1=0, select bank0
  5801  0149  00A0               	movwf	___bmul@multiplicand
  5802  014A  0848               	movf	HeaterTask_Update@Id,w
  5803  014B  160A  158A  2512  120A  118A  	fcall	___bmul
  5804  0150  3E57               	addlw	(low ((_Heater| 0+1)))& (0+255)
  5805  0151  0084               	movwf	4
  5806  0152  3003               	movlw	3
  5807  0153  1383               	bcf	3,7	;select IRP bank0
  5808  0154  0600               	xorwf	0,w
  5809  0155  1D03               	btfss	3,2
  5810  0156  2958               	goto	u2651
  5811  0157  2959               	goto	u2650
  5812  0158                     u2651:
  5813  0158  296D               	goto	l2439
  5814  0159                     u2650:
  5815  0159                     l2437:
  5816                           
  5817                           ;WaterHeater.c: 101:             {;WaterHeater.c: 102:                 Heater[ Id ].Stat
      +                          e = TempSetMode;
  5818  0159  3017               	movlw	23
  5819  015A  00FF               	movwf	btemp+1
  5820  015B  087F               	movf	btemp+1,w
  5821  015C  1283               	bcf	3,5	;RP0=0, select bank0
  5822  015D  1303               	bcf	3,6	;RP1=0, select bank0
  5823  015E  00A0               	movwf	___bmul@multiplicand
  5824  015F  0848               	movf	HeaterTask_Update@Id,w
  5825  0160  160A  158A  2512  120A  118A  	fcall	___bmul
  5826  0165  3E56               	addlw	(low (_Heater| 0))& (0+255)
  5827  0166  0084               	movwf	4
  5828  0167  3003               	movlw	3
  5829  0168  00FF               	movwf	btemp+1
  5830  0169  087F               	movf	btemp+1,w
  5831  016A  1383               	bcf	3,7	;select IRP bank0
  5832  016B  0080               	movwf	0
  5833                           
  5834                           ;WaterHeater.c: 103:             }else
  5835  016C  2D4A               	goto	l347
  5836  016D                     l2439:
  5837                           
  5838                           ;WaterHeater.c: 104:             {;WaterHeater.c: 105:                 Heater[ Id ].Stat
      +                          e = NormalMode;
  5839  016D  3017               	movlw	23
  5840  016E  00FF               	movwf	btemp+1
  5841  016F  087F               	movf	btemp+1,w
  5842  0170  1283               	bcf	3,5	;RP0=0, select bank0
  5843  0171  1303               	bcf	3,6	;RP1=0, select bank0
  5844  0172  00A0               	movwf	___bmul@multiplicand
  5845  0173  0848               	movf	HeaterTask_Update@Id,w
  5846  0174  160A  158A  2512  120A  118A  	fcall	___bmul
  5847  0179  3E56               	addlw	(low (_Heater| 0))& (0+255)
  5848  017A  0084               	movwf	4
  5849  017B  3002               	movlw	2
  5850  017C  00FF               	movwf	btemp+1
  5851  017D  087F               	movf	btemp+1,w
  5852  017E  1383               	bcf	3,7	;select IRP bank0
  5853  017F  0080               	movwf	0
  5854  0180  2D4A               	goto	l347
  5855  0181                     l2441:
  5856                           
  5857                           ;WaterHeater.c: 110:         {;WaterHeater.c: 111:             Heater[ Id ].PreState = H
      +                          eater[ Id ].State;
  5858  0181  3017               	movlw	23
  5859  0182  00FF               	movwf	btemp+1
  5860  0183  087F               	movf	btemp+1,w
  5861  0184  00A0               	movwf	___bmul@multiplicand
  5862  0185  0848               	movf	HeaterTask_Update@Id,w
  5863  0186  160A  158A  2512  120A  118A  	fcall	___bmul
  5864  018B  3E56               	addlw	(low (_Heater| 0))& (0+255)
  5865  018C  0084               	movwf	4
  5866  018D  1383               	bcf	3,7	;select IRP bank0
  5867  018E  0800               	movf	0,w
  5868  018F  1283               	bcf	3,5	;RP0=0, select bank0
  5869  0190  1303               	bcf	3,6	;RP1=0, select bank0
  5870  0191  00C5               	movwf	??_HeaterTask_Update
  5871  0192  3017               	movlw	23
  5872  0193  00FF               	movwf	btemp+1
  5873  0194  087F               	movf	btemp+1,w
  5874  0195  00A0               	movwf	___bmul@multiplicand
  5875  0196  0848               	movf	HeaterTask_Update@Id,w
  5876  0197  160A  158A  2512  120A  118A  	fcall	___bmul
  5877  019C  3E57               	addlw	(low ((_Heater| 0+1)))& (0+255)
  5878  019D  0084               	movwf	4
  5879  019E  1283               	bcf	3,5	;RP0=0, select bank0
  5880  019F  1303               	bcf	3,6	;RP1=0, select bank0
  5881  01A0  0845               	movf	??_HeaterTask_Update,w
  5882  01A1  1383               	bcf	3,7	;select IRP bank0
  5883  01A2  0080               	movwf	0
  5884                           
  5885                           ;WaterHeater.c: 112:             SsdTask_SetState( Id*2, ( 1 ), 0 );
  5886  01A3  01AA               	clrf	SsdTask_SetState@State
  5887  01A4  0AAA               	incf	SsdTask_SetState@State,f
  5888  01A5  3000               	movlw	0
  5889  01A6  00AB               	movwf	SsdTask_SetState@Period
  5890  01A7  00AC               	movwf	SsdTask_SetState@Period+1
  5891  01A8  0848               	movf	HeaterTask_Update@Id,w
  5892  01A9  00C5               	movwf	??_HeaterTask_Update
  5893  01AA  0745               	addwf	??_HeaterTask_Update,w
  5894  01AB  160A  158A  2791  120A  118A  	fcall	_SsdTask_SetState
  5895                           
  5896                           ;WaterHeater.c: 113:             SsdTask_SetState( Id*2 + 1, ( 1 ), 0 );
  5897  01B0  1283               	bcf	3,5	;RP0=0, select bank0
  5898  01B1  1303               	bcf	3,6	;RP1=0, select bank0
  5899  01B2  01AA               	clrf	SsdTask_SetState@State
  5900  01B3  0AAA               	incf	SsdTask_SetState@State,f
  5901  01B4  3000               	movlw	0
  5902  01B5  00AB               	movwf	SsdTask_SetState@Period
  5903  01B6  00AC               	movwf	SsdTask_SetState@Period+1
  5904  01B7  1403               	setc
  5905  01B8  0D48               	rlf	HeaterTask_Update@Id,w
  5906  01B9  160A  158A  2791  120A  118A  	fcall	_SsdTask_SetState
  5907                           
  5908                           ;WaterHeater.c: 114:             SsdTask_SetSymbol( Id*2, Heater[ Id ].AvgTemp % 10 );
  5909  01BE  300A               	movlw	10
  5910  01BF  1283               	bcf	3,5	;RP0=0, select bank0
  5911  01C0  1303               	bcf	3,6	;RP1=0, select bank0
  5912  01C1  00AB               	movwf	___awmod@divisor
  5913  01C2  3000               	movlw	0
  5914  01C3  00AC               	movwf	___awmod@divisor+1
  5915  01C4  3017               	movlw	23
  5916  01C5  00FF               	movwf	btemp+1
  5917  01C6  087F               	movf	btemp+1,w
  5918  01C7  00A0               	movwf	___bmul@multiplicand
  5919  01C8  0848               	movf	HeaterTask_Update@Id,w
  5920  01C9  160A  158A  2512  120A  118A  	fcall	___bmul
  5921  01CE  3E58               	addlw	(low ((_Heater| 0+2)))& (0+255)
  5922  01CF  0084               	movwf	4
  5923  01D0  1383               	bcf	3,7	;select IRP bank0
  5924  01D1  0800               	movf	0,w
  5925  01D2  1283               	bcf	3,5	;RP0=0, select bank0
  5926  01D3  1303               	bcf	3,6	;RP1=0, select bank0
  5927  01D4  00C5               	movwf	??_HeaterTask_Update
  5928  01D5  01C6               	clrf	??_HeaterTask_Update+1
  5929  01D6  0845               	movf	??_HeaterTask_Update,w
  5930  01D7  00AD               	movwf	___awmod@dividend
  5931  01D8  0846               	movf	??_HeaterTask_Update+1,w
  5932  01D9  00AE               	movwf	___awmod@dividend+1
  5933  01DA  160A  118A  233D  120A  118A  	fcall	___awmod
  5934  01DF  1283               	bcf	3,5	;RP0=0, select bank0
  5935  01E0  1303               	bcf	3,6	;RP1=0, select bank0
  5936  01E1  082B               	movf	?___awmod,w
  5937  01E2  00FF               	movwf	btemp+1
  5938  01E3  087F               	movf	btemp+1,w
  5939  01E4  00B1               	movwf	SsdTask_SetSymbol@Symbol
  5940  01E5  0848               	movf	HeaterTask_Update@Id,w
  5941  01E6  00C7               	movwf	??_HeaterTask_Update+2
  5942  01E7  0747               	addwf	??_HeaterTask_Update+2,w
  5943  01E8  160A  158A  24D3  120A  118A  	fcall	_SsdTask_SetSymbol
  5944                           
  5945                           ;WaterHeater.c: 115:             SsdTask_SetSymbol( Id*2 + 1, ( Heater[ Id ].AvgTemp / 1
      +                          0 ) % 10 );
  5946  01ED  300A               	movlw	10
  5947  01EE  1283               	bcf	3,5	;RP0=0, select bank0
  5948  01EF  1303               	bcf	3,6	;RP1=0, select bank0
  5949  01F0  00AB               	movwf	___awmod@divisor
  5950  01F1  3000               	movlw	0
  5951  01F2  00AC               	movwf	___awmod@divisor+1
  5952  01F3  300A               	movlw	10
  5953  01F4  00A3               	movwf	___awdiv@divisor
  5954  01F5  3000               	movlw	0
  5955  01F6  00A4               	movwf	___awdiv@divisor+1
  5956  01F7  3017               	movlw	23
  5957  01F8  00FF               	movwf	btemp+1
  5958  01F9  087F               	movf	btemp+1,w
  5959  01FA  00A0               	movwf	___bmul@multiplicand
  5960  01FB  0848               	movf	HeaterTask_Update@Id,w
  5961  01FC  160A  158A  2512  120A  118A  	fcall	___bmul
  5962  0201  3E58               	addlw	(low ((_Heater| 0+2)))& (0+255)
  5963  0202  0084               	movwf	4
  5964  0203  1383               	bcf	3,7	;select IRP bank0
  5965  0204  0800               	movf	0,w
  5966  0205  1283               	bcf	3,5	;RP0=0, select bank0
  5967  0206  1303               	bcf	3,6	;RP1=0, select bank0
  5968  0207  00C5               	movwf	??_HeaterTask_Update
  5969  0208  01C6               	clrf	??_HeaterTask_Update+1
  5970  0209  0845               	movf	??_HeaterTask_Update,w
  5971  020A  00A5               	movwf	___awdiv@dividend
  5972  020B  0846               	movf	??_HeaterTask_Update+1,w
  5973  020C  00A6               	movwf	___awdiv@dividend+1
  5974  020D  160A  118A  24C2  120A  118A  	fcall	___awdiv
  5975  0212  1283               	bcf	3,5	;RP0=0, select bank0
  5976  0213  1303               	bcf	3,6	;RP1=0, select bank0
  5977  0214  0824               	movf	?___awdiv+1,w
  5978  0215  00AE               	movwf	___awmod@dividend+1
  5979  0216  0823               	movf	?___awdiv,w
  5980  0217  00AD               	movwf	___awmod@dividend
  5981  0218  160A  118A  233D  120A  118A  	fcall	___awmod
  5982  021D  1283               	bcf	3,5	;RP0=0, select bank0
  5983  021E  1303               	bcf	3,6	;RP1=0, select bank0
  5984  021F  082B               	movf	?___awmod,w
  5985  0220  00FF               	movwf	btemp+1
  5986  0221  087F               	movf	btemp+1,w
  5987  0222  00B1               	movwf	SsdTask_SetSymbol@Symbol
  5988  0223  1403               	setc
  5989  0224  0D48               	rlf	HeaterTask_Update@Id,w
  5990  0225  160A  158A  24D3  120A  118A  	fcall	_SsdTask_SetSymbol
  5991                           
  5992                           ;WaterHeater.c: 116:             if( SwitchTask_GetState( Id*3 + 2 ) || SwitchTask_GetSt
      +                          ate( Id*3 + 1 ) )
  5993  022A  3003               	movlw	3
  5994  022B  00FF               	movwf	btemp+1
  5995  022C  087F               	movf	btemp+1,w
  5996  022D  1283               	bcf	3,5	;RP0=0, select bank0
  5997  022E  1303               	bcf	3,6	;RP1=0, select bank0
  5998  022F  00A0               	movwf	___bmul@multiplicand
  5999  0230  0848               	movf	HeaterTask_Update@Id,w
  6000  0231  160A  158A  2512  120A  118A  	fcall	___bmul
  6001  0236  3E02               	addlw	2
  6002  0237  160A  158A  2637  120A  118A  	fcall	_SwitchTask_GetState
  6003  023C  3A00               	xorlw	0
  6004  023D  1D03               	skipz
  6005  023E  2A40               	goto	u2661
  6006  023F  2A41               	goto	u2660
  6007  0240                     u2661:
  6008  0240  2A58               	goto	l2445
  6009  0241                     u2660:
  6010  0241                     l2443:
  6011  0241  3003               	movlw	3
  6012  0242  00FF               	movwf	btemp+1
  6013  0243  087F               	movf	btemp+1,w
  6014  0244  1283               	bcf	3,5	;RP0=0, select bank0
  6015  0245  1303               	bcf	3,6	;RP1=0, select bank0
  6016  0246  00A0               	movwf	___bmul@multiplicand
  6017  0247  0848               	movf	HeaterTask_Update@Id,w
  6018  0248  160A  158A  2512  120A  118A  	fcall	___bmul
  6019  024D  3E01               	addlw	1
  6020  024E  160A  158A  2637  120A  118A  	fcall	_SwitchTask_GetState
  6021  0253  3A00               	xorlw	0
  6022  0254  1903               	skipnz
  6023  0255  2A57               	goto	u2671
  6024  0256  2A58               	goto	u2670
  6025  0257                     u2671:
  6026  0257  2A6C               	goto	l2447
  6027  0258                     u2670:
  6028  0258                     l2445:
  6029                           
  6030                           ;WaterHeater.c: 117:             {;WaterHeater.c: 118:                 Heater[ Id ].Stat
      +                          e = TempSetMode;
  6031  0258  3017               	movlw	23
  6032  0259  00FF               	movwf	btemp+1
  6033  025A  087F               	movf	btemp+1,w
  6034  025B  1283               	bcf	3,5	;RP0=0, select bank0
  6035  025C  1303               	bcf	3,6	;RP1=0, select bank0
  6036  025D  00A0               	movwf	___bmul@multiplicand
  6037  025E  0848               	movf	HeaterTask_Update@Id,w
  6038  025F  160A  158A  2512  120A  118A  	fcall	___bmul
  6039  0264  3E56               	addlw	(low (_Heater| 0))& (0+255)
  6040  0265  0084               	movwf	4
  6041  0266  3003               	movlw	3
  6042  0267  00FF               	movwf	btemp+1
  6043  0268  087F               	movf	btemp+1,w
  6044  0269  1383               	bcf	3,7	;select IRP bank0
  6045  026A  0080               	movwf	0
  6046                           
  6047                           ;WaterHeater.c: 119:             }else if( SwitchTask_GetState( Id*3 ) )
  6048  026B  2D4A               	goto	l347
  6049  026C                     l2447:
  6050  026C  3003               	movlw	3
  6051  026D  00FF               	movwf	btemp+1
  6052  026E  087F               	movf	btemp+1,w
  6053  026F  1283               	bcf	3,5	;RP0=0, select bank0
  6054  0270  1303               	bcf	3,6	;RP1=0, select bank0
  6055  0271  00A0               	movwf	___bmul@multiplicand
  6056  0272  0848               	movf	HeaterTask_Update@Id,w
  6057  0273  160A  158A  2512  120A  118A  	fcall	___bmul
  6058  0278  160A  158A  2637  120A  118A  	fcall	_SwitchTask_GetState
  6059  027D  3A00               	xorlw	0
  6060  027E  1903               	skipnz
  6061  027F  2A81               	goto	u2681
  6062  0280  2A82               	goto	u2680
  6063  0281                     u2681:
  6064  0281  2A96               	goto	l2451
  6065  0282                     u2680:
  6066  0282                     l2449:
  6067                           
  6068                           ;WaterHeater.c: 120:             {;WaterHeater.c: 121:                 Heater[ Id ].Stat
      +                          e = ResetMode;
  6069  0282  3017               	movlw	23
  6070  0283  00FF               	movwf	btemp+1
  6071  0284  087F               	movf	btemp+1,w
  6072  0285  1283               	bcf	3,5	;RP0=0, select bank0
  6073  0286  1303               	bcf	3,6	;RP1=0, select bank0
  6074  0287  00A0               	movwf	___bmul@multiplicand
  6075  0288  0848               	movf	HeaterTask_Update@Id,w
  6076  0289  160A  158A  2512  120A  118A  	fcall	___bmul
  6077  028E  3E56               	addlw	(low (_Heater| 0))& (0+255)
  6078  028F  0084               	movwf	4
  6079  0290  3004               	movlw	4
  6080  0291  00FF               	movwf	btemp+1
  6081  0292  087F               	movf	btemp+1,w
  6082  0293  1383               	bcf	3,7	;select IRP bank0
  6083  0294  0080               	movwf	0
  6084                           
  6085                           ;WaterHeater.c: 122:             }else
  6086  0295  2D4A               	goto	l347
  6087  0296                     l2451:
  6088                           
  6089                           ;WaterHeater.c: 123:             {;WaterHeater.c: 124:                 Heater[ Id ].Stat
      +                          e = OperationMode;
  6090  0296  3017               	movlw	23
  6091  0297  00FF               	movwf	btemp+1
  6092  0298  087F               	movf	btemp+1,w
  6093  0299  1283               	bcf	3,5	;RP0=0, select bank0
  6094  029A  1303               	bcf	3,6	;RP1=0, select bank0
  6095  029B  00A0               	movwf	___bmul@multiplicand
  6096  029C  0848               	movf	HeaterTask_Update@Id,w
  6097  029D  160A  158A  2512  120A  118A  	fcall	___bmul
  6098  02A2  3E56               	addlw	(low (_Heater| 0))& (0+255)
  6099  02A3  0084               	movwf	4
  6100  02A4  1383               	bcf	3,7	;select IRP bank0
  6101  02A5  0180               	clrf	0
  6102  02A6  0A80               	incf	0,f
  6103  02A7  2D4A               	goto	l347
  6104  02A8                     l2453:
  6105                           
  6106                           ;WaterHeater.c: 129:         {;WaterHeater.c: 130:             Heater[ Id ].PreState = H
      +                          eater[ Id ].State;
  6107  02A8  3017               	movlw	23
  6108  02A9  00FF               	movwf	btemp+1
  6109  02AA  087F               	movf	btemp+1,w
  6110  02AB  00A0               	movwf	___bmul@multiplicand
  6111  02AC  0848               	movf	HeaterTask_Update@Id,w
  6112  02AD  160A  158A  2512  120A  118A  	fcall	___bmul
  6113  02B2  3E56               	addlw	(low (_Heater| 0))& (0+255)
  6114  02B3  0084               	movwf	4
  6115  02B4  1383               	bcf	3,7	;select IRP bank0
  6116  02B5  0800               	movf	0,w
  6117  02B6  1283               	bcf	3,5	;RP0=0, select bank0
  6118  02B7  1303               	bcf	3,6	;RP1=0, select bank0
  6119  02B8  00C5               	movwf	??_HeaterTask_Update
  6120  02B9  3017               	movlw	23
  6121  02BA  00FF               	movwf	btemp+1
  6122  02BB  087F               	movf	btemp+1,w
  6123  02BC  00A0               	movwf	___bmul@multiplicand
  6124  02BD  0848               	movf	HeaterTask_Update@Id,w
  6125  02BE  160A  158A  2512  120A  118A  	fcall	___bmul
  6126  02C3  3E57               	addlw	(low ((_Heater| 0+1)))& (0+255)
  6127  02C4  0084               	movwf	4
  6128  02C5  1283               	bcf	3,5	;RP0=0, select bank0
  6129  02C6  1303               	bcf	3,6	;RP1=0, select bank0
  6130  02C7  0845               	movf	??_HeaterTask_Update,w
  6131  02C8  1383               	bcf	3,7	;select IRP bank0
  6132  02C9  0080               	movwf	0
  6133                           
  6134                           ;WaterHeater.c: 131:             SsdTask_SetState( Id*2, ( 1 ), 1000 );
  6135  02CA  01AA               	clrf	SsdTask_SetState@State
  6136  02CB  0AAA               	incf	SsdTask_SetState@State,f
  6137  02CC  30E8               	movlw	232
  6138  02CD  00AB               	movwf	SsdTask_SetState@Period
  6139  02CE  3003               	movlw	3
  6140  02CF  00AC               	movwf	SsdTask_SetState@Period+1
  6141  02D0  0848               	movf	HeaterTask_Update@Id,w
  6142  02D1  00C5               	movwf	??_HeaterTask_Update
  6143  02D2  0745               	addwf	??_HeaterTask_Update,w
  6144  02D3  160A  158A  2791  120A  118A  	fcall	_SsdTask_SetState
  6145                           
  6146                           ;WaterHeater.c: 132:             SsdTask_SetState( Id*2 + 1, ( 1 ), 1000 );
  6147  02D8  1283               	bcf	3,5	;RP0=0, select bank0
  6148  02D9  1303               	bcf	3,6	;RP1=0, select bank0
  6149  02DA  01AA               	clrf	SsdTask_SetState@State
  6150  02DB  0AAA               	incf	SsdTask_SetState@State,f
  6151  02DC  30E8               	movlw	232
  6152  02DD  00AB               	movwf	SsdTask_SetState@Period
  6153  02DE  3003               	movlw	3
  6154  02DF  00AC               	movwf	SsdTask_SetState@Period+1
  6155  02E0  1403               	setc
  6156  02E1  0D48               	rlf	HeaterTask_Update@Id,w
  6157  02E2  160A  158A  2791  120A  118A  	fcall	_SsdTask_SetState
  6158                           
  6159                           ;WaterHeater.c: 133:             SsdTask_SetSymbol( Id*2, Heater[ Id ].TargetTemp % 10 )
      +                          ;
  6160  02E7  300A               	movlw	10
  6161  02E8  1283               	bcf	3,5	;RP0=0, select bank0
  6162  02E9  1303               	bcf	3,6	;RP1=0, select bank0
  6163  02EA  00AB               	movwf	___awmod@divisor
  6164  02EB  3000               	movlw	0
  6165  02EC  00AC               	movwf	___awmod@divisor+1
  6166  02ED  3017               	movlw	23
  6167  02EE  00FF               	movwf	btemp+1
  6168  02EF  087F               	movf	btemp+1,w
  6169  02F0  00A0               	movwf	___bmul@multiplicand
  6170  02F1  0848               	movf	HeaterTask_Update@Id,w
  6171  02F2  160A  158A  2512  120A  118A  	fcall	___bmul
  6172  02F7  3E59               	addlw	(low ((_Heater| 0+3)))& (0+255)
  6173  02F8  0084               	movwf	4
  6174  02F9  1383               	bcf	3,7	;select IRP bank0
  6175  02FA  0800               	movf	0,w
  6176  02FB  1283               	bcf	3,5	;RP0=0, select bank0
  6177  02FC  1303               	bcf	3,6	;RP1=0, select bank0
  6178  02FD  00C5               	movwf	??_HeaterTask_Update
  6179  02FE  01C6               	clrf	??_HeaterTask_Update+1
  6180  02FF  0845               	movf	??_HeaterTask_Update,w
  6181  0300  00AD               	movwf	___awmod@dividend
  6182  0301  0846               	movf	??_HeaterTask_Update+1,w
  6183  0302  00AE               	movwf	___awmod@dividend+1
  6184  0303  160A  118A  233D  120A  118A  	fcall	___awmod
  6185  0308  1283               	bcf	3,5	;RP0=0, select bank0
  6186  0309  1303               	bcf	3,6	;RP1=0, select bank0
  6187  030A  082B               	movf	?___awmod,w
  6188  030B  00FF               	movwf	btemp+1
  6189  030C  087F               	movf	btemp+1,w
  6190  030D  00B1               	movwf	SsdTask_SetSymbol@Symbol
  6191  030E  0848               	movf	HeaterTask_Update@Id,w
  6192  030F  00C7               	movwf	??_HeaterTask_Update+2
  6193  0310  0747               	addwf	??_HeaterTask_Update+2,w
  6194  0311  160A  158A  24D3  120A  118A  	fcall	_SsdTask_SetSymbol
  6195                           
  6196                           ;WaterHeater.c: 134:             SsdTask_SetSymbol( Id*2 + 1, ( Heater[ Id ].TargetTemp 
      +                          / 10 ) % 10 );
  6197  0316  300A               	movlw	10
  6198  0317  1283               	bcf	3,5	;RP0=0, select bank0
  6199  0318  1303               	bcf	3,6	;RP1=0, select bank0
  6200  0319  00AB               	movwf	___awmod@divisor
  6201  031A  3000               	movlw	0
  6202  031B  00AC               	movwf	___awmod@divisor+1
  6203  031C  300A               	movlw	10
  6204  031D  00A3               	movwf	___awdiv@divisor
  6205  031E  3000               	movlw	0
  6206  031F  00A4               	movwf	___awdiv@divisor+1
  6207  0320  3017               	movlw	23
  6208  0321  00FF               	movwf	btemp+1
  6209  0322  087F               	movf	btemp+1,w
  6210  0323  00A0               	movwf	___bmul@multiplicand
  6211  0324  0848               	movf	HeaterTask_Update@Id,w
  6212  0325  160A  158A  2512  120A  118A  	fcall	___bmul
  6213  032A  3E59               	addlw	(low ((_Heater| 0+3)))& (0+255)
  6214  032B  0084               	movwf	4
  6215  032C  1383               	bcf	3,7	;select IRP bank0
  6216  032D  0800               	movf	0,w
  6217  032E  1283               	bcf	3,5	;RP0=0, select bank0
  6218  032F  1303               	bcf	3,6	;RP1=0, select bank0
  6219  0330  00C5               	movwf	??_HeaterTask_Update
  6220  0331  01C6               	clrf	??_HeaterTask_Update+1
  6221  0332  0845               	movf	??_HeaterTask_Update,w
  6222  0333  00A5               	movwf	___awdiv@dividend
  6223  0334  0846               	movf	??_HeaterTask_Update+1,w
  6224  0335  00A6               	movwf	___awdiv@dividend+1
  6225  0336  160A  118A  24C2  120A  118A  	fcall	___awdiv
  6226  033B  1283               	bcf	3,5	;RP0=0, select bank0
  6227  033C  1303               	bcf	3,6	;RP1=0, select bank0
  6228  033D  0824               	movf	?___awdiv+1,w
  6229  033E  00AE               	movwf	___awmod@dividend+1
  6230  033F  0823               	movf	?___awdiv,w
  6231  0340  00AD               	movwf	___awmod@dividend
  6232  0341  160A  118A  233D  120A  118A  	fcall	___awmod
  6233  0346  1283               	bcf	3,5	;RP0=0, select bank0
  6234  0347  1303               	bcf	3,6	;RP1=0, select bank0
  6235  0348  082B               	movf	?___awmod,w
  6236  0349  00FF               	movwf	btemp+1
  6237  034A  087F               	movf	btemp+1,w
  6238  034B  00B1               	movwf	SsdTask_SetSymbol@Symbol
  6239  034C  1403               	setc
  6240  034D  0D48               	rlf	HeaterTask_Update@Id,w
  6241  034E  160A  158A  24D3  120A  118A  	fcall	_SsdTask_SetSymbol
  6242                           
  6243                           ;WaterHeater.c: 135:             if( SwitchTask_GetState( Id*3 + 2 ) && Heater[ Id ].Tar
      +                          getTemp <= 70 )
  6244  0353  3003               	movlw	3
  6245  0354  00FF               	movwf	btemp+1
  6246  0355  087F               	movf	btemp+1,w
  6247  0356  1283               	bcf	3,5	;RP0=0, select bank0
  6248  0357  1303               	bcf	3,6	;RP1=0, select bank0
  6249  0358  00A0               	movwf	___bmul@multiplicand
  6250  0359  0848               	movf	HeaterTask_Update@Id,w
  6251  035A  160A  158A  2512  120A  118A  	fcall	___bmul
  6252  035F  3E02               	addlw	2
  6253  0360  160A  158A  2637  120A  118A  	fcall	_SwitchTask_GetState
  6254  0365  3A00               	xorlw	0
  6255  0366  1903               	skipnz
  6256  0367  2B69               	goto	u2691
  6257  0368  2B6A               	goto	u2690
  6258  0369                     u2691:
  6259  0369  2BA4               	goto	l341
  6260  036A                     u2690:
  6261  036A                     l2455:
  6262  036A  3017               	movlw	23
  6263  036B  00FF               	movwf	btemp+1
  6264  036C  087F               	movf	btemp+1,w
  6265  036D  1283               	bcf	3,5	;RP0=0, select bank0
  6266  036E  1303               	bcf	3,6	;RP1=0, select bank0
  6267  036F  00A0               	movwf	___bmul@multiplicand
  6268  0370  0848               	movf	HeaterTask_Update@Id,w
  6269  0371  160A  158A  2512  120A  118A  	fcall	___bmul
  6270  0376  3E59               	addlw	(low ((_Heater| 0+3)))& (0+255)
  6271  0377  0084               	movwf	4
  6272  0378  3047               	movlw	71
  6273  0379  1383               	bcf	3,7	;select IRP bank0
  6274  037A  0200               	subwf	0,w
  6275  037B  1803               	skipnc
  6276  037C  2B7E               	goto	u2701
  6277  037D  2B7F               	goto	u2700
  6278  037E                     u2701:
  6279  037E  2BA4               	goto	l341
  6280  037F                     u2700:
  6281  037F                     l2457:
  6282                           
  6283                           ;WaterHeater.c: 136:             {;WaterHeater.c: 137:                 Heater[ Id ].Targ
      +                          etTemp += 5;
  6284  037F  3017               	movlw	23
  6285  0380  00FF               	movwf	btemp+1
  6286  0381  087F               	movf	btemp+1,w
  6287  0382  1283               	bcf	3,5	;RP0=0, select bank0
  6288  0383  1303               	bcf	3,6	;RP1=0, select bank0
  6289  0384  00A0               	movwf	___bmul@multiplicand
  6290  0385  0848               	movf	HeaterTask_Update@Id,w
  6291  0386  160A  158A  2512  120A  118A  	fcall	___bmul
  6292  038B  3E59               	addlw	(low ((_Heater| 0+3)))& (0+255)
  6293  038C  0084               	movwf	4
  6294  038D  3005               	movlw	5
  6295  038E  00FF               	movwf	btemp+1
  6296  038F  087F               	movf	btemp+1,w
  6297  0390  1383               	bcf	3,7	;select IRP bank0
  6298  0391  0780               	addwf	0,f
  6299                           
  6300                           ;WaterHeater.c: 138:                 Heater[ Id ].Counter = 0;
  6301  0392  3017               	movlw	23
  6302  0393  00FF               	movwf	btemp+1
  6303  0394  087F               	movf	btemp+1,w
  6304  0395  1283               	bcf	3,5	;RP0=0, select bank0
  6305  0396  1303               	bcf	3,6	;RP1=0, select bank0
  6306  0397  00A0               	movwf	___bmul@multiplicand
  6307  0398  0848               	movf	HeaterTask_Update@Id,w
  6308  0399  160A  158A  2512  120A  118A  	fcall	___bmul
  6309  039E  3E5A               	addlw	(low ((_Heater| 0+4)))& (0+255)
  6310  039F  0084               	movwf	4
  6311  03A0  1383               	bcf	3,7	;select IRP bank0
  6312  03A1  0180               	clrf	0
  6313  03A2  0A84               	incf	4,f
  6314  03A3  0180               	clrf	0
  6315  03A4                     l341:	
  6316                           ;WaterHeater.c: 139:             }
  6317                           
  6318                           
  6319                           ;WaterHeater.c: 140:             if( SwitchTask_GetState( Id*3 + 1 ) && Heater[ Id ].Tar
      +                          getTemp >= 40 )
  6320  03A4  3003               	movlw	3
  6321  03A5  00FF               	movwf	btemp+1
  6322  03A6  087F               	movf	btemp+1,w
  6323  03A7  1283               	bcf	3,5	;RP0=0, select bank0
  6324  03A8  1303               	bcf	3,6	;RP1=0, select bank0
  6325  03A9  00A0               	movwf	___bmul@multiplicand
  6326  03AA  0848               	movf	HeaterTask_Update@Id,w
  6327  03AB  160A  158A  2512  120A  118A  	fcall	___bmul
  6328  03B0  3E01               	addlw	1
  6329  03B1  160A  158A  2637  120A  118A  	fcall	_SwitchTask_GetState
  6330  03B6  3A00               	xorlw	0
  6331  03B7  1903               	skipnz
  6332  03B8  2BBA               	goto	u2711
  6333  03B9  2BBB               	goto	u2710
  6334  03BA                     u2711:
  6335  03BA  2BF3               	goto	l342
  6336  03BB                     u2710:
  6337  03BB                     l2459:
  6338  03BB  3017               	movlw	23
  6339  03BC  00FF               	movwf	btemp+1
  6340  03BD  087F               	movf	btemp+1,w
  6341  03BE  1283               	bcf	3,5	;RP0=0, select bank0
  6342  03BF  1303               	bcf	3,6	;RP1=0, select bank0
  6343  03C0  00A0               	movwf	___bmul@multiplicand
  6344  03C1  0848               	movf	HeaterTask_Update@Id,w
  6345  03C2  160A  158A  2512  120A  118A  	fcall	___bmul
  6346  03C7  3E59               	addlw	(low ((_Heater| 0+3)))& (0+255)
  6347  03C8  0084               	movwf	4
  6348  03C9  3028               	movlw	40
  6349  03CA  1383               	bcf	3,7	;select IRP bank0
  6350  03CB  0200               	subwf	0,w
  6351  03CC  1C03               	skipc
  6352  03CD  2BCF               	goto	u2721
  6353  03CE  2BD0               	goto	u2720
  6354  03CF                     u2721:
  6355  03CF  2BF3               	goto	l342
  6356  03D0                     u2720:
  6357  03D0                     l2461:
  6358                           
  6359                           ;WaterHeater.c: 141:             {;WaterHeater.c: 142:                 Heater[ Id ].Targ
      +                          etTemp -= 5;
  6360  03D0  3017               	movlw	23
  6361  03D1  00FF               	movwf	btemp+1
  6362  03D2  087F               	movf	btemp+1,w
  6363  03D3  1283               	bcf	3,5	;RP0=0, select bank0
  6364  03D4  1303               	bcf	3,6	;RP1=0, select bank0
  6365  03D5  00A0               	movwf	___bmul@multiplicand
  6366  03D6  0848               	movf	HeaterTask_Update@Id,w
  6367  03D7  160A  158A  2512  120A  118A  	fcall	___bmul
  6368  03DC  3E59               	addlw	(low ((_Heater| 0+3)))& (0+255)
  6369  03DD  0084               	movwf	4
  6370  03DE  3005               	movlw	5
  6371  03DF  1383               	bcf	3,7	;select IRP bank0
  6372  03E0  0280               	subwf	0,f
  6373                           
  6374                           ;WaterHeater.c: 143:                 Heater[ Id ].Counter = 0;
  6375  03E1  3017               	movlw	23
  6376  03E2  00FF               	movwf	btemp+1
  6377  03E3  087F               	movf	btemp+1,w
  6378  03E4  1283               	bcf	3,5	;RP0=0, select bank0
  6379  03E5  1303               	bcf	3,6	;RP1=0, select bank0
  6380  03E6  00A0               	movwf	___bmul@multiplicand
  6381  03E7  0848               	movf	HeaterTask_Update@Id,w
  6382  03E8  160A  158A  2512  120A  118A  	fcall	___bmul
  6383  03ED  3E5A               	addlw	(low ((_Heater| 0+4)))& (0+255)
  6384  03EE  0084               	movwf	4
  6385  03EF  1383               	bcf	3,7	;select IRP bank0
  6386  03F0  0180               	clrf	0
  6387  03F1  0A84               	incf	4,f
  6388  03F2  0180               	clrf	0
  6389  03F3                     l342:	
  6390                           ;WaterHeater.c: 144:             }
  6391                           
  6392                           
  6393                           ;WaterHeater.c: 145:             if( SwitchTask_GetState( Id*3 ) )
  6394  03F3  3003               	movlw	3
  6395  03F4  00FF               	movwf	btemp+1
  6396  03F5  087F               	movf	btemp+1,w
  6397  03F6  1283               	bcf	3,5	;RP0=0, select bank0
  6398  03F7  1303               	bcf	3,6	;RP1=0, select bank0
  6399  03F8  00A0               	movwf	___bmul@multiplicand
  6400  03F9  0848               	movf	HeaterTask_Update@Id,w
  6401  03FA  160A  158A  2512  120A  118A  	fcall	___bmul
  6402  03FF  160A  158A  2637  120A  118A  	fcall	_SwitchTask_GetState
  6403  0404  3A00               	xorlw	0
  6404  0405  1903               	skipnz
  6405  0406  2C08               	goto	u2731
  6406  0407  2C09               	goto	u2730
  6407  0408                     u2731:
  6408  0408  2C1D               	goto	l2465
  6409  0409                     u2730:
  6410  0409                     l2463:
  6411                           
  6412                           ;WaterHeater.c: 146:             {;WaterHeater.c: 147:                 Heater[ Id ].Stat
      +                          e = ResetMode;
  6413  0409  3017               	movlw	23
  6414  040A  00FF               	movwf	btemp+1
  6415  040B  087F               	movf	btemp+1,w
  6416  040C  1283               	bcf	3,5	;RP0=0, select bank0
  6417  040D  1303               	bcf	3,6	;RP1=0, select bank0
  6418  040E  00A0               	movwf	___bmul@multiplicand
  6419  040F  0848               	movf	HeaterTask_Update@Id,w
  6420  0410  160A  158A  2512  120A  118A  	fcall	___bmul
  6421  0415  3E56               	addlw	(low (_Heater| 0))& (0+255)
  6422  0416  0084               	movwf	4
  6423  0417  3004               	movlw	4
  6424  0418  00FF               	movwf	btemp+1
  6425  0419  087F               	movf	btemp+1,w
  6426  041A  1383               	bcf	3,7	;select IRP bank0
  6427  041B  0080               	movwf	0
  6428                           
  6429                           ;WaterHeater.c: 148:             }else
  6430  041C  2C2E               	goto	l344
  6431  041D                     l2465:
  6432                           
  6433                           ;WaterHeater.c: 149:             {;WaterHeater.c: 150:                 Heater[ Id ].Stat
      +                          e = OperationMode;
  6434  041D  3017               	movlw	23
  6435  041E  00FF               	movwf	btemp+1
  6436  041F  087F               	movf	btemp+1,w
  6437  0420  1283               	bcf	3,5	;RP0=0, select bank0
  6438  0421  1303               	bcf	3,6	;RP1=0, select bank0
  6439  0422  00A0               	movwf	___bmul@multiplicand
  6440  0423  0848               	movf	HeaterTask_Update@Id,w
  6441  0424  160A  158A  2512  120A  118A  	fcall	___bmul
  6442  0429  3E56               	addlw	(low (_Heater| 0))& (0+255)
  6443  042A  0084               	movwf	4
  6444  042B  1383               	bcf	3,7	;select IRP bank0
  6445  042C  0180               	clrf	0
  6446  042D  0A80               	incf	0,f
  6447  042E                     l344:	
  6448                           ;WaterHeater.c: 151:             }
  6449                           
  6450                           
  6451                           ;WaterHeater.c: 152:             if( Heater[ Id ].Counter++ >= ( ( 5000 / ( ( TickType_t
      +                           ) 5 ) ) / ( 200 / ( ( TickType_t ) 5 ) ) ) )
  6452  042E  3017               	movlw	23
  6453  042F  00FF               	movwf	btemp+1
  6454  0430  087F               	movf	btemp+1,w
  6455  0431  1283               	bcf	3,5	;RP0=0, select bank0
  6456  0432  1303               	bcf	3,6	;RP1=0, select bank0
  6457  0433  00A0               	movwf	___bmul@multiplicand
  6458  0434  0848               	movf	HeaterTask_Update@Id,w
  6459  0435  160A  158A  2512  120A  118A  	fcall	___bmul
  6460  043A  3E5A               	addlw	(low ((_Heater| 0+4)))& (0+255)
  6461  043B  0084               	movwf	4
  6462  043C  1383               	bcf	3,7	;select IRP bank0
  6463  043D  0800               	movf	0,w
  6464  043E  1283               	bcf	3,5	;RP0=0, select bank0
  6465  043F  1303               	bcf	3,6	;RP1=0, select bank0
  6466  0440  00C5               	movwf	??_HeaterTask_Update
  6467  0441  3001               	movlw	1
  6468  0442  0780               	addwf	0,f
  6469  0443  0A84               	incf	4,f
  6470  0444  0800               	movf	0,w
  6471  0445  00C6               	movwf	??_HeaterTask_Update+1
  6472  0446  3000               	movlw	0
  6473  0447  1803               	skipnc
  6474  0448  0A80               	incf	0,f
  6475  0449  0780               	addwf	0,f
  6476  044A  3000               	movlw	0
  6477  044B  0246               	subwf	??_HeaterTask_Update+1,w
  6478  044C  3019               	movlw	25
  6479  044D  1903               	skipnz
  6480  044E  0245               	subwf	??_HeaterTask_Update,w
  6481  044F  1C03               	skipc
  6482  0450  2C52               	goto	u2741
  6483  0451  2C53               	goto	u2740
  6484  0452                     u2741:
  6485  0452  2D4A               	goto	l347
  6486  0453                     u2740:
  6487  0453                     l2467:
  6488                           
  6489                           ;WaterHeater.c: 153:             {;WaterHeater.c: 154:                 Heater[ Id ].Coun
      +                          ter = 0;
  6490  0453  3017               	movlw	23
  6491  0454  00FF               	movwf	btemp+1
  6492  0455  087F               	movf	btemp+1,w
  6493  0456  00A0               	movwf	___bmul@multiplicand
  6494  0457  0848               	movf	HeaterTask_Update@Id,w
  6495  0458  160A  158A  2512  120A  118A  	fcall	___bmul
  6496  045D  3E5A               	addlw	(low ((_Heater| 0+4)))& (0+255)
  6497  045E  0084               	movwf	4
  6498  045F  1383               	bcf	3,7	;select IRP bank0
  6499  0460  0180               	clrf	0
  6500  0461  0A84               	incf	4,f
  6501  0462  0180               	clrf	0
  6502                           
  6503                           ;WaterHeater.c: 155:                 Eeprom_Write( 8, Heater[ Id ].TargetTemp );
  6504  0463  3017               	movlw	23
  6505  0464  00FF               	movwf	btemp+1
  6506  0465  087F               	movf	btemp+1,w
  6507  0466  1283               	bcf	3,5	;RP0=0, select bank0
  6508  0467  1303               	bcf	3,6	;RP1=0, select bank0
  6509  0468  00A0               	movwf	___bmul@multiplicand
  6510  0469  0848               	movf	HeaterTask_Update@Id,w
  6511  046A  160A  158A  2512  120A  118A  	fcall	___bmul
  6512  046F  3E59               	addlw	(low ((_Heater| 0+3)))& (0+255)
  6513  0470  0084               	movwf	4
  6514  0471  1383               	bcf	3,7	;select IRP bank0
  6515  0472  0800               	movf	0,w
  6516  0473  00FF               	movwf	btemp+1
  6517  0474  087F               	movf	btemp+1,w
  6518  0475  1283               	bcf	3,5	;RP0=0, select bank0
  6519  0476  1303               	bcf	3,6	;RP1=0, select bank0
  6520  0477  00A3               	movwf	Eeprom_Write@Buffer
  6521  0478  3008               	movlw	8
  6522  0479  160A  158A  2762  120A  118A  	fcall	_Eeprom_Write
  6523                           
  6524                           ;WaterHeater.c: 156:                 Heater[ Id ].State = NormalMode;
  6525  047E  3017               	movlw	23
  6526  047F  00FF               	movwf	btemp+1
  6527  0480  087F               	movf	btemp+1,w
  6528  0481  1283               	bcf	3,5	;RP0=0, select bank0
  6529  0482  1303               	bcf	3,6	;RP1=0, select bank0
  6530  0483  00A0               	movwf	___bmul@multiplicand
  6531  0484  0848               	movf	HeaterTask_Update@Id,w
  6532  0485  160A  158A  2512  120A  118A  	fcall	___bmul
  6533  048A  3E56               	addlw	(low (_Heater| 0))& (0+255)
  6534  048B  0084               	movwf	4
  6535  048C  3002               	movlw	2
  6536  048D  00FF               	movwf	btemp+1
  6537  048E  087F               	movf	btemp+1,w
  6538  048F  1383               	bcf	3,7	;select IRP bank0
  6539  0490  0080               	movwf	0
  6540  0491  2D4A               	goto	l347
  6541  0492                     l2469:
  6542                           
  6543                           ;WaterHeater.c: 161:         {;WaterHeater.c: 162:             TempControlTask_SetState(
      +                           Id, 0 );
  6544  0492  01A0               	clrf	TempControlTask_SetState@State
  6545  0493  0848               	movf	HeaterTask_Update@Id,w
  6546  0494  160A  158A  241A  120A  118A  	fcall	_TempControlTask_SetState
  6547                           
  6548                           ;WaterHeater.c: 163:             LedTask_SetState( Id, ( 0 ), 0 );
  6549  0499  1283               	bcf	3,5	;RP0=0, select bank0
  6550  049A  1303               	bcf	3,6	;RP1=0, select bank0
  6551  049B  01AA               	clrf	LedTask_SetState@State
  6552  049C  3000               	movlw	0
  6553  049D  00AB               	movwf	LedTask_SetState@Period
  6554  049E  00AC               	movwf	LedTask_SetState@Period+1
  6555  049F  0848               	movf	HeaterTask_Update@Id,w
  6556  04A0  160A  118A  21F1  120A  118A  	fcall	_LedTask_SetState
  6557                           
  6558                           ;WaterHeater.c: 164:             SsdTask_SetState( Id*2, 0x00, 0 );
  6559  04A5  1283               	bcf	3,5	;RP0=0, select bank0
  6560  04A6  1303               	bcf	3,6	;RP1=0, select bank0
  6561  04A7  01AA               	clrf	SsdTask_SetState@State
  6562  04A8  3000               	movlw	0
  6563  04A9  00AB               	movwf	SsdTask_SetState@Period
  6564  04AA  00AC               	movwf	SsdTask_SetState@Period+1
  6565  04AB  0848               	movf	HeaterTask_Update@Id,w
  6566  04AC  00C5               	movwf	??_HeaterTask_Update
  6567  04AD  0745               	addwf	??_HeaterTask_Update,w
  6568  04AE  160A  158A  2791  120A  118A  	fcall	_SsdTask_SetState
  6569                           
  6570                           ;WaterHeater.c: 165:             SsdTask_SetState( Id*2 + 1, 0x00, 0 );
  6571  04B3  1283               	bcf	3,5	;RP0=0, select bank0
  6572  04B4  1303               	bcf	3,6	;RP1=0, select bank0
  6573  04B5  01AA               	clrf	SsdTask_SetState@State
  6574  04B6  3000               	movlw	0
  6575  04B7  00AB               	movwf	SsdTask_SetState@Period
  6576  04B8  00AC               	movwf	SsdTask_SetState@Period+1
  6577  04B9  1403               	setc
  6578  04BA  0D48               	rlf	HeaterTask_Update@Id,w
  6579  04BB  160A  158A  2791  120A  118A  	fcall	_SsdTask_SetState
  6580                           
  6581                           ;WaterHeater.c: 166:             Eeprom_Write( 8, Heater[ Id ].TargetTemp );
  6582  04C0  3017               	movlw	23
  6583  04C1  00FF               	movwf	btemp+1
  6584  04C2  087F               	movf	btemp+1,w
  6585  04C3  1283               	bcf	3,5	;RP0=0, select bank0
  6586  04C4  1303               	bcf	3,6	;RP1=0, select bank0
  6587  04C5  00A0               	movwf	___bmul@multiplicand
  6588  04C6  0848               	movf	HeaterTask_Update@Id,w
  6589  04C7  160A  158A  2512  120A  118A  	fcall	___bmul
  6590  04CC  3E59               	addlw	(low ((_Heater| 0+3)))& (0+255)
  6591  04CD  0084               	movwf	4
  6592  04CE  1383               	bcf	3,7	;select IRP bank0
  6593  04CF  0800               	movf	0,w
  6594  04D0  00FF               	movwf	btemp+1
  6595  04D1  087F               	movf	btemp+1,w
  6596  04D2  1283               	bcf	3,5	;RP0=0, select bank0
  6597  04D3  1303               	bcf	3,6	;RP1=0, select bank0
  6598  04D4  00A3               	movwf	Eeprom_Write@Buffer
  6599  04D5  3008               	movlw	8
  6600  04D6  160A  158A  2762  120A  118A  	fcall	_Eeprom_Write
  6601                           
  6602                           ;WaterHeater.c: 167:             Heater[ Id ].Counter = 0;
  6603  04DB  3017               	movlw	23
  6604  04DC  00FF               	movwf	btemp+1
  6605  04DD  087F               	movf	btemp+1,w
  6606  04DE  1283               	bcf	3,5	;RP0=0, select bank0
  6607  04DF  1303               	bcf	3,6	;RP1=0, select bank0
  6608  04E0  00A0               	movwf	___bmul@multiplicand
  6609  04E1  0848               	movf	HeaterTask_Update@Id,w
  6610  04E2  160A  158A  2512  120A  118A  	fcall	___bmul
  6611  04E7  3E5A               	addlw	(low ((_Heater| 0+4)))& (0+255)
  6612  04E8  0084               	movwf	4
  6613  04E9  1383               	bcf	3,7	;select IRP bank0
  6614  04EA  0180               	clrf	0
  6615  04EB  0A84               	incf	4,f
  6616  04EC  0180               	clrf	0
  6617                           
  6618                           ;WaterHeater.c: 168:             Heater[ Id ].State = OffMode;
  6619  04ED  3017               	movlw	23
  6620  04EE  00FF               	movwf	btemp+1
  6621  04EF  087F               	movf	btemp+1,w
  6622  04F0  1283               	bcf	3,5	;RP0=0, select bank0
  6623  04F1  1303               	bcf	3,6	;RP1=0, select bank0
  6624  04F2  00A0               	movwf	___bmul@multiplicand
  6625  04F3  0848               	movf	HeaterTask_Update@Id,w
  6626  04F4  160A  158A  2512  120A  118A  	fcall	___bmul
  6627  04F9  3E56               	addlw	(low (_Heater| 0))& (0+255)
  6628  04FA  0084               	movwf	4
  6629  04FB  1383               	bcf	3,7	;select IRP bank0
  6630  04FC  0180               	clrf	0
  6631                           
  6632                           ;WaterHeater.c: 169:             Heater[ Id ].PreState = Heater[ Id ].State;
  6633  04FD  3017               	movlw	23
  6634  04FE  00FF               	movwf	btemp+1
  6635  04FF  087F               	movf	btemp+1,w
  6636  0500  1283               	bcf	3,5	;RP0=0, select bank0
  6637  0501  1303               	bcf	3,6	;RP1=0, select bank0
  6638  0502  00A0               	movwf	___bmul@multiplicand
  6639  0503  0848               	movf	HeaterTask_Update@Id,w
  6640  0504  160A  158A  2512  120A  118A  	fcall	___bmul
  6641  0509  3E56               	addlw	(low (_Heater| 0))& (0+255)
  6642  050A  0084               	movwf	4
  6643  050B  1383               	bcf	3,7	;select IRP bank0
  6644  050C  0800               	movf	0,w
  6645  050D  1283               	bcf	3,5	;RP0=0, select bank0
  6646  050E  1303               	bcf	3,6	;RP1=0, select bank0
  6647  050F  00C5               	movwf	??_HeaterTask_Update
  6648  0510  3017               	movlw	23
  6649  0511  00FF               	movwf	btemp+1
  6650  0512  087F               	movf	btemp+1,w
  6651  0513  00A0               	movwf	___bmul@multiplicand
  6652  0514  0848               	movf	HeaterTask_Update@Id,w
  6653  0515  160A  158A  2512  120A  118A  	fcall	___bmul
  6654  051A  3E57               	addlw	(low ((_Heater| 0+1)))& (0+255)
  6655  051B  0084               	movwf	4
  6656  051C  1283               	bcf	3,5	;RP0=0, select bank0
  6657  051D  1303               	bcf	3,6	;RP1=0, select bank0
  6658  051E  0845               	movf	??_HeaterTask_Update,w
  6659  051F  1383               	bcf	3,7	;select IRP bank0
  6660  0520  0080               	movwf	0
  6661                           
  6662                           ;WaterHeater.c: 170:             break;
  6663  0521  2D4A               	goto	l347
  6664  0522                     l2473:
  6665  0522  3017               	movlw	23
  6666  0523  00FF               	movwf	btemp+1
  6667  0524  087F               	movf	btemp+1,w
  6668  0525  00A0               	movwf	___bmul@multiplicand
  6669  0526  0848               	movf	HeaterTask_Update@Id,w
  6670  0527  160A  158A  2512  120A  118A  	fcall	___bmul
  6671  052C  3E56               	addlw	(low (_Heater| 0))& (0+255)
  6672  052D  0084               	movwf	4
  6673  052E  1383               	bcf	3,7	;select IRP bank0
  6674  052F  0800               	movf	0,w
  6675  0530  1283               	bcf	3,5	;RP0=0, select bank0
  6676  0531  1303               	bcf	3,6	;RP1=0, select bank0
  6677  0532  00C5               	movwf	??_HeaterTask_Update
  6678  0533  01C6               	clrf	??_HeaterTask_Update+1
  6679                           
  6680                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6681                           ; Switch size 1, requested type "simple"
  6682                           ; Number of cases is 1, Range of values is 0 to 0
  6683                           ; switch strategies available:
  6684                           ; Name         Instructions Cycles
  6685                           ; simple_byte            4     3 (average)
  6686                           ; direct_byte           11     8 (fixed)
  6687                           ; jumptable            260     6 (fixed)
  6688                           ;	Chosen strategy is simple_byte
  6689  0534  0846               	movf	??_HeaterTask_Update+1,w
  6690  0535  3A00               	xorlw	0	; case 0
  6691  0536  1903               	skipnz
  6692  0537  2D39               	goto	l2821
  6693  0538  2D4A               	goto	l347
  6694  0539                     l2821:
  6695                           
  6696                           ; Switch size 1, requested type "simple"
  6697                           ; Number of cases is 5, Range of values is 0 to 4
  6698                           ; switch strategies available:
  6699                           ; Name         Instructions Cycles
  6700                           ; simple_byte           16     9 (average)
  6701                           ; direct_byte           23     8 (fixed)
  6702                           ; jumptable            260     6 (fixed)
  6703                           ;	Chosen strategy is simple_byte
  6704  0539  0845               	movf	??_HeaterTask_Update,w
  6705  053A  3A00               	xorlw	0	; case 0
  6706  053B  1903               	skipnz
  6707  053C  286E               	goto	l2425
  6708  053D  3A01               	xorlw	1	; case 1
  6709  053E  1903               	skipnz
  6710  053F  2894               	goto	l2429
  6711  0540  3A03               	xorlw	3	; case 2
  6712  0541  1903               	skipnz
  6713  0542  2981               	goto	l2441
  6714  0543  3A01               	xorlw	1	; case 3
  6715  0544  1903               	skipnz
  6716  0545  2AA8               	goto	l2453
  6717  0546  3A07               	xorlw	7	; case 4
  6718  0547  1903               	skipnz
  6719  0548  2C92               	goto	l2469
  6720  0549  2D4A               	goto	l347
  6721  054A                     l347:
  6722  054A  0008               	return
  6723  054B                     __end_of_HeaterTask_Update:
  6724                           
  6725                           	psect	text20
  6726  0966                     __ptext20:	
  6727 ;; *************** function _SwitchTask_Update *****************
  6728 ;; Defined at:
  6729 ;;		line 27 in file "SwitchTask.c"
  6730 ;; Parameters:    Size  Location     Type
  6731 ;;  Paramter        2   35[BANK0 ] PTR void 
  6732 ;;		 -> RAM(512), RAM(512), NULL(0), 
  6733 ;; Auto vars:     Size  Location     Type
  6734 ;;  Id              1   37[BANK0 ] unsigned char 
  6735 ;; Return value:  Size  Location     Type
  6736 ;;                  1    wreg      void 
  6737 ;; Registers used:
  6738 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6739 ;; Tracked objects:
  6740 ;;		On entry : 0/0
  6741 ;;		On exit  : 0/0
  6742 ;;		Unchanged: 0/0
  6743 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6744 ;;      Params:         0       2       0       0       0
  6745 ;;      Locals:         0       1       0       0       0
  6746 ;;      Temps:          0       0       0       0       0
  6747 ;;      Totals:         0       3       0       0       0
  6748 ;;Total ram usage:        3 bytes
  6749 ;; Hardware stack levels used:    1
  6750 ;; Hardware stack levels required when called:    5
  6751 ;; This function calls:
  6752 ;;		_Switch_GetState
  6753 ;;		___bmul
  6754 ;; This function is called by:
  6755 ;;		_main
  6756 ;;		_Scheduler_dispatchTasks
  6757 ;; This function uses a non-reentrant model
  6758 ;;
  6759                           
  6760                           
  6761                           ;psect for function _SwitchTask_Update
  6762  0966                     _SwitchTask_Update:
  6763  0966                     l2479:	
  6764                           ;incstack = 0
  6765                           ; Regs used in _SwitchTask_Update: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6766                           
  6767                           
  6768                           ;SwitchTask.c: 27: void SwitchTask_Update( void *Paramter );SwitchTask.c: 28: {;SwitchTa
      +                          sk.c: 29:     Id_t Id = (Id_t) Paramter;
  6769  0966  1283               	bcf	3,5	;RP0=0, select bank0
  6770  0967  1303               	bcf	3,6	;RP1=0, select bank0
  6771  0968  0843               	movf	SwitchTask_Update@Paramter,w
  6772  0969  00FF               	movwf	btemp+1
  6773  096A  087F               	movf	btemp+1,w
  6774  096B  00C5               	movwf	SwitchTask_Update@Id
  6775  096C                     l2481:
  6776                           
  6777                           ;SwitchTask.c: 30:     if( SwitchTask[ Id ].Lock )
  6778  096C  3003               	movlw	3
  6779  096D  00FF               	movwf	btemp+1
  6780  096E  087F               	movf	btemp+1,w
  6781  096F  00A0               	movwf	___bmul@multiplicand
  6782  0970  0845               	movf	SwitchTask_Update@Id,w
  6783  0971  160A  158A  2512  120A  158A  	fcall	___bmul
  6784  0976  3EC9               	addlw	(low (_SwitchTask| 0))& (0+255)
  6785  0977  0084               	movwf	4
  6786  0978  1383               	bcf	3,7	;select IRP bank1
  6787  0979  0800               	movf	0,w
  6788  097A  1903               	btfsc	3,2
  6789  097B  297D               	goto	u2751
  6790  097C  297E               	goto	u2750
  6791  097D                     u2751:
  6792  097D  2990               	goto	l2485
  6793  097E                     u2750:
  6794  097E                     l2483:
  6795                           
  6796                           ;SwitchTask.c: 31:     {;SwitchTask.c: 32:         SwitchTask[ Id ].Lock--;
  6797  097E  3003               	movlw	3
  6798  097F  00FF               	movwf	btemp+1
  6799  0980  087F               	movf	btemp+1,w
  6800  0981  1283               	bcf	3,5	;RP0=0, select bank0
  6801  0982  1303               	bcf	3,6	;RP1=0, select bank0
  6802  0983  00A0               	movwf	___bmul@multiplicand
  6803  0984  0845               	movf	SwitchTask_Update@Id,w
  6804  0985  160A  158A  2512  120A  158A  	fcall	___bmul
  6805  098A  3EC9               	addlw	(low (_SwitchTask| 0))& (0+255)
  6806  098B  0084               	movwf	4
  6807  098C  3001               	movlw	1
  6808  098D  1383               	bcf	3,7	;select IRP bank1
  6809  098E  0280               	subwf	0,f
  6810                           
  6811                           ;SwitchTask.c: 33:     }else if( !Switch_GetState( Id ) )
  6812  098F  2A0A               	goto	l367
  6813  0990                     l2485:
  6814  0990  1283               	bcf	3,5	;RP0=0, select bank0
  6815  0991  1303               	bcf	3,6	;RP1=0, select bank0
  6816  0992  0845               	movf	SwitchTask_Update@Id,w
  6817  0993  160A  158A  2558  120A  158A  	fcall	_Switch_GetState
  6818  0998  3A00               	xorlw	0
  6819  0999  1D03               	skipz
  6820  099A  299C               	goto	u2761
  6821  099B  299D               	goto	u2760
  6822  099C                     u2761:
  6823  099C  29FA               	goto	l2491
  6824  099D                     u2760:
  6825  099D                     l2487:
  6826                           
  6827                           ;SwitchTask.c: 34:     {;SwitchTask.c: 35:         SwitchTask[ Id ].Counter++;
  6828  099D  3003               	movlw	3
  6829  099E  00FF               	movwf	btemp+1
  6830  099F  087F               	movf	btemp+1,w
  6831  09A0  1283               	bcf	3,5	;RP0=0, select bank0
  6832  09A1  1303               	bcf	3,6	;RP1=0, select bank0
  6833  09A2  00A0               	movwf	___bmul@multiplicand
  6834  09A3  0845               	movf	SwitchTask_Update@Id,w
  6835  09A4  160A  158A  2512  120A  158A  	fcall	___bmul
  6836  09A9  3ECA               	addlw	(low ((_SwitchTask| 0+1)))& (0+255)
  6837  09AA  0084               	movwf	4
  6838  09AB  3001               	movlw	1
  6839  09AC  00FF               	movwf	btemp+1
  6840  09AD  087F               	movf	btemp+1,w
  6841  09AE  1383               	bcf	3,7	;select IRP bank1
  6842  09AF  0780               	addwf	0,f
  6843                           
  6844                           ;SwitchTask.c: 36:         if( SwitchTask[ Id ].Counter == ( 20 / ( ( TickType_t ) 5 ) )
      +                           / ( 10 / ( ( TickType_t ) 5 ) ) )
  6845  09B0  3003               	movlw	3
  6846  09B1  00FF               	movwf	btemp+1
  6847  09B2  087F               	movf	btemp+1,w
  6848  09B3  1283               	bcf	3,5	;RP0=0, select bank0
  6849  09B4  1303               	bcf	3,6	;RP1=0, select bank0
  6850  09B5  00A0               	movwf	___bmul@multiplicand
  6851  09B6  0845               	movf	SwitchTask_Update@Id,w
  6852  09B7  160A  158A  2512  120A  158A  	fcall	___bmul
  6853  09BC  3ECA               	addlw	(low ((_SwitchTask| 0+1)))& (0+255)
  6854  09BD  0084               	movwf	4
  6855  09BE  3002               	movlw	2
  6856  09BF  1383               	bcf	3,7	;select IRP bank1
  6857  09C0  0600               	xorwf	0,w
  6858  09C1  1D03               	btfss	3,2
  6859  09C2  29C4               	goto	u2771
  6860  09C3  29C5               	goto	u2770
  6861  09C4                     u2771:
  6862  09C4  2A0A               	goto	l367
  6863  09C5                     u2770:
  6864  09C5                     l2489:
  6865                           
  6866                           ;SwitchTask.c: 37:         {;SwitchTask.c: 38:             SwitchTask[ Id ].Lock = ( 500
      +                           / ( ( TickType_t ) 5 ) ) / ( 10 / ( ( TickType_t ) 5 ) );
  6867  09C5  3003               	movlw	3
  6868  09C6  00FF               	movwf	btemp+1
  6869  09C7  087F               	movf	btemp+1,w
  6870  09C8  1283               	bcf	3,5	;RP0=0, select bank0
  6871  09C9  1303               	bcf	3,6	;RP1=0, select bank0
  6872  09CA  00A0               	movwf	___bmul@multiplicand
  6873  09CB  0845               	movf	SwitchTask_Update@Id,w
  6874  09CC  160A  158A  2512  120A  158A  	fcall	___bmul
  6875  09D1  3EC9               	addlw	(low (_SwitchTask| 0))& (0+255)
  6876  09D2  0084               	movwf	4
  6877  09D3  3032               	movlw	50
  6878  09D4  00FF               	movwf	btemp+1
  6879  09D5  087F               	movf	btemp+1,w
  6880  09D6  1383               	bcf	3,7	;select IRP bank1
  6881  09D7  0080               	movwf	0
  6882                           
  6883                           ;SwitchTask.c: 39:             SwitchTask[ Id ].Counter = 0;
  6884  09D8  3003               	movlw	3
  6885  09D9  00FF               	movwf	btemp+1
  6886  09DA  087F               	movf	btemp+1,w
  6887  09DB  1283               	bcf	3,5	;RP0=0, select bank0
  6888  09DC  1303               	bcf	3,6	;RP1=0, select bank0
  6889  09DD  00A0               	movwf	___bmul@multiplicand
  6890  09DE  0845               	movf	SwitchTask_Update@Id,w
  6891  09DF  160A  158A  2512  120A  158A  	fcall	___bmul
  6892  09E4  3ECA               	addlw	(low ((_SwitchTask| 0+1)))& (0+255)
  6893  09E5  0084               	movwf	4
  6894  09E6  1383               	bcf	3,7	;select IRP bank1
  6895  09E7  0180               	clrf	0
  6896                           
  6897                           ;SwitchTask.c: 40:             SwitchTask[ Id ].State = ( 1 );
  6898  09E8  3003               	movlw	3
  6899  09E9  00FF               	movwf	btemp+1
  6900  09EA  087F               	movf	btemp+1,w
  6901  09EB  1283               	bcf	3,5	;RP0=0, select bank0
  6902  09EC  1303               	bcf	3,6	;RP1=0, select bank0
  6903  09ED  00A0               	movwf	___bmul@multiplicand
  6904  09EE  0845               	movf	SwitchTask_Update@Id,w
  6905  09EF  160A  158A  2512  120A  158A  	fcall	___bmul
  6906  09F4  3ECB               	addlw	(low ((_SwitchTask| 0+2)))& (0+255)
  6907  09F5  0084               	movwf	4
  6908  09F6  1383               	bcf	3,7	;select IRP bank1
  6909  09F7  0180               	clrf	0
  6910  09F8  0A80               	incf	0,f
  6911  09F9  2A0A               	goto	l367
  6912  09FA                     l2491:
  6913                           
  6914                           ;SwitchTask.c: 43:     {;SwitchTask.c: 44:         SwitchTask[ Id ].Counter = 0;
  6915  09FA  3003               	movlw	3
  6916  09FB  00FF               	movwf	btemp+1
  6917  09FC  087F               	movf	btemp+1,w
  6918  09FD  1283               	bcf	3,5	;RP0=0, select bank0
  6919  09FE  1303               	bcf	3,6	;RP1=0, select bank0
  6920  09FF  00A0               	movwf	___bmul@multiplicand
  6921  0A00  0845               	movf	SwitchTask_Update@Id,w
  6922  0A01  160A  158A  2512  120A  158A  	fcall	___bmul
  6923  0A06  3ECA               	addlw	(low ((_SwitchTask| 0+1)))& (0+255)
  6924  0A07  0084               	movwf	4
  6925  0A08  1383               	bcf	3,7	;select IRP bank1
  6926  0A09  0180               	clrf	0
  6927  0A0A                     l367:
  6928  0A0A  0008               	return
  6929  0A0B                     __end_of_SwitchTask_Update:
  6930                           
  6931                           	psect	text21
  6932  0C79                     __ptext21:	
  6933 ;; *************** function _TempSensorTask_Update *****************
  6934 ;; Defined at:
  6935 ;;		line 31 in file "TempSensorTask.c"
  6936 ;; Parameters:    Size  Location     Type
  6937 ;;  Paramter        2   35[BANK0 ] PTR void 
  6938 ;;		 -> RAM(512), RAM(512), NULL(0), 
  6939 ;; Auto vars:     Size  Location     Type
  6940 ;;  Index           2   40[BANK0 ] unsigned int 
  6941 ;;  Id              1   42[BANK0 ] unsigned char 
  6942 ;; Return value:  Size  Location     Type
  6943 ;;                  1    wreg      void 
  6944 ;; Registers used:
  6945 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6946 ;; Tracked objects:
  6947 ;;		On entry : 0/0
  6948 ;;		On exit  : 0/0
  6949 ;;		Unchanged: 0/0
  6950 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6951 ;;      Params:         0       2       0       0       0
  6952 ;;      Locals:         0       3       0       0       0
  6953 ;;      Temps:          0       3       0       0       0
  6954 ;;      Totals:         0       8       0       0       0
  6955 ;;Total ram usage:        8 bytes
  6956 ;; Hardware stack levels used:    1
  6957 ;; Hardware stack levels required when called:    5
  6958 ;; This function calls:
  6959 ;;		_TempSensor_GetState
  6960 ;;		___bmul
  6961 ;;		___lwdiv
  6962 ;; This function is called by:
  6963 ;;		_main
  6964 ;;		_Scheduler_dispatchTasks
  6965 ;; This function uses a non-reentrant model
  6966 ;;
  6967                           
  6968                           
  6969                           ;psect for function _TempSensorTask_Update
  6970  0C79                     _TempSensorTask_Update:
  6971  0C79                     l2521:	
  6972                           ;incstack = 0
  6973                           ; Regs used in _TempSensorTask_Update: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+csta
      +                          ck]
  6974                           
  6975                           
  6976                           ;TempSensorTask.c: 31: void TempSensorTask_Update( void *Paramter );TempSensorTask.c: 32
      +                          : {;TempSensorTask.c: 33:     Id_t Id = (Id_t) Paramter;
  6977  0C79  1283               	bcf	3,5	;RP0=0, select bank0
  6978  0C7A  1303               	bcf	3,6	;RP1=0, select bank0
  6979  0C7B  0843               	movf	TempSensorTask_Update@Paramter,w
  6980  0C7C  00FF               	movwf	btemp+1
  6981  0C7D  087F               	movf	btemp+1,w
  6982  0C7E  00CA               	movwf	TempSensorTask_Update@Id
  6983  0C7F                     l2523:
  6984  0C7F                     l2525:
  6985                           
  6986                           ;TempSensorTask.c: 35:     TempSensorTask[ Id ].Array[ TempSensorTask[ Id ].Index++ ] = 
      +                          TempSensor_GetState( Id );
  6987  0C7F  084A               	movf	TempSensorTask_Update@Id,w
  6988  0C80  160A  118A  2672  120A  158A  	fcall	_TempSensor_GetState
  6989  0C85  1283               	bcf	3,5	;RP0=0, select bank0
  6990  0C86  1303               	bcf	3,6	;RP1=0, select bank0
  6991  0C87  00C5               	movwf	??_TempSensorTask_Update
  6992  0C88  300E               	movlw	14
  6993  0C89  00FF               	movwf	btemp+1
  6994  0C8A  087F               	movf	btemp+1,w
  6995  0C8B  00A0               	movwf	___bmul@multiplicand
  6996  0C8C  084A               	movf	TempSensorTask_Update@Id,w
  6997  0C8D  160A  158A  2512  120A  158A  	fcall	___bmul
  6998  0C92  3ED8               	addlw	(low ((_TempSensorTask| (0+256)+10)))& (0+255)
  6999  0C93  0084               	movwf	4
  7000  0C94  300E               	movlw	14
  7001  0C95  00FF               	movwf	btemp+1
  7002  0C96  087F               	movf	btemp+1,w
  7003  0C97  1283               	bcf	3,5	;RP0=0, select bank0
  7004  0C98  1303               	bcf	3,6	;RP1=0, select bank0
  7005  0C99  00A0               	movwf	___bmul@multiplicand
  7006  0C9A  084A               	movf	TempSensorTask_Update@Id,w
  7007  0C9B  160A  158A  2512  120A  158A  	fcall	___bmul
  7008  0CA0  3ECE               	addlw	(low (_TempSensorTask| (0+256)))& (0+255)
  7009  0CA1  1783               	bsf	3,7	;select IRP bank3
  7010  0CA2  0700               	addwf	0,w
  7011  0CA3  1283               	bcf	3,5	;RP0=0, select bank0
  7012  0CA4  1303               	bcf	3,6	;RP1=0, select bank0
  7013  0CA5  00C6               	movwf	??_TempSensorTask_Update+1
  7014  0CA6  0846               	movf	??_TempSensorTask_Update+1,w
  7015  0CA7  0084               	movwf	4
  7016  0CA8  0845               	movf	??_TempSensorTask_Update,w
  7017  0CA9  0080               	movwf	0
  7018  0CAA                     l2527:
  7019  0CAA  300E               	movlw	14
  7020  0CAB  00FF               	movwf	btemp+1
  7021  0CAC  087F               	movf	btemp+1,w
  7022  0CAD  00A0               	movwf	___bmul@multiplicand
  7023  0CAE  084A               	movf	TempSensorTask_Update@Id,w
  7024  0CAF  160A  158A  2512  120A  158A  	fcall	___bmul
  7025  0CB4  3ED8               	addlw	(low ((_TempSensorTask| (0+256)+10)))& (0+255)
  7026  0CB5  0084               	movwf	4
  7027  0CB6  3001               	movlw	1
  7028  0CB7  00FF               	movwf	btemp+1
  7029  0CB8  087F               	movf	btemp+1,w
  7030  0CB9  1783               	bsf	3,7	;select IRP bank3
  7031  0CBA  0780               	addwf	0,f
  7032  0CBB                     l2529:
  7033                           
  7034                           ;TempSensorTask.c: 36:     if( TempSensorTask[ Id ].Index == 10 )
  7035  0CBB  300E               	movlw	14
  7036  0CBC  00FF               	movwf	btemp+1
  7037  0CBD  087F               	movf	btemp+1,w
  7038  0CBE  1283               	bcf	3,5	;RP0=0, select bank0
  7039  0CBF  1303               	bcf	3,6	;RP1=0, select bank0
  7040  0CC0  00A0               	movwf	___bmul@multiplicand
  7041  0CC1  084A               	movf	TempSensorTask_Update@Id,w
  7042  0CC2  160A  158A  2512  120A  158A  	fcall	___bmul
  7043  0CC7  3ED8               	addlw	(low ((_TempSensorTask| (0+256)+10)))& (0+255)
  7044  0CC8  0084               	movwf	4
  7045  0CC9  300A               	movlw	10
  7046  0CCA  1783               	bsf	3,7	;select IRP bank3
  7047  0CCB  0600               	xorwf	0,w
  7048  0CCC  1D03               	btfss	3,2
  7049  0CCD  2CCF               	goto	u2991
  7050  0CCE  2CD0               	goto	u2990
  7051  0CCF                     u2991:
  7052  0CCF  2CF1               	goto	l410
  7053  0CD0                     u2990:
  7054  0CD0                     l2531:
  7055                           
  7056                           ;TempSensorTask.c: 37:     {;TempSensorTask.c: 38:         TempSensorTask[ Id ].Index = 
      +                          0;
  7057  0CD0  300E               	movlw	14
  7058  0CD1  00FF               	movwf	btemp+1
  7059  0CD2  087F               	movf	btemp+1,w
  7060  0CD3  1283               	bcf	3,5	;RP0=0, select bank0
  7061  0CD4  1303               	bcf	3,6	;RP1=0, select bank0
  7062  0CD5  00A0               	movwf	___bmul@multiplicand
  7063  0CD6  084A               	movf	TempSensorTask_Update@Id,w
  7064  0CD7  160A  158A  2512  120A  158A  	fcall	___bmul
  7065  0CDC  3ED8               	addlw	(low ((_TempSensorTask| (0+256)+10)))& (0+255)
  7066  0CDD  0084               	movwf	4
  7067  0CDE  1783               	bsf	3,7	;select IRP bank3
  7068  0CDF  0180               	clrf	0
  7069                           
  7070                           ;TempSensorTask.c: 39:         TempSensorTask[ Id ].AvgFlag = 1;
  7071  0CE0  300E               	movlw	14
  7072  0CE1  00FF               	movwf	btemp+1
  7073  0CE2  087F               	movf	btemp+1,w
  7074  0CE3  1283               	bcf	3,5	;RP0=0, select bank0
  7075  0CE4  1303               	bcf	3,6	;RP1=0, select bank0
  7076  0CE5  00A0               	movwf	___bmul@multiplicand
  7077  0CE6  084A               	movf	TempSensorTask_Update@Id,w
  7078  0CE7  160A  158A  2512  120A  158A  	fcall	___bmul
  7079  0CEC  3ED9               	addlw	(low ((_TempSensorTask| (0+256)+11)))& (0+255)
  7080  0CED  0084               	movwf	4
  7081  0CEE  1783               	bsf	3,7	;select IRP bank3
  7082  0CEF  0180               	clrf	0
  7083  0CF0  0A80               	incf	0,f
  7084  0CF1                     l410:	
  7085                           ;TempSensorTask.c: 40:     }
  7086                           
  7087                           
  7088                           ;TempSensorTask.c: 41:     if( TempSensorTask[ Id ].AvgFlag )
  7089  0CF1  300E               	movlw	14
  7090  0CF2  00FF               	movwf	btemp+1
  7091  0CF3  087F               	movf	btemp+1,w
  7092  0CF4  1283               	bcf	3,5	;RP0=0, select bank0
  7093  0CF5  1303               	bcf	3,6	;RP1=0, select bank0
  7094  0CF6  00A0               	movwf	___bmul@multiplicand
  7095  0CF7  084A               	movf	TempSensorTask_Update@Id,w
  7096  0CF8  160A  158A  2512  120A  158A  	fcall	___bmul
  7097  0CFD  3ED9               	addlw	(low ((_TempSensorTask| (0+256)+11)))& (0+255)
  7098  0CFE  0084               	movwf	4
  7099  0CFF  1783               	bsf	3,7	;select IRP bank3
  7100  0D00  0800               	movf	0,w
  7101  0D01  1903               	btfsc	3,2
  7102  0D02  2D04               	goto	u3001
  7103  0D03  2D05               	goto	u3000
  7104  0D04                     u3001:
  7105  0D04  2D7E               	goto	l414
  7106  0D05                     u3000:
  7107  0D05                     l2533:
  7108                           
  7109                           ;TempSensorTask.c: 42:     {;TempSensorTask.c: 43:         for( Index = 0; Index < 10; I
      +                          ndex++ )
  7110  0D05  1283               	bcf	3,5	;RP0=0, select bank0
  7111  0D06  1303               	bcf	3,6	;RP1=0, select bank0
  7112  0D07  01C8               	clrf	TempSensorTask_Update@Index
  7113  0D08  01C9               	clrf	TempSensorTask_Update@Index+1
  7114  0D09                     l2539:
  7115                           
  7116                           ;TempSensorTask.c: 44:         {;TempSensorTask.c: 45:             TempSensorTask[ Id ].
      +                          AvgTemp += TempSensorTask[ Id ].Array[ Index ];
  7117  0D09  300E               	movlw	14
  7118  0D0A  00FF               	movwf	btemp+1
  7119  0D0B  087F               	movf	btemp+1,w
  7120  0D0C  00A0               	movwf	___bmul@multiplicand
  7121  0D0D  084A               	movf	TempSensorTask_Update@Id,w
  7122  0D0E  160A  158A  2512  120A  158A  	fcall	___bmul
  7123  0D13  3ECE               	addlw	(low (_TempSensorTask| (0+256)))& (0+255)
  7124  0D14  1283               	bcf	3,5	;RP0=0, select bank0
  7125  0D15  1303               	bcf	3,6	;RP1=0, select bank0
  7126  0D16  0748               	addwf	TempSensorTask_Update@Index,w
  7127  0D17  00C5               	movwf	??_TempSensorTask_Update
  7128  0D18  0845               	movf	??_TempSensorTask_Update,w
  7129  0D19  0084               	movwf	4
  7130  0D1A  1783               	bsf	3,7	;select IRP bank3
  7131  0D1B  0800               	movf	0,w
  7132  0D1C  00C6               	movwf	??_TempSensorTask_Update+1
  7133  0D1D  01C7               	clrf	??_TempSensorTask_Update+2
  7134  0D1E  300E               	movlw	14
  7135  0D1F  00FF               	movwf	btemp+1
  7136  0D20  087F               	movf	btemp+1,w
  7137  0D21  00A0               	movwf	___bmul@multiplicand
  7138  0D22  084A               	movf	TempSensorTask_Update@Id,w
  7139  0D23  160A  158A  2512  120A  158A  	fcall	___bmul
  7140  0D28  3EDA               	addlw	(low ((_TempSensorTask| (0+256)+12)))& (0+255)
  7141  0D29  0084               	movwf	4
  7142  0D2A  1283               	bcf	3,5	;RP0=0, select bank0
  7143  0D2B  1303               	bcf	3,6	;RP1=0, select bank0
  7144  0D2C  0846               	movf	??_TempSensorTask_Update+1,w
  7145  0D2D  1783               	bsf	3,7	;select IRP bank3
  7146  0D2E  0780               	addwf	0,f
  7147  0D2F  0F84               	incfsz	4,f
  7148  0D30  0800               	movf	0,w
  7149  0D31  1803               	skipnc
  7150  0D32  0A00               	incf	0,w
  7151  0D33  00FF               	movwf	btemp+1
  7152  0D34  0847               	movf	??_TempSensorTask_Update+2,w
  7153  0D35  077F               	addwf	btemp+1,w
  7154  0D36  0080               	movwf	0
  7155  0D37  0384               	decf	4,f
  7156  0D38                     l2541:
  7157                           
  7158                           ;TempSensorTask.c: 46:         }
  7159  0D38  3001               	movlw	1
  7160  0D39  07C8               	addwf	TempSensorTask_Update@Index,f
  7161  0D3A  1803               	skipnc
  7162  0D3B  0AC9               	incf	TempSensorTask_Update@Index+1,f
  7163  0D3C  3000               	movlw	0
  7164  0D3D  07C9               	addwf	TempSensorTask_Update@Index+1,f
  7165  0D3E                     l2543:
  7166  0D3E  3000               	movlw	0
  7167  0D3F  0249               	subwf	TempSensorTask_Update@Index+1,w
  7168  0D40  300A               	movlw	10
  7169  0D41  1903               	skipnz
  7170  0D42  0248               	subwf	TempSensorTask_Update@Index,w
  7171  0D43  1C03               	skipc
  7172  0D44  2D46               	goto	u3011
  7173  0D45  2D47               	goto	u3010
  7174  0D46                     u3011:
  7175  0D46  2D09               	goto	l2539
  7176  0D47                     u3010:
  7177  0D47                     l2545:
  7178                           
  7179                           ;TempSensorTask.c: 47:         TempSensorTask[ Id ].AvgTemp /= 10;
  7180  0D47  300A               	movlw	10
  7181  0D48  00A3               	movwf	___lwdiv@divisor
  7182  0D49  3000               	movlw	0
  7183  0D4A  00A4               	movwf	___lwdiv@divisor+1
  7184  0D4B  300E               	movlw	14
  7185  0D4C  00FF               	movwf	btemp+1
  7186  0D4D  087F               	movf	btemp+1,w
  7187  0D4E  00A0               	movwf	___bmul@multiplicand
  7188  0D4F  084A               	movf	TempSensorTask_Update@Id,w
  7189  0D50  160A  158A  2512  120A  158A  	fcall	___bmul
  7190  0D55  3EDA               	addlw	(low ((_TempSensorTask| (0+256)+12)))& (0+255)
  7191  0D56  0084               	movwf	4
  7192  0D57  1783               	bsf	3,7	;select IRP bank3
  7193  0D58  0800               	movf	0,w
  7194  0D59  1283               	bcf	3,5	;RP0=0, select bank0
  7195  0D5A  1303               	bcf	3,6	;RP1=0, select bank0
  7196  0D5B  00A5               	movwf	___lwdiv@dividend
  7197  0D5C  0A84               	incf	4,f
  7198  0D5D  0800               	movf	0,w
  7199  0D5E  00A6               	movwf	___lwdiv@dividend+1
  7200  0D5F  160A  118A  20C9  120A  158A  	fcall	___lwdiv
  7201  0D64  1283               	bcf	3,5	;RP0=0, select bank0
  7202  0D65  1303               	bcf	3,6	;RP1=0, select bank0
  7203  0D66  0823               	movf	?___lwdiv,w
  7204  0D67  00C5               	movwf	??_TempSensorTask_Update
  7205  0D68  0824               	movf	?___lwdiv+1,w
  7206  0D69  00C6               	movwf	??_TempSensorTask_Update+1
  7207  0D6A  300E               	movlw	14
  7208  0D6B  00FF               	movwf	btemp+1
  7209  0D6C  087F               	movf	btemp+1,w
  7210  0D6D  00A0               	movwf	___bmul@multiplicand
  7211  0D6E  084A               	movf	TempSensorTask_Update@Id,w
  7212  0D6F  160A  158A  2512  120A  158A  	fcall	___bmul
  7213  0D74  3EDA               	addlw	(low ((_TempSensorTask| (0+256)+12)))& (0+255)
  7214  0D75  0084               	movwf	4
  7215  0D76  1283               	bcf	3,5	;RP0=0, select bank0
  7216  0D77  1303               	bcf	3,6	;RP1=0, select bank0
  7217  0D78  0845               	movf	??_TempSensorTask_Update,w
  7218  0D79  1783               	bsf	3,7	;select IRP bank3
  7219  0D7A  0080               	movwf	0
  7220  0D7B  0A84               	incf	4,f
  7221  0D7C  0846               	movf	??_TempSensorTask_Update+1,w
  7222  0D7D  0080               	movwf	0
  7223  0D7E                     l414:
  7224  0D7E  0008               	return
  7225  0D7F                     __end_of_TempSensorTask_Update:
  7226                           
  7227                           	psect	text22
  7228  1672                     __ptext22:	
  7229 ;; *************** function _TempSensor_GetState *****************
  7230 ;; Defined at:
  7231 ;;		line 29 in file "TempSensor.c"
  7232 ;; Parameters:    Size  Location     Type
  7233 ;;  Id              1    wreg     unsigned char 
  7234 ;; Auto vars:     Size  Location     Type
  7235 ;;  Id              1   34[BANK0 ] unsigned char 
  7236 ;; Return value:  Size  Location     Type
  7237 ;;                  1    wreg      unsigned char 
  7238 ;; Registers used:
  7239 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7240 ;; Tracked objects:
  7241 ;;		On entry : 0/0
  7242 ;;		On exit  : 0/0
  7243 ;;		Unchanged: 0/0
  7244 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7245 ;;      Params:         0       0       0       0       0
  7246 ;;      Locals:         0       1       0       0       0
  7247 ;;      Temps:          0       4       0       0       0
  7248 ;;      Totals:         0       5       0       0       0
  7249 ;;Total ram usage:        5 bytes
  7250 ;; Hardware stack levels used:    1
  7251 ;; Hardware stack levels required when called:    4
  7252 ;; This function calls:
  7253 ;;		_Adc_GetState
  7254 ;;		___bmul
  7255 ;;		___lldiv
  7256 ;;		___lmul
  7257 ;; This function is called by:
  7258 ;;		_TempSensorTask_Update
  7259 ;; This function uses a non-reentrant model
  7260 ;;
  7261                           
  7262                           
  7263                           ;psect for function _TempSensor_GetState
  7264  1672                     _TempSensor_GetState:
  7265                           
  7266                           ;incstack = 0
  7267                           ; Regs used in _TempSensor_GetState: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack
      +                          ]
  7268                           ;TempSensor_GetState@Id stored from wreg
  7269  1672  1283               	bcf	3,5	;RP0=0, select bank0
  7270  1673  1303               	bcf	3,6	;RP1=0, select bank0
  7271  1674  00C2               	movwf	TempSensor_GetState@Id
  7272  1675                     l2205:
  7273                           
  7274                           ;TempSensor.c: 29: uint8_t TempSensor_GetState( Id_t Id );TempSensor.c: 30: {;TempSensor
      +                          .c: 31:     return ( ( Adc_GetState( TempSensor[ Id ].AdcId ) * TempSensor[ Id ].VoltMul
      +                          ti ) / TempSensor[ Id ].VoltDivide );
  7275  1675  300D               	movlw	13
  7276  1676  00FF               	movwf	btemp+1
  7277  1677  087F               	movf	btemp+1,w
  7278  1678  00A0               	movwf	___bmul@multiplicand
  7279  1679  0842               	movf	TempSensor_GetState@Id,w
  7280  167A  160A  158A  2512  160A  118A  	fcall	___bmul
  7281  167F  3EB8               	addlw	(low ((_TempSensor| 0+8)))& (0+255)
  7282  1680  0084               	movwf	4
  7283  1681  1383               	bcf	3,7	;select IRP bank1
  7284  1682  0800               	movf	0,w
  7285  1683  1283               	bcf	3,5	;RP0=0, select bank0
  7286  1684  1303               	bcf	3,6	;RP1=0, select bank0
  7287  1685  00B0               	movwf	___lldiv@divisor
  7288  1686  0A84               	incf	4,f
  7289  1687  0800               	movf	0,w
  7290  1688  00B1               	movwf	___lldiv@divisor+1
  7291  1689  0A84               	incf	4,f
  7292  168A  0800               	movf	0,w
  7293  168B  00B2               	movwf	___lldiv@divisor+2
  7294  168C  0A84               	incf	4,f
  7295  168D  0800               	movf	0,w
  7296  168E  00B3               	movwf	___lldiv@divisor+3
  7297  168F  300D               	movlw	13
  7298  1690  00FF               	movwf	btemp+1
  7299  1691  087F               	movf	btemp+1,w
  7300  1692  00A0               	movwf	___bmul@multiplicand
  7301  1693  0842               	movf	TempSensor_GetState@Id,w
  7302  1694  160A  158A  2512  160A  118A  	fcall	___bmul
  7303  1699  3EB2               	addlw	(low ((_TempSensor| 0+2)))& (0+255)
  7304  169A  0084               	movwf	4
  7305  169B  1383               	bcf	3,7	;select IRP bank1
  7306  169C  0800               	movf	0,w
  7307  169D  160A  158A  24E8  160A  118A  	fcall	_Adc_GetState
  7308  16A2  1283               	bcf	3,5	;RP0=0, select bank0
  7309  16A3  1303               	bcf	3,6	;RP1=0, select bank0
  7310  16A4  0820               	movf	?_Adc_GetState,w
  7311  16A5  00BE               	movwf	??_TempSensor_GetState
  7312  16A6  0821               	movf	?_Adc_GetState+1,w
  7313  16A7  00BF               	movwf	??_TempSensor_GetState+1
  7314  16A8  01C0               	clrf	??_TempSensor_GetState+2
  7315  16A9  01C1               	clrf	??_TempSensor_GetState+3
  7316  16AA  0841               	movf	??_TempSensor_GetState+3,w
  7317  16AB  00A6               	movwf	___lmul@multiplier+3
  7318  16AC  0840               	movf	??_TempSensor_GetState+2,w
  7319  16AD  00A5               	movwf	___lmul@multiplier+2
  7320  16AE  083F               	movf	??_TempSensor_GetState+1,w
  7321  16AF  00A4               	movwf	___lmul@multiplier+1
  7322  16B0  083E               	movf	??_TempSensor_GetState,w
  7323  16B1  00A3               	movwf	___lmul@multiplier
  7324  16B2  300D               	movlw	13
  7325  16B3  00FF               	movwf	btemp+1
  7326  16B4  087F               	movf	btemp+1,w
  7327  16B5  00A0               	movwf	___bmul@multiplicand
  7328  16B6  0842               	movf	TempSensor_GetState@Id,w
  7329  16B7  160A  158A  2512  160A  118A  	fcall	___bmul
  7330  16BC  3EB4               	addlw	(low ((_TempSensor| 0+4)))& (0+255)
  7331  16BD  0084               	movwf	4
  7332  16BE  1383               	bcf	3,7	;select IRP bank1
  7333  16BF  0800               	movf	0,w
  7334  16C0  1283               	bcf	3,5	;RP0=0, select bank0
  7335  16C1  1303               	bcf	3,6	;RP1=0, select bank0
  7336  16C2  00A7               	movwf	___lmul@multiplicand
  7337  16C3  0A84               	incf	4,f
  7338  16C4  0800               	movf	0,w
  7339  16C5  00A8               	movwf	___lmul@multiplicand+1
  7340  16C6  0A84               	incf	4,f
  7341  16C7  0800               	movf	0,w
  7342  16C8  00A9               	movwf	___lmul@multiplicand+2
  7343  16C9  0A84               	incf	4,f
  7344  16CA  0800               	movf	0,w
  7345  16CB  00AA               	movwf	___lmul@multiplicand+3
  7346  16CC  160A  118A  210F  160A  118A  	fcall	___lmul
  7347  16D1  1283               	bcf	3,5	;RP0=0, select bank0
  7348  16D2  1303               	bcf	3,6	;RP1=0, select bank0
  7349  16D3  0826               	movf	?___lmul+3,w
  7350  16D4  00B7               	movwf	___lldiv@dividend+3
  7351  16D5  0825               	movf	?___lmul+2,w
  7352  16D6  00B6               	movwf	___lldiv@dividend+2
  7353  16D7  0824               	movf	?___lmul+1,w
  7354  16D8  00B5               	movwf	___lldiv@dividend+1
  7355  16D9  0823               	movf	?___lmul,w
  7356  16DA  00B4               	movwf	___lldiv@dividend
  7357  16DB  160A  118A  245A  160A  118A  	fcall	___lldiv
  7358  16E0  1283               	bcf	3,5	;RP0=0, select bank0
  7359  16E1  1303               	bcf	3,6	;RP1=0, select bank0
  7360  16E2  0830               	movf	?___lldiv,w
  7361  16E3                     l428:
  7362  16E3  0008               	return
  7363  16E4                     __end_of_TempSensor_GetState:
  7364                           
  7365                           	psect	text23
  7366  110F                     __ptext23:	
  7367 ;; *************** function ___lmul *****************
  7368 ;; Defined at:
  7369 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\Umul32.c"
  7370 ;; Parameters:    Size  Location     Type
  7371 ;;  multiplier      4    3[BANK0 ] unsigned long 
  7372 ;;  multiplicand    4    7[BANK0 ] unsigned long 
  7373 ;; Auto vars:     Size  Location     Type
  7374 ;;  product         4   12[BANK0 ] unsigned long 
  7375 ;; Return value:  Size  Location     Type
  7376 ;;                  4    3[BANK0 ] unsigned long 
  7377 ;; Registers used:
  7378 ;;		wreg, status,2, status,0
  7379 ;; Tracked objects:
  7380 ;;		On entry : 0/0
  7381 ;;		On exit  : 0/0
  7382 ;;		Unchanged: 0/0
  7383 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7384 ;;      Params:         0       8       0       0       0
  7385 ;;      Locals:         0       4       0       0       0
  7386 ;;      Temps:          0       1       0       0       0
  7387 ;;      Totals:         0      13       0       0       0
  7388 ;;Total ram usage:       13 bytes
  7389 ;; Hardware stack levels used:    1
  7390 ;; Hardware stack levels required when called:    3
  7391 ;; This function calls:
  7392 ;;		Nothing
  7393 ;; This function is called by:
  7394 ;;		_TempSensor_GetState
  7395 ;; This function uses a non-reentrant model
  7396 ;;
  7397                           
  7398                           
  7399                           ;psect for function ___lmul
  7400  110F                     ___lmul:
  7401  110F                     l2069:	
  7402                           ;incstack = 0
  7403                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  7404                           
  7405  110F  3000               	movlw	0
  7406  1110  1283               	bcf	3,5	;RP0=0, select bank0
  7407  1111  1303               	bcf	3,6	;RP1=0, select bank0
  7408  1112  00AF               	movwf	___lmul@product+3
  7409  1113  3000               	movlw	0
  7410  1114  00AE               	movwf	___lmul@product+2
  7411  1115  3000               	movlw	0
  7412  1116  00AD               	movwf	___lmul@product+1
  7413  1117  3000               	movlw	0
  7414  1118  00AC               	movwf	___lmul@product
  7415  1119                     l2071:
  7416  1119  1C23               	btfss	___lmul@multiplier,0
  7417  111A  291C               	goto	u1861
  7418  111B  291D               	goto	u1860
  7419  111C                     u1861:
  7420  111C  2934               	goto	l2075
  7421  111D                     u1860:
  7422  111D                     l2073:
  7423  111D  0827               	movf	___lmul@multiplicand,w
  7424  111E  07AC               	addwf	___lmul@product,f
  7425  111F  0828               	movf	___lmul@multiplicand+1,w
  7426  1120  1103               	clrz
  7427  1121  1803               	skipnc
  7428  1122  3E01               	addlw	1
  7429  1123  1903               	skipnz
  7430  1124  2926               	goto	u1871
  7431  1125  07AD               	addwf	___lmul@product+1,f
  7432  1126                     u1871:
  7433  1126  0829               	movf	___lmul@multiplicand+2,w
  7434  1127  1103               	clrz
  7435  1128  1803               	skipnc
  7436  1129  3E01               	addlw	1
  7437  112A  1903               	skipnz
  7438  112B  292D               	goto	u1872
  7439  112C  07AE               	addwf	___lmul@product+2,f
  7440  112D                     u1872:
  7441  112D  082A               	movf	___lmul@multiplicand+3,w
  7442  112E  1103               	clrz
  7443  112F  1803               	skipnc
  7444  1130  3E01               	addlw	1
  7445  1131  1903               	skipnz
  7446  1132  2934               	goto	u1873
  7447  1133  07AF               	addwf	___lmul@product+3,f
  7448  1134                     u1873:
  7449  1134                     l2075:
  7450  1134  3001               	movlw	1
  7451  1135  00AB               	movwf	??___lmul
  7452  1136                     u1885:
  7453  1136  1003               	clrc
  7454  1137  0DA7               	rlf	___lmul@multiplicand,f
  7455  1138  0DA8               	rlf	___lmul@multiplicand+1,f
  7456  1139  0DA9               	rlf	___lmul@multiplicand+2,f
  7457  113A  0DAA               	rlf	___lmul@multiplicand+3,f
  7458  113B  0BAB               	decfsz	??___lmul,f
  7459  113C  2936               	goto	u1885
  7460  113D                     l2077:
  7461  113D  3001               	movlw	1
  7462  113E                     u1895:
  7463  113E  1003               	clrc
  7464  113F  0CA6               	rrf	___lmul@multiplier+3,f
  7465  1140  0CA5               	rrf	___lmul@multiplier+2,f
  7466  1141  0CA4               	rrf	___lmul@multiplier+1,f
  7467  1142  0CA3               	rrf	___lmul@multiplier,f
  7468  1143  3EFF               	addlw	-1
  7469  1144  1D03               	skipz
  7470  1145  293E               	goto	u1895
  7471  1146  0826               	movf	___lmul@multiplier+3,w
  7472  1147  0425               	iorwf	___lmul@multiplier+2,w
  7473  1148  0424               	iorwf	___lmul@multiplier+1,w
  7474  1149  0423               	iorwf	___lmul@multiplier,w
  7475  114A  1D03               	skipz
  7476  114B  294D               	goto	u1901
  7477  114C  294E               	goto	u1900
  7478  114D                     u1901:
  7479  114D  2919               	goto	l2071
  7480  114E                     u1900:
  7481  114E                     l2079:
  7482  114E  082F               	movf	___lmul@product+3,w
  7483  114F  00A6               	movwf	?___lmul+3
  7484  1150  082E               	movf	___lmul@product+2,w
  7485  1151  00A5               	movwf	?___lmul+2
  7486  1152  082D               	movf	___lmul@product+1,w
  7487  1153  00A4               	movwf	?___lmul+1
  7488  1154  082C               	movf	___lmul@product,w
  7489  1155  00A3               	movwf	?___lmul
  7490  1156                     l649:
  7491  1156  0008               	return
  7492  1157                     __end_of___lmul:
  7493                           
  7494                           	psect	text24
  7495  1CE8                     __ptext24:	
  7496 ;; *************** function _Adc_GetState *****************
  7497 ;; Defined at:
  7498 ;;		line 9 in file "Adc.c"
  7499 ;; Parameters:    Size  Location     Type
  7500 ;;  Id              1    wreg     unsigned char 
  7501 ;; Auto vars:     Size  Location     Type
  7502 ;;  Id              1    0[COMMON] unsigned char 
  7503 ;; Return value:  Size  Location     Type
  7504 ;;                  2    0[BANK0 ] unsigned int 
  7505 ;; Registers used:
  7506 ;;		wreg, status,2
  7507 ;; Tracked objects:
  7508 ;;		On entry : 0/0
  7509 ;;		On exit  : 0/0
  7510 ;;		Unchanged: 0/0
  7511 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7512 ;;      Params:         0       3       0       0       0
  7513 ;;      Locals:         0       0       0       0       0
  7514 ;;      Temps:          0       0       0       0       0
  7515 ;;      Totals:         0       3       0       0       0
  7516 ;;Total ram usage:        3 bytes
  7517 ;; Hardware stack levels used:    1
  7518 ;; Hardware stack levels required when called:    3
  7519 ;; This function calls:
  7520 ;;		Nothing
  7521 ;; This function is called by:
  7522 ;;		_TempSensor_GetState
  7523 ;; This function uses a non-reentrant model
  7524 ;;
  7525                           
  7526                           
  7527                           ;psect for function _Adc_GetState
  7528  1CE8                     _Adc_GetState:
  7529  1CE8                     l2043:	
  7530                           ;incstack = 0
  7531                           ; Regs used in _Adc_GetState: [wreg+status,2]
  7532                           
  7533                           
  7534                           ;Adc.c: 9: uint16_t Adc_GetState( Id_t Id );Adc.c: 10: {;Adc.c: 11:     ADCON0 = ADCON0 
      +                          | ( 2 << 3 );
  7535  1CE8  1283               	bcf	3,5	;RP0=0, select bank0
  7536  1CE9  1303               	bcf	3,6	;RP1=0, select bank0
  7537  1CEA  081F               	movf	31,w	;volatile
  7538  1CEB  3810               	iorlw	16
  7539  1CEC  009F               	movwf	31	;volatile
  7540                           
  7541                           ;Adc.c: 12:     ADCON0 = ADCON0 | 0x04;
  7542  1CED  081F               	movf	31,w	;volatile
  7543  1CEE  3804               	iorlw	4
  7544  1CEF  009F               	movwf	31	;volatile
  7545  1CF0                     l232:	
  7546                           ;Adc.c: 13:     while( ADCON0 & 0x04 );
  7547                           
  7548  1CF0  191F               	btfsc	31,2	;volatile
  7549  1CF1  2CF3               	goto	u1841
  7550  1CF2  2CF4               	goto	u1840
  7551  1CF3                     u1841:
  7552  1CF3  2CF0               	goto	l232
  7553  1CF4                     u1840:
  7554  1CF4                     l2045:
  7555                           
  7556                           ;Adc.c: 14:     return ( ( ADRESH << 8 ) + ADRESL );
  7557  1CF4  081E               	movf	30,w	;volatile
  7558  1CF5  00A1               	movwf	?_Adc_GetState+1
  7559  1CF6  1683               	bsf	3,5	;RP0=1, select bank1
  7560  1CF7  1303               	bcf	3,6	;RP1=0, select bank1
  7561  1CF8  081E               	movf	30,w	;volatile
  7562  1CF9  1283               	bcf	3,5	;RP0=0, select bank0
  7563  1CFA  1303               	bcf	3,6	;RP1=0, select bank0
  7564  1CFB  00A0               	movwf	?_Adc_GetState
  7565  1CFC                     l235:
  7566  1CFC  0008               	return
  7567  1CFD                     __end_of_Adc_GetState:
  7568                           
  7569                           	psect	text25
  7570  12E4                     __ptext25:	
  7571 ;; *************** function _TempControl_SetState *****************
  7572 ;; Defined at:
  7573 ;;		line 23 in file "TempControl.c"
  7574 ;; Parameters:    Size  Location     Type
  7575 ;;  Id              1    wreg     unsigned char 
  7576 ;;  State           1   14[BANK0 ] unsigned char 
  7577 ;; Auto vars:     Size  Location     Type
  7578 ;;  Id              1   18[BANK0 ] unsigned char 
  7579 ;; Return value:  Size  Location     Type
  7580 ;;                  1    wreg      void 
  7581 ;; Registers used:
  7582 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7583 ;; Tracked objects:
  7584 ;;		On entry : 0/0
  7585 ;;		On exit  : 0/0
  7586 ;;		Unchanged: 0/0
  7587 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7588 ;;      Params:         0       1       0       0       0
  7589 ;;      Locals:         0       1       0       0       0
  7590 ;;      Temps:          0       3       0       0       0
  7591 ;;      Totals:         0       5       0       0       0
  7592 ;;Total ram usage:        5 bytes
  7593 ;; Hardware stack levels used:    1
  7594 ;; Hardware stack levels required when called:    4
  7595 ;; This function calls:
  7596 ;;		_Gpio_SetPinState
  7597 ;; This function is called by:
  7598 ;;		_TempControlTask_Update
  7599 ;; This function uses a non-reentrant model
  7600 ;;
  7601                           
  7602                           
  7603                           ;psect for function _TempControl_SetState
  7604  12E4                     _TempControl_SetState:
  7605                           
  7606                           ;incstack = 0
  7607                           ; Regs used in _TempControl_SetState: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstac
      +                          k]
  7608                           ;TempControl_SetState@Id stored from wreg
  7609  12E4  1283               	bcf	3,5	;RP0=0, select bank0
  7610  12E5  1303               	bcf	3,6	;RP1=0, select bank0
  7611  12E6  00B2               	movwf	TempControl_SetState@Id
  7612  12E7                     l2209:
  7613                           
  7614                           ;TempControl.c: 23: void TempControl_SetState( Id_t Id, uint8_t State );TempControl.c: 2
      +                          4: {;TempControl.c: 25:  Gpio_SetPinState( TempControl[ Id ].GpioIdH, TempControl[ Id ].
      +                          PinH, State & 0x01 );
  7615  12E7  0832               	movf	TempControl_SetState@Id,w
  7616  12E8  00AF               	movwf	??_TempControl_SetState
  7617  12E9  3001               	movlw	1
  7618  12EA                     u2145:
  7619  12EA  1003               	clrc
  7620  12EB  0DAF               	rlf	??_TempControl_SetState,f
  7621  12EC  3EFF               	addlw	-1
  7622  12ED  1D03               	skipz
  7623  12EE  2AEA               	goto	u2145
  7624  12EF  1003               	clrc
  7625  12F0  0D2F               	rlf	??_TempControl_SetState,w
  7626  12F1  3E52               	addlw	(low ((_TempControl| 0+1)))& (0+255)
  7627  12F2  0084               	movwf	4
  7628  12F3  1383               	bcf	3,7	;select IRP bank0
  7629  12F4  0800               	movf	0,w
  7630  12F5  00FF               	movwf	btemp+1
  7631  12F6  087F               	movf	btemp+1,w
  7632  12F7  00A3               	movwf	Gpio_SetPinState@Pin
  7633  12F8  082E               	movf	TempControl_SetState@State,w
  7634  12F9  3901               	andlw	1
  7635  12FA  00FF               	movwf	btemp+1
  7636  12FB  087F               	movf	btemp+1,w
  7637  12FC  00A4               	movwf	Gpio_SetPinState@State
  7638  12FD  0832               	movf	TempControl_SetState@Id,w
  7639  12FE  00B0               	movwf	??_TempControl_SetState+1
  7640  12FF  3001               	movlw	1
  7641  1300                     u2155:
  7642  1300  1003               	clrc
  7643  1301  0DB0               	rlf	??_TempControl_SetState+1,f
  7644  1302  3EFF               	addlw	-1
  7645  1303  1D03               	skipz
  7646  1304  2B00               	goto	u2155
  7647  1305  1003               	clrc
  7648  1306  0D30               	rlf	??_TempControl_SetState+1,w
  7649  1307  3E51               	addlw	(low (_TempControl| 0))& (0+255)
  7650  1308  0084               	movwf	4
  7651  1309  0800               	movf	0,w
  7652  130A  120A  118A  27C1  160A  118A  	fcall	_Gpio_SetPinState
  7653                           
  7654                           ;TempControl.c: 26:  Gpio_SetPinState( TempControl[ Id ].GpioIdC, TempControl[ Id ].PinC
      +                          , ( State & 0x02 ) >> 1 );
  7655  130F  1283               	bcf	3,5	;RP0=0, select bank0
  7656  1310  1303               	bcf	3,6	;RP1=0, select bank0
  7657  1311  0832               	movf	TempControl_SetState@Id,w
  7658  1312  00AF               	movwf	??_TempControl_SetState
  7659  1313  3001               	movlw	1
  7660  1314                     u2165:
  7661  1314  1003               	clrc
  7662  1315  0DAF               	rlf	??_TempControl_SetState,f
  7663  1316  3EFF               	addlw	-1
  7664  1317  1D03               	skipz
  7665  1318  2B14               	goto	u2165
  7666  1319  1003               	clrc
  7667  131A  0D2F               	rlf	??_TempControl_SetState,w
  7668  131B  3E54               	addlw	(low ((_TempControl| 0+3)))& (0+255)
  7669  131C  0084               	movwf	4
  7670  131D  1383               	bcf	3,7	;select IRP bank0
  7671  131E  0800               	movf	0,w
  7672  131F  00FF               	movwf	btemp+1
  7673  1320  087F               	movf	btemp+1,w
  7674  1321  00A3               	movwf	Gpio_SetPinState@Pin
  7675  1322  082E               	movf	TempControl_SetState@State,w
  7676  1323  00B0               	movwf	??_TempControl_SetState+1
  7677  1324  1003               	clrc
  7678  1325  0C30               	rrf	??_TempControl_SetState+1,w
  7679  1326  3901               	andlw	1
  7680  1327  00FF               	movwf	btemp+1
  7681  1328  087F               	movf	btemp+1,w
  7682  1329  00A4               	movwf	Gpio_SetPinState@State
  7683  132A  0832               	movf	TempControl_SetState@Id,w
  7684  132B  00B1               	movwf	??_TempControl_SetState+2
  7685  132C  3001               	movlw	1
  7686  132D                     u2175:
  7687  132D  1003               	clrc
  7688  132E  0DB1               	rlf	??_TempControl_SetState+2,f
  7689  132F  3EFF               	addlw	-1
  7690  1330  1D03               	skipz
  7691  1331  2B2D               	goto	u2175
  7692  1332  1003               	clrc
  7693  1333  0D31               	rlf	??_TempControl_SetState+2,w
  7694  1334  3E53               	addlw	(low ((_TempControl| 0+2)))& (0+255)
  7695  1335  0084               	movwf	4
  7696  1336  0800               	movf	0,w
  7697  1337  120A  118A  27C1  160A  118A  	fcall	_Gpio_SetPinState
  7698  133C                     l455:
  7699  133C  0008               	return
  7700  133D                     __end_of_TempControl_SetState:
  7701                           
  7702                           	psect	text26
  7703  1D58                     __ptext26:	
  7704 ;; *************** function _Switch_GetState *****************
  7705 ;; Defined at:
  7706 ;;		line 18 in file "Switch.c"
  7707 ;; Parameters:    Size  Location     Type
  7708 ;;  Id              1    wreg     unsigned char 
  7709 ;; Auto vars:     Size  Location     Type
  7710 ;;  Id              1    9[BANK0 ] unsigned char 
  7711 ;; Return value:  Size  Location     Type
  7712 ;;                  1    wreg      unsigned char 
  7713 ;; Registers used:
  7714 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7715 ;; Tracked objects:
  7716 ;;		On entry : 0/0
  7717 ;;		On exit  : 0/0
  7718 ;;		Unchanged: 0/0
  7719 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7720 ;;      Params:         0       0       0       0       0
  7721 ;;      Locals:         0       1       0       0       0
  7722 ;;      Temps:          0       2       0       0       0
  7723 ;;      Totals:         0       3       0       0       0
  7724 ;;Total ram usage:        3 bytes
  7725 ;; Hardware stack levels used:    1
  7726 ;; Hardware stack levels required when called:    4
  7727 ;; This function calls:
  7728 ;;		_Gpio_GetPinState
  7729 ;; This function is called by:
  7730 ;;		_SwitchTask_Update
  7731 ;; This function uses a non-reentrant model
  7732 ;;
  7733                           
  7734                           
  7735                           ;psect for function _Switch_GetState
  7736  1D58                     _Switch_GetState:
  7737                           
  7738                           ;incstack = 0
  7739                           ; Regs used in _Switch_GetState: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7740                           ;Switch_GetState@Id stored from wreg
  7741  1D58  1283               	bcf	3,5	;RP0=0, select bank0
  7742  1D59  1303               	bcf	3,6	;RP1=0, select bank0
  7743  1D5A  00A9               	movwf	Switch_GetState@Id
  7744  1D5B                     l2139:
  7745                           
  7746                           ;Switch.c: 18: uint8_t Switch_GetState( Id_t Id );Switch.c: 19: {;Switch.c: 20:     retu
      +                          rn Gpio_GetPinState( Switch[ Id ].GpioId, Switch[ Id ].Pin );
  7747  1D5B  0829               	movf	Switch_GetState@Id,w
  7748  1D5C  00A7               	movwf	??_Switch_GetState
  7749  1D5D  0727               	addwf	??_Switch_GetState,w
  7750  1D5E  3ED3               	addlw	(low ((_Switch| 0+1)))& (0+255)
  7751  1D5F  0084               	movwf	4
  7752  1D60  1383               	bcf	3,7	;select IRP bank1
  7753  1D61  0800               	movf	0,w
  7754  1D62  00FF               	movwf	btemp+1
  7755  1D63  087F               	movf	btemp+1,w
  7756  1D64  00A0               	movwf	Gpio_GetPinState@Pin
  7757  1D65  0829               	movf	Switch_GetState@Id,w
  7758  1D66  00A8               	movwf	??_Switch_GetState+1
  7759  1D67  0728               	addwf	??_Switch_GetState+1,w
  7760  1D68  3ED2               	addlw	(low (_Switch| 0))& (0+255)
  7761  1D69  0084               	movwf	4
  7762  1D6A  0800               	movf	0,w
  7763  1D6B  160A  158A  265F  160A  158A  	fcall	_Gpio_GetPinState
  7764  1D70                     l170:
  7765  1D70  0008               	return
  7766  1D71                     __end_of_Switch_GetState:
  7767                           
  7768                           	psect	text27
  7769  1E5F                     __ptext27:	
  7770 ;; *************** function _Gpio_GetPinState *****************
  7771 ;; Defined at:
  7772 ;;		line 28 in file "Gpio.c"
  7773 ;; Parameters:    Size  Location     Type
  7774 ;;  Id              1    wreg     unsigned char 
  7775 ;;  Pin             1    0[BANK0 ] unsigned char 
  7776 ;; Auto vars:     Size  Location     Type
  7777 ;;  Id              1    6[BANK0 ] unsigned char 
  7778 ;; Return value:  Size  Location     Type
  7779 ;;                  1    wreg      unsigned char 
  7780 ;; Registers used:
  7781 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  7782 ;; Tracked objects:
  7783 ;;		On entry : 0/0
  7784 ;;		On exit  : 0/0
  7785 ;;		Unchanged: 0/0
  7786 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7787 ;;      Params:         0       1       0       0       0
  7788 ;;      Locals:         0       1       0       0       0
  7789 ;;      Temps:          0       5       0       0       0
  7790 ;;      Totals:         0       7       0       0       0
  7791 ;;Total ram usage:        7 bytes
  7792 ;; Hardware stack levels used:    1
  7793 ;; Hardware stack levels required when called:    3
  7794 ;; This function calls:
  7795 ;;		Nothing
  7796 ;; This function is called by:
  7797 ;;		_Switch_GetState
  7798 ;; This function uses a non-reentrant model
  7799 ;;
  7800                           
  7801                           
  7802                           ;psect for function _Gpio_GetPinState
  7803  1E5F                     _Gpio_GetPinState:
  7804                           
  7805                           ;incstack = 0
  7806                           ; Regs used in _Gpio_GetPinState: [wreg-fsr0h+status,2+status,0]
  7807                           ;Gpio_GetPinState@Id stored from wreg
  7808  1E5F  1283               	bcf	3,5	;RP0=0, select bank0
  7809  1E60  1303               	bcf	3,6	;RP1=0, select bank0
  7810  1E61  00A6               	movwf	Gpio_GetPinState@Id
  7811  1E62                     l2037:
  7812                           
  7813                           ;Gpio.c: 28: UBaseType_t Gpio_GetPinState( Id_t Id, UBaseType_t Pin );Gpio.c: 29: {;Gpio
      +                          .c: 30:  return ( Gpio[ Id ]->PORT & ( 1 << Pin ) ) >> Pin;
  7814  1E62  0826               	movf	Gpio_GetPinState@Id,w
  7815  1E63  00A1               	movwf	??_Gpio_GetPinState
  7816  1E64  0721               	addwf	??_Gpio_GetPinState,w
  7817  1E65  3EE6               	addlw	(low (_Gpio| 0))& (0+255)
  7818  1E66  0084               	movwf	4
  7819  1E67  1383               	bcf	3,7	;select IRP bank1
  7820  1E68  0800               	movf	0,w
  7821  1E69  00A2               	movwf	??_Gpio_GetPinState+1
  7822  1E6A  0A84               	incf	4,f
  7823  1E6B  0800               	movf	0,w
  7824  1E6C  00A3               	movwf	??_Gpio_GetPinState+2
  7825  1E6D  0822               	movf	??_Gpio_GetPinState+1,w
  7826  1E6E  0084               	movwf	4
  7827  1E6F  1783               	bsf	3,7
  7828  1E70  1C23               	btfss	??_Gpio_GetPinState+2,0
  7829  1E71  1383               	bcf	3,7
  7830  1E72  3001               	movlw	1
  7831  1E73  00A4               	movwf	??_Gpio_GetPinState+3
  7832  1E74  0A20               	incf	Gpio_GetPinState@Pin,w
  7833  1E75  2E78               	goto	u1824
  7834  1E76                     u1825:
  7835  1E76  1003               	clrc
  7836  1E77  0DA4               	rlf	??_Gpio_GetPinState+3,f
  7837  1E78                     u1824:
  7838  1E78  3EFF               	addlw	-1
  7839  1E79  1D03               	skipz
  7840  1E7A  2E76               	goto	u1825
  7841  1E7B  0824               	movf	??_Gpio_GetPinState+3,w
  7842  1E7C  0500               	andwf	0,w
  7843  1E7D  00A5               	movwf	??_Gpio_GetPinState+4
  7844  1E7E  0A20               	incf	Gpio_GetPinState@Pin,w
  7845  1E7F  2E82               	goto	u1834
  7846  1E80                     u1835:
  7847  1E80  1003               	clrc
  7848  1E81  0CA5               	rrf	??_Gpio_GetPinState+4,f
  7849  1E82                     u1834:
  7850  1E82  3EFF               	addlw	-1
  7851  1E83  1D03               	skipz
  7852  1E84  2E80               	goto	u1835
  7853  1E85  0825               	movf	??_Gpio_GetPinState+4,w
  7854  1E86                     l543:
  7855  1E86  0008               	return
  7856  1E87                     __end_of_Gpio_GetPinState:
  7857                           
  7858                           	psect	text28
  7859  100A                     __ptext28:	
  7860 ;; *************** function _Ssd_SetSymbol *****************
  7861 ;; Defined at:
  7862 ;;		line 33 in file "Ssd.c"
  7863 ;; Parameters:    Size  Location     Type
  7864 ;;  Id              1    wreg     unsigned char 
  7865 ;;  Symbol          1   10[BANK0 ] unsigned char 
  7866 ;; Auto vars:     Size  Location     Type
  7867 ;;  Id              1   14[BANK0 ] unsigned char 
  7868 ;; Return value:  Size  Location     Type
  7869 ;;                  1    wreg      void 
  7870 ;; Registers used:
  7871 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7872 ;; Tracked objects:
  7873 ;;		On entry : 0/0
  7874 ;;		On exit  : 0/0
  7875 ;;		Unchanged: 0/0
  7876 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7877 ;;      Params:         0       1       0       0       0
  7878 ;;      Locals:         0       1       0       0       0
  7879 ;;      Temps:          0       3       0       0       0
  7880 ;;      Totals:         0       5       0       0       0
  7881 ;;Total ram usage:        5 bytes
  7882 ;; Hardware stack levels used:    1
  7883 ;; Hardware stack levels required when called:    4
  7884 ;; This function calls:
  7885 ;;		_Gpio_SetPortState
  7886 ;; This function is called by:
  7887 ;;		_SsdTask_Update
  7888 ;; This function uses a non-reentrant model
  7889 ;;
  7890                           
  7891                           
  7892                           ;psect for function _Ssd_SetSymbol
  7893  100A                     _Ssd_SetSymbol:
  7894                           
  7895                           ;incstack = 0
  7896                           ; Regs used in _Ssd_SetSymbol: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7897                           ;Ssd_SetSymbol@Id stored from wreg
  7898  100A  1283               	bcf	3,5	;RP0=0, select bank0
  7899  100B  1303               	bcf	3,6	;RP1=0, select bank0
  7900  100C  00AE               	movwf	Ssd_SetSymbol@Id
  7901  100D                     l2145:
  7902                           
  7903                           ;Ssd.c: 33: void Ssd_SetSymbol( Id_t Id, uint8_t Symbol );Ssd.c: 34: {;Ssd.c: 35:  Gpio_
      +                          SetPortState( Ssd[ Id ].GpioIdD0, ( 0xFF << Ssd[ Id ].PinD0 ), SsdSymbolPattern[ Symbol 
      +                          ] );
  7904  100D  30FF               	movlw	255
  7905  100E  00AB               	movwf	??_Ssd_SetSymbol
  7906  100F  082E               	movf	Ssd_SetSymbol@Id,w
  7907  1010  00AC               	movwf	??_Ssd_SetSymbol+1
  7908  1011  3001               	movlw	1
  7909  1012                     u2065:
  7910  1012  1003               	clrc
  7911  1013  0DAC               	rlf	??_Ssd_SetSymbol+1,f
  7912  1014  3EFF               	addlw	-1
  7913  1015  1D03               	skipz
  7914  1016  2812               	goto	u2065
  7915  1017  1003               	clrc
  7916  1018  0D2C               	rlf	??_Ssd_SetSymbol+1,w
  7917  1019  3EE1               	addlw	(low ((_Ssd| 0+3)))& (0+255)
  7918  101A  0084               	movwf	4
  7919  101B  1383               	bcf	3,7	;select IRP bank1
  7920  101C  0A00               	incf	0,w
  7921  101D  2820               	goto	u2074
  7922  101E                     u2075:
  7923  101E  1003               	clrc
  7924  101F  0DAB               	rlf	??_Ssd_SetSymbol,f
  7925  1020                     u2074:
  7926  1020  3EFF               	addlw	-1
  7927  1021  1D03               	skipz
  7928  1022  281E               	goto	u2075
  7929  1023  082B               	movf	??_Ssd_SetSymbol,w
  7930  1024  00FF               	movwf	btemp+1
  7931  1025  087F               	movf	btemp+1,w
  7932  1026  00A0               	movwf	Gpio_SetPortState@Pins
  7933  1027  082A               	movf	Ssd_SetSymbol@Symbol,w
  7934  1028  3EDC               	addlw	(low (_SsdSymbolPattern| (0+256)))& (0+255)
  7935  1029  0084               	movwf	4
  7936  102A  1783               	bsf	3,7	;select IRP bank3
  7937  102B  0800               	movf	0,w
  7938  102C  00FF               	movwf	btemp+1
  7939  102D  087F               	movf	btemp+1,w
  7940  102E  00A1               	movwf	Gpio_SetPortState@State
  7941  102F  082E               	movf	Ssd_SetSymbol@Id,w
  7942  1030  00AD               	movwf	??_Ssd_SetSymbol+2
  7943  1031  3001               	movlw	1
  7944  1032                     u2085:
  7945  1032  1003               	clrc
  7946  1033  0DAD               	rlf	??_Ssd_SetSymbol+2,f
  7947  1034  3EFF               	addlw	-1
  7948  1035  1D03               	skipz
  7949  1036  2832               	goto	u2085
  7950  1037  1003               	clrc
  7951  1038  0D2D               	rlf	??_Ssd_SetSymbol+2,w
  7952  1039  3EE0               	addlw	(low ((_Ssd| 0+2)))& (0+255)
  7953  103A  0084               	movwf	4
  7954  103B  1383               	bcf	3,7	;select IRP bank1
  7955  103C  0800               	movf	0,w
  7956  103D  160A  158A  2708  160A  118A  	fcall	_Gpio_SetPortState
  7957  1042                     l192:
  7958  1042  0008               	return
  7959  1043                     __end_of_Ssd_SetSymbol:
  7960                           
  7961                           	psect	text29
  7962  1F08                     __ptext29:	
  7963 ;; *************** function _Gpio_SetPortState *****************
  7964 ;; Defined at:
  7965 ;;		line 33 in file "Gpio.c"
  7966 ;; Parameters:    Size  Location     Type
  7967 ;;  Id              1    wreg     unsigned char 
  7968 ;;  Pins            1    0[BANK0 ] unsigned char 
  7969 ;;  State           1    1[BANK0 ] unsigned char 
  7970 ;; Auto vars:     Size  Location     Type
  7971 ;;  Id              1    9[BANK0 ] unsigned char 
  7972 ;; Return value:  Size  Location     Type
  7973 ;;                  1    wreg      void 
  7974 ;; Registers used:
  7975 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  7976 ;; Tracked objects:
  7977 ;;		On entry : 0/0
  7978 ;;		On exit  : 0/0
  7979 ;;		Unchanged: 0/0
  7980 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7981 ;;      Params:         0       2       0       0       0
  7982 ;;      Locals:         0       1       0       0       0
  7983 ;;      Temps:          0       7       0       0       0
  7984 ;;      Totals:         0      10       0       0       0
  7985 ;;Total ram usage:       10 bytes
  7986 ;; Hardware stack levels used:    1
  7987 ;; Hardware stack levels required when called:    3
  7988 ;; This function calls:
  7989 ;;		Nothing
  7990 ;; This function is called by:
  7991 ;;		_Ssd_SetSymbol
  7992 ;; This function uses a non-reentrant model
  7993 ;;
  7994                           
  7995                           
  7996                           ;psect for function _Gpio_SetPortState
  7997  1F08                     _Gpio_SetPortState:
  7998                           
  7999                           ;incstack = 0
  8000                           ; Regs used in _Gpio_SetPortState: [wreg-fsr0h+status,2+status,0+btemp+1]
  8001                           ;Gpio_SetPortState@Id stored from wreg
  8002  1F08  1283               	bcf	3,5	;RP0=0, select bank0
  8003  1F09  1303               	bcf	3,6	;RP1=0, select bank0
  8004  1F0A  00A9               	movwf	Gpio_SetPortState@Id
  8005  1F0B                     l2041:
  8006                           
  8007                           ;Gpio.c: 33: void Gpio_SetPortState( Id_t Id, UBaseType_t Pins, UBaseType_t State );Gpio
      +                          .c: 34: {;Gpio.c: 35:  Gpio[ Id ]->PORT = ( Gpio[ Id ]->PORT & ~Pins ) | ( State & Pins 
      +                          );
  8008  1F0B  0820               	movf	Gpio_SetPortState@Pins,w
  8009  1F0C  0521               	andwf	Gpio_SetPortState@State,w
  8010  1F0D  00A2               	movwf	??_Gpio_SetPortState
  8011  1F0E  0829               	movf	Gpio_SetPortState@Id,w
  8012  1F0F  00A3               	movwf	??_Gpio_SetPortState+1
  8013  1F10  0723               	addwf	??_Gpio_SetPortState+1,w
  8014  1F11  3EE6               	addlw	(low (_Gpio| 0))& (0+255)
  8015  1F12  0084               	movwf	4
  8016  1F13  1383               	bcf	3,7	;select IRP bank1
  8017  1F14  0800               	movf	0,w
  8018  1F15  00A4               	movwf	??_Gpio_SetPortState+2
  8019  1F16  0A84               	incf	4,f
  8020  1F17  0800               	movf	0,w
  8021  1F18  00A5               	movwf	??_Gpio_SetPortState+3
  8022  1F19  0824               	movf	??_Gpio_SetPortState+2,w
  8023  1F1A  0084               	movwf	4
  8024  1F1B  1783               	bsf	3,7
  8025  1F1C  1C25               	btfss	??_Gpio_SetPortState+3,0
  8026  1F1D  1383               	bcf	3,7
  8027  1F1E  0920               	comf	Gpio_SetPortState@Pins,w
  8028  1F1F  0500               	andwf	0,w
  8029  1F20  0422               	iorwf	??_Gpio_SetPortState,w
  8030  1F21  00FF               	movwf	btemp+1
  8031  1F22  0829               	movf	Gpio_SetPortState@Id,w
  8032  1F23  00A6               	movwf	??_Gpio_SetPortState+4
  8033  1F24  0726               	addwf	??_Gpio_SetPortState+4,w
  8034  1F25  3EE6               	addlw	(low (_Gpio| 0))& (0+255)
  8035  1F26  0084               	movwf	4
  8036  1F27  1383               	bcf	3,7	;select IRP bank1
  8037  1F28  0800               	movf	0,w
  8038  1F29  00A7               	movwf	??_Gpio_SetPortState+5
  8039  1F2A  0A84               	incf	4,f
  8040  1F2B  0800               	movf	0,w
  8041  1F2C  00A8               	movwf	??_Gpio_SetPortState+6
  8042  1F2D  0827               	movf	??_Gpio_SetPortState+5,w
  8043  1F2E  0084               	movwf	4
  8044  1F2F  1783               	bsf	3,7
  8045  1F30  1C28               	btfss	??_Gpio_SetPortState+6,0
  8046  1F31  1383               	bcf	3,7
  8047  1F32  087F               	movf	btemp+1,w
  8048  1F33  0080               	movwf	0
  8049  1F34                     l546:
  8050  1F34  0008               	return
  8051  1F35                     __end_of_Gpio_SetPortState:
  8052                           
  8053                           	psect	text30
  8054  1EB1                     __ptext30:	
  8055 ;; *************** function _Ssd_SetState *****************
  8056 ;; Defined at:
  8057 ;;		line 28 in file "Ssd.c"
  8058 ;; Parameters:    Size  Location     Type
  8059 ;;  Id              1    wreg     unsigned char 
  8060 ;;  State           1   14[BANK0 ] unsigned char 
  8061 ;; Auto vars:     Size  Location     Type
  8062 ;;  Id              1   17[BANK0 ] unsigned char 
  8063 ;; Return value:  Size  Location     Type
  8064 ;;                  1    wreg      void 
  8065 ;; Registers used:
  8066 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8067 ;; Tracked objects:
  8068 ;;		On entry : 0/0
  8069 ;;		On exit  : 0/0
  8070 ;;		Unchanged: 0/0
  8071 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8072 ;;      Params:         0       1       0       0       0
  8073 ;;      Locals:         0       1       0       0       0
  8074 ;;      Temps:          0       2       0       0       0
  8075 ;;      Totals:         0       4       0       0       0
  8076 ;;Total ram usage:        4 bytes
  8077 ;; Hardware stack levels used:    1
  8078 ;; Hardware stack levels required when called:    4
  8079 ;; This function calls:
  8080 ;;		_Gpio_SetPinState
  8081 ;; This function is called by:
  8082 ;;		_SsdTask_Update
  8083 ;; This function uses a non-reentrant model
  8084 ;;
  8085                           
  8086                           
  8087                           ;psect for function _Ssd_SetState
  8088  1EB1                     _Ssd_SetState:
  8089                           
  8090                           ;incstack = 0
  8091                           ; Regs used in _Ssd_SetState: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  8092                           ;Ssd_SetState@Id stored from wreg
  8093  1EB1  1283               	bcf	3,5	;RP0=0, select bank0
  8094  1EB2  1303               	bcf	3,6	;RP1=0, select bank0
  8095  1EB3  00B1               	movwf	Ssd_SetState@Id
  8096  1EB4                     l2143:
  8097                           
  8098                           ;Ssd.c: 28: void Ssd_SetState( Id_t Id, uint8_t State );Ssd.c: 29: {;Ssd.c: 30:     Gpio
      +                          _SetPinState( Ssd[ Id ].GpioIdCtrl, Ssd[ Id ].PinCtrl, State );
  8099  1EB4  0831               	movf	Ssd_SetState@Id,w
  8100  1EB5  00AF               	movwf	??_Ssd_SetState
  8101  1EB6  3001               	movlw	1
  8102  1EB7                     u2045:
  8103  1EB7  1003               	clrc
  8104  1EB8  0DAF               	rlf	??_Ssd_SetState,f
  8105  1EB9  3EFF               	addlw	-1
  8106  1EBA  1D03               	skipz
  8107  1EBB  2EB7               	goto	u2045
  8108  1EBC  1003               	clrc
  8109  1EBD  0D2F               	rlf	??_Ssd_SetState,w
  8110  1EBE  3EDF               	addlw	(low ((_Ssd| 0+1)))& (0+255)
  8111  1EBF  0084               	movwf	4
  8112  1EC0  1383               	bcf	3,7	;select IRP bank1
  8113  1EC1  0800               	movf	0,w
  8114  1EC2  00FF               	movwf	btemp+1
  8115  1EC3  087F               	movf	btemp+1,w
  8116  1EC4  00A3               	movwf	Gpio_SetPinState@Pin
  8117  1EC5  082E               	movf	Ssd_SetState@State,w
  8118  1EC6  00FF               	movwf	btemp+1
  8119  1EC7  087F               	movf	btemp+1,w
  8120  1EC8  00A4               	movwf	Gpio_SetPinState@State
  8121  1EC9  0831               	movf	Ssd_SetState@Id,w
  8122  1ECA  00B0               	movwf	??_Ssd_SetState+1
  8123  1ECB  3001               	movlw	1
  8124  1ECC                     u2055:
  8125  1ECC  1003               	clrc
  8126  1ECD  0DB0               	rlf	??_Ssd_SetState+1,f
  8127  1ECE  3EFF               	addlw	-1
  8128  1ECF  1D03               	skipz
  8129  1ED0  2ECC               	goto	u2055
  8130  1ED1  1003               	clrc
  8131  1ED2  0D30               	rlf	??_Ssd_SetState+1,w
  8132  1ED3  3EDE               	addlw	(low (_Ssd| 0))& (0+255)
  8133  1ED4  0084               	movwf	4
  8134  1ED5  0800               	movf	0,w
  8135  1ED6  120A  118A  27C1  160A  158A  	fcall	_Gpio_SetPinState
  8136  1EDB                     l189:
  8137  1EDB  0008               	return
  8138  1EDC                     __end_of_Ssd_SetState:
  8139                           
  8140                           	psect	text31
  8141  1C71                     __ptext31:	
  8142 ;; *************** function _Scheduler_reportStatus *****************
  8143 ;; Defined at:
  8144 ;;		line 73 in file "Scheduler.c"
  8145 ;; Parameters:    Size  Location     Type
  8146 ;;		None
  8147 ;; Auto vars:     Size  Location     Type
  8148 ;;		None
  8149 ;; Return value:  Size  Location     Type
  8150 ;;                  1    wreg      void 
  8151 ;; Registers used:
  8152 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8153 ;; Tracked objects:
  8154 ;;		On entry : 0/0
  8155 ;;		On exit  : 0/0
  8156 ;;		Unchanged: 0/0
  8157 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8158 ;;      Params:         0       0       0       0       0
  8159 ;;      Locals:         0       0       0       0       0
  8160 ;;      Temps:          0       0       0       0       0
  8161 ;;      Totals:         0       0       0       0       0
  8162 ;;Total ram usage:        0 bytes
  8163 ;; Hardware stack levels used:    1
  8164 ;; Hardware stack levels required when called:    6
  8165 ;; This function calls:
  8166 ;;		_Scheduler_displayError
  8167 ;; This function is called by:
  8168 ;;		_Scheduler_dispatchTasks
  8169 ;; This function uses a non-reentrant model
  8170 ;;
  8171                           
  8172                           
  8173                           ;psect for function _Scheduler_reportStatus
  8174  1C71                     _Scheduler_reportStatus:
  8175  1C71                     l2325:	
  8176                           ;incstack = 0
  8177                           ; Regs used in _Scheduler_reportStatus: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cst
      +                          ack]
  8178                           
  8179                           
  8180                           ;Scheduler.c: 75:  if( scheduler.interruptFlag == 1 )
  8181  1C71  1683               	bsf	3,5	;RP0=1, select bank3
  8182  1C72  1703               	bsf	3,6	;RP1=1, select bank3
  8183  1C73  034D               	decf	(_scheduler^(0+384)+61),w	;volatile
  8184  1C74  1D03               	btfss	3,2
  8185  1C75  2C77               	goto	u2441
  8186  1C76  2C78               	goto	u2440
  8187  1C77                     u2441:
  8188  1C77  2C7C               	goto	l2329
  8189  1C78                     u2440:
  8190  1C78                     l2327:
  8191                           
  8192                           ;Scheduler.c: 76:  {;Scheduler.c: 77:   scheduler.errorCode = ( 1 );
  8193  1C78  3001               	movlw	1
  8194  1C79  00FF               	movwf	btemp+1
  8195  1C7A  087F               	movf	btemp+1,w
  8196  1C7B  00CC               	movwf	(_scheduler^(0+384)+60)	;volatile
  8197  1C7C                     l2329:
  8198                           
  8199                           ;Scheduler.c: 79:  Scheduler_displayError( scheduler.errorCode );
  8200  1C7C  084C               	movf	(_scheduler^(0+384)+60),w	;volatile
  8201  1C7D  160A  158A  258C  160A  158A  	fcall	_Scheduler_displayError
  8202  1C82                     l124:
  8203  1C82  0008               	return
  8204  1C83                     __end_of_Scheduler_reportStatus:
  8205                           
  8206                           	psect	text32
  8207  1D8C                     __ptext32:	
  8208 ;; *************** function _Scheduler_displayError *****************
  8209 ;; Defined at:
  8210 ;;		line 12 in file "SchedulerConfig.c"
  8211 ;; Parameters:    Size  Location     Type
  8212 ;;  errorCode       1    wreg     unsigned char 
  8213 ;; Auto vars:     Size  Location     Type
  8214 ;;  errorCode       1   16[BANK0 ] unsigned char 
  8215 ;; Return value:  Size  Location     Type
  8216 ;;                  1    wreg      void 
  8217 ;; Registers used:
  8218 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8219 ;; Tracked objects:
  8220 ;;		On entry : 0/0
  8221 ;;		On exit  : 0/0
  8222 ;;		Unchanged: 0/0
  8223 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8224 ;;      Params:         0       0       0       0       0
  8225 ;;      Locals:         0       1       0       0       0
  8226 ;;      Temps:          0       0       0       0       0
  8227 ;;      Totals:         0       1       0       0       0
  8228 ;;Total ram usage:        1 bytes
  8229 ;; Hardware stack levels used:    1
  8230 ;; Hardware stack levels required when called:    5
  8231 ;; This function calls:
  8232 ;;		_LedTask_SetState
  8233 ;; This function is called by:
  8234 ;;		_Scheduler_reportStatus
  8235 ;; This function uses a non-reentrant model
  8236 ;;
  8237                           
  8238                           
  8239                           ;psect for function _Scheduler_displayError
  8240  1D8C                     _Scheduler_displayError:
  8241                           
  8242                           ;incstack = 0
  8243                           ; Regs used in _Scheduler_displayError: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cst
      +                          ack]
  8244                           ;Scheduler_displayError@errorCode stored from wreg
  8245  1D8C  1283               	bcf	3,5	;RP0=0, select bank0
  8246  1D8D  1303               	bcf	3,6	;RP1=0, select bank0
  8247  1D8E  00B0               	movwf	Scheduler_displayError@errorCode
  8248  1D8F                     l2129:
  8249                           
  8250                           ;SchedulerConfig.c: 12: void Scheduler_displayError( UBaseType_t errorCode );SchedulerCo
      +                          nfig.c: 13: {;SchedulerConfig.c: 14:  if( errorCode )
  8251  1D8F  0830               	movf	Scheduler_displayError@errorCode,w
  8252  1D90  1903               	btfsc	3,2
  8253  1D91  2D93               	goto	u2011
  8254  1D92  2D94               	goto	u2010
  8255  1D93                     u2011:
  8256  1D93  2D9F               	goto	l2133
  8257  1D94                     u2010:
  8258  1D94                     l2131:
  8259                           
  8260                           ;SchedulerConfig.c: 15:  {;SchedulerConfig.c: 16:   LedTask_SetState( 1, ( 0 ), ( 0 ) );
  8261  1D94  01AA               	clrf	LedTask_SetState@State
  8262  1D95  3000               	movlw	0
  8263  1D96  00AB               	movwf	LedTask_SetState@Period
  8264  1D97  00AC               	movwf	LedTask_SetState@Period+1
  8265  1D98  3001               	movlw	1
  8266  1D99  160A  118A  21F1  160A  158A  	fcall	_LedTask_SetState
  8267                           
  8268                           ;SchedulerConfig.c: 17:  }else
  8269  1D9E  2DAA               	goto	l67
  8270  1D9F                     l2133:
  8271                           
  8272                           ;SchedulerConfig.c: 18:  {;SchedulerConfig.c: 19:   LedTask_SetState( 1, ( 1 ), ( 0 ) );
  8273  1D9F  01AA               	clrf	LedTask_SetState@State
  8274  1DA0  0AAA               	incf	LedTask_SetState@State,f
  8275  1DA1  3000               	movlw	0
  8276  1DA2  00AB               	movwf	LedTask_SetState@Period
  8277  1DA3  00AC               	movwf	LedTask_SetState@Period+1
  8278  1DA4  3001               	movlw	1
  8279  1DA5  160A  118A  21F1  160A  158A  	fcall	_LedTask_SetState
  8280  1DAA                     l67:
  8281  1DAA  0008               	return
  8282  1DAB                     __end_of_Scheduler_displayError:
  8283                           
  8284                           	psect	text33
  8285  1D29                     __ptext33:	
  8286 ;; *************** function _Scheduler_goToSleep *****************
  8287 ;; Defined at:
  8288 ;;		line 82 in file "Scheduler.c"
  8289 ;; Parameters:    Size  Location     Type
  8290 ;;		None
  8291 ;; Auto vars:     Size  Location     Type
  8292 ;;		None
  8293 ;; Return value:  Size  Location     Type
  8294 ;;                  1    wreg      void 
  8295 ;; Registers used:
  8296 ;;		wreg, status,2, status,0, pclath, cstack
  8297 ;; Tracked objects:
  8298 ;;		On entry : 0/0
  8299 ;;		On exit  : 0/0
  8300 ;;		Unchanged: 0/0
  8301 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8302 ;;      Params:         0       0       0       0       0
  8303 ;;      Locals:         0       0       0       0       0
  8304 ;;      Temps:          0       0       0       0       0
  8305 ;;      Totals:         0       0       0       0       0
  8306 ;;Total ram usage:        0 bytes
  8307 ;; Hardware stack levels used:    1
  8308 ;; Hardware stack levels required when called:    4
  8309 ;; This function calls:
  8310 ;;		_Scheduler_sleepHardware
  8311 ;; This function is called by:
  8312 ;;		_Scheduler_dispatchTasks
  8313 ;; This function uses a non-reentrant model
  8314 ;;
  8315                           
  8316                           
  8317                           ;psect for function _Scheduler_goToSleep
  8318  1D29                     _Scheduler_goToSleep:
  8319  1D29                     l2331:	
  8320                           ;incstack = 0
  8321                           ; Regs used in _Scheduler_goToSleep: [wreg+status,2+status,0+pclath+cstack]
  8322                           
  8323                           
  8324                           ;Scheduler.c: 84:  if( scheduler.interruptFlag == 1 )
  8325  1D29  1683               	bsf	3,5	;RP0=1, select bank3
  8326  1D2A  1703               	bsf	3,6	;RP1=1, select bank3
  8327  1D2B  034D               	decf	(_scheduler^(0+384)+61),w	;volatile
  8328  1D2C  1D03               	btfss	3,2
  8329  1D2D  2D2F               	goto	u2451
  8330  1D2E  2D30               	goto	u2450
  8331  1D2F                     u2451:
  8332  1D2F  2D37               	goto	l2337
  8333  1D30                     u2450:
  8334  1D30                     l2333:
  8335                           
  8336                           ;Scheduler.c: 85:  {;Scheduler.c: 86:   scheduler.interruptFlag = 0;
  8337  1D30  01CD               	clrf	(_scheduler^(0+384)+61)	;volatile
  8338  1D31  2D37               	goto	l2337
  8339  1D32                     l2335:
  8340                           
  8341                           ;Scheduler.c: 89:  {;Scheduler.c: 90:   Scheduler_sleepHardware();
  8342  1D32  120A  118A  27FE  160A  158A  	fcall	_Scheduler_sleepHardware
  8343  1D37                     l2337:
  8344                           
  8345                           ;Scheduler.c: 88:  while( scheduler.interruptFlag == 0 )
  8346  1D37  1683               	bsf	3,5	;RP0=1, select bank3
  8347  1D38  1703               	bsf	3,6	;RP1=1, select bank3
  8348  1D39  084D               	movf	(_scheduler^(0+384)+61),w	;volatile
  8349  1D3A  1903               	btfsc	3,2
  8350  1D3B  2D3D               	goto	u2461
  8351  1D3C  2D3E               	goto	u2460
  8352  1D3D                     u2461:
  8353  1D3D  2D32               	goto	l2335
  8354  1D3E                     u2460:
  8355  1D3E                     l2339:
  8356                           
  8357                           ;Scheduler.c: 92:  scheduler.interruptFlag = 0;
  8358  1D3E  01CD               	clrf	(_scheduler^(0+384)+61)	;volatile
  8359  1D3F                     l131:
  8360  1D3F  0008               	return
  8361  1D40                     __end_of_Scheduler_goToSleep:
  8362                           
  8363                           	psect	text34
  8364  07FE                     __ptext34:	
  8365 ;; *************** function _Scheduler_sleepHardware *****************
  8366 ;; Defined at:
  8367 ;;		line 23 in file "SchedulerConfig.c"
  8368 ;; Parameters:    Size  Location     Type
  8369 ;;		None
  8370 ;; Auto vars:     Size  Location     Type
  8371 ;;		None
  8372 ;; Return value:  Size  Location     Type
  8373 ;;                  1    wreg      void 
  8374 ;; Registers used:
  8375 ;;		None
  8376 ;; Tracked objects:
  8377 ;;		On entry : 0/0
  8378 ;;		On exit  : 0/0
  8379 ;;		Unchanged: 0/0
  8380 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8381 ;;      Params:         0       0       0       0       0
  8382 ;;      Locals:         0       0       0       0       0
  8383 ;;      Temps:          0       0       0       0       0
  8384 ;;      Totals:         0       0       0       0       0
  8385 ;;Total ram usage:        0 bytes
  8386 ;; Hardware stack levels used:    1
  8387 ;; Hardware stack levels required when called:    3
  8388 ;; This function calls:
  8389 ;;		Nothing
  8390 ;; This function is called by:
  8391 ;;		_Scheduler_goToSleep
  8392 ;; This function uses a non-reentrant model
  8393 ;;
  8394                           
  8395                           
  8396                           ;psect for function _Scheduler_sleepHardware
  8397  07FE                     _Scheduler_sleepHardware:
  8398  07FE                     l70:	
  8399                           ;incstack = 0
  8400                           ; Regs used in _Scheduler_sleepHardware: []
  8401                           
  8402  07FE  0008               	return
  8403  07FF                     __end_of_Scheduler_sleepHardware:
  8404                           
  8405                           	psect	text35
  8406  152B                     __ptext35:	
  8407 ;; *************** function _Scheduler_deleteTask *****************
  8408 ;; Defined at:
  8409 ;;		line 54 in file "Scheduler.c"
  8410 ;; Parameters:    Size  Location     Type
  8411 ;;  index           1    wreg     unsigned char 
  8412 ;; Auto vars:     Size  Location     Type
  8413 ;;  index           1    3[BANK0 ] unsigned char 
  8414 ;; Return value:  Size  Location     Type
  8415 ;;                  1    wreg      unsigned char 
  8416 ;; Registers used:
  8417 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8418 ;; Tracked objects:
  8419 ;;		On entry : 0/0
  8420 ;;		On exit  : 0/0
  8421 ;;		Unchanged: 0/0
  8422 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8423 ;;      Params:         0       0       0       0       0
  8424 ;;      Locals:         0       1       0       0       0
  8425 ;;      Temps:          0       0       0       0       0
  8426 ;;      Totals:         0       1       0       0       0
  8427 ;;Total ram usage:        1 bytes
  8428 ;; Hardware stack levels used:    1
  8429 ;; Hardware stack levels required when called:    4
  8430 ;; This function calls:
  8431 ;;		___bmul
  8432 ;; This function is called by:
  8433 ;;		_Scheduler_init
  8434 ;;		_Scheduler_dispatchTasks
  8435 ;; This function uses a non-reentrant model
  8436 ;;
  8437                           
  8438                           
  8439                           ;psect for function _Scheduler_deleteTask
  8440  152B                     _Scheduler_deleteTask:
  8441                           
  8442                           ;incstack = 0
  8443                           ; Regs used in _Scheduler_deleteTask: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstac
      +                          k]
  8444                           ;Scheduler_deleteTask@index stored from wreg
  8445  152B  1283               	bcf	3,5	;RP0=0, select bank0
  8446  152C  1303               	bcf	3,6	;RP1=0, select bank0
  8447  152D  00A3               	movwf	Scheduler_deleteTask@index
  8448  152E                     l2317:
  8449                           
  8450                           ;Scheduler.c: 54: UBaseType_t Scheduler_deleteTask( UBaseType_t index );Scheduler.c: 55:
      +                           {;Scheduler.c: 56:  if( scheduler.task[ index ].pointer == 0 )
  8451  152E  3006               	movlw	6
  8452  152F  00FF               	movwf	btemp+1
  8453  1530  087F               	movf	btemp+1,w
  8454  1531  00A0               	movwf	___bmul@multiplicand
  8455  1532  0823               	movf	Scheduler_deleteTask@index,w
  8456  1533  160A  158A  2512  160A  118A  	fcall	___bmul
  8457  1538  3E90               	addlw	(low (_scheduler| (0+256)))& (0+255)
  8458  1539  0084               	movwf	4
  8459  153A  1783               	bsf	3,7	;select IRP bank3
  8460  153B  0800               	movf	0,w
  8461  153C  1D03               	btfss	3,2
  8462  153D  2D3F               	goto	u2431
  8463  153E  2D40               	goto	u2430
  8464  153F                     u2431:
  8465  153F  2D41               	goto	l2321
  8466  1540                     u2430:
  8467  1540  2D93               	goto	l117
  8468  1541                     l2321:
  8469                           
  8470                           ;Scheduler.c: 60:  scheduler.task[ index ].pointer = 0x00000000;
  8471  1541  3006               	movlw	6
  8472  1542  00FF               	movwf	btemp+1
  8473  1543  087F               	movf	btemp+1,w
  8474  1544  1283               	bcf	3,5	;RP0=0, select bank0
  8475  1545  1303               	bcf	3,6	;RP1=0, select bank0
  8476  1546  00A0               	movwf	___bmul@multiplicand
  8477  1547  0823               	movf	Scheduler_deleteTask@index,w
  8478  1548  160A  158A  2512  160A  118A  	fcall	___bmul
  8479  154D  3E90               	addlw	(low (_scheduler| (0+256)))& (0+255)
  8480  154E  0084               	movwf	4
  8481  154F  1783               	bsf	3,7	;select IRP bank3
  8482  1550  0180               	clrf	0
  8483                           
  8484                           ;Scheduler.c: 61:  scheduler.task[ index ].paramter = 0x00000000;
  8485  1551  3006               	movlw	6
  8486  1552  00FF               	movwf	btemp+1
  8487  1553  087F               	movf	btemp+1,w
  8488  1554  1283               	bcf	3,5	;RP0=0, select bank0
  8489  1555  1303               	bcf	3,6	;RP1=0, select bank0
  8490  1556  00A0               	movwf	___bmul@multiplicand
  8491  1557  0823               	movf	Scheduler_deleteTask@index,w
  8492  1558  160A  158A  2512  160A  118A  	fcall	___bmul
  8493  155D  3E91               	addlw	(low ((_scheduler| (0+256)+1)))& (0+255)
  8494  155E  0084               	movwf	4
  8495  155F  1783               	bsf	3,7	;select IRP bank3
  8496  1560  0180               	clrf	0
  8497  1561  0A84               	incf	4,f
  8498  1562  0180               	clrf	0
  8499                           
  8500                           ;Scheduler.c: 62:  scheduler.task[ index ].delay = 0;
  8501  1563  3006               	movlw	6
  8502  1564  00FF               	movwf	btemp+1
  8503  1565  087F               	movf	btemp+1,w
  8504  1566  1283               	bcf	3,5	;RP0=0, select bank0
  8505  1567  1303               	bcf	3,6	;RP1=0, select bank0
  8506  1568  00A0               	movwf	___bmul@multiplicand
  8507  1569  0823               	movf	Scheduler_deleteTask@index,w
  8508  156A  160A  158A  2512  160A  118A  	fcall	___bmul
  8509  156F  3E93               	addlw	(low ((_scheduler| (0+256)+3)))& (0+255)
  8510  1570  0084               	movwf	4
  8511  1571  1783               	bsf	3,7	;select IRP bank3
  8512  1572  0180               	clrf	0
  8513                           
  8514                           ;Scheduler.c: 63:  scheduler.task[ index ].period = 0;
  8515  1573  3006               	movlw	6
  8516  1574  00FF               	movwf	btemp+1
  8517  1575  087F               	movf	btemp+1,w
  8518  1576  1283               	bcf	3,5	;RP0=0, select bank0
  8519  1577  1303               	bcf	3,6	;RP1=0, select bank0
  8520  1578  00A0               	movwf	___bmul@multiplicand
  8521  1579  0823               	movf	Scheduler_deleteTask@index,w
  8522  157A  160A  158A  2512  160A  118A  	fcall	___bmul
  8523  157F  3E94               	addlw	(low ((_scheduler| (0+256)+4)))& (0+255)
  8524  1580  0084               	movwf	4
  8525  1581  1783               	bsf	3,7	;select IRP bank3
  8526  1582  0180               	clrf	0
  8527                           
  8528                           ;Scheduler.c: 64:  scheduler.task[ index ].runMe = 0;
  8529  1583  3006               	movlw	6
  8530  1584  00FF               	movwf	btemp+1
  8531  1585  087F               	movf	btemp+1,w
  8532  1586  1283               	bcf	3,5	;RP0=0, select bank0
  8533  1587  1303               	bcf	3,6	;RP1=0, select bank0
  8534  1588  00A0               	movwf	___bmul@multiplicand
  8535  1589  0823               	movf	Scheduler_deleteTask@index,w
  8536  158A  160A  158A  2512  160A  118A  	fcall	___bmul
  8537  158F  3E95               	addlw	(low ((_scheduler| (0+256)+5)))& (0+255)
  8538  1590  0084               	movwf	4
  8539  1591  1783               	bsf	3,7	;select IRP bank3
  8540  1592  0180               	clrf	0
  8541  1593                     l117:
  8542  1593  0008               	return
  8543  1594                     __end_of_Scheduler_deleteTask:
  8544                           
  8545                           	psect	text36
  8546  123E                     __ptext36:	
  8547 ;; *************** function _Led_SetState *****************
  8548 ;; Defined at:
  8549 ;;		line 20 in file "Led.c"
  8550 ;; Parameters:    Size  Location     Type
  8551 ;;  Id              1    wreg     unsigned char 
  8552 ;;  State           1   14[BANK0 ] unsigned char 
  8553 ;; Auto vars:     Size  Location     Type
  8554 ;;  Id              1   15[BANK0 ] unsigned char 
  8555 ;; Return value:  Size  Location     Type
  8556 ;;                  1    wreg      void 
  8557 ;; Registers used:
  8558 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8559 ;; Tracked objects:
  8560 ;;		On entry : 0/0
  8561 ;;		On exit  : 0/0
  8562 ;;		Unchanged: 0/0
  8563 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8564 ;;      Params:         0       1       0       0       0
  8565 ;;      Locals:         0       1       0       0       0
  8566 ;;      Temps:          0       0       0       0       0
  8567 ;;      Totals:         0       2       0       0       0
  8568 ;;Total ram usage:        2 bytes
  8569 ;; Hardware stack levels used:    1
  8570 ;; Hardware stack levels required when called:    4
  8571 ;; This function calls:
  8572 ;;		_Gpio_SetPinState
  8573 ;;		___bmul
  8574 ;; This function is called by:
  8575 ;;		_LedTask_Update
  8576 ;; This function uses a non-reentrant model
  8577 ;;
  8578                           
  8579                           
  8580                           ;psect for function _Led_SetState
  8581  123E                     _Led_SetState:
  8582                           
  8583                           ;incstack = 0
  8584                           ; Regs used in _Led_SetState: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  8585                           ;Led_SetState@Id stored from wreg
  8586  123E  1283               	bcf	3,5	;RP0=0, select bank0
  8587  123F  1303               	bcf	3,6	;RP1=0, select bank0
  8588  1240  00AF               	movwf	Led_SetState@Id
  8589  1241                     l2137:
  8590                           
  8591                           ;Led.c: 20: void Led_SetState( uint8_t Id, uint8_t State );Led.c: 21: {;Led.c: 22:     L
      +                          ed[ Id ].State = State;
  8592  1241  3003               	movlw	3
  8593  1242  00FF               	movwf	btemp+1
  8594  1243  087F               	movf	btemp+1,w
  8595  1244  00A0               	movwf	___bmul@multiplicand
  8596  1245  082F               	movf	Led_SetState@Id,w
  8597  1246  160A  158A  2512  160A  118A  	fcall	___bmul
  8598  124B  3EDA               	addlw	(low ((_Led| 0+2)))& (0+255)
  8599  124C  0084               	movwf	4
  8600  124D  1283               	bcf	3,5	;RP0=0, select bank0
  8601  124E  1303               	bcf	3,6	;RP1=0, select bank0
  8602  124F  082E               	movf	Led_SetState@State,w
  8603  1250  00FF               	movwf	btemp+1
  8604  1251  087F               	movf	btemp+1,w
  8605  1252  1383               	bcf	3,7	;select IRP bank1
  8606  1253  0080               	movwf	0
  8607                           
  8608                           ;Led.c: 23:  Gpio_SetPinState( Led[ Id ].GpioId, Led[ Id ].Pin, Led[ Id ].State );
  8609  1254  3003               	movlw	3
  8610  1255  00FF               	movwf	btemp+1
  8611  1256  087F               	movf	btemp+1,w
  8612  1257  00A0               	movwf	___bmul@multiplicand
  8613  1258  082F               	movf	Led_SetState@Id,w
  8614  1259  160A  158A  2512  160A  118A  	fcall	___bmul
  8615  125E  3ED9               	addlw	(low ((_Led| 0+1)))& (0+255)
  8616  125F  0084               	movwf	4
  8617  1260  1383               	bcf	3,7	;select IRP bank1
  8618  1261  0800               	movf	0,w
  8619  1262  00FF               	movwf	btemp+1
  8620  1263  087F               	movf	btemp+1,w
  8621  1264  1283               	bcf	3,5	;RP0=0, select bank0
  8622  1265  1303               	bcf	3,6	;RP1=0, select bank0
  8623  1266  00A3               	movwf	Gpio_SetPinState@Pin
  8624  1267  3003               	movlw	3
  8625  1268  00FF               	movwf	btemp+1
  8626  1269  087F               	movf	btemp+1,w
  8627  126A  00A0               	movwf	___bmul@multiplicand
  8628  126B  082F               	movf	Led_SetState@Id,w
  8629  126C  160A  158A  2512  160A  118A  	fcall	___bmul
  8630  1271  3EDA               	addlw	(low ((_Led| 0+2)))& (0+255)
  8631  1272  0084               	movwf	4
  8632  1273  1383               	bcf	3,7	;select IRP bank1
  8633  1274  0800               	movf	0,w
  8634  1275  00FF               	movwf	btemp+1
  8635  1276  087F               	movf	btemp+1,w
  8636  1277  1283               	bcf	3,5	;RP0=0, select bank0
  8637  1278  1303               	bcf	3,6	;RP1=0, select bank0
  8638  1279  00A4               	movwf	Gpio_SetPinState@State
  8639  127A  3003               	movlw	3
  8640  127B  00FF               	movwf	btemp+1
  8641  127C  087F               	movf	btemp+1,w
  8642  127D  00A0               	movwf	___bmul@multiplicand
  8643  127E  082F               	movf	Led_SetState@Id,w
  8644  127F  160A  158A  2512  160A  118A  	fcall	___bmul
  8645  1284  3ED8               	addlw	(low (_Led| 0))& (0+255)
  8646  1285  0084               	movwf	4
  8647  1286  1383               	bcf	3,7	;select IRP bank1
  8648  1287  0800               	movf	0,w
  8649  1288  120A  118A  27C1  160A  118A  	fcall	_Gpio_SetPinState
  8650  128D                     l158:
  8651  128D  0008               	return
  8652  128E                     __end_of_Led_SetState:
  8653                           
  8654                           	psect	text37
  8655  07C1                     __ptext37:	
  8656 ;; *************** function _Gpio_SetPinState *****************
  8657 ;; Defined at:
  8658 ;;		line 23 in file "Gpio.c"
  8659 ;; Parameters:    Size  Location     Type
  8660 ;;  Id              1    wreg     unsigned char 
  8661 ;;  Pin             1    3[BANK0 ] unsigned char 
  8662 ;;  State           1    4[BANK0 ] unsigned char 
  8663 ;; Auto vars:     Size  Location     Type
  8664 ;;  Id              1   13[BANK0 ] unsigned char 
  8665 ;; Return value:  Size  Location     Type
  8666 ;;                  1    wreg      void 
  8667 ;; Registers used:
  8668 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  8669 ;; Tracked objects:
  8670 ;;		On entry : 0/0
  8671 ;;		On exit  : 0/0
  8672 ;;		Unchanged: 0/0
  8673 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8674 ;;      Params:         0       2       0       0       0
  8675 ;;      Locals:         0       1       0       0       0
  8676 ;;      Temps:          0       8       0       0       0
  8677 ;;      Totals:         0      11       0       0       0
  8678 ;;Total ram usage:       11 bytes
  8679 ;; Hardware stack levels used:    1
  8680 ;; Hardware stack levels required when called:    3
  8681 ;; This function calls:
  8682 ;;		Nothing
  8683 ;; This function is called by:
  8684 ;;		_Led_SetState
  8685 ;;		_Ssd_SetState
  8686 ;;		_TempControl_SetState
  8687 ;; This function uses a non-reentrant model
  8688 ;;
  8689                           
  8690                           
  8691                           ;psect for function _Gpio_SetPinState
  8692  07C1                     _Gpio_SetPinState:
  8693                           
  8694                           ;incstack = 0
  8695                           ; Regs used in _Gpio_SetPinState: [wreg-fsr0h+status,2+status,0+btemp+1]
  8696                           ;Gpio_SetPinState@Id stored from wreg
  8697  07C1  1283               	bcf	3,5	;RP0=0, select bank0
  8698  07C2  1303               	bcf	3,6	;RP1=0, select bank0
  8699  07C3  00AD               	movwf	Gpio_SetPinState@Id
  8700  07C4                     l2035:
  8701                           
  8702                           ;Gpio.c: 23: void Gpio_SetPinState( Id_t Id, UBaseType_t Pin, UBaseType_t State );Gpio.c
      +                          : 24: {;Gpio.c: 25:  Gpio[ Id ]->PORT = ( Gpio[ Id ]->PORT & ~( 1 << Pin ) ) | ( State <
      +                          < Pin);
  8703  07C4  0824               	movf	Gpio_SetPinState@State,w
  8704  07C5  00A5               	movwf	??_Gpio_SetPinState
  8705  07C6  0A23               	incf	Gpio_SetPinState@Pin,w
  8706  07C7  2FCA               	goto	u1804
  8707  07C8                     u1805:
  8708  07C8  1003               	clrc
  8709  07C9  0DA5               	rlf	??_Gpio_SetPinState,f
  8710  07CA                     u1804:
  8711  07CA  3EFF               	addlw	-1
  8712  07CB  1D03               	skipz
  8713  07CC  2FC8               	goto	u1805
  8714  07CD  082D               	movf	Gpio_SetPinState@Id,w
  8715  07CE  00A6               	movwf	??_Gpio_SetPinState+1
  8716  07CF  0726               	addwf	??_Gpio_SetPinState+1,w
  8717  07D0  3EE6               	addlw	(low (_Gpio| 0))& (0+255)
  8718  07D1  0084               	movwf	4
  8719  07D2  1383               	bcf	3,7	;select IRP bank1
  8720  07D3  0800               	movf	0,w
  8721  07D4  00A7               	movwf	??_Gpio_SetPinState+2
  8722  07D5  0A84               	incf	4,f
  8723  07D6  0800               	movf	0,w
  8724  07D7  00A8               	movwf	??_Gpio_SetPinState+3
  8725  07D8  0827               	movf	??_Gpio_SetPinState+2,w
  8726  07D9  0084               	movwf	4
  8727  07DA  1783               	bsf	3,7
  8728  07DB  1C28               	btfss	??_Gpio_SetPinState+3,0
  8729  07DC  1383               	bcf	3,7
  8730  07DD  3001               	movlw	1
  8731  07DE  00A9               	movwf	??_Gpio_SetPinState+4
  8732  07DF  0A23               	incf	Gpio_SetPinState@Pin,w
  8733  07E0  2FE3               	goto	u1814
  8734  07E1                     u1815:
  8735  07E1  1003               	clrc
  8736  07E2  0DA9               	rlf	??_Gpio_SetPinState+4,f
  8737  07E3                     u1814:
  8738  07E3  3EFF               	addlw	-1
  8739  07E4  1D03               	skipz
  8740  07E5  2FE1               	goto	u1815
  8741  07E6  0829               	movf	??_Gpio_SetPinState+4,w
  8742  07E7  3AFF               	xorlw	255
  8743  07E8  0500               	andwf	0,w
  8744  07E9  0425               	iorwf	??_Gpio_SetPinState,w
  8745  07EA  00FF               	movwf	btemp+1
  8746  07EB  082D               	movf	Gpio_SetPinState@Id,w
  8747  07EC  00AA               	movwf	??_Gpio_SetPinState+5
  8748  07ED  072A               	addwf	??_Gpio_SetPinState+5,w
  8749  07EE  3EE6               	addlw	(low (_Gpio| 0))& (0+255)
  8750  07EF  0084               	movwf	4
  8751  07F0  1383               	bcf	3,7	;select IRP bank1
  8752  07F1  0800               	movf	0,w
  8753  07F2  00AB               	movwf	??_Gpio_SetPinState+6
  8754  07F3  0A84               	incf	4,f
  8755  07F4  0800               	movf	0,w
  8756  07F5  00AC               	movwf	??_Gpio_SetPinState+7
  8757  07F6  082B               	movf	??_Gpio_SetPinState+6,w
  8758  07F7  0084               	movwf	4
  8759  07F8  1783               	bsf	3,7
  8760  07F9  1C2C               	btfss	??_Gpio_SetPinState+7,0
  8761  07FA  1383               	bcf	3,7
  8762  07FB  087F               	movf	btemp+1,w
  8763  07FC  0080               	movwf	0
  8764  07FD                     l540:
  8765  07FD  0008               	return
  8766  07FE                     __end_of_Gpio_SetPinState:
  8767                           
  8768                           	psect	text38
  8769  133D                     __ptext38:	
  8770 ;; *************** function ___awmod *****************
  8771 ;; Defined at:
  8772 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\awmod.c"
  8773 ;; Parameters:    Size  Location     Type
  8774 ;;  divisor         2   11[BANK0 ] int 
  8775 ;;  dividend        2   13[BANK0 ] int 
  8776 ;; Auto vars:     Size  Location     Type
  8777 ;;  sign            1   16[BANK0 ] unsigned char 
  8778 ;;  counter         1   15[BANK0 ] unsigned char 
  8779 ;; Return value:  Size  Location     Type
  8780 ;;                  2   11[BANK0 ] int 
  8781 ;; Registers used:
  8782 ;;		wreg, status,2, status,0, btemp+1
  8783 ;; Tracked objects:
  8784 ;;		On entry : 0/0
  8785 ;;		On exit  : 0/0
  8786 ;;		Unchanged: 0/0
  8787 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8788 ;;      Params:         0       4       0       0       0
  8789 ;;      Locals:         0       2       0       0       0
  8790 ;;      Temps:          0       0       0       0       0
  8791 ;;      Totals:         0       6       0       0       0
  8792 ;;Total ram usage:        6 bytes
  8793 ;; Hardware stack levels used:    1
  8794 ;; Hardware stack levels required when called:    3
  8795 ;; This function calls:
  8796 ;;		Nothing
  8797 ;; This function is called by:
  8798 ;;		_HeaterTask_Update
  8799 ;; This function uses a non-reentrant model
  8800 ;;
  8801                           
  8802                           
  8803                           ;psect for function ___awmod
  8804  133D                     ___awmod:
  8805  133D                     l2269:	
  8806                           ;incstack = 0
  8807                           ; Regs used in ___awmod: [wreg+status,2+status,0+btemp+1]
  8808                           
  8809  133D  1283               	bcf	3,5	;RP0=0, select bank0
  8810  133E  1303               	bcf	3,6	;RP1=0, select bank0
  8811  133F  01B0               	clrf	___awmod@sign
  8812  1340                     l2271:
  8813  1340  1FAE               	btfss	___awmod@dividend+1,7
  8814  1341  2B43               	goto	u2321
  8815  1342  2B44               	goto	u2320
  8816  1343                     u2321:
  8817  1343  2B4B               	goto	l2277
  8818  1344                     u2320:
  8819  1344                     l2273:
  8820  1344  09AD               	comf	___awmod@dividend,f
  8821  1345  09AE               	comf	___awmod@dividend+1,f
  8822  1346  0AAD               	incf	___awmod@dividend,f
  8823  1347  1903               	skipnz
  8824  1348  0AAE               	incf	___awmod@dividend+1,f
  8825  1349                     l2275:
  8826  1349  01B0               	clrf	___awmod@sign
  8827  134A  0AB0               	incf	___awmod@sign,f
  8828  134B                     l2277:
  8829  134B  1FAC               	btfss	___awmod@divisor+1,7
  8830  134C  2B4E               	goto	u2331
  8831  134D  2B4F               	goto	u2330
  8832  134E                     u2331:
  8833  134E  2B54               	goto	l2281
  8834  134F                     u2330:
  8835  134F                     l2279:
  8836  134F  09AB               	comf	___awmod@divisor,f
  8837  1350  09AC               	comf	___awmod@divisor+1,f
  8838  1351  0AAB               	incf	___awmod@divisor,f
  8839  1352  1903               	skipnz
  8840  1353  0AAC               	incf	___awmod@divisor+1,f
  8841  1354                     l2281:
  8842  1354  082B               	movf	___awmod@divisor,w
  8843  1355  042C               	iorwf	___awmod@divisor+1,w
  8844  1356  1903               	btfsc	3,2
  8845  1357  2B59               	goto	u2341
  8846  1358  2B5A               	goto	u2340
  8847  1359                     u2341:
  8848  1359  2B89               	goto	l2299
  8849  135A                     u2340:
  8850  135A                     l2283:
  8851  135A  01AF               	clrf	___awmod@counter
  8852  135B  0AAF               	incf	___awmod@counter,f
  8853  135C  2B68               	goto	l2289
  8854  135D                     l2285:
  8855  135D  3001               	movlw	1
  8856  135E                     u2355:
  8857  135E  1003               	clrc
  8858  135F  0DAB               	rlf	___awmod@divisor,f
  8859  1360  0DAC               	rlf	___awmod@divisor+1,f
  8860  1361  3EFF               	addlw	-1
  8861  1362  1D03               	skipz
  8862  1363  2B5E               	goto	u2355
  8863  1364                     l2287:
  8864  1364  3001               	movlw	1
  8865  1365  00FF               	movwf	btemp+1
  8866  1366  087F               	movf	btemp+1,w
  8867  1367  07AF               	addwf	___awmod@counter,f
  8868  1368                     l2289:
  8869  1368  1FAC               	btfss	___awmod@divisor+1,7
  8870  1369  2B6B               	goto	u2361
  8871  136A  2B6C               	goto	u2360
  8872  136B                     u2361:
  8873  136B  2B5D               	goto	l2285
  8874  136C                     u2360:
  8875  136C                     l2291:
  8876  136C  082C               	movf	___awmod@divisor+1,w
  8877  136D  022E               	subwf	___awmod@dividend+1,w
  8878  136E  1D03               	skipz
  8879  136F  2B72               	goto	u2375
  8880  1370  082B               	movf	___awmod@divisor,w
  8881  1371  022D               	subwf	___awmod@dividend,w
  8882  1372                     u2375:
  8883  1372  1C03               	skipc
  8884  1373  2B75               	goto	u2371
  8885  1374  2B76               	goto	u2370
  8886  1375                     u2371:
  8887  1375  2B7C               	goto	l2295
  8888  1376                     u2370:
  8889  1376                     l2293:
  8890  1376  082B               	movf	___awmod@divisor,w
  8891  1377  02AD               	subwf	___awmod@dividend,f
  8892  1378  082C               	movf	___awmod@divisor+1,w
  8893  1379  1C03               	skipc
  8894  137A  03AE               	decf	___awmod@dividend+1,f
  8895  137B  02AE               	subwf	___awmod@dividend+1,f
  8896  137C                     l2295:
  8897  137C  3001               	movlw	1
  8898  137D                     u2385:
  8899  137D  1003               	clrc
  8900  137E  0CAC               	rrf	___awmod@divisor+1,f
  8901  137F  0CAB               	rrf	___awmod@divisor,f
  8902  1380  3EFF               	addlw	-1
  8903  1381  1D03               	skipz
  8904  1382  2B7D               	goto	u2385
  8905  1383                     l2297:
  8906  1383  3001               	movlw	1
  8907  1384  02AF               	subwf	___awmod@counter,f
  8908  1385  1D03               	btfss	3,2
  8909  1386  2B88               	goto	u2391
  8910  1387  2B89               	goto	u2390
  8911  1388                     u2391:
  8912  1388  2B6C               	goto	l2291
  8913  1389                     u2390:
  8914  1389                     l2299:
  8915  1389  0830               	movf	___awmod@sign,w
  8916  138A  1903               	btfsc	3,2
  8917  138B  2B8D               	goto	u2401
  8918  138C  2B8E               	goto	u2400
  8919  138D                     u2401:
  8920  138D  2B93               	goto	l2303
  8921  138E                     u2400:
  8922  138E                     l2301:
  8923  138E  09AD               	comf	___awmod@dividend,f
  8924  138F  09AE               	comf	___awmod@dividend+1,f
  8925  1390  0AAD               	incf	___awmod@dividend,f
  8926  1391  1903               	skipnz
  8927  1392  0AAE               	incf	___awmod@dividend+1,f
  8928  1393                     l2303:
  8929  1393  082E               	movf	___awmod@dividend+1,w
  8930  1394  00AC               	movwf	?___awmod+1
  8931  1395  082D               	movf	___awmod@dividend,w
  8932  1396  00AB               	movwf	?___awmod
  8933  1397                     l801:
  8934  1397  0008               	return
  8935  1398                     __end_of___awmod:
  8936                           
  8937                           	psect	text39
  8938  14C2                     __ptext39:	
  8939 ;; *************** function ___awdiv *****************
  8940 ;; Defined at:
  8941 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\awdiv.c"
  8942 ;; Parameters:    Size  Location     Type
  8943 ;;  divisor         2    3[BANK0 ] int 
  8944 ;;  dividend        2    5[BANK0 ] int 
  8945 ;; Auto vars:     Size  Location     Type
  8946 ;;  quotient        2    9[BANK0 ] int 
  8947 ;;  sign            1    8[BANK0 ] unsigned char 
  8948 ;;  counter         1    7[BANK0 ] unsigned char 
  8949 ;; Return value:  Size  Location     Type
  8950 ;;                  2    3[BANK0 ] int 
  8951 ;; Registers used:
  8952 ;;		wreg, status,2, status,0, btemp+1
  8953 ;; Tracked objects:
  8954 ;;		On entry : 0/0
  8955 ;;		On exit  : 0/0
  8956 ;;		Unchanged: 0/0
  8957 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8958 ;;      Params:         0       4       0       0       0
  8959 ;;      Locals:         0       4       0       0       0
  8960 ;;      Temps:          0       0       0       0       0
  8961 ;;      Totals:         0       8       0       0       0
  8962 ;;Total ram usage:        8 bytes
  8963 ;; Hardware stack levels used:    1
  8964 ;; Hardware stack levels required when called:    3
  8965 ;; This function calls:
  8966 ;;		Nothing
  8967 ;; This function is called by:
  8968 ;;		_HeaterTask_Update
  8969 ;; This function uses a non-reentrant model
  8970 ;;
  8971                           
  8972                           
  8973                           ;psect for function ___awdiv
  8974  14C2                     ___awdiv:
  8975  14C2                     l2225:	
  8976                           ;incstack = 0
  8977                           ; Regs used in ___awdiv: [wreg+status,2+status,0+btemp+1]
  8978                           
  8979  14C2  1283               	bcf	3,5	;RP0=0, select bank0
  8980  14C3  1303               	bcf	3,6	;RP1=0, select bank0
  8981  14C4  01A8               	clrf	___awdiv@sign
  8982  14C5                     l2227:
  8983  14C5  1FA4               	btfss	___awdiv@divisor+1,7
  8984  14C6  2CC8               	goto	u2221
  8985  14C7  2CC9               	goto	u2220
  8986  14C8                     u2221:
  8987  14C8  2CD0               	goto	l2233
  8988  14C9                     u2220:
  8989  14C9                     l2229:
  8990  14C9  09A3               	comf	___awdiv@divisor,f
  8991  14CA  09A4               	comf	___awdiv@divisor+1,f
  8992  14CB  0AA3               	incf	___awdiv@divisor,f
  8993  14CC  1903               	skipnz
  8994  14CD  0AA4               	incf	___awdiv@divisor+1,f
  8995  14CE                     l2231:
  8996  14CE  01A8               	clrf	___awdiv@sign
  8997  14CF  0AA8               	incf	___awdiv@sign,f
  8998  14D0                     l2233:
  8999  14D0  1FA6               	btfss	___awdiv@dividend+1,7
  9000  14D1  2CD3               	goto	u2231
  9001  14D2  2CD4               	goto	u2230
  9002  14D3                     u2231:
  9003  14D3  2CDD               	goto	l2239
  9004  14D4                     u2230:
  9005  14D4                     l2235:
  9006  14D4  09A5               	comf	___awdiv@dividend,f
  9007  14D5  09A6               	comf	___awdiv@dividend+1,f
  9008  14D6  0AA5               	incf	___awdiv@dividend,f
  9009  14D7  1903               	skipnz
  9010  14D8  0AA6               	incf	___awdiv@dividend+1,f
  9011  14D9                     l2237:
  9012  14D9  3001               	movlw	1
  9013  14DA  00FF               	movwf	btemp+1
  9014  14DB  087F               	movf	btemp+1,w
  9015  14DC  06A8               	xorwf	___awdiv@sign,f
  9016  14DD                     l2239:
  9017  14DD  01A9               	clrf	___awdiv@quotient
  9018  14DE  01AA               	clrf	___awdiv@quotient+1
  9019  14DF                     l2241:
  9020  14DF  0823               	movf	___awdiv@divisor,w
  9021  14E0  0424               	iorwf	___awdiv@divisor+1,w
  9022  14E1  1903               	btfsc	3,2
  9023  14E2  2CE4               	goto	u2241
  9024  14E3  2CE5               	goto	u2240
  9025  14E4                     u2241:
  9026  14E4  2D1C               	goto	l2261
  9027  14E5                     u2240:
  9028  14E5                     l2243:
  9029  14E5  01A7               	clrf	___awdiv@counter
  9030  14E6  0AA7               	incf	___awdiv@counter,f
  9031  14E7  2CF3               	goto	l2249
  9032  14E8                     l2245:
  9033  14E8  3001               	movlw	1
  9034  14E9                     u2255:
  9035  14E9  1003               	clrc
  9036  14EA  0DA3               	rlf	___awdiv@divisor,f
  9037  14EB  0DA4               	rlf	___awdiv@divisor+1,f
  9038  14EC  3EFF               	addlw	-1
  9039  14ED  1D03               	skipz
  9040  14EE  2CE9               	goto	u2255
  9041  14EF                     l2247:
  9042  14EF  3001               	movlw	1
  9043  14F0  00FF               	movwf	btemp+1
  9044  14F1  087F               	movf	btemp+1,w
  9045  14F2  07A7               	addwf	___awdiv@counter,f
  9046  14F3                     l2249:
  9047  14F3  1FA4               	btfss	___awdiv@divisor+1,7
  9048  14F4  2CF6               	goto	u2261
  9049  14F5  2CF7               	goto	u2260
  9050  14F6                     u2261:
  9051  14F6  2CE8               	goto	l2245
  9052  14F7                     u2260:
  9053  14F7                     l2251:
  9054  14F7  3001               	movlw	1
  9055  14F8                     u2275:
  9056  14F8  1003               	clrc
  9057  14F9  0DA9               	rlf	___awdiv@quotient,f
  9058  14FA  0DAA               	rlf	___awdiv@quotient+1,f
  9059  14FB  3EFF               	addlw	-1
  9060  14FC  1D03               	skipz
  9061  14FD  2CF8               	goto	u2275
  9062  14FE  0824               	movf	___awdiv@divisor+1,w
  9063  14FF  0226               	subwf	___awdiv@dividend+1,w
  9064  1500  1D03               	skipz
  9065  1501  2D04               	goto	u2285
  9066  1502  0823               	movf	___awdiv@divisor,w
  9067  1503  0225               	subwf	___awdiv@dividend,w
  9068  1504                     u2285:
  9069  1504  1C03               	skipc
  9070  1505  2D07               	goto	u2281
  9071  1506  2D08               	goto	u2280
  9072  1507                     u2281:
  9073  1507  2D0F               	goto	l2257
  9074  1508                     u2280:
  9075  1508                     l2253:
  9076  1508  0823               	movf	___awdiv@divisor,w
  9077  1509  02A5               	subwf	___awdiv@dividend,f
  9078  150A  0824               	movf	___awdiv@divisor+1,w
  9079  150B  1C03               	skipc
  9080  150C  03A6               	decf	___awdiv@dividend+1,f
  9081  150D  02A6               	subwf	___awdiv@dividend+1,f
  9082  150E                     l2255:
  9083  150E  1429               	bsf	___awdiv@quotient,0
  9084  150F                     l2257:
  9085  150F  3001               	movlw	1
  9086  1510                     u2295:
  9087  1510  1003               	clrc
  9088  1511  0CA4               	rrf	___awdiv@divisor+1,f
  9089  1512  0CA3               	rrf	___awdiv@divisor,f
  9090  1513  3EFF               	addlw	-1
  9091  1514  1D03               	skipz
  9092  1515  2D10               	goto	u2295
  9093  1516                     l2259:
  9094  1516  3001               	movlw	1
  9095  1517  02A7               	subwf	___awdiv@counter,f
  9096  1518  1D03               	btfss	3,2
  9097  1519  2D1B               	goto	u2301
  9098  151A  2D1C               	goto	u2300
  9099  151B                     u2301:
  9100  151B  2CF7               	goto	l2251
  9101  151C                     u2300:
  9102  151C                     l2261:
  9103  151C  0828               	movf	___awdiv@sign,w
  9104  151D  1903               	btfsc	3,2
  9105  151E  2D20               	goto	u2311
  9106  151F  2D21               	goto	u2310
  9107  1520                     u2311:
  9108  1520  2D26               	goto	l2265
  9109  1521                     u2310:
  9110  1521                     l2263:
  9111  1521  09A9               	comf	___awdiv@quotient,f
  9112  1522  09AA               	comf	___awdiv@quotient+1,f
  9113  1523  0AA9               	incf	___awdiv@quotient,f
  9114  1524  1903               	skipnz
  9115  1525  0AAA               	incf	___awdiv@quotient+1,f
  9116  1526                     l2265:
  9117  1526  082A               	movf	___awdiv@quotient+1,w
  9118  1527  00A4               	movwf	?___awdiv+1
  9119  1528  0829               	movf	___awdiv@quotient,w
  9120  1529  00A3               	movwf	?___awdiv
  9121  152A                     l788:
  9122  152A  0008               	return
  9123  152B                     __end_of___awdiv:
  9124                           
  9125                           	psect	text40
  9126  1C5F                     __ptext40:	
  9127 ;; *************** function _TempSensorTask_GetAverage *****************
  9128 ;; Defined at:
  9129 ;;		line 26 in file "TempSensorTask.c"
  9130 ;; Parameters:    Size  Location     Type
  9131 ;;  Id              1    wreg     unsigned char 
  9132 ;; Auto vars:     Size  Location     Type
  9133 ;;  Id              1    3[BANK0 ] unsigned char 
  9134 ;; Return value:  Size  Location     Type
  9135 ;;                  1    wreg      unsigned char 
  9136 ;; Registers used:
  9137 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  9138 ;; Tracked objects:
  9139 ;;		On entry : 0/0
  9140 ;;		On exit  : 0/0
  9141 ;;		Unchanged: 0/0
  9142 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9143 ;;      Params:         0       0       0       0       0
  9144 ;;      Locals:         0       1       0       0       0
  9145 ;;      Temps:          0       0       0       0       0
  9146 ;;      Totals:         0       1       0       0       0
  9147 ;;Total ram usage:        1 bytes
  9148 ;; Hardware stack levels used:    1
  9149 ;; Hardware stack levels required when called:    4
  9150 ;; This function calls:
  9151 ;;		___bmul
  9152 ;; This function is called by:
  9153 ;;		_HeaterTask_Update
  9154 ;; This function uses a non-reentrant model
  9155 ;;
  9156                           
  9157                           
  9158                           ;psect for function _TempSensorTask_GetAverage
  9159  1C5F                     _TempSensorTask_GetAverage:
  9160                           
  9161                           ;incstack = 0
  9162                           ; Regs used in _TempSensorTask_GetAverage: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+
      +                          cstack]
  9163                           ;TempSensorTask_GetAverage@Id stored from wreg
  9164  1C5F  1283               	bcf	3,5	;RP0=0, select bank0
  9165  1C60  1303               	bcf	3,6	;RP1=0, select bank0
  9166  1C61  00A3               	movwf	TempSensorTask_GetAverage@Id
  9167  1C62                     l2193:
  9168                           
  9169                           ;TempSensorTask.c: 26: uint8_t TempSensorTask_GetAverage( Id_t Id );TempSensorTask.c: 27
      +                          : {;TempSensorTask.c: 28:     return ( uint8_t ) TempSensorTask[ Id ].AvgTemp;
  9170  1C62  300E               	movlw	14
  9171  1C63  00FF               	movwf	btemp+1
  9172  1C64  087F               	movf	btemp+1,w
  9173  1C65  00A0               	movwf	___bmul@multiplicand
  9174  1C66  0823               	movf	TempSensorTask_GetAverage@Id,w
  9175  1C67  160A  158A  2512  160A  158A  	fcall	___bmul
  9176  1C6C  3EDA               	addlw	(low ((_TempSensorTask| (0+256)+12)))& (0+255)
  9177  1C6D  0084               	movwf	4
  9178  1C6E  1783               	bsf	3,7	;select IRP bank3
  9179  1C6F  0800               	movf	0,w
  9180  1C70                     l407:
  9181  1C70  0008               	return
  9182  1C71                     __end_of_TempSensorTask_GetAverage:
  9183                           
  9184                           	psect	text41
  9185  1C1A                     __ptext41:	
  9186 ;; *************** function _TempControlTask_SetState *****************
  9187 ;; Defined at:
  9188 ;;		line 16 in file "TempControlTask.c"
  9189 ;; Parameters:    Size  Location     Type
  9190 ;;  Id              1    wreg     unsigned char 
  9191 ;;  State           1    0[BANK0 ] unsigned char 
  9192 ;; Auto vars:     Size  Location     Type
  9193 ;;  Id              1    1[BANK0 ] unsigned char 
  9194 ;; Return value:  Size  Location     Type
  9195 ;;                  1    wreg      void 
  9196 ;; Registers used:
  9197 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  9198 ;; Tracked objects:
  9199 ;;		On entry : 0/0
  9200 ;;		On exit  : 0/0
  9201 ;;		Unchanged: 0/0
  9202 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9203 ;;      Params:         0       1       0       0       0
  9204 ;;      Locals:         0       1       0       0       0
  9205 ;;      Temps:          0       0       0       0       0
  9206 ;;      Totals:         0       2       0       0       0
  9207 ;;Total ram usage:        2 bytes
  9208 ;; Hardware stack levels used:    1
  9209 ;; Hardware stack levels required when called:    3
  9210 ;; This function calls:
  9211 ;;		Nothing
  9212 ;; This function is called by:
  9213 ;;		_HeaterTask_Update
  9214 ;; This function uses a non-reentrant model
  9215 ;;
  9216                           
  9217                           
  9218                           ;psect for function _TempControlTask_SetState
  9219  1C1A                     _TempControlTask_SetState:
  9220                           
  9221                           ;incstack = 0
  9222                           ; Regs used in _TempControlTask_SetState: [wreg-fsr0h+status,2+status,0+btemp+1]
  9223                           ;TempControlTask_SetState@Id stored from wreg
  9224  1C1A  1283               	bcf	3,5	;RP0=0, select bank0
  9225  1C1B  1303               	bcf	3,6	;RP1=0, select bank0
  9226  1C1C  00A1               	movwf	TempControlTask_SetState@Id
  9227  1C1D                     l2197:
  9228                           
  9229                           ;TempControlTask.c: 16: void TempControlTask_SetState( Id_t Id, uint8_t State );TempCont
      +                          rolTask.c: 17: {;TempControlTask.c: 18:     TempControlTask[ Id ].State = State;
  9230  1C1D  0820               	movf	TempControlTask_SetState@State,w
  9231  1C1E  00FF               	movwf	btemp+1
  9232  1C1F  0821               	movf	TempControlTask_SetState@Id,w
  9233  1C20  3E55               	addlw	(low (_TempControlTask| 0))& (0+255)
  9234  1C21  0084               	movwf	4
  9235  1C22  087F               	movf	btemp+1,w
  9236  1C23  1383               	bcf	3,7	;select IRP bank0
  9237  1C24  0080               	movwf	0
  9238  1C25                     l440:
  9239  1C25  0008               	return
  9240  1C26                     __end_of_TempControlTask_SetState:
  9241                           
  9242                           	psect	text42
  9243  1E37                     __ptext42:	
  9244 ;; *************** function _SwitchTask_GetState *****************
  9245 ;; Defined at:
  9246 ;;		line 20 in file "SwitchTask.c"
  9247 ;; Parameters:    Size  Location     Type
  9248 ;;  Id              1    wreg     unsigned char 
  9249 ;; Auto vars:     Size  Location     Type
  9250 ;;  Id              1    4[BANK0 ] unsigned char 
  9251 ;;  Buffer          1    3[BANK0 ] unsigned char 
  9252 ;; Return value:  Size  Location     Type
  9253 ;;                  1    wreg      unsigned char 
  9254 ;; Registers used:
  9255 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  9256 ;; Tracked objects:
  9257 ;;		On entry : 0/0
  9258 ;;		On exit  : 0/0
  9259 ;;		Unchanged: 0/0
  9260 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9261 ;;      Params:         0       0       0       0       0
  9262 ;;      Locals:         0       2       0       0       0
  9263 ;;      Temps:          0       0       0       0       0
  9264 ;;      Totals:         0       2       0       0       0
  9265 ;;Total ram usage:        2 bytes
  9266 ;; Hardware stack levels used:    1
  9267 ;; Hardware stack levels required when called:    4
  9268 ;; This function calls:
  9269 ;;		___bmul
  9270 ;; This function is called by:
  9271 ;;		_HeaterTask_Update
  9272 ;; This function uses a non-reentrant model
  9273 ;;
  9274                           
  9275                           
  9276                           ;psect for function _SwitchTask_GetState
  9277  1E37                     _SwitchTask_GetState:
  9278                           
  9279                           ;incstack = 0
  9280                           ; Regs used in _SwitchTask_GetState: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack
      +                          ]
  9281                           ;SwitchTask_GetState@Id stored from wreg
  9282  1E37  1283               	bcf	3,5	;RP0=0, select bank0
  9283  1E38  1303               	bcf	3,6	;RP1=0, select bank0
  9284  1E39  00A4               	movwf	SwitchTask_GetState@Id
  9285  1E3A                     l2187:
  9286                           
  9287                           ;SwitchTask.c: 20: uint8_t SwitchTask_GetState( Id_t Id );SwitchTask.c: 21: {;SwitchTask
      +                          .c: 22:     uint8_t Buffer = SwitchTask[ Id ].State;
  9288  1E3A  3003               	movlw	3
  9289  1E3B  00FF               	movwf	btemp+1
  9290  1E3C  087F               	movf	btemp+1,w
  9291  1E3D  00A0               	movwf	___bmul@multiplicand
  9292  1E3E  0824               	movf	SwitchTask_GetState@Id,w
  9293  1E3F  160A  158A  2512  160A  158A  	fcall	___bmul
  9294  1E44  3ECB               	addlw	(low ((_SwitchTask| 0+2)))& (0+255)
  9295  1E45  0084               	movwf	4
  9296  1E46  1383               	bcf	3,7	;select IRP bank1
  9297  1E47  0800               	movf	0,w
  9298  1E48  00FF               	movwf	btemp+1
  9299  1E49  087F               	movf	btemp+1,w
  9300  1E4A  1283               	bcf	3,5	;RP0=0, select bank0
  9301  1E4B  1303               	bcf	3,6	;RP1=0, select bank0
  9302  1E4C  00A3               	movwf	SwitchTask_GetState@Buffer
  9303                           
  9304                           ;SwitchTask.c: 23:     SwitchTask[ Id ].State = ( 0 );
  9305  1E4D  3003               	movlw	3
  9306  1E4E  00FF               	movwf	btemp+1
  9307  1E4F  087F               	movf	btemp+1,w
  9308  1E50  00A0               	movwf	___bmul@multiplicand
  9309  1E51  0824               	movf	SwitchTask_GetState@Id,w
  9310  1E52  160A  158A  2512  160A  158A  	fcall	___bmul
  9311  1E57  3ECB               	addlw	(low ((_SwitchTask| 0+2)))& (0+255)
  9312  1E58  0084               	movwf	4
  9313  1E59  1383               	bcf	3,7	;select IRP bank1
  9314  1E5A  0180               	clrf	0
  9315  1E5B                     l2189:
  9316                           
  9317                           ;SwitchTask.c: 24:     return Buffer;
  9318  1E5B  1283               	bcf	3,5	;RP0=0, select bank0
  9319  1E5C  1303               	bcf	3,6	;RP1=0, select bank0
  9320  1E5D  0823               	movf	SwitchTask_GetState@Buffer,w
  9321  1E5E                     l359:
  9322  1E5E  0008               	return
  9323  1E5F                     __end_of_SwitchTask_GetState:
  9324                           
  9325                           	psect	text43
  9326  1CD3                     __ptext43:	
  9327 ;; *************** function _SsdTask_SetSymbol *****************
  9328 ;; Defined at:
  9329 ;;		line 32 in file "SsdTask.c"
  9330 ;; Parameters:    Size  Location     Type
  9331 ;;  Id              1    wreg     unsigned char 
  9332 ;;  Symbol          1   17[BANK0 ] unsigned char 
  9333 ;; Auto vars:     Size  Location     Type
  9334 ;;  Id              1   19[BANK0 ] unsigned char 
  9335 ;; Return value:  Size  Location     Type
  9336 ;;                  1    wreg      void 
  9337 ;; Registers used:
  9338 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  9339 ;; Tracked objects:
  9340 ;;		On entry : 0/0
  9341 ;;		On exit  : 0/0
  9342 ;;		Unchanged: 0/0
  9343 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9344 ;;      Params:         0       1       0       0       0
  9345 ;;      Locals:         0       1       0       0       0
  9346 ;;      Temps:          0       1       0       0       0
  9347 ;;      Totals:         0       3       0       0       0
  9348 ;;Total ram usage:        3 bytes
  9349 ;; Hardware stack levels used:    1
  9350 ;; Hardware stack levels required when called:    3
  9351 ;; This function calls:
  9352 ;;		Nothing
  9353 ;; This function is called by:
  9354 ;;		_HeaterTask_Update
  9355 ;; This function uses a non-reentrant model
  9356 ;;
  9357                           
  9358                           
  9359                           ;psect for function _SsdTask_SetSymbol
  9360  1CD3                     _SsdTask_SetSymbol:
  9361                           
  9362                           ;incstack = 0
  9363                           ; Regs used in _SsdTask_SetSymbol: [wreg-fsr0h+status,2+status,0+btemp+1]
  9364                           ;SsdTask_SetSymbol@Id stored from wreg
  9365  1CD3  1283               	bcf	3,5	;RP0=0, select bank0
  9366  1CD4  1303               	bcf	3,6	;RP1=0, select bank0
  9367  1CD5  00B3               	movwf	SsdTask_SetSymbol@Id
  9368  1CD6                     l2203:
  9369                           
  9370                           ;SsdTask.c: 32: void SsdTask_SetSymbol( Id_t Id, uint8_t Symbol );SsdTask.c: 33: {;SsdTa
      +                          sk.c: 34:     SsdTask[ Id ].Symbol = Symbol;
  9371  1CD6  0831               	movf	SsdTask_SetSymbol@Symbol,w
  9372  1CD7  00FF               	movwf	btemp+1
  9373  1CD8  0833               	movf	SsdTask_SetSymbol@Id,w
  9374  1CD9  00B2               	movwf	??_SsdTask_SetSymbol
  9375  1CDA  3002               	movlw	2
  9376  1CDB                     u2135:
  9377  1CDB  1003               	clrc
  9378  1CDC  0DB2               	rlf	??_SsdTask_SetSymbol,f
  9379  1CDD  3EFF               	addlw	-1
  9380  1CDE  1D03               	skipz
  9381  1CDF  2CDB               	goto	u2135
  9382  1CE0  1003               	clrc
  9383  1CE1  0D32               	rlf	??_SsdTask_SetSymbol,w
  9384  1CE2  3EA1               	addlw	(low ((_SsdTask| 0+1)))& (0+255)
  9385  1CE3  0084               	movwf	4
  9386  1CE4  087F               	movf	btemp+1,w
  9387  1CE5  1383               	bcf	3,7	;select IRP bank1
  9388  1CE6  0080               	movwf	0
  9389  1CE7                     l384:
  9390  1CE7  0008               	return
  9391  1CE8                     __end_of_SsdTask_SetSymbol:
  9392                           
  9393                           	psect	text44
  9394  1F91                     __ptext44:	
  9395 ;; *************** function _SsdTask_SetState *****************
  9396 ;; Defined at:
  9397 ;;		line 26 in file "SsdTask.c"
  9398 ;; Parameters:    Size  Location     Type
  9399 ;;  Id              1    wreg     unsigned char 
  9400 ;;  State           1   10[BANK0 ] unsigned char 
  9401 ;;  Period          2   11[BANK0 ] unsigned int 
  9402 ;; Auto vars:     Size  Location     Type
  9403 ;;  Id              1   14[BANK0 ] unsigned char 
  9404 ;; Return value:  Size  Location     Type
  9405 ;;                  1    wreg      void 
  9406 ;; Registers used:
  9407 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  9408 ;; Tracked objects:
  9409 ;;		On entry : 0/0
  9410 ;;		On exit  : 0/0
  9411 ;;		Unchanged: 0/0
  9412 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9413 ;;      Params:         0       3       0       0       0
  9414 ;;      Locals:         0       1       0       0       0
  9415 ;;      Temps:          0       1       0       0       0
  9416 ;;      Totals:         0       5       0       0       0
  9417 ;;Total ram usage:        5 bytes
  9418 ;; Hardware stack levels used:    1
  9419 ;; Hardware stack levels required when called:    4
  9420 ;; This function calls:
  9421 ;;		___lwdiv
  9422 ;; This function is called by:
  9423 ;;		_HeaterTask_Update
  9424 ;; This function uses a non-reentrant model
  9425 ;;
  9426                           
  9427                           
  9428                           ;psect for function _SsdTask_SetState
  9429  1F91                     _SsdTask_SetState:
  9430                           
  9431                           ;incstack = 0
  9432                           ; Regs used in _SsdTask_SetState: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  9433                           ;SsdTask_SetState@Id stored from wreg
  9434  1F91  1283               	bcf	3,5	;RP0=0, select bank0
  9435  1F92  1303               	bcf	3,6	;RP1=0, select bank0
  9436  1F93  00AE               	movwf	SsdTask_SetState@Id
  9437  1F94                     l2199:
  9438                           
  9439                           ;SsdTask.c: 26: void SsdTask_SetState( Id_t Id, uint8_t State, uint16_t Period );SsdTask
      +                          .c: 27: {;SsdTask.c: 28:     SsdTask[ Id ].State = State;
  9440  1F94  082A               	movf	SsdTask_SetState@State,w
  9441  1F95  00FF               	movwf	btemp+1
  9442  1F96  082E               	movf	SsdTask_SetState@Id,w
  9443  1F97  00AD               	movwf	??_SsdTask_SetState
  9444  1F98  3002               	movlw	2
  9445  1F99                     u2115:
  9446  1F99  1003               	clrc
  9447  1F9A  0DAD               	rlf	??_SsdTask_SetState,f
  9448  1F9B  3EFF               	addlw	-1
  9449  1F9C  1D03               	skipz
  9450  1F9D  2F99               	goto	u2115
  9451  1F9E  1003               	clrc
  9452  1F9F  0D2D               	rlf	??_SsdTask_SetState,w
  9453  1FA0  3EA2               	addlw	(low ((_SsdTask| 0+2)))& (0+255)
  9454  1FA1  0084               	movwf	4
  9455  1FA2  087F               	movf	btemp+1,w
  9456  1FA3  1383               	bcf	3,7	;select IRP bank1
  9457  1FA4  0080               	movwf	0
  9458  1FA5                     l2201:
  9459                           
  9460                           ;SsdTask.c: 29:  SsdTask[ Id ].Period = ( Period / ( ( TickType_t ) 5 ) ) / ( 5 / ( ( Ti
      +                          ckType_t ) 5 ) );
  9461  1FA5  3005               	movlw	5
  9462  1FA6  00A3               	movwf	___lwdiv@divisor
  9463  1FA7  3000               	movlw	0
  9464  1FA8  00A4               	movwf	___lwdiv@divisor+1
  9465  1FA9  082C               	movf	SsdTask_SetState@Period+1,w
  9466  1FAA  00A6               	movwf	___lwdiv@dividend+1
  9467  1FAB  082B               	movf	SsdTask_SetState@Period,w
  9468  1FAC  00A5               	movwf	___lwdiv@dividend
  9469  1FAD  160A  118A  20C9  160A  158A  	fcall	___lwdiv
  9470  1FB2  1283               	bcf	3,5	;RP0=0, select bank0
  9471  1FB3  1303               	bcf	3,6	;RP1=0, select bank0
  9472  1FB4  082E               	movf	SsdTask_SetState@Id,w
  9473  1FB5  00AD               	movwf	??_SsdTask_SetState
  9474  1FB6  3002               	movlw	2
  9475  1FB7                     u2125:
  9476  1FB7  1003               	clrc
  9477  1FB8  0DAD               	rlf	??_SsdTask_SetState,f
  9478  1FB9  3EFF               	addlw	-1
  9479  1FBA  1D03               	skipz
  9480  1FBB  2FB7               	goto	u2125
  9481  1FBC  1003               	clrc
  9482  1FBD  0D2D               	rlf	??_SsdTask_SetState,w
  9483  1FBE  3EA4               	addlw	(low ((_SsdTask| 0+4)))& (0+255)
  9484  1FBF  0084               	movwf	4
  9485  1FC0  0823               	movf	?___lwdiv,w
  9486  1FC1  1383               	bcf	3,7	;select IRP bank1
  9487  1FC2  0080               	movwf	0
  9488  1FC3  0A84               	incf	4,f
  9489  1FC4  0824               	movf	?___lwdiv+1,w
  9490  1FC5  0080               	movwf	0
  9491  1FC6                     l381:
  9492  1FC6  0008               	return
  9493  1FC7                     __end_of_SsdTask_SetState:
  9494                           
  9495                           	psect	text45
  9496  11F1                     __ptext45:	
  9497 ;; *************** function _LedTask_SetState *****************
  9498 ;; Defined at:
  9499 ;;		line 22 in file "LedTask.c"
  9500 ;; Parameters:    Size  Location     Type
  9501 ;;  Id              1    wreg     unsigned char 
  9502 ;;  State           1   10[BANK0 ] unsigned char 
  9503 ;;  Period          2   11[BANK0 ] unsigned int 
  9504 ;; Auto vars:     Size  Location     Type
  9505 ;;  Id              1   15[BANK0 ] unsigned char 
  9506 ;; Return value:  Size  Location     Type
  9507 ;;                  1    wreg      void 
  9508 ;; Registers used:
  9509 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  9510 ;; Tracked objects:
  9511 ;;		On entry : 0/0
  9512 ;;		On exit  : 0/0
  9513 ;;		Unchanged: 0/0
  9514 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9515 ;;      Params:         0       3       0       0       0
  9516 ;;      Locals:         0       3       0       0       0
  9517 ;;      Temps:          0       0       0       0       0
  9518 ;;      Totals:         0       6       0       0       0
  9519 ;;Total ram usage:        6 bytes
  9520 ;; Hardware stack levels used:    1
  9521 ;; Hardware stack levels required when called:    4
  9522 ;; This function calls:
  9523 ;;		___bmul
  9524 ;;		___lwdiv
  9525 ;; This function is called by:
  9526 ;;		_Scheduler_displayError
  9527 ;;		_HeaterTask_Update
  9528 ;; This function uses a non-reentrant model
  9529 ;;
  9530                           
  9531                           
  9532                           ;psect for function _LedTask_SetState
  9533  11F1                     _LedTask_SetState:
  9534                           
  9535                           ;incstack = 0
  9536                           ; Regs used in _LedTask_SetState: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  9537                           ;LedTask_SetState@Id stored from wreg
  9538  11F1  1283               	bcf	3,5	;RP0=0, select bank0
  9539  11F2  1303               	bcf	3,6	;RP1=0, select bank0
  9540  11F3  00AF               	movwf	LedTask_SetState@Id
  9541  11F4                     l2029:
  9542                           
  9543                           ;LedTask.c: 22: void LedTask_SetState( Id_t Id, uint8_t State, uint16_t Period );LedTask
      +                          .c: 23: {;LedTask.c: 24:  LedTask[ Id ].State = State;
  9544  11F4  3006               	movlw	6
  9545  11F5  00FF               	movwf	btemp+1
  9546  11F6  087F               	movf	btemp+1,w
  9547  11F7  00A0               	movwf	___bmul@multiplicand
  9548  11F8  082F               	movf	LedTask_SetState@Id,w
  9549  11F9  160A  158A  2512  160A  118A  	fcall	___bmul
  9550  11FE  3EBD               	addlw	(low (_LedTask| 0))& (0+255)
  9551  11FF  0084               	movwf	4
  9552  1200  1283               	bcf	3,5	;RP0=0, select bank0
  9553  1201  1303               	bcf	3,6	;RP1=0, select bank0
  9554  1202  082A               	movf	LedTask_SetState@State,w
  9555  1203  00FF               	movwf	btemp+1
  9556  1204  087F               	movf	btemp+1,w
  9557  1205  1383               	bcf	3,7	;select IRP bank1
  9558  1206  0080               	movwf	0
  9559  1207                     l2031:
  9560                           
  9561                           ;LedTask.c: 25:  LedTask[ Id ].Period = ( Period / ( ( TickType_t ) 5 ) ) / ( 100 / ( ( 
      +                          TickType_t ) 5 ) );
  9562  1207  3005               	movlw	5
  9563  1208  00A3               	movwf	___lwdiv@divisor
  9564  1209  3000               	movlw	0
  9565  120A  00A4               	movwf	___lwdiv@divisor+1
  9566  120B  082C               	movf	LedTask_SetState@Period+1,w
  9567  120C  00A6               	movwf	___lwdiv@dividend+1
  9568  120D  082B               	movf	LedTask_SetState@Period,w
  9569  120E  00A5               	movwf	___lwdiv@dividend
  9570  120F  160A  118A  20C9  160A  118A  	fcall	___lwdiv
  9571  1214  1283               	bcf	3,5	;RP0=0, select bank0
  9572  1215  1303               	bcf	3,6	;RP1=0, select bank0
  9573  1216  0824               	movf	?___lwdiv+1,w
  9574  1217  00AE               	movwf	_LedTask_SetState$1398+1
  9575  1218  0823               	movf	?___lwdiv,w
  9576  1219  00AD               	movwf	_LedTask_SetState$1398
  9577  121A                     l2033:
  9578                           
  9579                           ;LedTask.c: 25:  LedTask[ Id ].Period = ( Period / ( ( TickType_t ) 5 ) ) / ( 100 / ( ( 
      +                          TickType_t ) 5 ) );
  9580  121A  3006               	movlw	6
  9581  121B  00FF               	movwf	btemp+1
  9582  121C  087F               	movf	btemp+1,w
  9583  121D  00A0               	movwf	___bmul@multiplicand
  9584  121E  082F               	movf	LedTask_SetState@Id,w
  9585  121F  160A  158A  2512  160A  118A  	fcall	___bmul
  9586  1224  3EBF               	addlw	(low ((_LedTask| 0+2)))& (0+255)
  9587  1225  0084               	movwf	4
  9588  1226  3014               	movlw	20
  9589  1227  1283               	bcf	3,5	;RP0=0, select bank0
  9590  1228  1303               	bcf	3,6	;RP1=0, select bank0
  9591  1229  00A3               	movwf	___lwdiv@divisor
  9592  122A  3000               	movlw	0
  9593  122B  00A4               	movwf	___lwdiv@divisor+1
  9594  122C  082E               	movf	_LedTask_SetState$1398+1,w
  9595  122D  00A6               	movwf	___lwdiv@dividend+1
  9596  122E  082D               	movf	_LedTask_SetState$1398,w
  9597  122F  00A5               	movwf	___lwdiv@dividend
  9598  1230  160A  118A  20C9  160A  118A  	fcall	___lwdiv
  9599  1235  1283               	bcf	3,5	;RP0=0, select bank0
  9600  1236  1303               	bcf	3,6	;RP1=0, select bank0
  9601  1237  0823               	movf	?___lwdiv,w
  9602  1238  1383               	bcf	3,7	;select IRP bank1
  9603  1239  0080               	movwf	0
  9604  123A  0A84               	incf	4,f
  9605  123B  0824               	movf	?___lwdiv+1,w
  9606  123C  0080               	movwf	0
  9607  123D                     l467:
  9608  123D  0008               	return
  9609  123E                     __end_of_LedTask_SetState:
  9610                           
  9611                           	psect	text46
  9612  10C9                     __ptext46:	
  9613 ;; *************** function ___lwdiv *****************
  9614 ;; Defined at:
  9615 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\lwdiv.c"
  9616 ;; Parameters:    Size  Location     Type
  9617 ;;  divisor         2    3[BANK0 ] unsigned int 
  9618 ;;  dividend        2    5[BANK0 ] unsigned int 
  9619 ;; Auto vars:     Size  Location     Type
  9620 ;;  quotient        2    7[BANK0 ] unsigned int 
  9621 ;;  counter         1    9[BANK0 ] unsigned char 
  9622 ;; Return value:  Size  Location     Type
  9623 ;;                  2    3[BANK0 ] unsigned int 
  9624 ;; Registers used:
  9625 ;;		wreg, status,2, status,0, btemp+1
  9626 ;; Tracked objects:
  9627 ;;		On entry : 0/0
  9628 ;;		On exit  : 0/0
  9629 ;;		Unchanged: 0/0
  9630 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9631 ;;      Params:         0       4       0       0       0
  9632 ;;      Locals:         0       3       0       0       0
  9633 ;;      Temps:          0       0       0       0       0
  9634 ;;      Totals:         0       7       0       0       0
  9635 ;;Total ram usage:        7 bytes
  9636 ;; Hardware stack levels used:    1
  9637 ;; Hardware stack levels required when called:    3
  9638 ;; This function calls:
  9639 ;;		Nothing
  9640 ;; This function is called by:
  9641 ;;		_SsdTask_SetState
  9642 ;;		_TempSensorTask_Update
  9643 ;;		_LedTask_SetState
  9644 ;; This function uses a non-reentrant model
  9645 ;;
  9646                           
  9647                           
  9648                           ;psect for function ___lwdiv
  9649  10C9                     ___lwdiv:
  9650  10C9                     l2003:	
  9651                           ;incstack = 0
  9652                           ; Regs used in ___lwdiv: [wreg+status,2+status,0+btemp+1]
  9653                           
  9654  10C9  1283               	bcf	3,5	;RP0=0, select bank0
  9655  10CA  1303               	bcf	3,6	;RP1=0, select bank0
  9656  10CB  01A7               	clrf	___lwdiv@quotient
  9657  10CC  01A8               	clrf	___lwdiv@quotient+1
  9658  10CD                     l2005:
  9659  10CD  0823               	movf	___lwdiv@divisor,w
  9660  10CE  0424               	iorwf	___lwdiv@divisor+1,w
  9661  10CF  1903               	btfsc	3,2
  9662  10D0  28D2               	goto	u1731
  9663  10D1  28D3               	goto	u1730
  9664  10D2                     u1731:
  9665  10D2  290A               	goto	l2025
  9666  10D3                     u1730:
  9667  10D3                     l2007:
  9668  10D3  01A9               	clrf	___lwdiv@counter
  9669  10D4  0AA9               	incf	___lwdiv@counter,f
  9670  10D5  28E1               	goto	l2013
  9671  10D6                     l2009:
  9672  10D6  3001               	movlw	1
  9673  10D7                     u1745:
  9674  10D7  1003               	clrc
  9675  10D8  0DA3               	rlf	___lwdiv@divisor,f
  9676  10D9  0DA4               	rlf	___lwdiv@divisor+1,f
  9677  10DA  3EFF               	addlw	-1
  9678  10DB  1D03               	skipz
  9679  10DC  28D7               	goto	u1745
  9680  10DD                     l2011:
  9681  10DD  3001               	movlw	1
  9682  10DE  00FF               	movwf	btemp+1
  9683  10DF  087F               	movf	btemp+1,w
  9684  10E0  07A9               	addwf	___lwdiv@counter,f
  9685  10E1                     l2013:
  9686  10E1  1FA4               	btfss	___lwdiv@divisor+1,7
  9687  10E2  28E4               	goto	u1751
  9688  10E3  28E5               	goto	u1750
  9689  10E4                     u1751:
  9690  10E4  28D6               	goto	l2009
  9691  10E5                     u1750:
  9692  10E5                     l2015:
  9693  10E5  3001               	movlw	1
  9694  10E6                     u1765:
  9695  10E6  1003               	clrc
  9696  10E7  0DA7               	rlf	___lwdiv@quotient,f
  9697  10E8  0DA8               	rlf	___lwdiv@quotient+1,f
  9698  10E9  3EFF               	addlw	-1
  9699  10EA  1D03               	skipz
  9700  10EB  28E6               	goto	u1765
  9701  10EC  0824               	movf	___lwdiv@divisor+1,w
  9702  10ED  0226               	subwf	___lwdiv@dividend+1,w
  9703  10EE  1D03               	skipz
  9704  10EF  28F2               	goto	u1775
  9705  10F0  0823               	movf	___lwdiv@divisor,w
  9706  10F1  0225               	subwf	___lwdiv@dividend,w
  9707  10F2                     u1775:
  9708  10F2  1C03               	skipc
  9709  10F3  28F5               	goto	u1771
  9710  10F4  28F6               	goto	u1770
  9711  10F5                     u1771:
  9712  10F5  28FD               	goto	l2021
  9713  10F6                     u1770:
  9714  10F6                     l2017:
  9715  10F6  0823               	movf	___lwdiv@divisor,w
  9716  10F7  02A5               	subwf	___lwdiv@dividend,f
  9717  10F8  0824               	movf	___lwdiv@divisor+1,w
  9718  10F9  1C03               	skipc
  9719  10FA  03A6               	decf	___lwdiv@dividend+1,f
  9720  10FB  02A6               	subwf	___lwdiv@dividend+1,f
  9721  10FC                     l2019:
  9722  10FC  1427               	bsf	___lwdiv@quotient,0
  9723  10FD                     l2021:
  9724  10FD  3001               	movlw	1
  9725  10FE                     u1785:
  9726  10FE  1003               	clrc
  9727  10FF  0CA4               	rrf	___lwdiv@divisor+1,f
  9728  1100  0CA3               	rrf	___lwdiv@divisor,f
  9729  1101  3EFF               	addlw	-1
  9730  1102  1D03               	skipz
  9731  1103  28FE               	goto	u1785
  9732  1104                     l2023:
  9733  1104  3001               	movlw	1
  9734  1105  02A9               	subwf	___lwdiv@counter,f
  9735  1106  1D03               	btfss	3,2
  9736  1107  2909               	goto	u1791
  9737  1108  290A               	goto	u1790
  9738  1109                     u1791:
  9739  1109  28E5               	goto	l2015
  9740  110A                     u1790:
  9741  110A                     l2025:
  9742  110A  0828               	movf	___lwdiv@quotient+1,w
  9743  110B  00A4               	movwf	?___lwdiv+1
  9744  110C  0827               	movf	___lwdiv@quotient,w
  9745  110D  00A3               	movwf	?___lwdiv
  9746  110E                     l907:
  9747  110E  0008               	return
  9748  110F                     __end_of___lwdiv:
  9749                           
  9750                           	psect	text47
  9751  0841                     __ptext47:	
  9752 ;; *************** function _Scheduler_addTask *****************
  9753 ;; Defined at:
  9754 ;;		line 32 in file "Scheduler.c"
  9755 ;; Parameters:    Size  Location     Type
  9756 ;;  task            1    wreg     PTR FTN(PTR void ,)void 
  9757 ;;		 -> SsdTask_Update(1), LedTask_Update(1), TempControlTask_Update(1), HeaterTask_Update(1), 
  9758 ;;		 -> TempSensorTask_Update(1), SwitchTask_Update(1), 
  9759 ;;  paramter        2    3[BANK0 ] PTR void 
  9760 ;;		 -> RAM(512), RAM(512), NULL(0), 
  9761 ;;  delay           1    5[BANK0 ] unsigned char 
  9762 ;;  period          1    6[BANK0 ] unsigned char 
  9763 ;; Auto vars:     Size  Location     Type
  9764 ;;  task            1    7[BANK0 ] PTR FTN(PTR void ,)void 
  9765 ;;		 -> SsdTask_Update(1), LedTask_Update(1), TempControlTask_Update(1), HeaterTask_Update(1), 
  9766 ;;		 -> TempSensorTask_Update(1), SwitchTask_Update(1), 
  9767 ;;  index           2    8[BANK0 ] unsigned int 
  9768 ;; Return value:  Size  Location     Type
  9769 ;;                  1    wreg      unsigned char 
  9770 ;; Registers used:
  9771 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  9772 ;; Tracked objects:
  9773 ;;		On entry : 0/0
  9774 ;;		On exit  : 0/0
  9775 ;;		Unchanged: 0/0
  9776 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9777 ;;      Params:         0       4       0       0       0
  9778 ;;      Locals:         0       3       0       0       0
  9779 ;;      Temps:          0       0       0       0       0
  9780 ;;      Totals:         0       7       0       0       0
  9781 ;;Total ram usage:        7 bytes
  9782 ;; Hardware stack levels used:    1
  9783 ;; Hardware stack levels required when called:    4
  9784 ;; This function calls:
  9785 ;;		___bmul
  9786 ;; This function is called by:
  9787 ;;		_main
  9788 ;; This function uses a non-reentrant model
  9789 ;;
  9790                           
  9791                           
  9792                           ;psect for function _Scheduler_addTask
  9793  0841                     _Scheduler_addTask:
  9794                           
  9795                           ;incstack = 0
  9796                           ; Regs used in _Scheduler_addTask: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  9797                           ;Scheduler_addTask@task stored from wreg
  9798  0841  1283               	bcf	3,5	;RP0=0, select bank0
  9799  0842  1303               	bcf	3,6	;RP1=0, select bank0
  9800  0843  00A7               	movwf	Scheduler_addTask@task
  9801  0844                     l2725:
  9802                           
  9803                           ;Scheduler.c: 32: UBaseType_t Scheduler_addTask( void (*task)( void *paramter ), void *p
      +                          aramter, UBaseType_t delay, UBaseType_t period );Scheduler.c: 33: {;Scheduler.c: 34:  si
      +                          ze_t index = 0;
  9804  0844  01A8               	clrf	Scheduler_addTask@index
  9805  0845  01A9               	clrf	Scheduler_addTask@index+1
  9806                           
  9807                           ;Scheduler.c: 35:  for( index = 0; index < ( ( UBaseType_t ) 10 ); index++ )
  9808  0846  01A8               	clrf	Scheduler_addTask@index
  9809  0847  01A9               	clrf	Scheduler_addTask@index+1
  9810  0848                     l2731:
  9811                           
  9812                           ;Scheduler.c: 36:  {;Scheduler.c: 37:   if( scheduler.task[ index ].pointer == 0 )
  9813  0848  3006               	movlw	6
  9814  0849  00FF               	movwf	btemp+1
  9815  084A  087F               	movf	btemp+1,w
  9816  084B  00A0               	movwf	___bmul@multiplicand
  9817  084C  0828               	movf	Scheduler_addTask@index,w
  9818  084D  160A  158A  2512  120A  158A  	fcall	___bmul
  9819  0852  3E90               	addlw	(low (_scheduler| (0+256)))& (0+255)
  9820  0853  0084               	movwf	4
  9821  0854  1783               	bsf	3,7	;select IRP bank3
  9822  0855  0800               	movf	0,w
  9823  0856  1D03               	btfss	3,2
  9824  0857  2859               	goto	u3311
  9825  0858  285A               	goto	u3310
  9826  0859                     u3311:
  9827  0859  285B               	goto	l2735
  9828  085A                     u3310:
  9829  085A  286C               	goto	l2737
  9830  085B                     l2735:
  9831                           
  9832                           ;Scheduler.c: 41:  }
  9833  085B  3001               	movlw	1
  9834  085C  1283               	bcf	3,5	;RP0=0, select bank0
  9835  085D  1303               	bcf	3,6	;RP1=0, select bank0
  9836  085E  07A8               	addwf	Scheduler_addTask@index,f
  9837  085F  1803               	skipnc
  9838  0860  0AA9               	incf	Scheduler_addTask@index+1,f
  9839  0861  3000               	movlw	0
  9840  0862  07A9               	addwf	Scheduler_addTask@index+1,f
  9841  0863  3000               	movlw	0
  9842  0864  0229               	subwf	Scheduler_addTask@index+1,w
  9843  0865  300A               	movlw	10
  9844  0866  1903               	skipnz
  9845  0867  0228               	subwf	Scheduler_addTask@index,w
  9846  0868  1C03               	skipc
  9847  0869  286B               	goto	u3321
  9848  086A  286C               	goto	u3320
  9849  086B                     u3321:
  9850  086B  2848               	goto	l2731
  9851  086C                     u3320:
  9852  086C                     l2737:
  9853                           
  9854                           ;Scheduler.c: 42:  if( index == ( ( UBaseType_t ) 10 ) )
  9855  086C  300A               	movlw	10
  9856  086D  1283               	bcf	3,5	;RP0=0, select bank0
  9857  086E  1303               	bcf	3,6	;RP1=0, select bank0
  9858  086F  0628               	xorwf	Scheduler_addTask@index,w
  9859  0870  0429               	iorwf	Scheduler_addTask@index+1,w
  9860  0871  1D03               	btfss	3,2
  9861  0872  2874               	goto	u3331
  9862  0873  2875               	goto	u3330
  9863  0874                     u3331:
  9864  0874  2876               	goto	l2741
  9865  0875                     u3330:
  9866  0875  28D1               	goto	l113
  9867  0876                     l2741:
  9868                           
  9869                           ;Scheduler.c: 46:  scheduler.task[ index ].pointer = task;
  9870  0876  3006               	movlw	6
  9871  0877  00FF               	movwf	btemp+1
  9872  0878  087F               	movf	btemp+1,w
  9873  0879  00A0               	movwf	___bmul@multiplicand
  9874  087A  0828               	movf	Scheduler_addTask@index,w
  9875  087B  160A  158A  2512  120A  158A  	fcall	___bmul
  9876  0880  3E90               	addlw	(low (_scheduler| (0+256)))& (0+255)
  9877  0881  0084               	movwf	4
  9878  0882  1283               	bcf	3,5	;RP0=0, select bank0
  9879  0883  1303               	bcf	3,6	;RP1=0, select bank0
  9880  0884  0827               	movf	Scheduler_addTask@task,w
  9881  0885  00FF               	movwf	btemp+1
  9882  0886  087F               	movf	btemp+1,w
  9883  0887  1783               	bsf	3,7	;select IRP bank3
  9884  0888  0080               	movwf	0
  9885                           
  9886                           ;Scheduler.c: 47:  scheduler.task[ index ].paramter = paramter;
  9887  0889  3006               	movlw	6
  9888  088A  00FF               	movwf	btemp+1
  9889  088B  087F               	movf	btemp+1,w
  9890  088C  00A0               	movwf	___bmul@multiplicand
  9891  088D  0828               	movf	Scheduler_addTask@index,w
  9892  088E  160A  158A  2512  120A  158A  	fcall	___bmul
  9893  0893  3E91               	addlw	(low ((_scheduler| (0+256)+1)))& (0+255)
  9894  0894  0084               	movwf	4
  9895  0895  1283               	bcf	3,5	;RP0=0, select bank0
  9896  0896  1303               	bcf	3,6	;RP1=0, select bank0
  9897  0897  0823               	movf	Scheduler_addTask@paramter,w
  9898  0898  1783               	bsf	3,7	;select IRP bank3
  9899  0899  0080               	movwf	0
  9900  089A  0A84               	incf	4,f
  9901  089B  0824               	movf	Scheduler_addTask@paramter+1,w
  9902  089C  0080               	movwf	0
  9903                           
  9904                           ;Scheduler.c: 48:  scheduler.task[ index ].delay = delay;
  9905  089D  3006               	movlw	6
  9906  089E  00FF               	movwf	btemp+1
  9907  089F  087F               	movf	btemp+1,w
  9908  08A0  00A0               	movwf	___bmul@multiplicand
  9909  08A1  0828               	movf	Scheduler_addTask@index,w
  9910  08A2  160A  158A  2512  120A  158A  	fcall	___bmul
  9911  08A7  3E93               	addlw	(low ((_scheduler| (0+256)+3)))& (0+255)
  9912  08A8  0084               	movwf	4
  9913  08A9  1283               	bcf	3,5	;RP0=0, select bank0
  9914  08AA  1303               	bcf	3,6	;RP1=0, select bank0
  9915  08AB  0825               	movf	Scheduler_addTask@delay,w
  9916  08AC  00FF               	movwf	btemp+1
  9917  08AD  087F               	movf	btemp+1,w
  9918  08AE  1783               	bsf	3,7	;select IRP bank3
  9919  08AF  0080               	movwf	0
  9920                           
  9921                           ;Scheduler.c: 49:  scheduler.task[ index ].period = period;
  9922  08B0  3006               	movlw	6
  9923  08B1  00FF               	movwf	btemp+1
  9924  08B2  087F               	movf	btemp+1,w
  9925  08B3  00A0               	movwf	___bmul@multiplicand
  9926  08B4  0828               	movf	Scheduler_addTask@index,w
  9927  08B5  160A  158A  2512  120A  158A  	fcall	___bmul
  9928  08BA  3E94               	addlw	(low ((_scheduler| (0+256)+4)))& (0+255)
  9929  08BB  0084               	movwf	4
  9930  08BC  1283               	bcf	3,5	;RP0=0, select bank0
  9931  08BD  1303               	bcf	3,6	;RP1=0, select bank0
  9932  08BE  0826               	movf	Scheduler_addTask@period,w
  9933  08BF  00FF               	movwf	btemp+1
  9934  08C0  087F               	movf	btemp+1,w
  9935  08C1  1783               	bsf	3,7	;select IRP bank3
  9936  08C2  0080               	movwf	0
  9937                           
  9938                           ;Scheduler.c: 50:  scheduler.task[ index ].runMe = 0;
  9939  08C3  3006               	movlw	6
  9940  08C4  00FF               	movwf	btemp+1
  9941  08C5  087F               	movf	btemp+1,w
  9942  08C6  00A0               	movwf	___bmul@multiplicand
  9943  08C7  0828               	movf	Scheduler_addTask@index,w
  9944  08C8  160A  158A  2512  120A  158A  	fcall	___bmul
  9945  08CD  3E95               	addlw	(low ((_scheduler| (0+256)+5)))& (0+255)
  9946  08CE  0084               	movwf	4
  9947  08CF  1783               	bsf	3,7	;select IRP bank3
  9948  08D0  0180               	clrf	0
  9949  08D1                     l113:
  9950  08D1  0008               	return
  9951  08D2                     __end_of_Scheduler_addTask:
  9952                           
  9953                           	psect	text48
  9954  128E                     __ptext48:	
  9955 ;; *************** function _LedTask_Init *****************
  9956 ;; Defined at:
  9957 ;;		line 13 in file "LedTask.c"
  9958 ;; Parameters:    Size  Location     Type
  9959 ;;  Id              1    wreg     unsigned char 
  9960 ;;  GpioId          1   21[BANK0 ] unsigned char 
  9961 ;;  Pin             1   22[BANK0 ] unsigned char 
  9962 ;; Auto vars:     Size  Location     Type
  9963 ;;  Id              1   23[BANK0 ] unsigned char 
  9964 ;; Return value:  Size  Location     Type
  9965 ;;                  1    wreg      void 
  9966 ;; Registers used:
  9967 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  9968 ;; Tracked objects:
  9969 ;;		On entry : 0/0
  9970 ;;		On exit  : 0/0
  9971 ;;		Unchanged: 0/0
  9972 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9973 ;;      Params:         0       2       0       0       0
  9974 ;;      Locals:         0       1       0       0       0
  9975 ;;      Temps:          0       0       0       0       0
  9976 ;;      Totals:         0       3       0       0       0
  9977 ;;Total ram usage:        3 bytes
  9978 ;; Hardware stack levels used:    1
  9979 ;; Hardware stack levels required when called:    5
  9980 ;; This function calls:
  9981 ;;		_Led_Init
  9982 ;;		___bmul
  9983 ;; This function is called by:
  9984 ;;		_main
  9985 ;; This function uses a non-reentrant model
  9986 ;;
  9987                           
  9988                           
  9989                           ;psect for function _LedTask_Init
  9990  128E                     _LedTask_Init:
  9991                           
  9992                           ;incstack = 0
  9993                           ; Regs used in _LedTask_Init: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  9994                           ;LedTask_Init@Id stored from wreg
  9995  128E  1283               	bcf	3,5	;RP0=0, select bank0
  9996  128F  1303               	bcf	3,6	;RP1=0, select bank0
  9997  1290  00B7               	movwf	LedTask_Init@Id
  9998  1291                     l2625:
  9999                           
 10000                           ;LedTask.c: 13: void LedTask_Init( Id_t Id, Id_t GpioId, uint8_t Pin );LedTask.c: 14: {;
      +                          LedTask.c: 15:     LedTask[ Id ].State = ( 0 );
 10001  1291  3006               	movlw	6
 10002  1292  00FF               	movwf	btemp+1
 10003  1293  087F               	movf	btemp+1,w
 10004  1294  00A0               	movwf	___bmul@multiplicand
 10005  1295  0837               	movf	LedTask_Init@Id,w
 10006  1296  160A  158A  2512  160A  118A  	fcall	___bmul
 10007  129B  3EBD               	addlw	(low (_LedTask| 0))& (0+255)
 10008  129C  0084               	movwf	4
 10009  129D  1383               	bcf	3,7	;select IRP bank1
 10010  129E  0180               	clrf	0
 10011                           
 10012                           ;LedTask.c: 16:     LedTask[ Id ].Blink = 0;
 10013  129F  3006               	movlw	6
 10014  12A0  00FF               	movwf	btemp+1
 10015  12A1  087F               	movf	btemp+1,w
 10016  12A2  1283               	bcf	3,5	;RP0=0, select bank0
 10017  12A3  1303               	bcf	3,6	;RP1=0, select bank0
 10018  12A4  00A0               	movwf	___bmul@multiplicand
 10019  12A5  0837               	movf	LedTask_Init@Id,w
 10020  12A6  160A  158A  2512  160A  118A  	fcall	___bmul
 10021  12AB  3EBE               	addlw	(low ((_LedTask| 0+1)))& (0+255)
 10022  12AC  0084               	movwf	4
 10023  12AD  1383               	bcf	3,7	;select IRP bank1
 10024  12AE  0180               	clrf	0
 10025                           
 10026                           ;LedTask.c: 17:     LedTask[ Id ].Period = 0;
 10027  12AF  3006               	movlw	6
 10028  12B0  00FF               	movwf	btemp+1
 10029  12B1  087F               	movf	btemp+1,w
 10030  12B2  1283               	bcf	3,5	;RP0=0, select bank0
 10031  12B3  1303               	bcf	3,6	;RP1=0, select bank0
 10032  12B4  00A0               	movwf	___bmul@multiplicand
 10033  12B5  0837               	movf	LedTask_Init@Id,w
 10034  12B6  160A  158A  2512  160A  118A  	fcall	___bmul
 10035  12BB  3EBF               	addlw	(low ((_LedTask| 0+2)))& (0+255)
 10036  12BC  0084               	movwf	4
 10037  12BD  1383               	bcf	3,7	;select IRP bank1
 10038  12BE  0180               	clrf	0
 10039  12BF  0A84               	incf	4,f
 10040  12C0  0180               	clrf	0
 10041                           
 10042                           ;LedTask.c: 18:     LedTask[ Id ].Delay = 0;
 10043  12C1  3006               	movlw	6
 10044  12C2  00FF               	movwf	btemp+1
 10045  12C3  087F               	movf	btemp+1,w
 10046  12C4  1283               	bcf	3,5	;RP0=0, select bank0
 10047  12C5  1303               	bcf	3,6	;RP1=0, select bank0
 10048  12C6  00A0               	movwf	___bmul@multiplicand
 10049  12C7  0837               	movf	LedTask_Init@Id,w
 10050  12C8  160A  158A  2512  160A  118A  	fcall	___bmul
 10051  12CD  3EC1               	addlw	(low ((_LedTask| 0+4)))& (0+255)
 10052  12CE  0084               	movwf	4
 10053  12CF  1383               	bcf	3,7	;select IRP bank1
 10054  12D0  0180               	clrf	0
 10055  12D1  0A84               	incf	4,f
 10056  12D2  0180               	clrf	0
 10057                           
 10058                           ;LedTask.c: 19:  Led_Init( Id, GpioId, Pin );
 10059  12D3  1283               	bcf	3,5	;RP0=0, select bank0
 10060  12D4  1303               	bcf	3,6	;RP1=0, select bank0
 10061  12D5  0835               	movf	LedTask_Init@GpioId,w
 10062  12D6  00FF               	movwf	btemp+1
 10063  12D7  087F               	movf	btemp+1,w
 10064  12D8  00B2               	movwf	Led_Init@GpioId
 10065  12D9  0836               	movf	LedTask_Init@Pin,w
 10066  12DA  00FF               	movwf	btemp+1
 10067  12DB  087F               	movf	btemp+1,w
 10068  12DC  00B3               	movwf	Led_Init@Pin
 10069  12DD  0837               	movf	LedTask_Init@Id,w
 10070  12DE  160A  118A  23F9  160A  118A  	fcall	_Led_Init
 10071  12E3                     l464:
 10072  12E3  0008               	return
 10073  12E4                     __end_of_LedTask_Init:
 10074                           
 10075                           	psect	text49
 10076  13F9                     __ptext49:	
 10077 ;; *************** function _Led_Init *****************
 10078 ;; Defined at:
 10079 ;;		line 12 in file "Led.c"
 10080 ;; Parameters:    Size  Location     Type
 10081 ;;  Id              1    wreg     unsigned char 
 10082 ;;  GpioId          1   18[BANK0 ] unsigned char 
 10083 ;;  Pin             1   19[BANK0 ] unsigned char 
 10084 ;; Auto vars:     Size  Location     Type
 10085 ;;  Id              1   20[BANK0 ] unsigned char 
 10086 ;; Return value:  Size  Location     Type
 10087 ;;                  1    wreg      void 
 10088 ;; Registers used:
 10089 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 10090 ;; Tracked objects:
 10091 ;;		On entry : 0/0
 10092 ;;		On exit  : 0/0
 10093 ;;		Unchanged: 0/0
 10094 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10095 ;;      Params:         0       2       0       0       0
 10096 ;;      Locals:         0       1       0       0       0
 10097 ;;      Temps:          0       0       0       0       0
 10098 ;;      Totals:         0       3       0       0       0
 10099 ;;Total ram usage:        3 bytes
 10100 ;; Hardware stack levels used:    1
 10101 ;; Hardware stack levels required when called:    4
 10102 ;; This function calls:
 10103 ;;		_Gpio_InitPin
 10104 ;;		___bmul
 10105 ;; This function is called by:
 10106 ;;		_LedTask_Init
 10107 ;; This function uses a non-reentrant model
 10108 ;;
 10109                           
 10110                           
 10111                           ;psect for function _Led_Init
 10112  13F9                     _Led_Init:
 10113                           
 10114                           ;incstack = 0
 10115                           ; Regs used in _Led_Init: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
 10116                           ;Led_Init@Id stored from wreg
 10117  13F9  1283               	bcf	3,5	;RP0=0, select bank0
 10118  13FA  1303               	bcf	3,6	;RP1=0, select bank0
 10119  13FB  00B4               	movwf	Led_Init@Id
 10120  13FC                     l2341:
 10121                           
 10122                           ;Led.c: 12: void Led_Init( Id_t Id, Id_t GpioId, uint8_t Pin );Led.c: 13: {;Led.c: 14:  
      +                          Led[ Id ].GpioId = GpioId;
 10123  13FC  3003               	movlw	3
 10124  13FD  00FF               	movwf	btemp+1
 10125  13FE  087F               	movf	btemp+1,w
 10126  13FF  00A0               	movwf	___bmul@multiplicand
 10127  1400  0834               	movf	Led_Init@Id,w
 10128  1401  160A  158A  2512  160A  118A  	fcall	___bmul
 10129  1406  3ED8               	addlw	(low (_Led| 0))& (0+255)
 10130  1407  0084               	movwf	4
 10131  1408  1283               	bcf	3,5	;RP0=0, select bank0
 10132  1409  1303               	bcf	3,6	;RP1=0, select bank0
 10133  140A  0832               	movf	Led_Init@GpioId,w
 10134  140B  00FF               	movwf	btemp+1
 10135  140C  087F               	movf	btemp+1,w
 10136  140D  1383               	bcf	3,7	;select IRP bank1
 10137  140E  0080               	movwf	0
 10138                           
 10139                           ;Led.c: 15:  Led[ Id ].Pin = Pin;
 10140  140F  3003               	movlw	3
 10141  1410  00FF               	movwf	btemp+1
 10142  1411  087F               	movf	btemp+1,w
 10143  1412  00A0               	movwf	___bmul@multiplicand
 10144  1413  0834               	movf	Led_Init@Id,w
 10145  1414  160A  158A  2512  160A  118A  	fcall	___bmul
 10146  1419  3ED9               	addlw	(low ((_Led| 0+1)))& (0+255)
 10147  141A  0084               	movwf	4
 10148  141B  1283               	bcf	3,5	;RP0=0, select bank0
 10149  141C  1303               	bcf	3,6	;RP1=0, select bank0
 10150  141D  0833               	movf	Led_Init@Pin,w
 10151  141E  00FF               	movwf	btemp+1
 10152  141F  087F               	movf	btemp+1,w
 10153  1420  1383               	bcf	3,7	;select IRP bank1
 10154  1421  0080               	movwf	0
 10155                           
 10156                           ;Led.c: 16:     Led[ Id ].State = ( 0 );
 10157  1422  3003               	movlw	3
 10158  1423  00FF               	movwf	btemp+1
 10159  1424  087F               	movf	btemp+1,w
 10160  1425  00A0               	movwf	___bmul@multiplicand
 10161  1426  0834               	movf	Led_Init@Id,w
 10162  1427  160A  158A  2512  160A  118A  	fcall	___bmul
 10163  142C  3EDA               	addlw	(low ((_Led| 0+2)))& (0+255)
 10164  142D  0084               	movwf	4
 10165  142E  1383               	bcf	3,7	;select IRP bank1
 10166  142F  0180               	clrf	0
 10167                           
 10168                           ;Led.c: 17:     Gpio_InitPin( Led[ Id ].GpioId, Led[ Id ].Pin, ( 0 ) );
 10169  1430  3003               	movlw	3
 10170  1431  00FF               	movwf	btemp+1
 10171  1432  087F               	movf	btemp+1,w
 10172  1433  1283               	bcf	3,5	;RP0=0, select bank0
 10173  1434  1303               	bcf	3,6	;RP1=0, select bank0
 10174  1435  00A0               	movwf	___bmul@multiplicand
 10175  1436  0834               	movf	Led_Init@Id,w
 10176  1437  160A  158A  2512  160A  118A  	fcall	___bmul
 10177  143C  3ED9               	addlw	(low ((_Led| 0+1)))& (0+255)
 10178  143D  0084               	movwf	4
 10179  143E  1383               	bcf	3,7	;select IRP bank1
 10180  143F  0800               	movf	0,w
 10181  1440  00FF               	movwf	btemp+1
 10182  1441  087F               	movf	btemp+1,w
 10183  1442  1283               	bcf	3,5	;RP0=0, select bank0
 10184  1443  1303               	bcf	3,6	;RP1=0, select bank0
 10185  1444  00A3               	movwf	Gpio_InitPin@Pin
 10186  1445  01A4               	clrf	Gpio_InitPin@Mode
 10187  1446  3003               	movlw	3
 10188  1447  00FF               	movwf	btemp+1
 10189  1448  087F               	movf	btemp+1,w
 10190  1449  00A0               	movwf	___bmul@multiplicand
 10191  144A  0834               	movf	Led_Init@Id,w
 10192  144B  160A  158A  2512  160A  118A  	fcall	___bmul
 10193  1450  3ED8               	addlw	(low (_Led| 0))& (0+255)
 10194  1451  0084               	movwf	4
 10195  1452  1383               	bcf	3,7	;select IRP bank1
 10196  1453  0800               	movf	0,w
 10197  1454  160A  118A  2157  160A  118A  	fcall	_Gpio_InitPin
 10198  1459                     l155:
 10199  1459  0008               	return
 10200  145A                     __end_of_Led_Init:
 10201                           
 10202                           	psect	text50
 10203  054B                     __ptext50:	
 10204 ;; *************** function _HeaterTask_Init *****************
 10205 ;; Defined at:
 10206 ;;		line 26 in file "WaterHeater.c"
 10207 ;; Parameters:    Size  Location     Type
 10208 ;;  Id              1    wreg     unsigned char 
 10209 ;; Auto vars:     Size  Location     Type
 10210 ;;  Id              1   39[BANK0 ] unsigned char 
 10211 ;;  Index           2   37[BANK0 ] unsigned int 
 10212 ;; Return value:  Size  Location     Type
 10213 ;;                  1    wreg      void 
 10214 ;; Registers used:
 10215 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 10216 ;; Tracked objects:
 10217 ;;		On entry : 0/0
 10218 ;;		On exit  : 0/0
 10219 ;;		Unchanged: 0/0
 10220 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10221 ;;      Params:         0       0       0       0       0
 10222 ;;      Locals:         0       3       0       0       0
 10223 ;;      Temps:          0       3       0       0       0
 10224 ;;      Totals:         0       6       0       0       0
 10225 ;;Total ram usage:        6 bytes
 10226 ;; Hardware stack levels used:    1
 10227 ;; Hardware stack levels required when called:    6
 10228 ;; This function calls:
 10229 ;;		_Eeprom_Init
 10230 ;;		_Eeprom_Read
 10231 ;;		_Eeprom_ReadPage
 10232 ;;		_Eeprom_Write
 10233 ;;		_Eeprom_WritePage
 10234 ;;		_Scheduler_delaySoftwareMs
 10235 ;;		___bmul
 10236 ;; This function is called by:
 10237 ;;		_main
 10238 ;; This function uses a non-reentrant model
 10239 ;;
 10240                           
 10241                           
 10242                           ;psect for function _HeaterTask_Init
 10243  054B                     _HeaterTask_Init:
 10244                           
 10245                           ;incstack = 0
 10246                           ; Regs used in _HeaterTask_Init: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
 10247                           ;HeaterTask_Init@Id stored from wreg
 10248  054B  1283               	bcf	3,5	;RP0=0, select bank0
 10249  054C  1303               	bcf	3,6	;RP1=0, select bank0
 10250  054D  00C7               	movwf	HeaterTask_Init@Id
 10251  054E                     l2641:
 10252  054E                     l2643:
 10253                           
 10254                           ;WaterHeater.c: 29:     Eeprom_Init();
 10255  054E  160A  158A  26DC  120A  118A  	fcall	_Eeprom_Init
 10256  0553                     l2645:
 10257                           
 10258                           ;WaterHeater.c: 30:     Heater[ Id ].State = OffMode;
 10259  0553  3017               	movlw	23
 10260  0554  00FF               	movwf	btemp+1
 10261  0555  087F               	movf	btemp+1,w
 10262  0556  1283               	bcf	3,5	;RP0=0, select bank0
 10263  0557  1303               	bcf	3,6	;RP1=0, select bank0
 10264  0558  00A0               	movwf	___bmul@multiplicand
 10265  0559  0847               	movf	HeaterTask_Init@Id,w
 10266  055A  160A  158A  2512  120A  118A  	fcall	___bmul
 10267  055F  3E56               	addlw	(low (_Heater| 0))& (0+255)
 10268  0560  0084               	movwf	4
 10269  0561  1383               	bcf	3,7	;select IRP bank0
 10270  0562  0180               	clrf	0
 10271  0563                     l2647:
 10272                           
 10273                           ;WaterHeater.c: 31:     Heater[ Id ].PreState = Heater[ Id ].State;
 10274  0563  3017               	movlw	23
 10275  0564  00FF               	movwf	btemp+1
 10276  0565  087F               	movf	btemp+1,w
 10277  0566  1283               	bcf	3,5	;RP0=0, select bank0
 10278  0567  1303               	bcf	3,6	;RP1=0, select bank0
 10279  0568  00A0               	movwf	___bmul@multiplicand
 10280  0569  0847               	movf	HeaterTask_Init@Id,w
 10281  056A  160A  158A  2512  120A  118A  	fcall	___bmul
 10282  056F  3E56               	addlw	(low (_Heater| 0))& (0+255)
 10283  0570  0084               	movwf	4
 10284  0571  1383               	bcf	3,7	;select IRP bank0
 10285  0572  0800               	movf	0,w
 10286  0573  1283               	bcf	3,5	;RP0=0, select bank0
 10287  0574  1303               	bcf	3,6	;RP1=0, select bank0
 10288  0575  00C2               	movwf	??_HeaterTask_Init
 10289  0576  3017               	movlw	23
 10290  0577  00FF               	movwf	btemp+1
 10291  0578  087F               	movf	btemp+1,w
 10292  0579  00A0               	movwf	___bmul@multiplicand
 10293  057A  0847               	movf	HeaterTask_Init@Id,w
 10294  057B  160A  158A  2512  120A  118A  	fcall	___bmul
 10295  0580  3E57               	addlw	(low ((_Heater| 0+1)))& (0+255)
 10296  0581  0084               	movwf	4
 10297  0582  1283               	bcf	3,5	;RP0=0, select bank0
 10298  0583  1303               	bcf	3,6	;RP1=0, select bank0
 10299  0584  0842               	movf	??_HeaterTask_Init,w
 10300  0585  1383               	bcf	3,7	;select IRP bank0
 10301  0586  0080               	movwf	0
 10302  0587                     l2649:
 10303                           
 10304                           ;WaterHeater.c: 32:     Heater[ Id ].AvgTemp = 0;
 10305  0587  3017               	movlw	23
 10306  0588  00FF               	movwf	btemp+1
 10307  0589  087F               	movf	btemp+1,w
 10308  058A  00A0               	movwf	___bmul@multiplicand
 10309  058B  0847               	movf	HeaterTask_Init@Id,w
 10310  058C  160A  158A  2512  120A  118A  	fcall	___bmul
 10311  0591  3E58               	addlw	(low ((_Heater| 0+2)))& (0+255)
 10312  0592  0084               	movwf	4
 10313  0593  1383               	bcf	3,7	;select IRP bank0
 10314  0594  0180               	clrf	0
 10315  0595                     l2651:
 10316                           
 10317                           ;WaterHeater.c: 33:     Heater[ Id ].TargetTemp = 60;
 10318  0595  3017               	movlw	23
 10319  0596  00FF               	movwf	btemp+1
 10320  0597  087F               	movf	btemp+1,w
 10321  0598  1283               	bcf	3,5	;RP0=0, select bank0
 10322  0599  1303               	bcf	3,6	;RP1=0, select bank0
 10323  059A  00A0               	movwf	___bmul@multiplicand
 10324  059B  0847               	movf	HeaterTask_Init@Id,w
 10325  059C  160A  158A  2512  120A  118A  	fcall	___bmul
 10326  05A1  3E59               	addlw	(low ((_Heater| 0+3)))& (0+255)
 10327  05A2  0084               	movwf	4
 10328  05A3  303C               	movlw	60
 10329  05A4  00FF               	movwf	btemp+1
 10330  05A5  087F               	movf	btemp+1,w
 10331  05A6  1383               	bcf	3,7	;select IRP bank0
 10332  05A7  0080               	movwf	0
 10333  05A8                     l2653:
 10334                           
 10335                           ;WaterHeater.c: 34:     Heater[ Id ].Counter = 0;
 10336  05A8  3017               	movlw	23
 10337  05A9  00FF               	movwf	btemp+1
 10338  05AA  087F               	movf	btemp+1,w
 10339  05AB  1283               	bcf	3,5	;RP0=0, select bank0
 10340  05AC  1303               	bcf	3,6	;RP1=0, select bank0
 10341  05AD  00A0               	movwf	___bmul@multiplicand
 10342  05AE  0847               	movf	HeaterTask_Init@Id,w
 10343  05AF  160A  158A  2512  120A  118A  	fcall	___bmul
 10344  05B4  3E5A               	addlw	(low ((_Heater| 0+4)))& (0+255)
 10345  05B5  0084               	movwf	4
 10346  05B6  1383               	bcf	3,7	;select IRP bank0
 10347  05B7  0180               	clrf	0
 10348  05B8  0A84               	incf	4,f
 10349  05B9  0180               	clrf	0
 10350  05BA                     l2655:
 10351                           
 10352                           ;WaterHeater.c: 35:     Heater[ Id ].PasswordFlag = 1;
 10353  05BA  3017               	movlw	23
 10354  05BB  00FF               	movwf	btemp+1
 10355  05BC  087F               	movf	btemp+1,w
 10356  05BD  1283               	bcf	3,5	;RP0=0, select bank0
 10357  05BE  1303               	bcf	3,6	;RP1=0, select bank0
 10358  05BF  00A0               	movwf	___bmul@multiplicand
 10359  05C0  0847               	movf	HeaterTask_Init@Id,w
 10360  05C1  160A  158A  2512  120A  118A  	fcall	___bmul
 10361  05C6  3E5C               	addlw	(low ((_Heater| 0+6)))& (0+255)
 10362  05C7  0084               	movwf	4
 10363  05C8  1383               	bcf	3,7	;select IRP bank0
 10364  05C9  0180               	clrf	0
 10365  05CA  0A80               	incf	0,f
 10366  05CB                     l2657:
 10367                           
 10368                           ;WaterHeater.c: 36:     Heater[ Id ].PasswordWrite[ 0 ] = '#';
 10369  05CB  3017               	movlw	23
 10370  05CC  00FF               	movwf	btemp+1
 10371  05CD  087F               	movf	btemp+1,w
 10372  05CE  1283               	bcf	3,5	;RP0=0, select bank0
 10373  05CF  1303               	bcf	3,6	;RP1=0, select bank0
 10374  05D0  00A0               	movwf	___bmul@multiplicand
 10375  05D1  0847               	movf	HeaterTask_Init@Id,w
 10376  05D2  160A  158A  2512  120A  118A  	fcall	___bmul
 10377  05D7  3E5D               	addlw	(low ((_Heater| 0+7)))& (0+255)
 10378  05D8  0084               	movwf	4
 10379  05D9  3023               	movlw	35
 10380  05DA  00FF               	movwf	btemp+1
 10381  05DB  087F               	movf	btemp+1,w
 10382  05DC  1383               	bcf	3,7	;select IRP bank0
 10383  05DD  0080               	movwf	0
 10384  05DE                     l2659:
 10385                           
 10386                           ;WaterHeater.c: 37:     Heater[ Id ].PasswordWrite[ 1 ] = 'P';
 10387  05DE  3017               	movlw	23
 10388  05DF  00FF               	movwf	btemp+1
 10389  05E0  087F               	movf	btemp+1,w
 10390  05E1  1283               	bcf	3,5	;RP0=0, select bank0
 10391  05E2  1303               	bcf	3,6	;RP1=0, select bank0
 10392  05E3  00A0               	movwf	___bmul@multiplicand
 10393  05E4  0847               	movf	HeaterTask_Init@Id,w
 10394  05E5  160A  158A  2512  120A  118A  	fcall	___bmul
 10395  05EA  3E5E               	addlw	(low ((_Heater| 0+8)))& (0+255)
 10396  05EB  0084               	movwf	4
 10397  05EC  3050               	movlw	80
 10398  05ED  00FF               	movwf	btemp+1
 10399  05EE  087F               	movf	btemp+1,w
 10400  05EF  1383               	bcf	3,7	;select IRP bank0
 10401  05F0  0080               	movwf	0
 10402  05F1                     l2661:
 10403                           
 10404                           ;WaterHeater.c: 38:     Heater[ Id ].PasswordWrite[ 2 ] = 'w';
 10405  05F1  3017               	movlw	23
 10406  05F2  00FF               	movwf	btemp+1
 10407  05F3  087F               	movf	btemp+1,w
 10408  05F4  1283               	bcf	3,5	;RP0=0, select bank0
 10409  05F5  1303               	bcf	3,6	;RP1=0, select bank0
 10410  05F6  00A0               	movwf	___bmul@multiplicand
 10411  05F7  0847               	movf	HeaterTask_Init@Id,w
 10412  05F8  160A  158A  2512  120A  118A  	fcall	___bmul
 10413  05FD  3E5F               	addlw	(low ((_Heater| 0+9)))& (0+255)
 10414  05FE  0084               	movwf	4
 10415  05FF  3077               	movlw	119
 10416  0600  00FF               	movwf	btemp+1
 10417  0601  087F               	movf	btemp+1,w
 10418  0602  1383               	bcf	3,7	;select IRP bank0
 10419  0603  0080               	movwf	0
 10420  0604                     l2663:
 10421                           
 10422                           ;WaterHeater.c: 39:     Heater[ Id ].PasswordWrite[ 3 ] = 'r';
 10423  0604  3017               	movlw	23
 10424  0605  00FF               	movwf	btemp+1
 10425  0606  087F               	movf	btemp+1,w
 10426  0607  1283               	bcf	3,5	;RP0=0, select bank0
 10427  0608  1303               	bcf	3,6	;RP1=0, select bank0
 10428  0609  00A0               	movwf	___bmul@multiplicand
 10429  060A  0847               	movf	HeaterTask_Init@Id,w
 10430  060B  160A  158A  2512  120A  118A  	fcall	___bmul
 10431  0610  3E60               	addlw	(low ((_Heater| 0+10)))& (0+255)
 10432  0611  0084               	movwf	4
 10433  0612  3072               	movlw	114
 10434  0613  00FF               	movwf	btemp+1
 10435  0614  087F               	movf	btemp+1,w
 10436  0615  1383               	bcf	3,7	;select IRP bank0
 10437  0616  0080               	movwf	0
 10438  0617                     l2665:
 10439                           
 10440                           ;WaterHeater.c: 40:     Heater[ Id ].PasswordWrite[ 4 ] = 'U';
 10441  0617  3017               	movlw	23
 10442  0618  00FF               	movwf	btemp+1
 10443  0619  087F               	movf	btemp+1,w
 10444  061A  1283               	bcf	3,5	;RP0=0, select bank0
 10445  061B  1303               	bcf	3,6	;RP1=0, select bank0
 10446  061C  00A0               	movwf	___bmul@multiplicand
 10447  061D  0847               	movf	HeaterTask_Init@Id,w
 10448  061E  160A  158A  2512  120A  118A  	fcall	___bmul
 10449  0623  3E61               	addlw	(low ((_Heater| 0+11)))& (0+255)
 10450  0624  0084               	movwf	4
 10451  0625  3055               	movlw	85
 10452  0626  00FF               	movwf	btemp+1
 10453  0627  087F               	movf	btemp+1,w
 10454  0628  1383               	bcf	3,7	;select IRP bank0
 10455  0629  0080               	movwf	0
 10456  062A                     l2667:
 10457                           
 10458                           ;WaterHeater.c: 41:     Heater[ Id ].PasswordWrite[ 5 ] = 'p';
 10459  062A  3017               	movlw	23
 10460  062B  00FF               	movwf	btemp+1
 10461  062C  087F               	movf	btemp+1,w
 10462  062D  1283               	bcf	3,5	;RP0=0, select bank0
 10463  062E  1303               	bcf	3,6	;RP1=0, select bank0
 10464  062F  00A0               	movwf	___bmul@multiplicand
 10465  0630  0847               	movf	HeaterTask_Init@Id,w
 10466  0631  160A  158A  2512  120A  118A  	fcall	___bmul
 10467  0636  3E62               	addlw	(low ((_Heater| 0+12)))& (0+255)
 10468  0637  0084               	movwf	4
 10469  0638  3070               	movlw	112
 10470  0639  00FF               	movwf	btemp+1
 10471  063A  087F               	movf	btemp+1,w
 10472  063B  1383               	bcf	3,7	;select IRP bank0
 10473  063C  0080               	movwf	0
 10474  063D                     l2669:
 10475                           
 10476                           ;WaterHeater.c: 42:     Heater[ Id ].PasswordWrite[ 6 ] = '_';
 10477  063D  3017               	movlw	23
 10478  063E  00FF               	movwf	btemp+1
 10479  063F  087F               	movf	btemp+1,w
 10480  0640  1283               	bcf	3,5	;RP0=0, select bank0
 10481  0641  1303               	bcf	3,6	;RP1=0, select bank0
 10482  0642  00A0               	movwf	___bmul@multiplicand
 10483  0643  0847               	movf	HeaterTask_Init@Id,w
 10484  0644  160A  158A  2512  120A  118A  	fcall	___bmul
 10485  0649  3E63               	addlw	(low ((_Heater| 0+13)))& (0+255)
 10486  064A  0084               	movwf	4
 10487  064B  305F               	movlw	95
 10488  064C  00FF               	movwf	btemp+1
 10489  064D  087F               	movf	btemp+1,w
 10490  064E  1383               	bcf	3,7	;select IRP bank0
 10491  064F  0080               	movwf	0
 10492  0650                     l2671:
 10493                           
 10494                           ;WaterHeater.c: 43:     Heater[ Id ].PasswordWrite[ 7 ] = '1';
 10495  0650  3017               	movlw	23
 10496  0651  00FF               	movwf	btemp+1
 10497  0652  087F               	movf	btemp+1,w
 10498  0653  1283               	bcf	3,5	;RP0=0, select bank0
 10499  0654  1303               	bcf	3,6	;RP1=0, select bank0
 10500  0655  00A0               	movwf	___bmul@multiplicand
 10501  0656  0847               	movf	HeaterTask_Init@Id,w
 10502  0657  160A  158A  2512  120A  118A  	fcall	___bmul
 10503  065C  3E64               	addlw	(low ((_Heater| 0+14)))& (0+255)
 10504  065D  0084               	movwf	4
 10505  065E  3031               	movlw	49
 10506  065F  00FF               	movwf	btemp+1
 10507  0660  087F               	movf	btemp+1,w
 10508  0661  1383               	bcf	3,7	;select IRP bank0
 10509  0662  0080               	movwf	0
 10510  0663                     l2673:
 10511                           
 10512                           ;WaterHeater.c: 44:     Heater[ Id ].PasswordRead[ 0 ] = 0;
 10513  0663  3017               	movlw	23
 10514  0664  00FF               	movwf	btemp+1
 10515  0665  087F               	movf	btemp+1,w
 10516  0666  1283               	bcf	3,5	;RP0=0, select bank0
 10517  0667  1303               	bcf	3,6	;RP1=0, select bank0
 10518  0668  00A0               	movwf	___bmul@multiplicand
 10519  0669  0847               	movf	HeaterTask_Init@Id,w
 10520  066A  160A  158A  2512  120A  118A  	fcall	___bmul
 10521  066F  3E65               	addlw	(low ((_Heater| 0+15)))& (0+255)
 10522  0670  0084               	movwf	4
 10523  0671  1383               	bcf	3,7	;select IRP bank0
 10524  0672  0180               	clrf	0
 10525  0673                     l2675:
 10526                           
 10527                           ;WaterHeater.c: 45:     Heater[ Id ].PasswordRead[ 1 ] = 0;
 10528  0673  3017               	movlw	23
 10529  0674  00FF               	movwf	btemp+1
 10530  0675  087F               	movf	btemp+1,w
 10531  0676  1283               	bcf	3,5	;RP0=0, select bank0
 10532  0677  1303               	bcf	3,6	;RP1=0, select bank0
 10533  0678  00A0               	movwf	___bmul@multiplicand
 10534  0679  0847               	movf	HeaterTask_Init@Id,w
 10535  067A  160A  158A  2512  120A  118A  	fcall	___bmul
 10536  067F  3E66               	addlw	(low ((_Heater| 0+16)))& (0+255)
 10537  0680  0084               	movwf	4
 10538  0681  1383               	bcf	3,7	;select IRP bank0
 10539  0682  0180               	clrf	0
 10540  0683                     l2677:
 10541                           
 10542                           ;WaterHeater.c: 46:     Heater[ Id ].PasswordRead[ 2 ] = 0;
 10543  0683  3017               	movlw	23
 10544  0684  00FF               	movwf	btemp+1
 10545  0685  087F               	movf	btemp+1,w
 10546  0686  1283               	bcf	3,5	;RP0=0, select bank0
 10547  0687  1303               	bcf	3,6	;RP1=0, select bank0
 10548  0688  00A0               	movwf	___bmul@multiplicand
 10549  0689  0847               	movf	HeaterTask_Init@Id,w
 10550  068A  160A  158A  2512  120A  118A  	fcall	___bmul
 10551  068F  3E67               	addlw	(low ((_Heater| 0+17)))& (0+255)
 10552  0690  0084               	movwf	4
 10553  0691  1383               	bcf	3,7	;select IRP bank0
 10554  0692  0180               	clrf	0
 10555  0693                     l2679:
 10556                           
 10557                           ;WaterHeater.c: 47:     Heater[ Id ].PasswordRead[ 3 ] = 0;
 10558  0693  3017               	movlw	23
 10559  0694  00FF               	movwf	btemp+1
 10560  0695  087F               	movf	btemp+1,w
 10561  0696  1283               	bcf	3,5	;RP0=0, select bank0
 10562  0697  1303               	bcf	3,6	;RP1=0, select bank0
 10563  0698  00A0               	movwf	___bmul@multiplicand
 10564  0699  0847               	movf	HeaterTask_Init@Id,w
 10565  069A  160A  158A  2512  120A  118A  	fcall	___bmul
 10566  069F  3E68               	addlw	(low ((_Heater| 0+18)))& (0+255)
 10567  06A0  0084               	movwf	4
 10568  06A1  1383               	bcf	3,7	;select IRP bank0
 10569  06A2  0180               	clrf	0
 10570  06A3                     l2681:
 10571                           
 10572                           ;WaterHeater.c: 48:     Heater[ Id ].PasswordRead[ 4 ] = 0;
 10573  06A3  3017               	movlw	23
 10574  06A4  00FF               	movwf	btemp+1
 10575  06A5  087F               	movf	btemp+1,w
 10576  06A6  1283               	bcf	3,5	;RP0=0, select bank0
 10577  06A7  1303               	bcf	3,6	;RP1=0, select bank0
 10578  06A8  00A0               	movwf	___bmul@multiplicand
 10579  06A9  0847               	movf	HeaterTask_Init@Id,w
 10580  06AA  160A  158A  2512  120A  118A  	fcall	___bmul
 10581  06AF  3E69               	addlw	(low ((_Heater| 0+19)))& (0+255)
 10582  06B0  0084               	movwf	4
 10583  06B1  1383               	bcf	3,7	;select IRP bank0
 10584  06B2  0180               	clrf	0
 10585  06B3                     l2683:
 10586                           
 10587                           ;WaterHeater.c: 49:     Heater[ Id ].PasswordRead[ 5 ] = 0;
 10588  06B3  3017               	movlw	23
 10589  06B4  00FF               	movwf	btemp+1
 10590  06B5  087F               	movf	btemp+1,w
 10591  06B6  1283               	bcf	3,5	;RP0=0, select bank0
 10592  06B7  1303               	bcf	3,6	;RP1=0, select bank0
 10593  06B8  00A0               	movwf	___bmul@multiplicand
 10594  06B9  0847               	movf	HeaterTask_Init@Id,w
 10595  06BA  160A  158A  2512  120A  118A  	fcall	___bmul
 10596  06BF  3E6A               	addlw	(low ((_Heater| 0+20)))& (0+255)
 10597  06C0  0084               	movwf	4
 10598  06C1  1383               	bcf	3,7	;select IRP bank0
 10599  06C2  0180               	clrf	0
 10600  06C3                     l2685:
 10601                           
 10602                           ;WaterHeater.c: 50:     Heater[ Id ].PasswordRead[ 6 ] = 0;
 10603  06C3  3017               	movlw	23
 10604  06C4  00FF               	movwf	btemp+1
 10605  06C5  087F               	movf	btemp+1,w
 10606  06C6  1283               	bcf	3,5	;RP0=0, select bank0
 10607  06C7  1303               	bcf	3,6	;RP1=0, select bank0
 10608  06C8  00A0               	movwf	___bmul@multiplicand
 10609  06C9  0847               	movf	HeaterTask_Init@Id,w
 10610  06CA  160A  158A  2512  120A  118A  	fcall	___bmul
 10611  06CF  3E6B               	addlw	(low ((_Heater| 0+21)))& (0+255)
 10612  06D0  0084               	movwf	4
 10613  06D1  1383               	bcf	3,7	;select IRP bank0
 10614  06D2  0180               	clrf	0
 10615  06D3                     l2687:
 10616                           
 10617                           ;WaterHeater.c: 51:     Heater[ Id ].PasswordRead[ 7 ] = 0;
 10618  06D3  3017               	movlw	23
 10619  06D4  00FF               	movwf	btemp+1
 10620  06D5  087F               	movf	btemp+1,w
 10621  06D6  1283               	bcf	3,5	;RP0=0, select bank0
 10622  06D7  1303               	bcf	3,6	;RP1=0, select bank0
 10623  06D8  00A0               	movwf	___bmul@multiplicand
 10624  06D9  0847               	movf	HeaterTask_Init@Id,w
 10625  06DA  160A  158A  2512  120A  118A  	fcall	___bmul
 10626  06DF  3E6C               	addlw	(low ((_Heater| 0+22)))& (0+255)
 10627  06E0  0084               	movwf	4
 10628  06E1  1383               	bcf	3,7	;select IRP bank0
 10629  06E2  0180               	clrf	0
 10630  06E3                     l2689:
 10631                           
 10632                           ;WaterHeater.c: 54:     Eeprom_ReadPage( 0, Heater[ Id ].PasswordRead, 8 );
 10633  06E3  3017               	movlw	23
 10634  06E4  00FF               	movwf	btemp+1
 10635  06E5  087F               	movf	btemp+1,w
 10636  06E6  1283               	bcf	3,5	;RP0=0, select bank0
 10637  06E7  1303               	bcf	3,6	;RP1=0, select bank0
 10638  06E8  00A0               	movwf	___bmul@multiplicand
 10639  06E9  0847               	movf	HeaterTask_Init@Id,w
 10640  06EA  160A  158A  2512  120A  118A  	fcall	___bmul
 10641  06EF  3E65               	addlw	(low ((_Heater| 0+15)))& (0+255)
 10642  06F0  00FF               	movwf	btemp+1
 10643  06F1  087F               	movf	btemp+1,w
 10644  06F2  1283               	bcf	3,5	;RP0=0, select bank0
 10645  06F3  1303               	bcf	3,6	;RP1=0, select bank0
 10646  06F4  00A3               	movwf	Eeprom_ReadPage@Buffer
 10647  06F5  3008               	movlw	8
 10648  06F6  00FF               	movwf	btemp+1
 10649  06F7  087F               	movf	btemp+1,w
 10650  06F8  00A4               	movwf	Eeprom_ReadPage@Length
 10651  06F9  3000               	movlw	0
 10652  06FA  160A  118A  2398  120A  118A  	fcall	_Eeprom_ReadPage
 10653                           
 10654                           ;WaterHeater.c: 55:     for( Index = 0; Index < 8; Index++)
 10655  06FF  1283               	bcf	3,5	;RP0=0, select bank0
 10656  0700  1303               	bcf	3,6	;RP1=0, select bank0
 10657  0701  01C5               	clrf	HeaterTask_Init@Index
 10658  0702  01C6               	clrf	HeaterTask_Init@Index+1
 10659  0703                     l2695:
 10660                           
 10661                           ;WaterHeater.c: 56:     {;WaterHeater.c: 57:         if( Heater[ Id ].PasswordWrite[ Ind
      +                          ex ] != Heater[ Id ].PasswordRead[ Index ] )
 10662  0703  3017               	movlw	23
 10663  0704  00FF               	movwf	btemp+1
 10664  0705  087F               	movf	btemp+1,w
 10665  0706  00A0               	movwf	___bmul@multiplicand
 10666  0707  0847               	movf	HeaterTask_Init@Id,w
 10667  0708  160A  158A  2512  120A  118A  	fcall	___bmul
 10668  070D  3E65               	addlw	(low ((_Heater| 0+15)))& (0+255)
 10669  070E  1283               	bcf	3,5	;RP0=0, select bank0
 10670  070F  1303               	bcf	3,6	;RP1=0, select bank0
 10671  0710  0745               	addwf	HeaterTask_Init@Index,w
 10672  0711  00C2               	movwf	??_HeaterTask_Init
 10673  0712  0842               	movf	??_HeaterTask_Init,w
 10674  0713  0084               	movwf	4
 10675  0714  1383               	bcf	3,7	;select IRP bank0
 10676  0715  0800               	movf	0,w
 10677  0716  00C3               	movwf	??_HeaterTask_Init+1
 10678  0717  3017               	movlw	23
 10679  0718  00FF               	movwf	btemp+1
 10680  0719  087F               	movf	btemp+1,w
 10681  071A  00A0               	movwf	___bmul@multiplicand
 10682  071B  0847               	movf	HeaterTask_Init@Id,w
 10683  071C  160A  158A  2512  120A  118A  	fcall	___bmul
 10684  0721  3E5D               	addlw	(low ((_Heater| 0+7)))& (0+255)
 10685  0722  1283               	bcf	3,5	;RP0=0, select bank0
 10686  0723  1303               	bcf	3,6	;RP1=0, select bank0
 10687  0724  0745               	addwf	HeaterTask_Init@Index,w
 10688  0725  00C4               	movwf	??_HeaterTask_Init+2
 10689  0726  0844               	movf	??_HeaterTask_Init+2,w
 10690  0727  0084               	movwf	4
 10691  0728  1383               	bcf	3,7	;select IRP bank0
 10692  0729  0800               	movf	0,w
 10693  072A  0643               	xorwf	??_HeaterTask_Init+1,w
 10694  072B  1903               	skipnz
 10695  072C  2F2E               	goto	u3271
 10696  072D  2F2F               	goto	u3270
 10697  072E                     u3271:
 10698  072E  2F3E               	goto	l2699
 10699  072F                     u3270:
 10700  072F                     l2697:
 10701                           
 10702                           ;WaterHeater.c: 58:         {;WaterHeater.c: 59:             Heater[ Id ].PasswordFlag =
      +                           0;
 10703  072F  3017               	movlw	23
 10704  0730  00FF               	movwf	btemp+1
 10705  0731  087F               	movf	btemp+1,w
 10706  0732  00A0               	movwf	___bmul@multiplicand
 10707  0733  0847               	movf	HeaterTask_Init@Id,w
 10708  0734  160A  158A  2512  120A  118A  	fcall	___bmul
 10709  0739  3E5C               	addlw	(low ((_Heater| 0+6)))& (0+255)
 10710  073A  0084               	movwf	4
 10711  073B  1383               	bcf	3,7	;select IRP bank0
 10712  073C  0180               	clrf	0
 10713                           
 10714                           ;WaterHeater.c: 60:             break;
 10715  073D  2F4D               	goto	l2701
 10716  073E                     l2699:
 10717                           
 10718                           ;WaterHeater.c: 62:     }
 10719  073E  3001               	movlw	1
 10720  073F  07C5               	addwf	HeaterTask_Init@Index,f
 10721  0740  1803               	skipnc
 10722  0741  0AC6               	incf	HeaterTask_Init@Index+1,f
 10723  0742  3000               	movlw	0
 10724  0743  07C6               	addwf	HeaterTask_Init@Index+1,f
 10725  0744  3000               	movlw	0
 10726  0745  0246               	subwf	HeaterTask_Init@Index+1,w
 10727  0746  3008               	movlw	8
 10728  0747  1903               	skipnz
 10729  0748  0245               	subwf	HeaterTask_Init@Index,w
 10730  0749  1C03               	skipc
 10731  074A  2F4C               	goto	u3281
 10732  074B  2F4D               	goto	u3280
 10733  074C                     u3281:
 10734  074C  2F03               	goto	l2695
 10735  074D                     u3280:
 10736  074D                     l2701:
 10737                           
 10738                           ;WaterHeater.c: 64:     if( Heater[ Id ].PasswordFlag )
 10739  074D  3017               	movlw	23
 10740  074E  00FF               	movwf	btemp+1
 10741  074F  087F               	movf	btemp+1,w
 10742  0750  1283               	bcf	3,5	;RP0=0, select bank0
 10743  0751  1303               	bcf	3,6	;RP1=0, select bank0
 10744  0752  00A0               	movwf	___bmul@multiplicand
 10745  0753  0847               	movf	HeaterTask_Init@Id,w
 10746  0754  160A  158A  2512  120A  118A  	fcall	___bmul
 10747  0759  3E5C               	addlw	(low ((_Heater| 0+6)))& (0+255)
 10748  075A  0084               	movwf	4
 10749  075B  1383               	bcf	3,7	;select IRP bank0
 10750  075C  0800               	movf	0,w
 10751  075D  1903               	btfsc	3,2
 10752  075E  2F60               	goto	u3291
 10753  075F  2F61               	goto	u3290
 10754  0760                     u3291:
 10755  0760  2F7A               	goto	l2705
 10756  0761                     u3290:
 10757  0761                     l2703:
 10758                           
 10759                           ;WaterHeater.c: 65:     {;WaterHeater.c: 66:         Heater[ Id ].TargetTemp = Eeprom_Re
      +                          ad( 8 );
 10760  0761  3017               	movlw	23
 10761  0762  00FF               	movwf	btemp+1
 10762  0763  087F               	movf	btemp+1,w
 10763  0764  1283               	bcf	3,5	;RP0=0, select bank0
 10764  0765  1303               	bcf	3,6	;RP1=0, select bank0
 10765  0766  00A0               	movwf	___bmul@multiplicand
 10766  0767  0847               	movf	HeaterTask_Init@Id,w
 10767  0768  160A  158A  2512  120A  118A  	fcall	___bmul
 10768  076D  3E59               	addlw	(low ((_Heater| 0+3)))& (0+255)
 10769  076E  0084               	movwf	4
 10770  076F  3008               	movlw	8
 10771  0770  160A  118A  2085  120A  118A  	fcall	_Eeprom_Read
 10772  0775  00FF               	movwf	btemp+1
 10773  0776  087F               	movf	btemp+1,w
 10774  0777  1383               	bcf	3,7	;select IRP bank0
 10775  0778  0080               	movwf	0
 10776                           
 10777                           ;WaterHeater.c: 67:     }else
 10778  0779  2FC0               	goto	l320
 10779  077A                     l2705:
 10780                           
 10781                           ;WaterHeater.c: 68:     {;WaterHeater.c: 69:         Eeprom_WritePage( 0, Heater[ Id ].P
      +                          asswordWrite, 8 );
 10782  077A  3017               	movlw	23
 10783  077B  00FF               	movwf	btemp+1
 10784  077C  087F               	movf	btemp+1,w
 10785  077D  1283               	bcf	3,5	;RP0=0, select bank0
 10786  077E  1303               	bcf	3,6	;RP1=0, select bank0
 10787  077F  00A0               	movwf	___bmul@multiplicand
 10788  0780  0847               	movf	HeaterTask_Init@Id,w
 10789  0781  160A  158A  2512  120A  118A  	fcall	___bmul
 10790  0786  3E5D               	addlw	(low ((_Heater| 0+7)))& (0+255)
 10791  0787  00FF               	movwf	btemp+1
 10792  0788  087F               	movf	btemp+1,w
 10793  0789  1283               	bcf	3,5	;RP0=0, select bank0
 10794  078A  1303               	bcf	3,6	;RP1=0, select bank0
 10795  078B  00A3               	movwf	Eeprom_WritePage@Buffer
 10796  078C  3008               	movlw	8
 10797  078D  00FF               	movwf	btemp+1
 10798  078E  087F               	movf	btemp+1,w
 10799  078F  00A4               	movwf	Eeprom_WritePage@Length
 10800  0790  3000               	movlw	0
 10801  0791  160A  118A  21A4  120A  118A  	fcall	_Eeprom_WritePage
 10802  0796                     l2707:
 10803                           
 10804                           ;WaterHeater.c: 70:         Scheduler_delaySoftwareMs( 10 );
 10805  0796  3000               	movlw	0
 10806  0797  1283               	bcf	3,5	;RP0=0, select bank0
 10807  0798  1303               	bcf	3,6	;RP1=0, select bank0
 10808  0799  00AC               	movwf	Scheduler_delaySoftwareMs@msDelay+3
 10809  079A  3000               	movlw	0
 10810  079B  00AB               	movwf	Scheduler_delaySoftwareMs@msDelay+2
 10811  079C  3000               	movlw	0
 10812  079D  00AA               	movwf	Scheduler_delaySoftwareMs@msDelay+1
 10813  079E  300A               	movlw	10
 10814  079F  00A9               	movwf	Scheduler_delaySoftwareMs@msDelay
 10815  07A0  120A  158A  2006  120A  118A  	fcall	_Scheduler_delaySoftwareMs
 10816  07A5                     l2709:
 10817                           
 10818                           ;WaterHeater.c: 71:         Eeprom_Write( 8, Heater[ Id ].TargetTemp );
 10819  07A5  3017               	movlw	23
 10820  07A6  00FF               	movwf	btemp+1
 10821  07A7  087F               	movf	btemp+1,w
 10822  07A8  1283               	bcf	3,5	;RP0=0, select bank0
 10823  07A9  1303               	bcf	3,6	;RP1=0, select bank0
 10824  07AA  00A0               	movwf	___bmul@multiplicand
 10825  07AB  0847               	movf	HeaterTask_Init@Id,w
 10826  07AC  160A  158A  2512  120A  118A  	fcall	___bmul
 10827  07B1  3E59               	addlw	(low ((_Heater| 0+3)))& (0+255)
 10828  07B2  0084               	movwf	4
 10829  07B3  1383               	bcf	3,7	;select IRP bank0
 10830  07B4  0800               	movf	0,w
 10831  07B5  00FF               	movwf	btemp+1
 10832  07B6  087F               	movf	btemp+1,w
 10833  07B7  1283               	bcf	3,5	;RP0=0, select bank0
 10834  07B8  1303               	bcf	3,6	;RP1=0, select bank0
 10835  07B9  00A3               	movwf	Eeprom_Write@Buffer
 10836  07BA  3008               	movlw	8
 10837  07BB  160A  158A  2762  120A  118A  	fcall	_Eeprom_Write
 10838  07C0                     l320:
 10839  07C0  0008               	return
 10840  07C1                     __end_of_HeaterTask_Init:
 10841                           
 10842                           	psect	text51
 10843  1D12                     __ptext51:	
 10844 ;; *************** function ___bmul *****************
 10845 ;; Defined at:
 10846 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\Umul8.c"
 10847 ;; Parameters:    Size  Location     Type
 10848 ;;  multiplier      1    wreg     unsigned char 
 10849 ;;  multiplicand    1    0[BANK0 ] unsigned char 
 10850 ;; Auto vars:     Size  Location     Type
 10851 ;;  multiplier      1    2[BANK0 ] unsigned char 
 10852 ;;  product         1    1[BANK0 ] unsigned char 
 10853 ;; Return value:  Size  Location     Type
 10854 ;;                  1    wreg      unsigned char 
 10855 ;; Registers used:
 10856 ;;		wreg, status,2, status,0, btemp+1
 10857 ;; Tracked objects:
 10858 ;;		On entry : 0/0
 10859 ;;		On exit  : 0/0
 10860 ;;		Unchanged: 0/0
 10861 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10862 ;;      Params:         0       1       0       0       0
 10863 ;;      Locals:         0       2       0       0       0
 10864 ;;      Temps:          0       0       0       0       0
 10865 ;;      Totals:         0       3       0       0       0
 10866 ;;Total ram usage:        3 bytes
 10867 ;; Hardware stack levels used:    1
 10868 ;; Hardware stack levels required when called:    3
 10869 ;; This function calls:
 10870 ;;		Nothing
 10871 ;; This function is called by:
 10872 ;;		_Scheduler_addTask
 10873 ;;		_Scheduler_deleteTask
 10874 ;;		_Scheduler_update
 10875 ;;		_Scheduler_dispatchTasks
 10876 ;;		_Led_Init
 10877 ;;		_Led_SetState
 10878 ;;		_HeaterTask_Init
 10879 ;;		_HeaterTask_Update
 10880 ;;		_SwitchTask_Init
 10881 ;;		_SwitchTask_GetState
 10882 ;;		_SwitchTask_Update
 10883 ;;		_TempSensorTask_Init
 10884 ;;		_TempSensorTask_GetAverage
 10885 ;;		_TempSensorTask_Update
 10886 ;;		_TempSensor_Init
 10887 ;;		_TempSensor_GetState
 10888 ;;		_LedTask_Init
 10889 ;;		_LedTask_SetState
 10890 ;;		_LedTask_Update
 10891 ;; This function uses a non-reentrant model
 10892 ;;
 10893                           
 10894                           
 10895                           ;psect for function ___bmul
 10896  1D12                     ___bmul:
 10897                           
 10898                           ;incstack = 0
 10899                           ; Regs used in ___bmul: [wreg+status,2+status,0+btemp+1]
 10900                           ;___bmul@multiplier stored from wreg
 10901  1D12  1283               	bcf	3,5	;RP0=0, select bank0
 10902  1D13  1303               	bcf	3,6	;RP1=0, select bank0
 10903  1D14  00A2               	movwf	___bmul@multiplier
 10904  1D15                     l1987:
 10905  1D15  01A1               	clrf	___bmul@product
 10906  1D16                     l1989:
 10907  1D16  1C22               	btfss	___bmul@multiplier,0
 10908  1D17  2D19               	goto	u1711
 10909  1D18  2D1A               	goto	u1710
 10910  1D19                     u1711:
 10911  1D19  2D1E               	goto	l1993
 10912  1D1A                     u1710:
 10913  1D1A                     l1991:
 10914  1D1A  0820               	movf	___bmul@multiplicand,w
 10915  1D1B  00FF               	movwf	btemp+1
 10916  1D1C  087F               	movf	btemp+1,w
 10917  1D1D  07A1               	addwf	___bmul@product,f
 10918  1D1E                     l1993:
 10919  1D1E  1003               	clrc
 10920  1D1F  0DA0               	rlf	___bmul@multiplicand,f
 10921  1D20                     l1995:
 10922  1D20  1003               	clrc
 10923  1D21  0CA2               	rrf	___bmul@multiplier,f
 10924  1D22                     l1997:
 10925  1D22  0822               	movf	___bmul@multiplier,w
 10926  1D23  1D03               	btfss	3,2
 10927  1D24  2D26               	goto	u1721
 10928  1D25  2D27               	goto	u1720
 10929  1D26                     u1721:
 10930  1D26  2D16               	goto	l1989
 10931  1D27                     u1720:
 10932  1D27                     l1999:
 10933  1D27  0821               	movf	___bmul@product,w
 10934  1D28                     l661:
 10935  1D28  0008               	return
 10936  1D29                     __end_of___bmul:
 10937                           
 10938                           	psect	text52
 10939  0806                     __ptext52:	
 10940 ;; *************** function _Scheduler_delaySoftwareMs *****************
 10941 ;; Defined at:
 10942 ;;		line 38 in file "SchedulerConfig.c"
 10943 ;; Parameters:    Size  Location     Type
 10944 ;;  msDelay         4    9[BANK0 ] volatile unsigned long 
 10945 ;; Auto vars:     Size  Location     Type
 10946 ;;		None
 10947 ;; Return value:  Size  Location     Type
 10948 ;;                  1    wreg      void 
 10949 ;; Registers used:
 10950 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
 10951 ;; Tracked objects:
 10952 ;;		On entry : 0/0
 10953 ;;		On exit  : 0/0
 10954 ;;		Unchanged: 0/0
 10955 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10956 ;;      Params:         0       4       0       0       0
 10957 ;;      Locals:         0       0       0       0       0
 10958 ;;      Temps:          0       4       0       0       0
 10959 ;;      Totals:         0       8       0       0       0
 10960 ;;Total ram usage:        8 bytes
 10961 ;; Hardware stack levels used:    1
 10962 ;; Hardware stack levels required when called:    4
 10963 ;; This function calls:
 10964 ;;		_Scheduler_delaySoftwareUs
 10965 ;; This function is called by:
 10966 ;;		_HeaterTask_Init
 10967 ;; This function uses a non-reentrant model
 10968 ;;
 10969                           
 10970                           
 10971                           ;psect for function _Scheduler_delaySoftwareMs
 10972  0806                     _Scheduler_delaySoftwareMs:
 10973  0806                     l2311:	
 10974                           ;incstack = 0
 10975                           ; Regs used in _Scheduler_delaySoftwareMs: [wreg+status,2+status,0+btemp+1+pclath+cstack
      +                          ]
 10976                           
 10977                           
 10978                           ;SchedulerConfig.c: 38: void Scheduler_delaySoftwareMs( volatile uint32_t msDelay );Sche
      +                          dulerConfig.c: 39: {;SchedulerConfig.c: 40:  while( msDelay-- )
 10979  0806  2814               	goto	l2315
 10980  0807                     l2313:
 10981                           
 10982                           ;SchedulerConfig.c: 41:  {;SchedulerConfig.c: 42:   Scheduler_delaySoftwareUs( 1000 );
 10983  0807  3000               	movlw	0
 10984  0808  00A3               	movwf	Scheduler_delaySoftwareUs@usDelay+3
 10985  0809  3000               	movlw	0
 10986  080A  00A2               	movwf	Scheduler_delaySoftwareUs@usDelay+2
 10987  080B  3003               	movlw	3
 10988  080C  00A1               	movwf	Scheduler_delaySoftwareUs@usDelay+1
 10989  080D  30E8               	movlw	232
 10990  080E  00A0               	movwf	Scheduler_delaySoftwareUs@usDelay
 10991  080F  160A  158A  27C7  120A  158A  	fcall	_Scheduler_delaySoftwareUs
 10992  0814                     l2315:
 10993                           
 10994                           ;SchedulerConfig.c: 40:  while( msDelay-- )
 10995  0814  3001               	movlw	1
 10996  0815  1283               	bcf	3,5	;RP0=0, select bank0
 10997  0816  1303               	bcf	3,6	;RP1=0, select bank0
 10998  0817  00AD               	movwf	??_Scheduler_delaySoftwareMs
 10999  0818  3000               	movlw	0
 11000  0819  00AE               	movwf	??_Scheduler_delaySoftwareMs+1
 11001  081A  3000               	movlw	0
 11002  081B  00AF               	movwf	??_Scheduler_delaySoftwareMs+2
 11003  081C  3000               	movlw	0
 11004  081D  00B0               	movwf	??_Scheduler_delaySoftwareMs+3
 11005  081E  082D               	movf	??_Scheduler_delaySoftwareMs,w
 11006  081F  02A9               	subwf	Scheduler_delaySoftwareMs@msDelay,f	;volatile
 11007  0820  082E               	movf	??_Scheduler_delaySoftwareMs+1,w
 11008  0821  1C03               	skipc
 11009  0822  0F2E               	incfsz	??_Scheduler_delaySoftwareMs+1,w
 11010  0823  2825               	goto	u2415
 11011  0824  2826               	goto	u2416
 11012  0825                     u2415:
 11013  0825  02AA               	subwf	Scheduler_delaySoftwareMs@msDelay+1,f	;volatile
 11014  0826                     u2416:
 11015  0826  082F               	movf	??_Scheduler_delaySoftwareMs+2,w
 11016  0827  1C03               	skipc
 11017  0828  0F2F               	incfsz	??_Scheduler_delaySoftwareMs+2,w
 11018  0829  282B               	goto	u2417
 11019  082A  282C               	goto	u2418
 11020  082B                     u2417:
 11021  082B  02AB               	subwf	Scheduler_delaySoftwareMs@msDelay+2,f	;volatile
 11022  082C                     u2418:
 11023  082C  0830               	movf	??_Scheduler_delaySoftwareMs+3,w
 11024  082D  1C03               	skipc
 11025  082E  0F30               	incfsz	??_Scheduler_delaySoftwareMs+3,w
 11026  082F  2831               	goto	u2419
 11027  0830  2832               	goto	u2410
 11028  0831                     u2419:
 11029  0831  02AC               	subwf	Scheduler_delaySoftwareMs@msDelay+3,f	;volatile
 11030  0832                     u2410:
 11031  0832  0A29               	incf	Scheduler_delaySoftwareMs@msDelay,w	;volatile
 11032  0833  1D03               	skipz
 11033  0834  283F               	goto	u2421
 11034  0835  0A2A               	incf	Scheduler_delaySoftwareMs@msDelay+1,w	;volatile
 11035  0836  1D03               	skipz
 11036  0837  283F               	goto	u2421
 11037  0838  0A2B               	incf	Scheduler_delaySoftwareMs@msDelay+2,w	;volatile
 11038  0839  1D03               	skipz
 11039  083A  283F               	goto	u2421
 11040  083B  0A2C               	incf	Scheduler_delaySoftwareMs@msDelay+3,w	;volatile
 11041  083C  1D03               	btfss	3,2
 11042  083D  283F               	goto	u2421
 11043  083E  2840               	goto	u2420
 11044  083F                     u2421:
 11045  083F  2807               	goto	l2313
 11046  0840                     u2420:
 11047  0840                     l82:
 11048  0840  0008               	return
 11049  0841                     __end_of_Scheduler_delaySoftwareMs:
 11050                           
 11051                           	psect	text53
 11052  1FC7                     __ptext53:	
 11053 ;; *************** function _Scheduler_delaySoftwareUs *****************
 11054 ;; Defined at:
 11055 ;;		line 46 in file "SchedulerConfig.c"
 11056 ;; Parameters:    Size  Location     Type
 11057 ;;  usDelay         4    0[BANK0 ] volatile unsigned long 
 11058 ;; Auto vars:     Size  Location     Type
 11059 ;;  delay           1    8[BANK0 ] volatile unsigned char 
 11060 ;; Return value:  Size  Location     Type
 11061 ;;                  1    wreg      void 
 11062 ;; Registers used:
 11063 ;;		wreg, status,2, status,0, btemp+1
 11064 ;; Tracked objects:
 11065 ;;		On entry : 0/0
 11066 ;;		On exit  : 0/0
 11067 ;;		Unchanged: 0/0
 11068 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11069 ;;      Params:         0       4       0       0       0
 11070 ;;      Locals:         0       1       0       0       0
 11071 ;;      Temps:          0       4       0       0       0
 11072 ;;      Totals:         0       9       0       0       0
 11073 ;;Total ram usage:        9 bytes
 11074 ;; Hardware stack levels used:    1
 11075 ;; Hardware stack levels required when called:    3
 11076 ;; This function calls:
 11077 ;;		Nothing
 11078 ;; This function is called by:
 11079 ;;		_main
 11080 ;;		_Scheduler_delaySoftwareMs
 11081 ;; This function uses a non-reentrant model
 11082 ;;
 11083                           
 11084                           
 11085                           ;psect for function _Scheduler_delaySoftwareUs
 11086  1FC7                     _Scheduler_delaySoftwareUs:
 11087  1FC7                     l2109:	
 11088                           ;incstack = 0
 11089                           ; Regs used in _Scheduler_delaySoftwareUs: [wreg+status,2+status,0+btemp+1]
 11090                           
 11091                           
 11092                           ;SchedulerConfig.c: 46: void Scheduler_delaySoftwareUs( volatile uint32_t usDelay );Sche
      +                          dulerConfig.c: 47: {;SchedulerConfig.c: 48:  volatile uint8_t delay;;SchedulerConfig.c: 
      +                          49:  while( usDelay-- )
 11093  1FC7  2FD3               	goto	l2115
 11094  1FC8                     l2111:
 11095                           
 11096                           ;SchedulerConfig.c: 50:  {;SchedulerConfig.c: 51:   delay = ( uint8_t ) ( ( ( 16000000 )
      +                           / ( 4 ) ) / 1000000 );
 11097  1FC8  3004               	movlw	4
 11098  1FC9  00FF               	movwf	btemp+1
 11099  1FCA  087F               	movf	btemp+1,w
 11100  1FCB  00A8               	movwf	Scheduler_delaySoftwareUs@delay	;volatile
 11101  1FCC                     l2113:	
 11102                           ;SchedulerConfig.c: 52:   while( delay-- );
 11103                           
 11104  1FCC  3001               	movlw	1
 11105  1FCD  02A8               	subwf	Scheduler_delaySoftwareUs@delay,f	;volatile
 11106  1FCE  0A28               	incf	Scheduler_delaySoftwareUs@delay,w	;volatile
 11107  1FCF  1D03               	btfss	3,2
 11108  1FD0  2FD2               	goto	u1981
 11109  1FD1  2FD3               	goto	u1980
 11110  1FD2                     u1981:
 11111  1FD2  2FCC               	goto	l2113
 11112  1FD3                     u1980:
 11113  1FD3                     l2115:
 11114                           
 11115                           ;SchedulerConfig.c: 49:  while( usDelay-- )
 11116  1FD3  3001               	movlw	1
 11117  1FD4  1283               	bcf	3,5	;RP0=0, select bank0
 11118  1FD5  1303               	bcf	3,6	;RP1=0, select bank0
 11119  1FD6  00A4               	movwf	??_Scheduler_delaySoftwareUs
 11120  1FD7  3000               	movlw	0
 11121  1FD8  00A5               	movwf	??_Scheduler_delaySoftwareUs+1
 11122  1FD9  3000               	movlw	0
 11123  1FDA  00A6               	movwf	??_Scheduler_delaySoftwareUs+2
 11124  1FDB  3000               	movlw	0
 11125  1FDC  00A7               	movwf	??_Scheduler_delaySoftwareUs+3
 11126  1FDD  0824               	movf	??_Scheduler_delaySoftwareUs,w
 11127  1FDE  02A0               	subwf	Scheduler_delaySoftwareUs@usDelay,f	;volatile
 11128  1FDF  0825               	movf	??_Scheduler_delaySoftwareUs+1,w
 11129  1FE0  1C03               	skipc
 11130  1FE1  0F25               	incfsz	??_Scheduler_delaySoftwareUs+1,w
 11131  1FE2  2FE4               	goto	u1995
 11132  1FE3  2FE5               	goto	u1996
 11133  1FE4                     u1995:
 11134  1FE4  02A1               	subwf	Scheduler_delaySoftwareUs@usDelay+1,f	;volatile
 11135  1FE5                     u1996:
 11136  1FE5  0826               	movf	??_Scheduler_delaySoftwareUs+2,w
 11137  1FE6  1C03               	skipc
 11138  1FE7  0F26               	incfsz	??_Scheduler_delaySoftwareUs+2,w
 11139  1FE8  2FEA               	goto	u1997
 11140  1FE9  2FEB               	goto	u1998
 11141  1FEA                     u1997:
 11142  1FEA  02A2               	subwf	Scheduler_delaySoftwareUs@usDelay+2,f	;volatile
 11143  1FEB                     u1998:
 11144  1FEB  0827               	movf	??_Scheduler_delaySoftwareUs+3,w
 11145  1FEC  1C03               	skipc
 11146  1FED  0F27               	incfsz	??_Scheduler_delaySoftwareUs+3,w
 11147  1FEE  2FF0               	goto	u1999
 11148  1FEF  2FF1               	goto	u1990
 11149  1FF0                     u1999:
 11150  1FF0  02A3               	subwf	Scheduler_delaySoftwareUs@usDelay+3,f	;volatile
 11151  1FF1                     u1990:
 11152  1FF1  0A20               	incf	Scheduler_delaySoftwareUs@usDelay,w	;volatile
 11153  1FF2  1D03               	skipz
 11154  1FF3  2FFE               	goto	u2001
 11155  1FF4  0A21               	incf	Scheduler_delaySoftwareUs@usDelay+1,w	;volatile
 11156  1FF5  1D03               	skipz
 11157  1FF6  2FFE               	goto	u2001
 11158  1FF7  0A22               	incf	Scheduler_delaySoftwareUs@usDelay+2,w	;volatile
 11159  1FF8  1D03               	skipz
 11160  1FF9  2FFE               	goto	u2001
 11161  1FFA  0A23               	incf	Scheduler_delaySoftwareUs@usDelay+3,w	;volatile
 11162  1FFB  1D03               	btfss	3,2
 11163  1FFC  2FFE               	goto	u2001
 11164  1FFD  2FFF               	goto	u2000
 11165  1FFE                     u2001:
 11166  1FFE  2FC8               	goto	l2111
 11167  1FFF                     u2000:
 11168  1FFF                     l91:
 11169  1FFF  0008               	return
 11170  2000                     __end_of_Scheduler_delaySoftwareUs:
 11171                           
 11172                           	psect	text54
 11173  11A4                     __ptext54:	
 11174 ;; *************** function _Eeprom_WritePage *****************
 11175 ;; Defined at:
 11176 ;;		line 26 in file "Eeprom.c"
 11177 ;; Parameters:    Size  Location     Type
 11178 ;;  Address         1    wreg     unsigned char 
 11179 ;;  Buffer          1    3[BANK0 ] PTR unsigned char 
 11180 ;;		 -> Heater(23), 
 11181 ;;  Length          1    4[BANK0 ] unsigned char 
 11182 ;; Auto vars:     Size  Location     Type
 11183 ;;  Address         1    7[BANK0 ] unsigned char 
 11184 ;;  i               2    8[BANK0 ] unsigned int 
 11185 ;; Return value:  Size  Location     Type
 11186 ;;                  1    wreg      void 
 11187 ;; Registers used:
 11188 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 11189 ;; Tracked objects:
 11190 ;;		On entry : 0/0
 11191 ;;		On exit  : 0/0
 11192 ;;		Unchanged: 0/0
 11193 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11194 ;;      Params:         0       2       0       0       0
 11195 ;;      Locals:         0       3       0       0       0
 11196 ;;      Temps:          0       2       0       0       0
 11197 ;;      Totals:         0       7       0       0       0
 11198 ;;Total ram usage:        7 bytes
 11199 ;; Hardware stack levels used:    1
 11200 ;; Hardware stack levels required when called:    5
 11201 ;; This function calls:
 11202 ;;		_I2c_MasterRepeatedStart
 11203 ;;		_I2c_MasterStart
 11204 ;;		_I2c_MasterStop
 11205 ;;		_I2c_MasterWrite
 11206 ;; This function is called by:
 11207 ;;		_HeaterTask_Init
 11208 ;; This function uses a non-reentrant model
 11209 ;;
 11210                           
 11211                           
 11212                           ;psect for function _Eeprom_WritePage
 11213  11A4                     _Eeprom_WritePage:
 11214                           
 11215                           ;incstack = 0
 11216                           ; Regs used in _Eeprom_WritePage: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 11217                           ;Eeprom_WritePage@Address stored from wreg
 11218  11A4  1283               	bcf	3,5	;RP0=0, select bank0
 11219  11A5  1303               	bcf	3,6	;RP1=0, select bank0
 11220  11A6  00A7               	movwf	Eeprom_WritePage@Address
 11221  11A7                     l2373:
 11222                           
 11223                           ;Eeprom.c: 26: void Eeprom_WritePage( uint8_t Address, uint8_t *Buffer, uint8_t Length )
      +                          ;Eeprom.c: 27: {;Eeprom.c: 28:     I2c_MasterStart();
 11224  11A7  160A  158A  23F9  160A  118A  	fcall	_I2c_MasterStart
 11225                           
 11226                           ;Eeprom.c: 30:     while( I2c_MasterWrite( 0xA0 ) )
 11227  11AC  29B2               	goto	l265
 11228  11AD                     l2375:
 11229                           
 11230                           ;Eeprom.c: 31:     {;Eeprom.c: 32:         I2c_MasterRepeatedStart();
 11231  11AD  160A  158A  23EE  160A  118A  	fcall	_I2c_MasterRepeatedStart
 11232  11B2                     l265:	
 11233                           ;Eeprom.c: 33:     }
 11234                           
 11235                           
 11236                           ;Eeprom.c: 30:     while( I2c_MasterWrite( 0xA0 ) )
 11237  11B2  30A0               	movlw	160
 11238  11B3  160A  158A  2540  160A  118A  	fcall	_I2c_MasterWrite
 11239  11B8  3A00               	xorlw	0
 11240  11B9  1D03               	skipz
 11241  11BA  29BC               	goto	u2571
 11242  11BB  29BD               	goto	u2570
 11243  11BC                     u2571:
 11244  11BC  29AD               	goto	l2375
 11245  11BD                     u2570:
 11246  11BD                     l2377:
 11247                           
 11248                           ;Eeprom.c: 34:     I2c_MasterWrite( Address );
 11249  11BD  1283               	bcf	3,5	;RP0=0, select bank0
 11250  11BE  1303               	bcf	3,6	;RP1=0, select bank0
 11251  11BF  0827               	movf	Eeprom_WritePage@Address,w
 11252  11C0  160A  158A  2540  160A  118A  	fcall	_I2c_MasterWrite
 11253  11C5                     l2379:
 11254                           
 11255                           ;Eeprom.c: 35:     for( unsigned int i = 0; i< Length; i++ )
 11256  11C5  1283               	bcf	3,5	;RP0=0, select bank0
 11257  11C6  1303               	bcf	3,6	;RP1=0, select bank0
 11258  11C7  01A8               	clrf	Eeprom_WritePage@i
 11259  11C8  01A9               	clrf	Eeprom_WritePage@i+1
 11260  11C9  29DE               	goto	l2385
 11261  11CA                     l2381:
 11262                           
 11263                           ;Eeprom.c: 36:     {;Eeprom.c: 37:         I2c_MasterWrite( Buffer[ i ] );
 11264  11CA  0828               	movf	Eeprom_WritePage@i,w
 11265  11CB  0723               	addwf	Eeprom_WritePage@Buffer,w
 11266  11CC  00A5               	movwf	??_Eeprom_WritePage
 11267  11CD  0825               	movf	??_Eeprom_WritePage,w
 11268  11CE  0084               	movwf	4
 11269  11CF  1383               	bcf	3,7	;select IRP bank0
 11270  11D0  0800               	movf	0,w
 11271  11D1  160A  158A  2540  160A  118A  	fcall	_I2c_MasterWrite
 11272  11D6                     l2383:
 11273                           
 11274                           ;Eeprom.c: 38:     }
 11275  11D6  3001               	movlw	1
 11276  11D7  1283               	bcf	3,5	;RP0=0, select bank0
 11277  11D8  1303               	bcf	3,6	;RP1=0, select bank0
 11278  11D9  07A8               	addwf	Eeprom_WritePage@i,f
 11279  11DA  1803               	skipnc
 11280  11DB  0AA9               	incf	Eeprom_WritePage@i+1,f
 11281  11DC  3000               	movlw	0
 11282  11DD  07A9               	addwf	Eeprom_WritePage@i+1,f
 11283  11DE                     l2385:
 11284  11DE  0824               	movf	Eeprom_WritePage@Length,w
 11285  11DF  00A5               	movwf	??_Eeprom_WritePage
 11286  11E0  01A6               	clrf	??_Eeprom_WritePage+1
 11287  11E1  0826               	movf	??_Eeprom_WritePage+1,w
 11288  11E2  0229               	subwf	Eeprom_WritePage@i+1,w
 11289  11E3  1D03               	skipz
 11290  11E4  29E7               	goto	u2585
 11291  11E5  0825               	movf	??_Eeprom_WritePage,w
 11292  11E6  0228               	subwf	Eeprom_WritePage@i,w
 11293  11E7                     u2585:
 11294  11E7  1C03               	skipc
 11295  11E8  29EA               	goto	u2581
 11296  11E9  29EB               	goto	u2580
 11297  11EA                     u2581:
 11298  11EA  29CA               	goto	l2381
 11299  11EB                     u2580:
 11300  11EB                     l2387:
 11301                           
 11302                           ;Eeprom.c: 39:     I2c_MasterStop();
 11303  11EB  160A  158A  2404  160A  118A  	fcall	_I2c_MasterStop
 11304  11F0                     l271:
 11305  11F0  0008               	return
 11306  11F1                     __end_of_Eeprom_WritePage:
 11307                           
 11308                           	psect	text55
 11309  1F62                     __ptext55:	
 11310 ;; *************** function _Eeprom_Write *****************
 11311 ;; Defined at:
 11312 ;;		line 13 in file "Eeprom.c"
 11313 ;; Parameters:    Size  Location     Type
 11314 ;;  Address         1    wreg     unsigned char 
 11315 ;;  Buffer          1    3[BANK0 ] unsigned char 
 11316 ;; Auto vars:     Size  Location     Type
 11317 ;;  Address         1    4[BANK0 ] unsigned char 
 11318 ;; Return value:  Size  Location     Type
 11319 ;;                  1    wreg      void 
 11320 ;; Registers used:
 11321 ;;		wreg, status,2, status,0, pclath, cstack
 11322 ;; Tracked objects:
 11323 ;;		On entry : 0/0
 11324 ;;		On exit  : 0/0
 11325 ;;		Unchanged: 0/0
 11326 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11327 ;;      Params:         0       1       0       0       0
 11328 ;;      Locals:         0       1       0       0       0
 11329 ;;      Temps:          0       0       0       0       0
 11330 ;;      Totals:         0       2       0       0       0
 11331 ;;Total ram usage:        2 bytes
 11332 ;; Hardware stack levels used:    1
 11333 ;; Hardware stack levels required when called:    5
 11334 ;; This function calls:
 11335 ;;		_I2c_MasterRepeatedStart
 11336 ;;		_I2c_MasterStart
 11337 ;;		_I2c_MasterStop
 11338 ;;		_I2c_MasterWrite
 11339 ;; This function is called by:
 11340 ;;		_HeaterTask_Init
 11341 ;;		_HeaterTask_Update
 11342 ;; This function uses a non-reentrant model
 11343 ;;
 11344                           
 11345                           
 11346                           ;psect for function _Eeprom_Write
 11347  1F62                     _Eeprom_Write:
 11348                           
 11349                           ;incstack = 0
 11350                           ; Regs used in _Eeprom_Write: [wreg+status,2+status,0+pclath+cstack]
 11351                           ;Eeprom_Write@Address stored from wreg
 11352  1F62  1283               	bcf	3,5	;RP0=0, select bank0
 11353  1F63  1303               	bcf	3,6	;RP1=0, select bank0
 11354  1F64  00A4               	movwf	Eeprom_Write@Address
 11355  1F65                     l2157:
 11356                           
 11357                           ;Eeprom.c: 13: void Eeprom_Write( uint8_t Address, uint8_t Buffer );Eeprom.c: 14: {;Eepr
      +                          om.c: 15:     I2c_MasterStart();
 11358  1F65  160A  158A  23F9  160A  158A  	fcall	_I2c_MasterStart
 11359                           
 11360                           ;Eeprom.c: 17:     while( I2c_MasterWrite( 0xA0 ) )
 11361  1F6A  2F70               	goto	l259
 11362  1F6B                     l2159:
 11363                           
 11364                           ;Eeprom.c: 18:     {;Eeprom.c: 19:         I2c_MasterRepeatedStart();
 11365  1F6B  160A  158A  23EE  160A  158A  	fcall	_I2c_MasterRepeatedStart
 11366  1F70                     l259:	
 11367                           ;Eeprom.c: 20:     }
 11368                           
 11369                           
 11370                           ;Eeprom.c: 17:     while( I2c_MasterWrite( 0xA0 ) )
 11371  1F70  30A0               	movlw	160
 11372  1F71  160A  158A  2540  160A  158A  	fcall	_I2c_MasterWrite
 11373  1F76  3A00               	xorlw	0
 11374  1F77  1D03               	skipz
 11375  1F78  2F7A               	goto	u2091
 11376  1F79  2F7B               	goto	u2090
 11377  1F7A                     u2091:
 11378  1F7A  2F6B               	goto	l2159
 11379  1F7B                     u2090:
 11380  1F7B                     l2161:
 11381                           
 11382                           ;Eeprom.c: 21:     I2c_MasterWrite( Address );
 11383  1F7B  1283               	bcf	3,5	;RP0=0, select bank0
 11384  1F7C  1303               	bcf	3,6	;RP1=0, select bank0
 11385  1F7D  0824               	movf	Eeprom_Write@Address,w
 11386  1F7E  160A  158A  2540  160A  158A  	fcall	_I2c_MasterWrite
 11387                           
 11388                           ;Eeprom.c: 22:     I2c_MasterWrite( Buffer );
 11389  1F83  1283               	bcf	3,5	;RP0=0, select bank0
 11390  1F84  1303               	bcf	3,6	;RP1=0, select bank0
 11391  1F85  0823               	movf	Eeprom_Write@Buffer,w
 11392  1F86  160A  158A  2540  160A  158A  	fcall	_I2c_MasterWrite
 11393                           
 11394                           ;Eeprom.c: 23:     I2c_MasterStop();
 11395  1F8B  160A  158A  2404  160A  158A  	fcall	_I2c_MasterStop
 11396  1F90                     l262:
 11397  1F90  0008               	return
 11398  1F91                     __end_of_Eeprom_Write:
 11399                           
 11400                           	psect	text56
 11401  1398                     __ptext56:	
 11402 ;; *************** function _Eeprom_ReadPage *****************
 11403 ;; Defined at:
 11404 ;;		line 60 in file "Eeprom.c"
 11405 ;; Parameters:    Size  Location     Type
 11406 ;;  Address         1    wreg     unsigned char 
 11407 ;;  Buffer          1    3[BANK0 ] PTR unsigned char 
 11408 ;;		 -> Heater(23), 
 11409 ;;  Length          1    4[BANK0 ] unsigned char 
 11410 ;; Auto vars:     Size  Location     Type
 11411 ;;  Address         1    7[BANK0 ] unsigned char 
 11412 ;;  i               2    8[BANK0 ] unsigned int 
 11413 ;; Return value:  Size  Location     Type
 11414 ;;                  1    wreg      void 
 11415 ;; Registers used:
 11416 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 11417 ;; Tracked objects:
 11418 ;;		On entry : 0/0
 11419 ;;		On exit  : 0/0
 11420 ;;		Unchanged: 0/0
 11421 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11422 ;;      Params:         0       2       0       0       0
 11423 ;;      Locals:         0       3       0       0       0
 11424 ;;      Temps:          0       2       0       0       0
 11425 ;;      Totals:         0       7       0       0       0
 11426 ;;Total ram usage:        7 bytes
 11427 ;; Hardware stack levels used:    1
 11428 ;; Hardware stack levels required when called:    5
 11429 ;; This function calls:
 11430 ;;		_I2c_ACK
 11431 ;;		_I2c_MasterRepeatedStart
 11432 ;;		_I2c_MasterStart
 11433 ;;		_I2c_MasterStop
 11434 ;;		_I2c_MasterWrite
 11435 ;;		_I2c_Read
 11436 ;; This function is called by:
 11437 ;;		_HeaterTask_Init
 11438 ;; This function uses a non-reentrant model
 11439 ;;
 11440                           
 11441                           
 11442                           ;psect for function _Eeprom_ReadPage
 11443  1398                     _Eeprom_ReadPage:
 11444                           
 11445                           ;incstack = 0
 11446                           ; Regs used in _Eeprom_ReadPage: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
 11447                           ;Eeprom_ReadPage@Address stored from wreg
 11448  1398  1283               	bcf	3,5	;RP0=0, select bank0
 11449  1399  1303               	bcf	3,6	;RP1=0, select bank0
 11450  139A  00A7               	movwf	Eeprom_ReadPage@Address
 11451  139B                     l2405:
 11452                           
 11453                           ;Eeprom.c: 60: void Eeprom_ReadPage( uint8_t Address, uint8_t *Buffer, uint8_t Length );
      +                          Eeprom.c: 61: {;Eeprom.c: 62:     I2c_MasterStart();
 11454  139B  160A  158A  23F9  160A  118A  	fcall	_I2c_MasterStart
 11455                           
 11456                           ;Eeprom.c: 64:     while( I2c_MasterWrite( 0xA0 ) )
 11457  13A0  2BA6               	goto	l280
 11458  13A1                     l2407:
 11459                           
 11460                           ;Eeprom.c: 65:     {;Eeprom.c: 66:         I2c_MasterRepeatedStart();
 11461  13A1  160A  158A  23EE  160A  118A  	fcall	_I2c_MasterRepeatedStart
 11462  13A6                     l280:	
 11463                           ;Eeprom.c: 67:     }
 11464                           
 11465                           
 11466                           ;Eeprom.c: 64:     while( I2c_MasterWrite( 0xA0 ) )
 11467  13A6  30A0               	movlw	160
 11468  13A7  160A  158A  2540  160A  118A  	fcall	_I2c_MasterWrite
 11469  13AC  3A00               	xorlw	0
 11470  13AD  1D03               	skipz
 11471  13AE  2BB0               	goto	u2601
 11472  13AF  2BB1               	goto	u2600
 11473  13B0                     u2601:
 11474  13B0  2BA1               	goto	l2407
 11475  13B1                     u2600:
 11476  13B1                     l2409:
 11477                           
 11478                           ;Eeprom.c: 68:     I2c_MasterWrite( Address );
 11479  13B1  1283               	bcf	3,5	;RP0=0, select bank0
 11480  13B2  1303               	bcf	3,6	;RP1=0, select bank0
 11481  13B3  0827               	movf	Eeprom_ReadPage@Address,w
 11482  13B4  160A  158A  2540  160A  118A  	fcall	_I2c_MasterWrite
 11483                           
 11484                           ;Eeprom.c: 69:     I2c_MasterStart();
 11485  13B9  160A  158A  23F9  160A  118A  	fcall	_I2c_MasterStart
 11486                           
 11487                           ;Eeprom.c: 70:     I2c_MasterWrite( 0xA1 );
 11488  13BE  30A1               	movlw	161
 11489  13BF  160A  158A  2540  160A  118A  	fcall	_I2c_MasterWrite
 11490  13C4                     l2411:
 11491                           
 11492                           ;Eeprom.c: 71:     for( unsigned int i = 0; i < Length; i++ )
 11493  13C4  1283               	bcf	3,5	;RP0=0, select bank0
 11494  13C5  1303               	bcf	3,6	;RP1=0, select bank0
 11495  13C6  01A8               	clrf	Eeprom_ReadPage@i
 11496  13C7  01A9               	clrf	Eeprom_ReadPage@i+1
 11497  13C8  2BE6               	goto	l2419
 11498  13C9                     l2413:
 11499                           
 11500                           ;Eeprom.c: 72:     {;Eeprom.c: 73:         Buffer[i] = I2c_Read();
 11501  13C9  160A  158A  2571  160A  118A  	fcall	_I2c_Read
 11502  13CE  00FF               	movwf	btemp+1
 11503  13CF  1283               	bcf	3,5	;RP0=0, select bank0
 11504  13D0  1303               	bcf	3,6	;RP1=0, select bank0
 11505  13D1  0828               	movf	Eeprom_ReadPage@i,w
 11506  13D2  0723               	addwf	Eeprom_ReadPage@Buffer,w
 11507  13D3  00A5               	movwf	??_Eeprom_ReadPage
 11508  13D4  0825               	movf	??_Eeprom_ReadPage,w
 11509  13D5  0084               	movwf	4
 11510  13D6  087F               	movf	btemp+1,w
 11511  13D7  1383               	bcf	3,7	;select IRP bank0
 11512  13D8  0080               	movwf	0
 11513  13D9                     l2415:
 11514                           
 11515                           ;Eeprom.c: 74:         I2c_ACK();
 11516  13D9  160A  158A  244F  160A  118A  	fcall	_I2c_ACK
 11517  13DE                     l2417:
 11518                           
 11519                           ;Eeprom.c: 75:     }
 11520  13DE  3001               	movlw	1
 11521  13DF  1283               	bcf	3,5	;RP0=0, select bank0
 11522  13E0  1303               	bcf	3,6	;RP1=0, select bank0
 11523  13E1  07A8               	addwf	Eeprom_ReadPage@i,f
 11524  13E2  1803               	skipnc
 11525  13E3  0AA9               	incf	Eeprom_ReadPage@i+1,f
 11526  13E4  3000               	movlw	0
 11527  13E5  07A9               	addwf	Eeprom_ReadPage@i+1,f
 11528  13E6                     l2419:
 11529  13E6  0824               	movf	Eeprom_ReadPage@Length,w
 11530  13E7  00A5               	movwf	??_Eeprom_ReadPage
 11531  13E8  01A6               	clrf	??_Eeprom_ReadPage+1
 11532  13E9  0826               	movf	??_Eeprom_ReadPage+1,w
 11533  13EA  0229               	subwf	Eeprom_ReadPage@i+1,w
 11534  13EB  1D03               	skipz
 11535  13EC  2BEF               	goto	u2615
 11536  13ED  0825               	movf	??_Eeprom_ReadPage,w
 11537  13EE  0228               	subwf	Eeprom_ReadPage@i,w
 11538  13EF                     u2615:
 11539  13EF  1C03               	skipc
 11540  13F0  2BF2               	goto	u2611
 11541  13F1  2BF3               	goto	u2610
 11542  13F2                     u2611:
 11543  13F2  2BC9               	goto	l2413
 11544  13F3                     u2610:
 11545  13F3                     l2421:
 11546                           
 11547                           ;Eeprom.c: 76:     I2c_MasterStop();
 11548  13F3  160A  158A  2404  160A  118A  	fcall	_I2c_MasterStop
 11549  13F8                     l286:
 11550  13F8  0008               	return
 11551  13F9                     __end_of_Eeprom_ReadPage:
 11552                           
 11553                           	psect	text57
 11554  1C4F                     __ptext57:	
 11555 ;; *************** function _I2c_ACK *****************
 11556 ;; Defined at:
 11557 ;;		line 53 in file "I2c.c"
 11558 ;; Parameters:    Size  Location     Type
 11559 ;;		None
 11560 ;; Auto vars:     Size  Location     Type
 11561 ;;		None
 11562 ;; Return value:  Size  Location     Type
 11563 ;;                  1    wreg      void 
 11564 ;; Registers used:
 11565 ;;		wreg, status,2, status,0, pclath, cstack
 11566 ;; Tracked objects:
 11567 ;;		On entry : 0/0
 11568 ;;		On exit  : 0/0
 11569 ;;		Unchanged: 0/0
 11570 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11571 ;;      Params:         0       0       0       0       0
 11572 ;;      Locals:         0       0       0       0       0
 11573 ;;      Temps:          0       0       0       0       0
 11574 ;;      Totals:         0       0       0       0       0
 11575 ;;Total ram usage:        0 bytes
 11576 ;; Hardware stack levels used:    1
 11577 ;; Hardware stack levels required when called:    4
 11578 ;; This function calls:
 11579 ;;		_I2c_MasterWait
 11580 ;; This function is called by:
 11581 ;;		_Eeprom_ReadPage
 11582 ;; This function uses a non-reentrant model
 11583 ;;
 11584                           
 11585                           
 11586                           ;psect for function _I2c_ACK
 11587  1C4F                     _I2c_ACK:
 11588  1C4F                     l2181:	
 11589                           ;incstack = 0
 11590                           ; Regs used in _I2c_ACK: [wreg+status,2+status,0+pclath+cstack]
 11591                           
 11592                           
 11593                           ;I2c.c: 55:     SSPCON2 = SSPCON2 & ~0x20;
 11594  1C4F  1683               	bsf	3,5	;RP0=1, select bank1
 11595  1C50  1303               	bcf	3,6	;RP1=0, select bank1
 11596  1C51  0811               	movf	17,w	;volatile
 11597  1C52  39DF               	andlw	223
 11598  1C53  0091               	movwf	17	;volatile
 11599  1C54                     l2183:
 11600                           
 11601                           ;I2c.c: 56:     I2c_MasterWait();
 11602  1C54  160A  158A  2432  160A  158A  	fcall	_I2c_MasterWait
 11603  1C59                     l2185:
 11604                           
 11605                           ;I2c.c: 57:     SSPCON2 = SSPCON2 | 0x10;
 11606  1C59  1683               	bsf	3,5	;RP0=1, select bank1
 11607  1C5A  1303               	bcf	3,6	;RP1=0, select bank1
 11608  1C5B  0811               	movf	17,w	;volatile
 11609  1C5C  3810               	iorlw	16
 11610  1C5D  0091               	movwf	17	;volatile
 11611  1C5E                     l519:
 11612  1C5E  0008               	return
 11613  1C5F                     __end_of_I2c_ACK:
 11614                           
 11615                           	psect	text58
 11616  1085                     __ptext58:	
 11617 ;; *************** function _Eeprom_Read *****************
 11618 ;; Defined at:
 11619 ;;		line 42 in file "Eeprom.c"
 11620 ;; Parameters:    Size  Location     Type
 11621 ;;  Address         1    wreg     unsigned char 
 11622 ;; Auto vars:     Size  Location     Type
 11623 ;;  Address         1    1[BANK0 ] unsigned char 
 11624 ;;  Buffer          1    2[BANK0 ] unsigned char 
 11625 ;; Return value:  Size  Location     Type
 11626 ;;                  1    wreg      unsigned char 
 11627 ;; Registers used:
 11628 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
 11629 ;; Tracked objects:
 11630 ;;		On entry : 0/0
 11631 ;;		On exit  : 0/0
 11632 ;;		Unchanged: 0/0
 11633 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11634 ;;      Params:         0       0       0       0       0
 11635 ;;      Locals:         0       2       0       0       0
 11636 ;;      Temps:          0       0       0       0       0
 11637 ;;      Totals:         0       2       0       0       0
 11638 ;;Total ram usage:        2 bytes
 11639 ;; Hardware stack levels used:    1
 11640 ;; Hardware stack levels required when called:    5
 11641 ;; This function calls:
 11642 ;;		_I2c_MasterRepeatedStart
 11643 ;;		_I2c_MasterStart
 11644 ;;		_I2c_MasterStop
 11645 ;;		_I2c_MasterWrite
 11646 ;;		_I2c_NACK
 11647 ;;		_I2c_Read
 11648 ;; This function is called by:
 11649 ;;		_HeaterTask_Init
 11650 ;; This function uses a non-reentrant model
 11651 ;;
 11652                           
 11653                           
 11654                           ;psect for function _Eeprom_Read
 11655  1085                     _Eeprom_Read:
 11656                           
 11657                           ;incstack = 0
 11658                           ; Regs used in _Eeprom_Read: [wreg+status,2+status,0+btemp+1+pclath+cstack]
 11659                           ;Eeprom_Read@Address stored from wreg
 11660  1085  1283               	bcf	3,5	;RP0=0, select bank0
 11661  1086  1303               	bcf	3,6	;RP1=0, select bank0
 11662  1087  00A1               	movwf	Eeprom_Read@Address
 11663  1088                     l2389:
 11664                           
 11665                           ;Eeprom.c: 42: uint8_t Eeprom_Read( uint8_t Address );Eeprom.c: 43: {;Eeprom.c: 44:     
      +                          uint8_t Buffer;;Eeprom.c: 45:     I2c_MasterStart();
 11666  1088  160A  158A  23F9  160A  118A  	fcall	_I2c_MasterStart
 11667                           
 11668                           ;Eeprom.c: 47:     while( I2c_MasterWrite( 0xA0 ) )
 11669  108D  2893               	goto	l274
 11670  108E                     l2391:
 11671                           
 11672                           ;Eeprom.c: 48:     {;Eeprom.c: 49:         I2c_MasterRepeatedStart();
 11673  108E  160A  158A  23EE  160A  118A  	fcall	_I2c_MasterRepeatedStart
 11674  1093                     l274:	
 11675                           ;Eeprom.c: 50:     }
 11676                           
 11677                           
 11678                           ;Eeprom.c: 47:     while( I2c_MasterWrite( 0xA0 ) )
 11679  1093  30A0               	movlw	160
 11680  1094  160A  158A  2540  160A  118A  	fcall	_I2c_MasterWrite
 11681  1099  3A00               	xorlw	0
 11682  109A  1D03               	skipz
 11683  109B  289D               	goto	u2591
 11684  109C  289E               	goto	u2590
 11685  109D                     u2591:
 11686  109D  288E               	goto	l2391
 11687  109E                     u2590:
 11688  109E                     l2393:
 11689                           
 11690                           ;Eeprom.c: 51:     I2c_MasterWrite( Address );
 11691  109E  1283               	bcf	3,5	;RP0=0, select bank0
 11692  109F  1303               	bcf	3,6	;RP1=0, select bank0
 11693  10A0  0821               	movf	Eeprom_Read@Address,w
 11694  10A1  160A  158A  2540  160A  118A  	fcall	_I2c_MasterWrite
 11695                           
 11696                           ;Eeprom.c: 52:     I2c_MasterStart();
 11697  10A6  160A  158A  23F9  160A  118A  	fcall	_I2c_MasterStart
 11698                           
 11699                           ;Eeprom.c: 53:     I2c_MasterWrite( 0xA1 );
 11700  10AB  30A1               	movlw	161
 11701  10AC  160A  158A  2540  160A  118A  	fcall	_I2c_MasterWrite
 11702  10B1                     l2395:
 11703                           
 11704                           ;Eeprom.c: 54:     Buffer = I2c_Read();
 11705  10B1  160A  158A  2571  160A  118A  	fcall	_I2c_Read
 11706  10B6  00FF               	movwf	btemp+1
 11707  10B7  087F               	movf	btemp+1,w
 11708  10B8  1283               	bcf	3,5	;RP0=0, select bank0
 11709  10B9  1303               	bcf	3,6	;RP1=0, select bank0
 11710  10BA  00A2               	movwf	Eeprom_Read@Buffer
 11711  10BB                     l2397:
 11712                           
 11713                           ;Eeprom.c: 55:     I2c_NACK();
 11714  10BB  160A  158A  243F  160A  118A  	fcall	_I2c_NACK
 11715  10C0                     l2399:
 11716                           
 11717                           ;Eeprom.c: 56:     I2c_MasterStop();
 11718  10C0  160A  158A  2404  160A  118A  	fcall	_I2c_MasterStop
 11719  10C5                     l2401:
 11720                           
 11721                           ;Eeprom.c: 57:     return Buffer;
 11722  10C5  1283               	bcf	3,5	;RP0=0, select bank0
 11723  10C6  1303               	bcf	3,6	;RP1=0, select bank0
 11724  10C7  0822               	movf	Eeprom_Read@Buffer,w
 11725  10C8                     l277:
 11726  10C8  0008               	return
 11727  10C9                     __end_of_Eeprom_Read:
 11728                           
 11729                           	psect	text59
 11730  1D71                     __ptext59:	
 11731 ;; *************** function _I2c_Read *****************
 11732 ;; Defined at:
 11733 ;;		line 43 in file "I2c.c"
 11734 ;; Parameters:    Size  Location     Type
 11735 ;;		None
 11736 ;; Auto vars:     Size  Location     Type
 11737 ;;		None
 11738 ;; Return value:  Size  Location     Type
 11739 ;;                  1    wreg      unsigned char 
 11740 ;; Registers used:
 11741 ;;		wreg, status,2, status,0, pclath, cstack
 11742 ;; Tracked objects:
 11743 ;;		On entry : 0/0
 11744 ;;		On exit  : 0/0
 11745 ;;		Unchanged: 0/0
 11746 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11747 ;;      Params:         0       0       0       0       0
 11748 ;;      Locals:         0       0       0       0       0
 11749 ;;      Temps:          0       0       0       0       0
 11750 ;;      Totals:         0       0       0       0       0
 11751 ;;Total ram usage:        0 bytes
 11752 ;; Hardware stack levels used:    1
 11753 ;; Hardware stack levels required when called:    4
 11754 ;; This function calls:
 11755 ;;		_I2c_MasterWait
 11756 ;; This function is called by:
 11757 ;;		_Eeprom_Read
 11758 ;;		_Eeprom_ReadPage
 11759 ;; This function uses a non-reentrant model
 11760 ;;
 11761                           
 11762                           
 11763                           ;psect for function _I2c_Read
 11764  1D71                     _I2c_Read:
 11765  1D71                     l2163:	
 11766                           ;incstack = 0
 11767                           ; Regs used in _I2c_Read: [wreg+status,2+status,0+pclath+cstack]
 11768                           
 11769                           
 11770                           ;I2c.c: 45:     I2c_MasterWait();
 11771  1D71  160A  158A  2432  160A  158A  	fcall	_I2c_MasterWait
 11772  1D76                     l2165:
 11773                           
 11774                           ;I2c.c: 46:     SSPCON2 = SSPCON2 | 0x08;
 11775  1D76  1683               	bsf	3,5	;RP0=1, select bank1
 11776  1D77  1303               	bcf	3,6	;RP1=0, select bank1
 11777  1D78  0811               	movf	17,w	;volatile
 11778  1D79  3808               	iorlw	8
 11779  1D7A  0091               	movwf	17	;volatile
 11780  1D7B                     l513:	
 11781                           ;I2c.c: 47:     while( !( PIR1 & 0x08 ) );
 11782                           
 11783  1D7B  1283               	bcf	3,5	;RP0=0, select bank0
 11784  1D7C  1D8C               	btfss	12,3	;volatile
 11785  1D7D  2D7F               	goto	u2101
 11786  1D7E  2D80               	goto	u2100
 11787  1D7F                     u2101:
 11788  1D7F  2D7B               	goto	l513
 11789  1D80                     u2100:
 11790  1D80                     l2167:
 11791                           
 11792                           ;I2c.c: 48:     PIR1 = PIR1 & ~0x08;
 11793  1D80  080C               	movf	12,w	;volatile
 11794  1D81  39F7               	andlw	247
 11795  1D82  008C               	movwf	12	;volatile
 11796  1D83                     l2169:
 11797                           
 11798                           ;I2c.c: 49:     I2c_MasterWait();
 11799  1D83  160A  158A  2432  160A  158A  	fcall	_I2c_MasterWait
 11800  1D88                     l2171:
 11801                           
 11802                           ;I2c.c: 50:     return SSPBUF;
 11803  1D88  1283               	bcf	3,5	;RP0=0, select bank0
 11804  1D89  1303               	bcf	3,6	;RP1=0, select bank0
 11805  1D8A  0813               	movf	19,w	;volatile
 11806  1D8B                     l516:
 11807  1D8B  0008               	return
 11808  1D8C                     __end_of_I2c_Read:
 11809                           
 11810                           	psect	text60
 11811  1C3F                     __ptext60:	
 11812 ;; *************** function _I2c_NACK *****************
 11813 ;; Defined at:
 11814 ;;		line 60 in file "I2c.c"
 11815 ;; Parameters:    Size  Location     Type
 11816 ;;		None
 11817 ;; Auto vars:     Size  Location     Type
 11818 ;;		None
 11819 ;; Return value:  Size  Location     Type
 11820 ;;                  1    wreg      void 
 11821 ;; Registers used:
 11822 ;;		wreg, status,2, status,0, pclath, cstack
 11823 ;; Tracked objects:
 11824 ;;		On entry : 0/0
 11825 ;;		On exit  : 0/0
 11826 ;;		Unchanged: 0/0
 11827 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11828 ;;      Params:         0       0       0       0       0
 11829 ;;      Locals:         0       0       0       0       0
 11830 ;;      Temps:          0       0       0       0       0
 11831 ;;      Totals:         0       0       0       0       0
 11832 ;;Total ram usage:        0 bytes
 11833 ;; Hardware stack levels used:    1
 11834 ;; Hardware stack levels required when called:    4
 11835 ;; This function calls:
 11836 ;;		_I2c_MasterWait
 11837 ;; This function is called by:
 11838 ;;		_Eeprom_Read
 11839 ;; This function uses a non-reentrant model
 11840 ;;
 11841                           
 11842                           
 11843                           ;psect for function _I2c_NACK
 11844  1C3F                     _I2c_NACK:
 11845  1C3F                     l2175:	
 11846                           ;incstack = 0
 11847                           ; Regs used in _I2c_NACK: [wreg+status,2+status,0+pclath+cstack]
 11848                           
 11849                           
 11850                           ;I2c.c: 62:     SSPCON2 = SSPCON2 | 0x20;
 11851  1C3F  1683               	bsf	3,5	;RP0=1, select bank1
 11852  1C40  1303               	bcf	3,6	;RP1=0, select bank1
 11853  1C41  0811               	movf	17,w	;volatile
 11854  1C42  3820               	iorlw	32
 11855  1C43  0091               	movwf	17	;volatile
 11856  1C44                     l2177:
 11857                           
 11858                           ;I2c.c: 63:     I2c_MasterWait();
 11859  1C44  160A  158A  2432  160A  158A  	fcall	_I2c_MasterWait
 11860  1C49                     l2179:
 11861                           
 11862                           ;I2c.c: 64:     SSPCON2 = SSPCON2 | 0x10;
 11863  1C49  1683               	bsf	3,5	;RP0=1, select bank1
 11864  1C4A  1303               	bcf	3,6	;RP1=0, select bank1
 11865  1C4B  0811               	movf	17,w	;volatile
 11866  1C4C  3810               	iorlw	16
 11867  1C4D  0091               	movwf	17	;volatile
 11868  1C4E                     l522:
 11869  1C4E  0008               	return
 11870  1C4F                     __end_of_I2c_NACK:
 11871                           
 11872                           	psect	text61
 11873  1D40                     __ptext61:	
 11874 ;; *************** function _I2c_MasterWrite *****************
 11875 ;; Defined at:
 11876 ;;		line 34 in file "I2c.c"
 11877 ;; Parameters:    Size  Location     Type
 11878 ;;  Buffer          1    wreg     unsigned char 
 11879 ;; Auto vars:     Size  Location     Type
 11880 ;;  Buffer          1    0[BANK0 ] unsigned char 
 11881 ;; Return value:  Size  Location     Type
 11882 ;;                  1    wreg      unsigned char 
 11883 ;; Registers used:
 11884 ;;		wreg, status,2, status,0, pclath, cstack
 11885 ;; Tracked objects:
 11886 ;;		On entry : 0/0
 11887 ;;		On exit  : 0/0
 11888 ;;		Unchanged: 0/0
 11889 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11890 ;;      Params:         0       0       0       0       0
 11891 ;;      Locals:         0       1       0       0       0
 11892 ;;      Temps:          0       0       0       0       0
 11893 ;;      Totals:         0       1       0       0       0
 11894 ;;Total ram usage:        1 bytes
 11895 ;; Hardware stack levels used:    1
 11896 ;; Hardware stack levels required when called:    4
 11897 ;; This function calls:
 11898 ;;		_I2c_MasterWait
 11899 ;; This function is called by:
 11900 ;;		_Eeprom_Write
 11901 ;;		_Eeprom_WritePage
 11902 ;;		_Eeprom_Read
 11903 ;;		_Eeprom_ReadPage
 11904 ;; This function uses a non-reentrant model
 11905 ;;
 11906                           
 11907                           
 11908                           ;psect for function _I2c_MasterWrite
 11909  1D40                     _I2c_MasterWrite:
 11910                           
 11911                           ;incstack = 0
 11912                           ; Regs used in _I2c_MasterWrite: [wreg+status,2+status,0+pclath+cstack]
 11913                           ;I2c_MasterWrite@Buffer stored from wreg
 11914  1D40  1283               	bcf	3,5	;RP0=0, select bank0
 11915  1D41  1303               	bcf	3,6	;RP1=0, select bank0
 11916  1D42  00A0               	movwf	I2c_MasterWrite@Buffer
 11917  1D43                     l2057:
 11918                           
 11919                           ;I2c.c: 34: uint8_t I2c_MasterWrite( uint8_t Buffer );I2c.c: 35: {;I2c.c: 36:     I2c_Ma
      +                          sterWait();
 11920  1D43  160A  158A  2432  160A  158A  	fcall	_I2c_MasterWait
 11921  1D48                     l2059:
 11922                           
 11923                           ;I2c.c: 37:     SSPBUF = Buffer;
 11924  1D48  1283               	bcf	3,5	;RP0=0, select bank0
 11925  1D49  1303               	bcf	3,6	;RP1=0, select bank0
 11926  1D4A  0820               	movf	I2c_MasterWrite@Buffer,w
 11927  1D4B  0093               	movwf	19	;volatile
 11928  1D4C                     l507:	
 11929                           ;I2c.c: 38:     while( !( PIR1 & 0x08 ) );
 11930                           
 11931  1D4C  1D8C               	btfss	12,3	;volatile
 11932  1D4D  2D4F               	goto	u1851
 11933  1D4E  2D50               	goto	u1850
 11934  1D4F                     u1851:
 11935  1D4F  2D4C               	goto	l507
 11936  1D50                     u1850:
 11937  1D50                     l2061:
 11938                           
 11939                           ;I2c.c: 39:     PIR1 = PIR1 & ~0x08;
 11940  1D50  080C               	movf	12,w	;volatile
 11941  1D51  39F7               	andlw	247
 11942  1D52  008C               	movwf	12	;volatile
 11943                           
 11944                           ;I2c.c: 40:     return ( SSPCON2 & 0x40 );
 11945  1D53  1683               	bsf	3,5	;RP0=1, select bank1
 11946  1D54  1303               	bcf	3,6	;RP1=0, select bank1
 11947  1D55  0811               	movf	17,w	;volatile
 11948  1D56  3940               	andlw	64
 11949  1D57                     l510:
 11950  1D57  0008               	return
 11951  1D58                     __end_of_I2c_MasterWrite:
 11952                           
 11953                           	psect	text62
 11954  1C04                     __ptext62:	
 11955 ;; *************** function _I2c_MasterStop *****************
 11956 ;; Defined at:
 11957 ;;		line 28 in file "I2c.c"
 11958 ;; Parameters:    Size  Location     Type
 11959 ;;		None
 11960 ;; Auto vars:     Size  Location     Type
 11961 ;;		None
 11962 ;; Return value:  Size  Location     Type
 11963 ;;                  1    wreg      void 
 11964 ;; Registers used:
 11965 ;;		wreg, status,2, status,0, pclath, cstack
 11966 ;; Tracked objects:
 11967 ;;		On entry : 0/0
 11968 ;;		On exit  : 0/0
 11969 ;;		Unchanged: 0/0
 11970 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11971 ;;      Params:         0       0       0       0       0
 11972 ;;      Locals:         0       0       0       0       0
 11973 ;;      Temps:          0       0       0       0       0
 11974 ;;      Totals:         0       0       0       0       0
 11975 ;;Total ram usage:        0 bytes
 11976 ;; Hardware stack levels used:    1
 11977 ;; Hardware stack levels required when called:    4
 11978 ;; This function calls:
 11979 ;;		_I2c_MasterWait
 11980 ;; This function is called by:
 11981 ;;		_Eeprom_Write
 11982 ;;		_Eeprom_WritePage
 11983 ;;		_Eeprom_Read
 11984 ;;		_Eeprom_ReadPage
 11985 ;; This function uses a non-reentrant model
 11986 ;;
 11987                           
 11988                           
 11989                           ;psect for function _I2c_MasterStop
 11990  1C04                     _I2c_MasterStop:
 11991  1C04                     l2065:	
 11992                           ;incstack = 0
 11993                           ; Regs used in _I2c_MasterStop: [wreg+status,2+status,0+pclath+cstack]
 11994                           
 11995                           
 11996                           ;I2c.c: 30:     I2c_MasterWait();
 11997  1C04  160A  158A  2432  160A  158A  	fcall	_I2c_MasterWait
 11998  1C09                     l2067:
 11999                           
 12000                           ;I2c.c: 31:     SSPCON2 = SSPCON2 | 0x04;
 12001  1C09  1683               	bsf	3,5	;RP0=1, select bank1
 12002  1C0A  1303               	bcf	3,6	;RP1=0, select bank1
 12003  1C0B  0811               	movf	17,w	;volatile
 12004  1C0C  3804               	iorlw	4
 12005  1C0D  0091               	movwf	17	;volatile
 12006  1C0E                     l504:
 12007  1C0E  0008               	return
 12008  1C0F                     __end_of_I2c_MasterStop:
 12009                           
 12010                           	psect	text63
 12011  1BF9                     __ptext63:	
 12012 ;; *************** function _I2c_MasterStart *****************
 12013 ;; Defined at:
 12014 ;;		line 16 in file "I2c.c"
 12015 ;; Parameters:    Size  Location     Type
 12016 ;;		None
 12017 ;; Auto vars:     Size  Location     Type
 12018 ;;		None
 12019 ;; Return value:  Size  Location     Type
 12020 ;;                  1    wreg      void 
 12021 ;; Registers used:
 12022 ;;		wreg, status,2, status,0, pclath, cstack
 12023 ;; Tracked objects:
 12024 ;;		On entry : 0/0
 12025 ;;		On exit  : 0/0
 12026 ;;		Unchanged: 0/0
 12027 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12028 ;;      Params:         0       0       0       0       0
 12029 ;;      Locals:         0       0       0       0       0
 12030 ;;      Temps:          0       0       0       0       0
 12031 ;;      Totals:         0       0       0       0       0
 12032 ;;Total ram usage:        0 bytes
 12033 ;; Hardware stack levels used:    1
 12034 ;; Hardware stack levels required when called:    4
 12035 ;; This function calls:
 12036 ;;		_I2c_MasterWait
 12037 ;; This function is called by:
 12038 ;;		_Eeprom_Write
 12039 ;;		_Eeprom_WritePage
 12040 ;;		_Eeprom_Read
 12041 ;;		_Eeprom_ReadPage
 12042 ;; This function uses a non-reentrant model
 12043 ;;
 12044                           
 12045                           
 12046                           ;psect for function _I2c_MasterStart
 12047  1BF9                     _I2c_MasterStart:
 12048  1BF9                     l2049:	
 12049                           ;incstack = 0
 12050                           ; Regs used in _I2c_MasterStart: [wreg+status,2+status,0+pclath+cstack]
 12051                           
 12052                           
 12053                           ;I2c.c: 18:     I2c_MasterWait();
 12054  1BF9  160A  158A  2432  160A  158A  	fcall	_I2c_MasterWait
 12055  1BFE                     l2051:
 12056                           
 12057                           ;I2c.c: 19:     SSPCON2 = SSPCON2 | 0x01;
 12058  1BFE  1683               	bsf	3,5	;RP0=1, select bank1
 12059  1BFF  1303               	bcf	3,6	;RP1=0, select bank1
 12060  1C00  0811               	movf	17,w	;volatile
 12061  1C01  3801               	iorlw	1
 12062  1C02  0091               	movwf	17	;volatile
 12063  1C03                     l498:
 12064  1C03  0008               	return
 12065  1C04                     __end_of_I2c_MasterStart:
 12066                           
 12067                           	psect	text64
 12068  1BEE                     __ptext64:	
 12069 ;; *************** function _I2c_MasterRepeatedStart *****************
 12070 ;; Defined at:
 12071 ;;		line 22 in file "I2c.c"
 12072 ;; Parameters:    Size  Location     Type
 12073 ;;		None
 12074 ;; Auto vars:     Size  Location     Type
 12075 ;;		None
 12076 ;; Return value:  Size  Location     Type
 12077 ;;                  1    wreg      void 
 12078 ;; Registers used:
 12079 ;;		wreg, status,2, status,0, pclath, cstack
 12080 ;; Tracked objects:
 12081 ;;		On entry : 0/0
 12082 ;;		On exit  : 0/0
 12083 ;;		Unchanged: 0/0
 12084 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12085 ;;      Params:         0       0       0       0       0
 12086 ;;      Locals:         0       0       0       0       0
 12087 ;;      Temps:          0       0       0       0       0
 12088 ;;      Totals:         0       0       0       0       0
 12089 ;;Total ram usage:        0 bytes
 12090 ;; Hardware stack levels used:    1
 12091 ;; Hardware stack levels required when called:    4
 12092 ;; This function calls:
 12093 ;;		_I2c_MasterWait
 12094 ;; This function is called by:
 12095 ;;		_Eeprom_Write
 12096 ;;		_Eeprom_WritePage
 12097 ;;		_Eeprom_Read
 12098 ;;		_Eeprom_ReadPage
 12099 ;; This function uses a non-reentrant model
 12100 ;;
 12101                           
 12102                           
 12103                           ;psect for function _I2c_MasterRepeatedStart
 12104  1BEE                     _I2c_MasterRepeatedStart:
 12105  1BEE                     l2053:	
 12106                           ;incstack = 0
 12107                           ; Regs used in _I2c_MasterRepeatedStart: [wreg+status,2+status,0+pclath+cstack]
 12108                           
 12109                           
 12110                           ;I2c.c: 24:     I2c_MasterWait();
 12111  1BEE  160A  158A  2432  160A  158A  	fcall	_I2c_MasterWait
 12112  1BF3                     l2055:
 12113                           
 12114                           ;I2c.c: 25:     SSPCON2 = SSPCON2 | 0x02;
 12115  1BF3  1683               	bsf	3,5	;RP0=1, select bank1
 12116  1BF4  1303               	bcf	3,6	;RP1=0, select bank1
 12117  1BF5  0811               	movf	17,w	;volatile
 12118  1BF6  3802               	iorlw	2
 12119  1BF7  0091               	movwf	17	;volatile
 12120  1BF8                     l501:
 12121  1BF8  0008               	return
 12122  1BF9                     __end_of_I2c_MasterRepeatedStart:
 12123                           
 12124                           	psect	text65
 12125  1C32                     __ptext65:	
 12126 ;; *************** function _I2c_MasterWait *****************
 12127 ;; Defined at:
 12128 ;;		line 11 in file "I2c.c"
 12129 ;; Parameters:    Size  Location     Type
 12130 ;;		None
 12131 ;; Auto vars:     Size  Location     Type
 12132 ;;		None
 12133 ;; Return value:  Size  Location     Type
 12134 ;;                  1    wreg      void 
 12135 ;; Registers used:
 12136 ;;		wreg, status,2
 12137 ;; Tracked objects:
 12138 ;;		On entry : 0/0
 12139 ;;		On exit  : 0/0
 12140 ;;		Unchanged: 0/0
 12141 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12142 ;;      Params:         0       0       0       0       0
 12143 ;;      Locals:         0       0       0       0       0
 12144 ;;      Temps:          0       0       0       0       0
 12145 ;;      Totals:         0       0       0       0       0
 12146 ;;Total ram usage:        0 bytes
 12147 ;; Hardware stack levels used:    1
 12148 ;; Hardware stack levels required when called:    3
 12149 ;; This function calls:
 12150 ;;		Nothing
 12151 ;; This function is called by:
 12152 ;;		_I2c_MasterStart
 12153 ;;		_I2c_MasterRepeatedStart
 12154 ;;		_I2c_MasterStop
 12155 ;;		_I2c_MasterWrite
 12156 ;;		_I2c_Read
 12157 ;;		_I2c_ACK
 12158 ;;		_I2c_NACK
 12159 ;; This function uses a non-reentrant model
 12160 ;;
 12161                           
 12162                           
 12163                           ;psect for function _I2c_MasterWait
 12164  1C32                     _I2c_MasterWait:
 12165  1C32                     l1983:	
 12166                           ;incstack = 0
 12167                           ; Regs used in _I2c_MasterWait: [wreg+status,2]
 12168                           
 12169  1C32                     l492:	
 12170                           ;I2c.c: 13:     while ( ( SSPSTAT & 0x04 ) || ( SSPCON2 & 0x1F ) );
 12171                           
 12172  1C32  1683               	bsf	3,5	;RP0=1, select bank1
 12173  1C33  1303               	bcf	3,6	;RP1=0, select bank1
 12174  1C34  1914               	btfsc	20,2	;volatile
 12175  1C35  2C37               	goto	u1691
 12176  1C36  2C38               	goto	u1690
 12177  1C37                     u1691:
 12178  1C37  2C32               	goto	l492
 12179  1C38                     u1690:
 12180  1C38                     l1985:
 12181  1C38  0811               	movf	17,w	;volatile
 12182  1C39  391F               	andlw	31
 12183  1C3A  1D03               	btfss	3,2
 12184  1C3B  2C3D               	goto	u1701
 12185  1C3C  2C3E               	goto	u1700
 12186  1C3D                     u1701:
 12187  1C3D  2C32               	goto	l492
 12188  1C3E                     u1700:
 12189  1C3E                     l495:
 12190  1C3E  0008               	return
 12191  1C3F                     __end_of_I2c_MasterWait:
 12192                           
 12193                           	psect	text66
 12194  1EDC                     __ptext66:	
 12195 ;; *************** function _Eeprom_Init *****************
 12196 ;; Defined at:
 12197 ;;		line 6 in file "Eeprom.c"
 12198 ;; Parameters:    Size  Location     Type
 12199 ;;		None
 12200 ;; Auto vars:     Size  Location     Type
 12201 ;;		None
 12202 ;; Return value:  Size  Location     Type
 12203 ;;                  1    wreg      void 
 12204 ;; Registers used:
 12205 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 12206 ;; Tracked objects:
 12207 ;;		On entry : 0/0
 12208 ;;		On exit  : 0/0
 12209 ;;		Unchanged: 0/0
 12210 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12211 ;;      Params:         0       0       0       0       0
 12212 ;;      Locals:         0       0       0       0       0
 12213 ;;      Temps:          0       0       0       0       0
 12214 ;;      Totals:         0       0       0       0       0
 12215 ;;Total ram usage:        0 bytes
 12216 ;; Hardware stack levels used:    1
 12217 ;; Hardware stack levels required when called:    5
 12218 ;; This function calls:
 12219 ;;		_Gpio_InitPin
 12220 ;;		_I2c_MasterInit
 12221 ;; This function is called by:
 12222 ;;		_HeaterTask_Init
 12223 ;; This function uses a non-reentrant model
 12224 ;;
 12225                           
 12226                           
 12227                           ;psect for function _Eeprom_Init
 12228  1EDC                     _Eeprom_Init:
 12229  1EDC                     l2367:	
 12230                           ;incstack = 0
 12231                           ; Regs used in _Eeprom_Init: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
 12232                           
 12233                           
 12234                           ;Eeprom.c: 8:     I2c_MasterInit( 100000 );
 12235  1EDC  3000               	movlw	0
 12236  1EDD  1283               	bcf	3,5	;RP0=0, select bank0
 12237  1EDE  1303               	bcf	3,6	;RP1=0, select bank0
 12238  1EDF  00C1               	movwf	I2c_MasterInit@BaudRate+3
 12239  1EE0  3001               	movlw	1
 12240  1EE1  00C0               	movwf	I2c_MasterInit@BaudRate+2
 12241  1EE2  3086               	movlw	134
 12242  1EE3  00BF               	movwf	I2c_MasterInit@BaudRate+1
 12243  1EE4  30A0               	movlw	160
 12244  1EE5  00BE               	movwf	I2c_MasterInit@BaudRate
 12245  1EE6  160A  158A  2687  160A  158A  	fcall	_I2c_MasterInit
 12246  1EEB                     l2369:
 12247                           
 12248                           ;Eeprom.c: 9:     Gpio_InitPin(( ( 2 ) ), ( 4 ), ( 1 ));
 12249  1EEB  3004               	movlw	4
 12250  1EEC  00FF               	movwf	btemp+1
 12251  1EED  087F               	movf	btemp+1,w
 12252  1EEE  1283               	bcf	3,5	;RP0=0, select bank0
 12253  1EEF  1303               	bcf	3,6	;RP1=0, select bank0
 12254  1EF0  00A3               	movwf	Gpio_InitPin@Pin
 12255  1EF1  01A4               	clrf	Gpio_InitPin@Mode
 12256  1EF2  0AA4               	incf	Gpio_InitPin@Mode,f
 12257  1EF3  3002               	movlw	2
 12258  1EF4  160A  118A  2157  160A  158A  	fcall	_Gpio_InitPin
 12259  1EF9                     l2371:
 12260                           
 12261                           ;Eeprom.c: 10:     Gpio_InitPin(( ( 2 ) ), ( 3 ), ( 1 ));
 12262  1EF9  3003               	movlw	3
 12263  1EFA  00FF               	movwf	btemp+1
 12264  1EFB  087F               	movf	btemp+1,w
 12265  1EFC  1283               	bcf	3,5	;RP0=0, select bank0
 12266  1EFD  1303               	bcf	3,6	;RP1=0, select bank0
 12267  1EFE  00A3               	movwf	Gpio_InitPin@Pin
 12268  1EFF  01A4               	clrf	Gpio_InitPin@Mode
 12269  1F00  0AA4               	incf	Gpio_InitPin@Mode,f
 12270  1F01  3002               	movlw	2
 12271  1F02  160A  118A  2157  160A  158A  	fcall	_Gpio_InitPin
 12272  1F07                     l256:
 12273  1F07  0008               	return
 12274  1F08                     __end_of_Eeprom_Init:
 12275                           
 12276                           	psect	text67
 12277  1E87                     __ptext67:	
 12278 ;; *************** function _I2c_MasterInit *****************
 12279 ;; Defined at:
 12280 ;;		line 3 in file "I2c.c"
 12281 ;; Parameters:    Size  Location     Type
 12282 ;;  BaudRate        4   30[BANK0 ] unsigned long 
 12283 ;; Auto vars:     Size  Location     Type
 12284 ;;		None
 12285 ;; Return value:  Size  Location     Type
 12286 ;;                  1    wreg      void 
 12287 ;; Registers used:
 12288 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
 12289 ;; Tracked objects:
 12290 ;;		On entry : 0/0
 12291 ;;		On exit  : 0/0
 12292 ;;		Unchanged: 0/0
 12293 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12294 ;;      Params:         0       4       0       0       0
 12295 ;;      Locals:         0       0       0       0       0
 12296 ;;      Temps:          0       0       0       0       0
 12297 ;;      Totals:         0       4       0       0       0
 12298 ;;Total ram usage:        4 bytes
 12299 ;; Hardware stack levels used:    1
 12300 ;; Hardware stack levels required when called:    4
 12301 ;; This function calls:
 12302 ;;		___lldiv
 12303 ;; This function is called by:
 12304 ;;		_Eeprom_Init
 12305 ;; This function uses a non-reentrant model
 12306 ;;
 12307                           
 12308                           
 12309                           ;psect for function _I2c_MasterInit
 12310  1E87                     _I2c_MasterInit:
 12311  1E87                     l2149:	
 12312                           ;incstack = 0
 12313                           ; Regs used in _I2c_MasterInit: [wreg+status,2+status,0+btemp+1+pclath+cstack]
 12314                           
 12315                           
 12316                           ;I2c.c: 3: void I2c_MasterInit( uint32_t BaudRate );I2c.c: 4: {;I2c.c: 5:     SSPSTAT = 
      +                          0;
 12317  1E87  1683               	bsf	3,5	;RP0=1, select bank1
 12318  1E88  1303               	bcf	3,6	;RP1=0, select bank1
 12319  1E89  0194               	clrf	20	;volatile
 12320  1E8A                     l2151:
 12321                           
 12322                           ;I2c.c: 6:     SSPCON = SSPCON | 0x28;
 12323  1E8A  1283               	bcf	3,5	;RP0=0, select bank0
 12324  1E8B  1303               	bcf	3,6	;RP1=0, select bank0
 12325  1E8C  0814               	movf	20,w	;volatile
 12326  1E8D  3828               	iorlw	40
 12327  1E8E  0094               	movwf	20	;volatile
 12328  1E8F                     l2153:
 12329                           
 12330                           ;I2c.c: 7:     SSPCON2 = 0;
 12331  1E8F  1683               	bsf	3,5	;RP0=1, select bank1
 12332  1E90  1303               	bcf	3,6	;RP1=0, select bank1
 12333  1E91  0191               	clrf	17	;volatile
 12334  1E92                     l2155:
 12335                           
 12336                           ;I2c.c: 8:     SSPADD = ( ( ( 16000000 ) / ( 4 ) ) / BaudRate ) - 1;
 12337  1E92  1283               	bcf	3,5	;RP0=0, select bank0
 12338  1E93  1303               	bcf	3,6	;RP1=0, select bank0
 12339  1E94  0841               	movf	I2c_MasterInit@BaudRate+3,w
 12340  1E95  00B3               	movwf	___lldiv@divisor+3
 12341  1E96  0840               	movf	I2c_MasterInit@BaudRate+2,w
 12342  1E97  00B2               	movwf	___lldiv@divisor+2
 12343  1E98  083F               	movf	I2c_MasterInit@BaudRate+1,w
 12344  1E99  00B1               	movwf	___lldiv@divisor+1
 12345  1E9A  083E               	movf	I2c_MasterInit@BaudRate,w
 12346  1E9B  00B0               	movwf	___lldiv@divisor
 12347  1E9C  3000               	movlw	0
 12348  1E9D  00B7               	movwf	___lldiv@dividend+3
 12349  1E9E  303D               	movlw	61
 12350  1E9F  00B6               	movwf	___lldiv@dividend+2
 12351  1EA0  3009               	movlw	9
 12352  1EA1  00B5               	movwf	___lldiv@dividend+1
 12353  1EA2  3000               	movlw	0
 12354  1EA3  00B4               	movwf	___lldiv@dividend
 12355  1EA4  160A  118A  245A  160A  158A  	fcall	___lldiv
 12356  1EA9  1283               	bcf	3,5	;RP0=0, select bank0
 12357  1EAA  1303               	bcf	3,6	;RP1=0, select bank0
 12358  1EAB  0830               	movf	?___lldiv,w
 12359  1EAC  3EFF               	addlw	255
 12360  1EAD  1683               	bsf	3,5	;RP0=1, select bank1
 12361  1EAE  1303               	bcf	3,6	;RP1=0, select bank1
 12362  1EAF  0093               	movwf	19	;volatile
 12363  1EB0                     l489:
 12364  1EB0  0008               	return
 12365  1EB1                     __end_of_I2c_MasterInit:
 12366                           
 12367                           	psect	text68
 12368  145A                     __ptext68:	
 12369 ;; *************** function ___lldiv *****************
 12370 ;; Defined at:
 12371 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\__lldiv.c"
 12372 ;; Parameters:    Size  Location     Type
 12373 ;;  divisor         4   16[BANK0 ] unsigned long 
 12374 ;;  dividend        4   20[BANK0 ] unsigned long 
 12375 ;; Auto vars:     Size  Location     Type
 12376 ;;  quotient        4   25[BANK0 ] unsigned long 
 12377 ;;  counter         1   29[BANK0 ] unsigned char 
 12378 ;; Return value:  Size  Location     Type
 12379 ;;                  4   16[BANK0 ] unsigned long 
 12380 ;; Registers used:
 12381 ;;		wreg, status,2, status,0, btemp+1
 12382 ;; Tracked objects:
 12383 ;;		On entry : 0/0
 12384 ;;		On exit  : 0/0
 12385 ;;		Unchanged: 0/0
 12386 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12387 ;;      Params:         0       8       0       0       0
 12388 ;;      Locals:         0       5       0       0       0
 12389 ;;      Temps:          0       1       0       0       0
 12390 ;;      Totals:         0      14       0       0       0
 12391 ;;Total ram usage:       14 bytes
 12392 ;; Hardware stack levels used:    1
 12393 ;; Hardware stack levels required when called:    3
 12394 ;; This function calls:
 12395 ;;		Nothing
 12396 ;; This function is called by:
 12397 ;;		_TempSensor_GetState
 12398 ;;		_I2c_MasterInit
 12399 ;; This function uses a non-reentrant model
 12400 ;;
 12401                           
 12402                           
 12403                           ;psect for function ___lldiv
 12404  145A                     ___lldiv:
 12405  145A                     l2083:	
 12406                           ;incstack = 0
 12407                           ; Regs used in ___lldiv: [wreg+status,2+status,0+btemp+1]
 12408                           
 12409  145A  3000               	movlw	0
 12410  145B  1283               	bcf	3,5	;RP0=0, select bank0
 12411  145C  1303               	bcf	3,6	;RP1=0, select bank0
 12412  145D  00BC               	movwf	___lldiv@quotient+3
 12413  145E  3000               	movlw	0
 12414  145F  00BB               	movwf	___lldiv@quotient+2
 12415  1460  3000               	movlw	0
 12416  1461  00BA               	movwf	___lldiv@quotient+1
 12417  1462  3000               	movlw	0
 12418  1463  00B9               	movwf	___lldiv@quotient
 12419  1464  0833               	movf	___lldiv@divisor+3,w
 12420  1465  0432               	iorwf	___lldiv@divisor+2,w
 12421  1466  0431               	iorwf	___lldiv@divisor+1,w
 12422  1467  0430               	iorwf	___lldiv@divisor,w
 12423  1468  1903               	skipnz
 12424  1469  2C6B               	goto	u1911
 12425  146A  2C6C               	goto	u1910
 12426  146B                     u1911:
 12427  146B  2CB9               	goto	l2105
 12428  146C                     u1910:
 12429  146C                     l2085:
 12430  146C  01BD               	clrf	___lldiv@counter
 12431  146D  0ABD               	incf	___lldiv@counter,f
 12432  146E  2C7C               	goto	l2091
 12433  146F                     l2087:
 12434  146F  3001               	movlw	1
 12435  1470  00B8               	movwf	??___lldiv
 12436  1471                     u1925:
 12437  1471  1003               	clrc
 12438  1472  0DB0               	rlf	___lldiv@divisor,f
 12439  1473  0DB1               	rlf	___lldiv@divisor+1,f
 12440  1474  0DB2               	rlf	___lldiv@divisor+2,f
 12441  1475  0DB3               	rlf	___lldiv@divisor+3,f
 12442  1476  0BB8               	decfsz	??___lldiv,f
 12443  1477  2C71               	goto	u1925
 12444  1478                     l2089:
 12445  1478  3001               	movlw	1
 12446  1479  00FF               	movwf	btemp+1
 12447  147A  087F               	movf	btemp+1,w
 12448  147B  07BD               	addwf	___lldiv@counter,f
 12449  147C                     l2091:
 12450  147C  1FB3               	btfss	___lldiv@divisor+3,7
 12451  147D  2C7F               	goto	u1931
 12452  147E  2C80               	goto	u1930
 12453  147F                     u1931:
 12454  147F  2C6F               	goto	l2087
 12455  1480                     u1930:
 12456  1480                     l2093:
 12457  1480  3001               	movlw	1
 12458  1481  00B8               	movwf	??___lldiv
 12459  1482                     u1945:
 12460  1482  1003               	clrc
 12461  1483  0DB9               	rlf	___lldiv@quotient,f
 12462  1484  0DBA               	rlf	___lldiv@quotient+1,f
 12463  1485  0DBB               	rlf	___lldiv@quotient+2,f
 12464  1486  0DBC               	rlf	___lldiv@quotient+3,f
 12465  1487  0BB8               	decfsz	??___lldiv,f
 12466  1488  2C82               	goto	u1945
 12467  1489                     l2095:
 12468  1489  0833               	movf	___lldiv@divisor+3,w
 12469  148A  0237               	subwf	___lldiv@dividend+3,w
 12470  148B  1D03               	skipz
 12471  148C  2C97               	goto	u1955
 12472  148D  0832               	movf	___lldiv@divisor+2,w
 12473  148E  0236               	subwf	___lldiv@dividend+2,w
 12474  148F  1D03               	skipz
 12475  1490  2C97               	goto	u1955
 12476  1491  0831               	movf	___lldiv@divisor+1,w
 12477  1492  0235               	subwf	___lldiv@dividend+1,w
 12478  1493  1D03               	skipz
 12479  1494  2C97               	goto	u1955
 12480  1495  0830               	movf	___lldiv@divisor,w
 12481  1496  0234               	subwf	___lldiv@dividend,w
 12482  1497                     u1955:
 12483  1497  1C03               	skipc
 12484  1498  2C9A               	goto	u1951
 12485  1499  2C9B               	goto	u1950
 12486  149A                     u1951:
 12487  149A  2CAA               	goto	l2101
 12488  149B                     u1950:
 12489  149B                     l2097:
 12490  149B  0830               	movf	___lldiv@divisor,w
 12491  149C  02B4               	subwf	___lldiv@dividend,f
 12492  149D  0831               	movf	___lldiv@divisor+1,w
 12493  149E  1C03               	skipc
 12494  149F  0F31               	incfsz	___lldiv@divisor+1,w
 12495  14A0  02B5               	subwf	___lldiv@dividend+1,f
 12496  14A1  0832               	movf	___lldiv@divisor+2,w
 12497  14A2  1C03               	skipc
 12498  14A3  0F32               	incfsz	___lldiv@divisor+2,w
 12499  14A4  02B6               	subwf	___lldiv@dividend+2,f
 12500  14A5  0833               	movf	___lldiv@divisor+3,w
 12501  14A6  1C03               	skipc
 12502  14A7  0F33               	incfsz	___lldiv@divisor+3,w
 12503  14A8  02B7               	subwf	___lldiv@dividend+3,f
 12504  14A9                     l2099:
 12505  14A9  1439               	bsf	___lldiv@quotient,0
 12506  14AA                     l2101:
 12507  14AA  3001               	movlw	1
 12508  14AB                     u1965:
 12509  14AB  1003               	clrc
 12510  14AC  0CB3               	rrf	___lldiv@divisor+3,f
 12511  14AD  0CB2               	rrf	___lldiv@divisor+2,f
 12512  14AE  0CB1               	rrf	___lldiv@divisor+1,f
 12513  14AF  0CB0               	rrf	___lldiv@divisor,f
 12514  14B0  3EFF               	addlw	-1
 12515  14B1  1D03               	skipz
 12516  14B2  2CAB               	goto	u1965
 12517  14B3                     l2103:
 12518  14B3  3001               	movlw	1
 12519  14B4  02BD               	subwf	___lldiv@counter,f
 12520  14B5  1D03               	btfss	3,2
 12521  14B6  2CB8               	goto	u1971
 12522  14B7  2CB9               	goto	u1970
 12523  14B8                     u1971:
 12524  14B8  2C80               	goto	l2093
 12525  14B9                     u1970:
 12526  14B9                     l2105:
 12527  14B9  083C               	movf	___lldiv@quotient+3,w
 12528  14BA  00B3               	movwf	?___lldiv+3
 12529  14BB  083B               	movf	___lldiv@quotient+2,w
 12530  14BC  00B2               	movwf	?___lldiv+2
 12531  14BD  083A               	movf	___lldiv@quotient+1,w
 12532  14BE  00B1               	movwf	?___lldiv+1
 12533  14BF  0839               	movf	___lldiv@quotient,w
 12534  14C0  00B0               	movwf	?___lldiv
 12535  14C1                     l671:
 12536  14C1  0008               	return
 12537  14C2                     __end_of___lldiv:
 12538                           
 12539                           	psect	text69
 12540  1157                     __ptext69:	
 12541 ;; *************** function _Gpio_InitPin *****************
 12542 ;; Defined at:
 12543 ;;		line 18 in file "Gpio.c"
 12544 ;; Parameters:    Size  Location     Type
 12545 ;;  Id              1    wreg     unsigned char 
 12546 ;;  Pin             1    3[BANK0 ] unsigned char 
 12547 ;;  Mode            1    4[BANK0 ] unsigned char 
 12548 ;; Auto vars:     Size  Location     Type
 12549 ;;  Id              1   17[BANK0 ] unsigned char 
 12550 ;; Return value:  Size  Location     Type
 12551 ;;                  1    wreg      void 
 12552 ;; Registers used:
 12553 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
 12554 ;; Tracked objects:
 12555 ;;		On entry : 0/0
 12556 ;;		On exit  : 0/0
 12557 ;;		Unchanged: 0/0
 12558 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12559 ;;      Params:         0       2       0       0       0
 12560 ;;      Locals:         0       1       0       0       0
 12561 ;;      Temps:          0      12       0       0       0
 12562 ;;      Totals:         0      15       0       0       0
 12563 ;;Total ram usage:       15 bytes
 12564 ;; Hardware stack levels used:    1
 12565 ;; Hardware stack levels required when called:    3
 12566 ;; This function calls:
 12567 ;;		Nothing
 12568 ;; This function is called by:
 12569 ;;		_Led_Init
 12570 ;;		_Switch_Init
 12571 ;;		_Ssd_Init
 12572 ;;		_Eeprom_Init
 12573 ;;		_TempSensor_Init
 12574 ;;		_TempControl_Init
 12575 ;; This function uses a non-reentrant model
 12576 ;;
 12577                           
 12578                           
 12579                           ;psect for function _Gpio_InitPin
 12580  1157                     _Gpio_InitPin:
 12581                           
 12582                           ;incstack = 0
 12583                           ; Regs used in _Gpio_InitPin: [wreg-fsr0h+status,2+status,0+btemp+1]
 12584                           ;Gpio_InitPin@Id stored from wreg
 12585  1157  1283               	bcf	3,5	;RP0=0, select bank0
 12586  1158  1303               	bcf	3,6	;RP1=0, select bank0
 12587  1159  00B1               	movwf	Gpio_InitPin@Id
 12588  115A                     l2135:
 12589                           
 12590                           ;Gpio.c: 18: void Gpio_InitPin( Id_t Id, UBaseType_t Pin, UBaseType_t Mode );Gpio.c: 19:
      +                           {;Gpio.c: 20:  Gpio[ Id ]->TRIS = ( Gpio[ Id ]->TRIS & ~( 1 << Pin ) ) | ( Mode << Pin 
      +                          );
 12591  115A  0824               	movf	Gpio_InitPin@Mode,w
 12592  115B  00A5               	movwf	??_Gpio_InitPin
 12593  115C  0A23               	incf	Gpio_InitPin@Pin,w
 12594  115D  2960               	goto	u2024
 12595  115E                     u2025:
 12596  115E  1003               	clrc
 12597  115F  0DA5               	rlf	??_Gpio_InitPin,f
 12598  1160                     u2024:
 12599  1160  3EFF               	addlw	-1
 12600  1161  1D03               	skipz
 12601  1162  295E               	goto	u2025
 12602  1163  0831               	movf	Gpio_InitPin@Id,w
 12603  1164  00A6               	movwf	??_Gpio_InitPin+1
 12604  1165  0726               	addwf	??_Gpio_InitPin+1,w
 12605  1166  3EE6               	addlw	(low (_Gpio| 0))& (0+255)
 12606  1167  0084               	movwf	4
 12607  1168  1383               	bcf	3,7	;select IRP bank1
 12608  1169  0800               	movf	0,w
 12609  116A  00A7               	movwf	??_Gpio_InitPin+2
 12610  116B  0A84               	incf	4,f
 12611  116C  0800               	movf	0,w
 12612  116D  00A8               	movwf	??_Gpio_InitPin+3
 12613  116E  0827               	movf	??_Gpio_InitPin+2,w
 12614  116F  3E80               	addlw	128
 12615  1170  00A9               	movwf	??_Gpio_InitPin+4
 12616  1171  0828               	movf	??_Gpio_InitPin+3,w
 12617  1172  1803               	skipnc
 12618  1173  3E01               	addlw	1
 12619  1174  3E00               	addlw	0
 12620  1175  00AA               	movwf	??_Gpio_InitPin+5
 12621  1176  0829               	movf	??_Gpio_InitPin+4,w
 12622  1177  0084               	movwf	4
 12623  1178  1783               	bsf	3,7
 12624  1179  1C2A               	btfss	??_Gpio_InitPin+5,0
 12625  117A  1383               	bcf	3,7
 12626  117B  3001               	movlw	1
 12627  117C  00AB               	movwf	??_Gpio_InitPin+6
 12628  117D  0A23               	incf	Gpio_InitPin@Pin,w
 12629  117E  2981               	goto	u2034
 12630  117F                     u2035:
 12631  117F  1003               	clrc
 12632  1180  0DAB               	rlf	??_Gpio_InitPin+6,f
 12633  1181                     u2034:
 12634  1181  3EFF               	addlw	-1
 12635  1182  1D03               	skipz
 12636  1183  297F               	goto	u2035
 12637  1184  082B               	movf	??_Gpio_InitPin+6,w
 12638  1185  3AFF               	xorlw	255
 12639  1186  0500               	andwf	0,w
 12640  1187  0425               	iorwf	??_Gpio_InitPin,w
 12641  1188  00FF               	movwf	btemp+1
 12642  1189  0831               	movf	Gpio_InitPin@Id,w
 12643  118A  00AC               	movwf	??_Gpio_InitPin+7
 12644  118B  072C               	addwf	??_Gpio_InitPin+7,w
 12645  118C  3EE6               	addlw	(low (_Gpio| 0))& (0+255)
 12646  118D  0084               	movwf	4
 12647  118E  1383               	bcf	3,7	;select IRP bank1
 12648  118F  0800               	movf	0,w
 12649  1190  00AD               	movwf	??_Gpio_InitPin+8
 12650  1191  0A84               	incf	4,f
 12651  1192  0800               	movf	0,w
 12652  1193  00AE               	movwf	??_Gpio_InitPin+9
 12653  1194  082D               	movf	??_Gpio_InitPin+8,w
 12654  1195  3E80               	addlw	128
 12655  1196  00AF               	movwf	??_Gpio_InitPin+10
 12656  1197  082E               	movf	??_Gpio_InitPin+9,w
 12657  1198  1803               	skipnc
 12658  1199  3E01               	addlw	1
 12659  119A  3E00               	addlw	0
 12660  119B  00B0               	movwf	??_Gpio_InitPin+11
 12661  119C  082F               	movf	??_Gpio_InitPin+10,w
 12662  119D  0084               	movwf	4
 12663  119E  1783               	bsf	3,7
 12664  119F  1C30               	btfss	??_Gpio_InitPin+11,0
 12665  11A0  1383               	bcf	3,7
 12666  11A1  087F               	movf	btemp+1,w
 12667  11A2  0080               	movwf	0
 12668  11A3                     l537:
 12669  11A3  0008               	return
 12670  11A4                     __end_of_Gpio_InitPin:
 12671                           
 12672                           	psect	text70
 12673  1CBE                     __ptext70:	
 12674 ;; *************** function _SysTick_Handler *****************
 12675 ;; Defined at:
 12676 ;;		line 24 in file "main.c"
 12677 ;; Parameters:    Size  Location     Type
 12678 ;;		None
 12679 ;; Auto vars:     Size  Location     Type
 12680 ;;		None
 12681 ;; Return value:  Size  Location     Type
 12682 ;;                  1    wreg      void 
 12683 ;; Registers used:
 12684 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 12685 ;; Tracked objects:
 12686 ;;		On entry : 0/0
 12687 ;;		On exit  : 0/0
 12688 ;;		Unchanged: 0/0
 12689 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12690 ;;      Params:         0       0       0       0       0
 12691 ;;      Locals:         0       0       0       0       0
 12692 ;;      Temps:          4       0       0       0       0
 12693 ;;      Totals:         4       0       0       0       0
 12694 ;;Total ram usage:        4 bytes
 12695 ;; Hardware stack levels used:    1
 12696 ;; Hardware stack levels required when called:    2
 12697 ;; This function calls:
 12698 ;;		_Scheduler_update
 12699 ;; This function is called by:
 12700 ;;		Interrupt level 1
 12701 ;; This function uses a non-reentrant model
 12702 ;;
 12703                           
 12704                           
 12705                           ;psect for function _SysTick_Handler
 12706  1CBE                     _SysTick_Handler:
 12707  1CBE                     i1l2767:
 12708                           
 12709                           ;main.c: 26:     ( PIR1 = PIR1 & ~0x04 );
 12710  1CBE  080C               	movf	12,w	;volatile
 12711  1CBF  39FB               	andlw	251
 12712  1CC0  008C               	movwf	12	;volatile
 12713  1CC1                     i1l2769:
 12714                           
 12715                           ;main.c: 27:     Scheduler_update();
 12716  1CC1  160A  118A  26E4  160A  158A  	fcall	_Scheduler_update
 12717  1CC6                     i1l43:
 12718  1CC6  0879               	movf	??_SysTick_Handler+3,w
 12719  1CC7  1283               	bcf	3,5	;RP0=0, select bank0
 12720  1CC8  1303               	bcf	3,6	;RP1=0, select bank0
 12721  1CC9  00FF               	movwf	btemp+1
 12722  1CCA  0878               	movf	??_SysTick_Handler+2,w
 12723  1CCB  008A               	movwf	10
 12724  1CCC  0877               	movf	??_SysTick_Handler+1,w
 12725  1CCD  0084               	movwf	4
 12726  1CCE  0E76               	swapf	??_SysTick_Handler^(0+4294967168),w
 12727  1CCF  0083               	movwf	3
 12728  1CD0  0EFE               	swapf	btemp,f
 12729  1CD1  0E7E               	swapf	btemp,w
 12730  1CD2  0009               	retfie
 12731  1CD3                     __end_of_SysTick_Handler:
 12732                           
 12733                           	psect	intentry
 12734  0004                     __pintentry:	
 12735                           ;incstack = 0
 12736                           ; Regs used in _SysTick_Handler: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
 12737                           
 12738  0004                     interrupt_function:
 12739  007E                     saved_w	set	btemp
 12740  0004  00FE               	movwf	btemp
 12741  0005  0E03               	swapf	3,w
 12742  0006  00F6               	movwf	??_SysTick_Handler
 12743  0007  0804               	movf	4,w
 12744  0008  00F7               	movwf	??_SysTick_Handler+1
 12745  0009  080A               	movf	10,w
 12746  000A  00F8               	movwf	??_SysTick_Handler+2
 12747  000B  1283               	bcf	3,5	;RP0=0, select bank0
 12748  000C  1303               	bcf	3,6	;RP1=0, select bank0
 12749  000D  087F               	movf	btemp+1,w
 12750  000E  00F9               	movwf	??_SysTick_Handler+3
 12751  000F  160A  158A  2CBE   	ljmp	_SysTick_Handler
 12752                           
 12753                           	psect	text71
 12754  16E4                     __ptext71:	
 12755 ;; *************** function _Scheduler_update *****************
 12756 ;; Defined at:
 12757 ;;		line 95 in file "Scheduler.c"
 12758 ;; Parameters:    Size  Location     Type
 12759 ;;		None
 12760 ;; Auto vars:     Size  Location     Type
 12761 ;;  index           2    4[COMMON] unsigned int 
 12762 ;; Return value:  Size  Location     Type
 12763 ;;                  1    wreg      void 
 12764 ;; Registers used:
 12765 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 12766 ;; Tracked objects:
 12767 ;;		On entry : 0/0
 12768 ;;		On exit  : 0/0
 12769 ;;		Unchanged: 0/0
 12770 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12771 ;;      Params:         0       0       0       0       0
 12772 ;;      Locals:         2       0       0       0       0
 12773 ;;      Temps:          1       0       0       0       0
 12774 ;;      Totals:         3       0       0       0       0
 12775 ;;Total ram usage:        3 bytes
 12776 ;; Hardware stack levels used:    1
 12777 ;; Hardware stack levels required when called:    1
 12778 ;; This function calls:
 12779 ;;		i1___bmul
 12780 ;; This function is called by:
 12781 ;;		_SysTick_Handler
 12782 ;; This function uses a non-reentrant model
 12783 ;;
 12784                           
 12785                           
 12786                           ;psect for function _Scheduler_update
 12787  16E4                     _Scheduler_update:
 12788  16E4                     i1l2585:	
 12789                           ;incstack = 0
 12790                           ; Regs used in _Scheduler_update: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
 12791                           
 12792                           
 12793                           ;Scheduler.c: 97:  size_t index = 0;
 12794  16E4  01F4               	clrf	Scheduler_update@index
 12795  16E5  01F5               	clrf	Scheduler_update@index+1
 12796                           
 12797                           ;Scheduler.c: 98:  for( index = 0; index < ( ( UBaseType_t ) 10 ); index++ )
 12798  16E6  01F4               	clrf	Scheduler_update@index
 12799  16E7  01F5               	clrf	Scheduler_update@index+1
 12800  16E8                     i1l2591:
 12801                           
 12802                           ;Scheduler.c: 99:  {;Scheduler.c: 100:   if( scheduler.task[ index ].pointer != 0 )
 12803  16E8  3006               	movlw	6
 12804  16E9  00FF               	movwf	btemp+1
 12805  16EA  087F               	movf	btemp+1,w
 12806  16EB  00F0               	movwf	i1___bmul@multiplicand
 12807  16EC  0874               	movf	Scheduler_update@index,w
 12808  16ED  160A  158A  24A9  160A  118A  	fcall	i1___bmul
 12809  16F2  3E90               	addlw	(low (_scheduler| (0+256)))& (0+255)
 12810  16F3  0084               	movwf	4
 12811  16F4  1783               	bsf	3,7	;select IRP bank3
 12812  16F5  0800               	movf	0,w
 12813  16F6  1903               	btfsc	3,2
 12814  16F7  2EF9               	goto	u316_21
 12815  16F8  2EFA               	goto	u316_20
 12816  16F9                     u316_21:
 12817  16F9  2F5C               	goto	i1l2599
 12818  16FA                     u316_20:
 12819  16FA                     i1l2593:
 12820                           
 12821                           ;Scheduler.c: 101:   {;Scheduler.c: 102:    if( scheduler.task[ index ].delay == 0 )
 12822  16FA  3006               	movlw	6
 12823  16FB  00FF               	movwf	btemp+1
 12824  16FC  087F               	movf	btemp+1,w
 12825  16FD  00F0               	movwf	i1___bmul@multiplicand
 12826  16FE  0874               	movf	Scheduler_update@index,w
 12827  16FF  160A  158A  24A9  160A  118A  	fcall	i1___bmul
 12828  1704  3E93               	addlw	(low ((_scheduler| (0+256)+3)))& (0+255)
 12829  1705  0084               	movwf	4
 12830  1706  1783               	bsf	3,7	;select IRP bank3
 12831  1707  0800               	movf	0,w
 12832  1708  1D03               	btfss	3,2
 12833  1709  2F0B               	goto	u317_21
 12834  170A  2F0C               	goto	u317_20
 12835  170B                     u317_21:
 12836  170B  2F3B               	goto	i1l137
 12837  170C                     u317_20:
 12838  170C                     i1l2595:
 12839                           
 12840                           ;Scheduler.c: 103:    {;Scheduler.c: 104:     scheduler.task[ index ].runMe = 1;
 12841  170C  3006               	movlw	6
 12842  170D  00FF               	movwf	btemp+1
 12843  170E  087F               	movf	btemp+1,w
 12844  170F  00F0               	movwf	i1___bmul@multiplicand
 12845  1710  0874               	movf	Scheduler_update@index,w
 12846  1711  160A  158A  24A9  160A  118A  	fcall	i1___bmul
 12847  1716  3E95               	addlw	(low ((_scheduler| (0+256)+5)))& (0+255)
 12848  1717  0084               	movwf	4
 12849  1718  3001               	movlw	1
 12850  1719  00FF               	movwf	btemp+1
 12851  171A  087F               	movf	btemp+1,w
 12852  171B  1783               	bsf	3,7	;select IRP bank3
 12853  171C  0080               	movwf	0
 12854                           
 12855                           ;Scheduler.c: 105:     scheduler.task[ index ].delay = scheduler.task[ index ].period;
 12856  171D  3006               	movlw	6
 12857  171E  00FF               	movwf	btemp+1
 12858  171F  087F               	movf	btemp+1,w
 12859  1720  00F0               	movwf	i1___bmul@multiplicand
 12860  1721  0874               	movf	Scheduler_update@index,w
 12861  1722  160A  158A  24A9  160A  118A  	fcall	i1___bmul
 12862  1727  3E94               	addlw	(low ((_scheduler| (0+256)+4)))& (0+255)
 12863  1728  0084               	movwf	4
 12864  1729  1783               	bsf	3,7	;select IRP bank3
 12865  172A  0800               	movf	0,w
 12866  172B  00F3               	movwf	??_Scheduler_update
 12867  172C  3006               	movlw	6
 12868  172D  00FF               	movwf	btemp+1
 12869  172E  087F               	movf	btemp+1,w
 12870  172F  00F0               	movwf	i1___bmul@multiplicand
 12871  1730  0874               	movf	Scheduler_update@index,w
 12872  1731  160A  158A  24A9  160A  118A  	fcall	i1___bmul
 12873  1736  3E93               	addlw	(low ((_scheduler| (0+256)+3)))& (0+255)
 12874  1737  0084               	movwf	4
 12875  1738  0873               	movf	??_Scheduler_update,w
 12876  1739  1783               	bsf	3,7	;select IRP bank3
 12877  173A  0080               	movwf	0
 12878  173B                     i1l137:	
 12879                           ;Scheduler.c: 106:    }
 12880                           
 12881                           
 12882                           ;Scheduler.c: 107:    if( scheduler.task[ index ].delay != 0 )
 12883  173B  3006               	movlw	6
 12884  173C  00FF               	movwf	btemp+1
 12885  173D  087F               	movf	btemp+1,w
 12886  173E  00F0               	movwf	i1___bmul@multiplicand
 12887  173F  0874               	movf	Scheduler_update@index,w
 12888  1740  160A  158A  24A9  160A  118A  	fcall	i1___bmul
 12889  1745  3E93               	addlw	(low ((_scheduler| (0+256)+3)))& (0+255)
 12890  1746  0084               	movwf	4
 12891  1747  1783               	bsf	3,7	;select IRP bank3
 12892  1748  0800               	movf	0,w
 12893  1749  1903               	btfsc	3,2
 12894  174A  2F4C               	goto	u318_21
 12895  174B  2F4D               	goto	u318_20
 12896  174C                     u318_21:
 12897  174C  2F5C               	goto	i1l2599
 12898  174D                     u318_20:
 12899  174D                     i1l2597:
 12900                           
 12901                           ;Scheduler.c: 108:    {;Scheduler.c: 109:     scheduler.task[ index ].delay--;
 12902  174D  3006               	movlw	6
 12903  174E  00FF               	movwf	btemp+1
 12904  174F  087F               	movf	btemp+1,w
 12905  1750  00F0               	movwf	i1___bmul@multiplicand
 12906  1751  0874               	movf	Scheduler_update@index,w
 12907  1752  160A  158A  24A9  160A  118A  	fcall	i1___bmul
 12908  1757  3E93               	addlw	(low ((_scheduler| (0+256)+3)))& (0+255)
 12909  1758  0084               	movwf	4
 12910  1759  3001               	movlw	1
 12911  175A  1783               	bsf	3,7	;select IRP bank3
 12912  175B  0280               	subwf	0,f
 12913  175C                     i1l2599:
 12914                           
 12915                           ;Scheduler.c: 112:  }
 12916  175C  3001               	movlw	1
 12917  175D  07F4               	addwf	Scheduler_update@index,f
 12918  175E  1803               	skipnc
 12919  175F  0AF5               	incf	Scheduler_update@index+1,f
 12920  1760  3000               	movlw	0
 12921  1761  07F5               	addwf	Scheduler_update@index+1,f
 12922  1762                     i1l2601:
 12923  1762  3000               	movlw	0
 12924  1763  0275               	subwf	Scheduler_update@index+1,w
 12925  1764  300A               	movlw	10
 12926  1765  1903               	skipnz
 12927  1766  0274               	subwf	Scheduler_update@index,w
 12928  1767  1C03               	skipc
 12929  1768  2F6A               	goto	u319_21
 12930  1769  2F6B               	goto	u319_20
 12931  176A                     u319_21:
 12932  176A  2EE8               	goto	i1l2591
 12933  176B                     u319_20:
 12934  176B                     i1l2603:
 12935                           
 12936                           ;Scheduler.c: 113:  scheduler.interruptFlag = 1;
 12937  176B  3001               	movlw	1
 12938  176C  00FF               	movwf	btemp+1
 12939  176D  087F               	movf	btemp+1,w
 12940  176E  1683               	bsf	3,5	;RP0=1, select bank3
 12941  176F  1703               	bsf	3,6	;RP1=1, select bank3
 12942  1770  00CD               	movwf	(_scheduler^(0+384)+61)	;volatile
 12943  1771                     i1l139:
 12944  1771  0008               	return
 12945  1772                     __end_of_Scheduler_update:
 12946                           
 12947                           	psect	text72
 12948  1CA9                     __ptext72:	
 12949 ;; *************** function i1___bmul *****************
 12950 ;; Defined at:
 12951 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\Umul8.c"
 12952 ;; Parameters:    Size  Location     Type
 12953 ;;  multiplier      1    wreg     unsigned char 
 12954 ;;  multiplicand    1    0[COMMON] unsigned char 
 12955 ;; Auto vars:     Size  Location     Type
 12956 ;;  multiplier      1    2[COMMON] unsigned char 
 12957 ;;  product         1    1[COMMON] unsigned char 
 12958 ;; Return value:  Size  Location     Type
 12959 ;;                  1    wreg      unsigned char 
 12960 ;; Registers used:
 12961 ;;		wreg, status,2, status,0, btemp+1
 12962 ;; Tracked objects:
 12963 ;;		On entry : 0/0
 12964 ;;		On exit  : 0/0
 12965 ;;		Unchanged: 0/0
 12966 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12967 ;;      Params:         1       0       0       0       0
 12968 ;;      Locals:         2       0       0       0       0
 12969 ;;      Temps:          0       0       0       0       0
 12970 ;;      Totals:         3       0       0       0       0
 12971 ;;Total ram usage:        3 bytes
 12972 ;; Hardware stack levels used:    1
 12973 ;; This function calls:
 12974 ;;		Nothing
 12975 ;; This function is called by:
 12976 ;;		_Scheduler_update
 12977 ;; This function uses a non-reentrant model
 12978 ;;
 12979                           
 12980                           
 12981                           ;psect for function i1___bmul
 12982  1CA9                     i1___bmul:
 12983                           
 12984                           ;incstack = 0
 12985                           ; Regs used in i1___bmul: [wreg+status,2+status,0+btemp+1]
 12986                           ;i1___bmul@multiplier stored from wreg
 12987  1CA9  00F2               	movwf	i1___bmul@multiplier
 12988  1CAA                     i1l2569:
 12989  1CAA  01F1               	clrf	i1___bmul@product
 12990  1CAB                     i1l2571:
 12991  1CAB  1C72               	btfss	i1___bmul@multiplier,0
 12992  1CAC  2CAE               	goto	u314_21
 12993  1CAD  2CAF               	goto	u314_20
 12994  1CAE                     u314_21:
 12995  1CAE  2CB3               	goto	i1l2575
 12996  1CAF                     u314_20:
 12997  1CAF                     i1l2573:
 12998  1CAF  0870               	movf	i1___bmul@multiplicand,w
 12999  1CB0  00FF               	movwf	btemp+1
 13000  1CB1  087F               	movf	btemp+1,w
 13001  1CB2  07F1               	addwf	i1___bmul@product,f
 13002  1CB3                     i1l2575:
 13003  1CB3  1003               	clrc
 13004  1CB4  0DF0               	rlf	i1___bmul@multiplicand,f
 13005  1CB5                     i1l2577:
 13006  1CB5  1003               	clrc
 13007  1CB6  0CF2               	rrf	i1___bmul@multiplier,f
 13008  1CB7                     i1l2579:
 13009  1CB7  0872               	movf	i1___bmul@multiplier,w
 13010  1CB8  1D03               	btfss	3,2
 13011  1CB9  2CBB               	goto	u315_21
 13012  1CBA  2CBC               	goto	u315_20
 13013  1CBB                     u315_21:
 13014  1CBB  2CAB               	goto	i1l2571
 13015  1CBC                     u315_20:
 13016  1CBC                     i1l2581:
 13017  1CBC  0871               	movf	i1___bmul@product,w
 13018  1CBD                     i1l661:
 13019  1CBD  0008               	return
 13020  1CBE                     __end_ofi1___bmul:
 13021  0010                     
 13022                           	psect	functab
 13023  004F                     __pfunctab:
 13024  004F                     __fptable:
 13025  004F                     fptable:
 13026  004F  00FF               	movwf	(btemp+1)& (0+127)
 13027  0050  3000               	movlw	high fptable
 13028  0051  008A               	movwf	10
 13029  0052  087F               	movf	(btemp+1)& (0+127),w
 13030  0053  0782               	addwf	2,f
 13031  0054                     fpbase:
 13032  0054  2854               	goto	fpbase	; Call via a null pointer and you will get stuck here.
 13033  0055                     fp__TempSensorTask_Update:
 13034  0055  120A  158A  2C79   	ljmp	_TempSensorTask_Update
 13035  0058                     fp__SwitchTask_Update:
 13036  0058  120A  158A  2966   	ljmp	_SwitchTask_Update
 13037  005B                     fp__HeaterTask_Update:
 13038  005B  120A  118A  2867   	ljmp	_HeaterTask_Update
 13039  005E                     fp__TempControlTask_Update:
 13040  005E  160A  158A  2CFD   	ljmp	_TempControlTask_Update
 13041  0061                     fp__LedTask_Update:
 13042  0061  120A  158A  2B98   	ljmp	_LedTask_Update
 13043  0064                     fp__SsdTask_Update:
 13044  0064  120A  158A  2D7F   	ljmp	_SsdTask_Update
 13045  0067                     __end_of__fptable:
 13046  007E                     btemp	set	126	;btemp
 13047  007E                     wtemp0	set	126
 13048                           
 13049                           	psect	config
 13050                           
 13051                           ;Config register CONFIG @ 0x2007
 13052                           ;	Oscillator Selection bits
 13053                           ;	FOSC = HS, HS oscillator
 13054                           ;	Watchdog Timer Enable bit
 13055                           ;	WDTE = OFF, WDT disabled
 13056                           ;	Power-up Timer Enable bit
 13057                           ;	PWRTE = OFF, PWRT disabled
 13058                           ;	Brown-out Reset Enable bit
 13059                           ;	BOREN = OFF, BOR disabled
 13060                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
 13061                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
 13062                           ;	Data EEPROM Memory Code Protection bit
 13063                           ;	CPD = OFF, Data EEPROM code protection off
 13064                           ;	Flash Program Memory Write Enable bits
 13065                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
 13066                           ;	In-Circuit Debugger Mode bit
 13067                           ;	DEBUG = 0x1, unprogrammed default
 13068                           ;	Flash Program Memory Code Protection bit
 13069                           ;	CP = OFF, Code protection off
 13070  2007                     	org	8199
 13071  2007  3F3A               	dw	16186

Data Sizes:
    Strings     0
    Constant    0
    Data        20
    BSS         174
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      10
    BANK0            80     49      77
    BANK1            80      0      80
    BANK3            96      0      86
    BANK2            96      0       0

Pointer List with Targets:

    Scheduler_dispatchTasks$1433	volatile PTR void  size(2) Largest target is 512
		 -> RAM(DATA[512]), RAM(DATA[512]), NULL(NULL[0]), 

    Scheduler_dispatchTasks$1428	volatile PTR FTN(PTR void ,)void  size(1) Largest target is 1
		 -> Absolute function(), SsdTask_Update(), LedTask_Update(), TempControlTask_Update(), 
		 -> HeaterTask_Update(), TempSensorTask_Update(), SwitchTask_Update(), 

    Scheduler_dispatchTasks$1400$0	PTR void  size(2) Largest target is 512
		 -> RAM(DATA[512]), RAM(DATA[512]), NULL(NULL[0]), 

    Scheduler_dispatchTasks$1405	volatile PTR void  size(2) Largest target is 512
		 -> RAM(DATA[512]), RAM(DATA[512]), NULL(NULL[0]), 

    Scheduler_dispatchTasks$1400	volatile PTR FTN(PTR void ,)void  size(1) Largest target is 1
		 -> Absolute function(), SsdTask_Update(), LedTask_Update(), TempControlTask_Update(), 
		 -> HeaterTask_Update(), TempSensorTask_Update(), SwitchTask_Update(), 

    Absolute function$0	PTR void  size(2) Largest target is 512
		 -> RAM(DATA[512]), RAM(DATA[512]), NULL(NULL[0]), 

    task$0	PTR void  size(2) Largest target is 512
		 -> RAM(DATA[512]), RAM(DATA[512]), NULL(NULL[0]), 

    S210$0$0	PTR void  size(2) Largest target is 512
		 -> RAM(DATA[512]), RAM(DATA[512]), NULL(NULL[0]), 

    Gpio	PTR struct .[5] size(2) Largest target is 1
		 -> PORTE(SFR0[1]), PORTD(SFR0[1]), PORTC(SFR0[1]), PORTB(SFR0[1]), 
		 -> PORTA(SFR0[1]), 

    LedTask_Update@Paramter	PTR void  size(2) Largest target is 512
		 -> RAM(DATA[512]), RAM(DATA[512]), NULL(NULL[0]), 

    TempControlTask_Update@Paramter	PTR void  size(2) Largest target is 512
		 -> RAM(DATA[512]), RAM(DATA[512]), NULL(NULL[0]), 

    TempSensorTask_Update@Paramter	PTR void  size(2) Largest target is 512
		 -> RAM(DATA[512]), RAM(DATA[512]), NULL(NULL[0]), 

    SsdTask_Update@Paramter	PTR void  size(2) Largest target is 512
		 -> RAM(DATA[512]), RAM(DATA[512]), NULL(NULL[0]), 

    SwitchTask_Update@Paramter	PTR void  size(2) Largest target is 512
		 -> RAM(DATA[512]), RAM(DATA[512]), NULL(NULL[0]), 

    HeaterTask_Update@Paramter	PTR void  size(2) Largest target is 512
		 -> RAM(DATA[512]), RAM(DATA[512]), NULL(NULL[0]), 

    Eeprom_ReadPage@Buffer	PTR unsigned char  size(1) Largest target is 23
		 -> Heater(BANK0[23]), 

    Eeprom_WritePage@Buffer	PTR unsigned char  size(1) Largest target is 23
		 -> Heater(BANK0[23]), 

    Scheduler_addTask@paramter	PTR void  size(2) Largest target is 512
		 -> RAM(DATA[512]), RAM(DATA[512]), NULL(NULL[0]), 

    Scheduler_addTask@task	PTR FTN(PTR void ,)void  size(1) Largest target is 1
		 -> SsdTask_Update(), LedTask_Update(), TempControlTask_Update(), HeaterTask_Update(), 
		 -> TempSensorTask_Update(), SwitchTask_Update(), 

    S210$paramter	PTR void  size(2) Largest target is 512
		 -> RAM(DATA[512]), RAM(DATA[512]), NULL(NULL[0]), 

    scheduler.task.paramter	PTR void  size(2) Largest target is 512
		 -> RAM(DATA[512]), RAM(DATA[512]), NULL(NULL[0]), 

    S210$pointer	PTR FTN(PTR void ,)void  size(1) Largest target is 1
		 -> Absolute function(), SsdTask_Update(), LedTask_Update(), TempControlTask_Update(), 
		 -> HeaterTask_Update(), TempSensorTask_Update(), SwitchTask_Update(), 

    scheduler.task.pointer	PTR FTN(PTR void ,)void  size(1) Largest target is 1
		 -> Absolute function(), SsdTask_Update(), LedTask_Update(), TempControlTask_Update(), 
		 -> HeaterTask_Update(), TempSensorTask_Update(), SwitchTask_Update(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _SysTick_Handler in COMMON

    _SysTick_Handler->_Scheduler_update
    _Scheduler_update->i1___bmul

Critical Paths under _main in BANK0

    _main->_Scheduler_dispatchTasks
    _TempSensorTask_Init->_TempSensor_Init
    _TempSensor_Init->_Gpio_InitPin
    _TempControlTask_Init->_TempControl_Init
    _TempControl_Init->_Gpio_InitPin
    _SwitchTask_Init->_Switch_Init
    _Switch_Init->_Gpio_InitPin
    _SsdTask_Init->_Ssd_Init
    _Ssd_Init->_Gpio_InitPin
    _Scheduler_start->_Scheduler_initSysTick
    _Scheduler_initSysTick->___wmul
    _Scheduler_init->_Scheduler_deleteTask
    _Scheduler_dispatchTasks->_TempSensorTask_Update
    _TempSensorTask_Update->_TempSensor_GetState
    _TempSensor_GetState->___lldiv
    ___lmul->_Adc_GetState
    ___lmul->___bmul
    _TempControl_SetState->_Gpio_SetPinState
    _Switch_GetState->_Gpio_GetPinState
    _Ssd_SetSymbol->_Gpio_SetPortState
    _Ssd_SetState->_Gpio_SetPinState
    _Scheduler_reportStatus->_Scheduler_displayError
    _Scheduler_displayError->_LedTask_SetState
    _Scheduler_deleteTask->___bmul
    _Led_SetState->_Gpio_SetPinState
    _Gpio_SetPinState->___bmul
    ___awmod->___awdiv
    ___awdiv->___bmul
    _TempSensorTask_GetAverage->___bmul
    _SwitchTask_GetState->___bmul
    _SsdTask_SetSymbol->___awmod
    _SsdTask_SetState->___lwdiv
    _LedTask_SetState->___lwdiv
    ___lwdiv->___bmul
    _Scheduler_addTask->___bmul
    _LedTask_Init->_Led_Init
    _Led_Init->_Gpio_InitPin
    _Scheduler_delaySoftwareMs->_Scheduler_delaySoftwareUs
    _Eeprom_WritePage->___bmul
    _Eeprom_Write->___bmul
    _Eeprom_ReadPage->___bmul
    _Eeprom_Read->_I2c_MasterWrite
    _Eeprom_Init->_I2c_MasterInit
    _I2c_MasterInit->___lldiv
    ___lldiv->___lmul
    _Gpio_InitPin->___bmul

Critical Paths under _SysTick_Handler in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _SysTick_Handler in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _SysTick_Handler in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _SysTick_Handler in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  144882
                    _HeaterTask_Init
                       _LedTask_Init
                  _Scheduler_addTask
          _Scheduler_delaySoftwareUs
            _Scheduler_dispatchTasks
                     _Scheduler_init
                    _Scheduler_start
                       _SsdTask_Init
                    _SwitchTask_Init
               _TempControlTask_Init
                _TempSensorTask_Init
 ---------------------------------------------------------------------------------
 (1) _TempSensorTask_Init                                  7     4      3   11717
                                             22 BANK0      7     4      3
                    _TempSensor_Init
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) _TempSensor_Init                                      4     1      3    6618
                                             18 BANK0      4     1      3
                           _Adc_Init
                       _Gpio_InitPin
                             ___bmul
 ---------------------------------------------------------------------------------
 (3) _Adc_Init                                             1     1      0       0
 ---------------------------------------------------------------------------------
 (1) _TempControlTask_Init                                 5     1      4    2482
                                             25 BANK0      5     1      4
                   _TempControl_Init
 ---------------------------------------------------------------------------------
 (2) _TempControl_Init                                     7     3      4    2046
                                             18 BANK0      7     3      4
                       _Gpio_InitPin
 ---------------------------------------------------------------------------------
 (1) _SwitchTask_Init                                      3     1      2    6976
                                             23 BANK0      3     1      2
                        _Switch_Init
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) _Switch_Init                                          5     3      2    1762
                                             18 BANK0      5     3      2
                       _Gpio_InitPin
 ---------------------------------------------------------------------------------
 (1) _SsdTask_Init                                         6     2      4    2987
                                             28 BANK0      6     2      4
                           _Ssd_Init
 ---------------------------------------------------------------------------------
 (2) _Ssd_Init                                            10     6      4    2115
                                             18 BANK0     10     6      4
                       _Gpio_InitPin
 ---------------------------------------------------------------------------------
 (1) _Scheduler_start                                      0     0      0   17185
              _Scheduler_initSysTick
 ---------------------------------------------------------------------------------
 (2) _Scheduler_initSysTick                                4     2      2   17185
                                              6 BANK0      4     2      2
                         _Timer1Init
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4   16944
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) _Timer1Init                                           2     0      2     120
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _Scheduler_init                                       2     2      0    4827
                                              4 BANK0      2     2      0
               _Scheduler_deleteTask
 ---------------------------------------------------------------------------------
 (1) _Scheduler_dispatchTasks                              6     6      0   71147
                                             43 BANK0      6     6      0
                   Absolute function *
                  _HeaterTask_Update *
                     _LedTask_Update *
               _Scheduler_deleteTask
                _Scheduler_goToSleep
             _Scheduler_reportStatus
                     _SsdTask_Update *
                  _SwitchTask_Update *
             _TempControlTask_Update *
              _TempSensorTask_Update *
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) _TempSensorTask_Update                                8     6      2   11154
                                             35 BANK0      8     6      2
                _TempSensor_GetState
                             ___bmul
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (3) _TempSensor_GetState                                  5     5      0    5402
                                             30 BANK0      5     5      0
                       _Adc_GetState
                             ___bmul
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (4) ___lmul                                              13     5      8     244
                                              3 BANK0     13     5      8
                       _Adc_GetState (ARG)
                             ___bmul (ARG)
 ---------------------------------------------------------------------------------
 (4) _Adc_GetState                                         4     1      3       0
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (2) _TempControlTask_Update                               3     1      2     993
                                             35 BANK0      3     1      2
               _TempControl_SetState
                             ___bmul (ARG)
 ---------------------------------------------------------------------------------
 (3) _TempControl_SetState                                 5     4      1     926
                                             14 BANK0      5     4      1
                   _Gpio_SetPinState
 ---------------------------------------------------------------------------------
 (2) _SwitchTask_Update                                    3     1      2    5033
                                             35 BANK0      3     1      2
                    _Switch_GetState
                             ___bmul
 ---------------------------------------------------------------------------------
 (3) _Switch_GetState                                      3     3      0     186
                                              7 BANK0      3     3      0
                   _Gpio_GetPinState
 ---------------------------------------------------------------------------------
 (4) _Gpio_GetPinState                                     7     6      1     142
                                              0 BANK0      7     6      1
 ---------------------------------------------------------------------------------
 (2) _SsdTask_Update                                       7     5      2    1812
                                             35 BANK0      7     5      2
                       _Ssd_SetState
                      _Ssd_SetSymbol
                             ___bmul (ARG)
 ---------------------------------------------------------------------------------
 (3) _Ssd_SetSymbol                                        5     4      1     404
                                             10 BANK0      5     4      1
                  _Gpio_SetPortState
 ---------------------------------------------------------------------------------
 (4) _Gpio_SetPortState                                   10     8      2     262
                                              0 BANK0     10     8      2
 ---------------------------------------------------------------------------------
 (3) _Ssd_SetState                                         4     3      1     936
                                             14 BANK0      4     3      1
                   _Gpio_SetPinState
 ---------------------------------------------------------------------------------
 (2) _Scheduler_reportStatus                               0     0      0    6289
             _Scheduler_displayError
 ---------------------------------------------------------------------------------
 (3) _Scheduler_displayError                               1     1      0    6289
                                             16 BANK0      1     1      0
                   _LedTask_SetState
 ---------------------------------------------------------------------------------
 (2) _Scheduler_goToSleep                                  0     0      0       0
            _Scheduler_sleepHardware
 ---------------------------------------------------------------------------------
 (3) _Scheduler_sleepHardware                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Scheduler_deleteTask                                 1     1      0    4758
                                              3 BANK0      1     1      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) _LedTask_Update                                       6     4      2   10444
                                             35 BANK0      6     4      2
                       _Led_SetState
                             ___bmul
 ---------------------------------------------------------------------------------
 (3) _Led_SetState                                         2     1      1    5530
                                             14 BANK0      2     1      1
                   _Gpio_SetPinState
                             ___bmul
 ---------------------------------------------------------------------------------
 (4) _Gpio_SetPinState                                    11     9      2     718
                                              3 BANK0     11     9      2
                             ___bmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _HeaterTask_Update                                    6     4      2   25813
                                             35 BANK0      6     4      2
                       _Eeprom_Write
                   _LedTask_SetState
                   _SsdTask_SetState
                  _SsdTask_SetSymbol
                _SwitchTask_GetState
           _TempControlTask_SetState
          _TempSensorTask_GetAverage
                            ___awdiv
                            ___awmod
                             ___bmul
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4     904
                                             11 BANK0      6     2      4
                            ___awdiv (ARG)
                             ___bmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     604
                                              3 BANK0      8     4      4
                             ___bmul (ARG)
 ---------------------------------------------------------------------------------
 (3) _TempSensorTask_GetAverage                            1     1      0    4648
                                              3 BANK0      1     1      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (3) _TempControlTask_SetState                             2     1      1     272
                                              0 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (3) _SwitchTask_GetState                                  2     2      0    4693
                                              3 BANK0      2     2      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (3) _SsdTask_SetSymbol                                    3     2      1     348
                                             17 BANK0      3     2      1
                            ___awdiv (ARG)
                            ___awmod (ARG)
                             ___bmul (ARG)
 ---------------------------------------------------------------------------------
 (3) _SsdTask_SetState                                     5     2      3    1770
                                             10 BANK0      5     2      3
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (4) _LedTask_SetState                                     6     3      3    6267
                                             10 BANK0      6     3      3
                             ___bmul
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     770
                                              3 BANK0      7     3      4
                             ___bmul (ARG)
 ---------------------------------------------------------------------------------
 (2) Absolute function(Fake)                               2     0      2       0
 ---------------------------------------------------------------------------------
 (1) _Scheduler_addTask                                    7     3      4    7201
                                              3 BANK0      7     3      4
                             ___bmul
 ---------------------------------------------------------------------------------
 (1) _LedTask_Init                                         3     1      2   11494
                                             21 BANK0      3     1      2
                           _Led_Init
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) _Led_Init                                             3     1      2    6410
                                             18 BANK0      3     1      2
                       _Gpio_InitPin
                             ___bmul
 ---------------------------------------------------------------------------------
 (1) _HeaterTask_Init                                      6     6      0    8669
                                             34 BANK0      6     6      0
                        _Eeprom_Init
                        _Eeprom_Read
                    _Eeprom_ReadPage
                       _Eeprom_Write
                   _Eeprom_WritePage
          _Scheduler_delaySoftwareMs
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               3     2      1    4626
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (2) _Scheduler_delaySoftwareMs                            8     4      4     295
                                              9 BANK0      8     4      4
          _Scheduler_delaySoftwareUs
 ---------------------------------------------------------------------------------
 (1) _Scheduler_delaySoftwareUs                            9     5      4     197
                                              0 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (2) _Eeprom_WritePage                                     7     5      2     286
                                              3 BANK0      7     5      2
            _I2c_MasterRepeatedStart
                    _I2c_MasterStart
                     _I2c_MasterStop
                    _I2c_MasterWrite
                             ___bmul (ARG)
 ---------------------------------------------------------------------------------
 (3) _Eeprom_Write                                         2     1      1     294
                                              3 BANK0      2     1      1
            _I2c_MasterRepeatedStart
                    _I2c_MasterStart
                     _I2c_MasterStop
                    _I2c_MasterWrite
                             ___bmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _Eeprom_ReadPage                                      7     5      2     286
                                              3 BANK0      7     5      2
                            _I2c_ACK
            _I2c_MasterRepeatedStart
                    _I2c_MasterStart
                     _I2c_MasterStop
                    _I2c_MasterWrite
                           _I2c_Read
                             ___bmul (ARG)
 ---------------------------------------------------------------------------------
 (3) _I2c_ACK                                              0     0      0       0
                     _I2c_MasterWait
 ---------------------------------------------------------------------------------
 (2) _Eeprom_Read                                          2     2      0      67
                                              1 BANK0      2     2      0
            _I2c_MasterRepeatedStart
                    _I2c_MasterStart
                     _I2c_MasterStop
                    _I2c_MasterWrite
                           _I2c_NACK
                           _I2c_Read
 ---------------------------------------------------------------------------------
 (3) _I2c_Read                                             0     0      0       0
                     _I2c_MasterWait
 ---------------------------------------------------------------------------------
 (3) _I2c_NACK                                             0     0      0       0
                     _I2c_MasterWait
 ---------------------------------------------------------------------------------
 (4) _I2c_MasterWrite                                      1     1      0      22
                                              0 BANK0      1     1      0
                     _I2c_MasterWait
 ---------------------------------------------------------------------------------
 (4) _I2c_MasterStop                                       0     0      0       0
                     _I2c_MasterWait
 ---------------------------------------------------------------------------------
 (4) _I2c_MasterStart                                      0     0      0       0
                     _I2c_MasterWait
 ---------------------------------------------------------------------------------
 (4) _I2c_MasterRepeatedStart                              0     0      0       0
                     _I2c_MasterWait
 ---------------------------------------------------------------------------------
 (5) _I2c_MasterWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Eeprom_Init                                          0     0      0    2042
                       _Gpio_InitPin
                     _I2c_MasterInit
 ---------------------------------------------------------------------------------
 (3) _I2c_MasterInit                                       4     0      4     564
                                             30 BANK0      4     0      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (4) ___lldiv                                             14     6      8     466
                                             16 BANK0     14     6      8
                       _Adc_GetState (ARG)
                             ___bmul (ARG)
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (3) _Gpio_InitPin                                        15    13      2    1478
                                              3 BANK0     15    13      2
                             ___bmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _SysTick_Handler                                      4     4      0     402
                                              6 COMMON     4     4      0
                   _Scheduler_update
 ---------------------------------------------------------------------------------
 (7) _Scheduler_update                                     3     3      0     402
                                              3 COMMON     3     3      0
                           i1___bmul
 ---------------------------------------------------------------------------------
 (8) i1___bmul                                             3     2      1     201
                                              0 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _HeaterTask_Init
     _Eeprom_Init
       _Gpio_InitPin
         ___bmul (ARG)
       _I2c_MasterInit
         ___lldiv
           _Adc_GetState (ARG)
           ___bmul (ARG)
           ___lmul (ARG)
             _Adc_GetState (ARG)
             ___bmul (ARG)
     _Eeprom_Read
       _I2c_MasterRepeatedStart
         _I2c_MasterWait
       _I2c_MasterStart
         _I2c_MasterWait
       _I2c_MasterStop
         _I2c_MasterWait
       _I2c_MasterWrite
         _I2c_MasterWait
       _I2c_NACK
         _I2c_MasterWait
       _I2c_Read
         _I2c_MasterWait
     _Eeprom_ReadPage
       _I2c_ACK
         _I2c_MasterWait
       _I2c_MasterRepeatedStart
         _I2c_MasterWait
       _I2c_MasterStart
         _I2c_MasterWait
       _I2c_MasterStop
         _I2c_MasterWait
       _I2c_MasterWrite
         _I2c_MasterWait
       _I2c_Read
         _I2c_MasterWait
       ___bmul (ARG)
     _Eeprom_Write
       _I2c_MasterRepeatedStart
         _I2c_MasterWait
       _I2c_MasterStart
         _I2c_MasterWait
       _I2c_MasterStop
         _I2c_MasterWait
       _I2c_MasterWrite
         _I2c_MasterWait
       ___bmul (ARG)
     _Eeprom_WritePage
       _I2c_MasterRepeatedStart
         _I2c_MasterWait
       _I2c_MasterStart
         _I2c_MasterWait
       _I2c_MasterStop
         _I2c_MasterWait
       _I2c_MasterWrite
         _I2c_MasterWait
       ___bmul (ARG)
     _Scheduler_delaySoftwareMs
       _Scheduler_delaySoftwareUs
     ___bmul
   _LedTask_Init
     _Led_Init
       _Gpio_InitPin
         ___bmul (ARG)
       ___bmul
     ___bmul
   _Scheduler_addTask
     ___bmul
   _Scheduler_delaySoftwareUs
   _Scheduler_dispatchTasks
     Absolute function(Fake) *
     _HeaterTask_Update *
       _Eeprom_Write
         _I2c_MasterRepeatedStart
           _I2c_MasterWait
         _I2c_MasterStart
           _I2c_MasterWait
         _I2c_MasterStop
           _I2c_MasterWait
         _I2c_MasterWrite
           _I2c_MasterWait
         ___bmul (ARG)
       _LedTask_SetState
         ___bmul
         ___lwdiv
           ___bmul (ARG)
       _SsdTask_SetState
         ___lwdiv
           ___bmul (ARG)
       _SsdTask_SetSymbol
         ___awdiv (ARG)
           ___bmul (ARG)
         ___awmod (ARG)
           ___awdiv (ARG)
             ___bmul (ARG)
           ___bmul (ARG)
         ___bmul (ARG)
       _SwitchTask_GetState
         ___bmul
       _TempControlTask_SetState
       _TempSensorTask_GetAverage
         ___bmul
       ___awdiv
         ___bmul (ARG)
       ___awmod
         ___awdiv (ARG)
           ___bmul (ARG)
         ___bmul (ARG)
       ___bmul
     _LedTask_Update *
       _Led_SetState
         _Gpio_SetPinState
           ___bmul (ARG)
         ___bmul
       ___bmul
     _Scheduler_deleteTask *
       ___bmul
     _Scheduler_goToSleep *
       _Scheduler_sleepHardware
     _Scheduler_reportStatus *
       _Scheduler_displayError
         _LedTask_SetState
           ___bmul
           ___lwdiv
             ___bmul (ARG)
     _SsdTask_Update *
       _Ssd_SetState
         _Gpio_SetPinState
           ___bmul (ARG)
       _Ssd_SetSymbol
         _Gpio_SetPortState
       ___bmul (ARG)
     _SwitchTask_Update *
       _Switch_GetState
         _Gpio_GetPinState
       ___bmul
     _TempControlTask_Update *
       _TempControl_SetState
         _Gpio_SetPinState
           ___bmul (ARG)
       ___bmul (ARG)
     _TempSensorTask_Update *
       _TempSensor_GetState
         _Adc_GetState
         ___bmul
         ___lldiv
           _Adc_GetState (ARG)
           ___bmul (ARG)
           ___lmul (ARG)
             _Adc_GetState (ARG)
             ___bmul (ARG)
         ___lmul
           _Adc_GetState (ARG)
           ___bmul (ARG)
       ___bmul
       ___lwdiv
         ___bmul (ARG)
     ___bmul *
   _Scheduler_init
     _Scheduler_deleteTask
       ___bmul
   _Scheduler_start
     _Scheduler_initSysTick
       _Timer1Init
       ___wmul
   _SsdTask_Init
     _Ssd_Init
       _Gpio_InitPin
         ___bmul (ARG)
   _SwitchTask_Init
     _Switch_Init
       _Gpio_InitPin
         ___bmul (ARG)
     ___bmul
   _TempControlTask_Init
     _TempControl_Init
       _Gpio_InitPin
         ___bmul (ARG)
   _TempSensorTask_Init
     _TempSensor_Init
       _Adc_Init
       _Gpio_InitPin
         ___bmul (ARG)
       ___bmul
     ___bmul

 _SysTick_Handler (ROOT)
   _Scheduler_update
     i1___bmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0      56       9       89.6%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0      50       7      100.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     31      4D       5       96.2%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      A       A       1       71.4%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      FD      12        0.0%
ABS                  0      0      FD       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Fri Mar 12 17:07:42 2021

              __size_of_Switch_Init 002D  __size_of_Scheduler_delaySoftwareMs 003B  
__size_of_Scheduler_delaySoftwareUs 0039          TempSensorTask_Update@Index 0048  
     __size_of_TempControlTask_Init 001F                                   pc 0002  
           TempControl_Init@cGpioId 0034                      ___bmul@product 0021  
          __end_of_Eeprom_WritePage 11F1                                  l70 07FE  
                                l62 1E0F                                  l82 0840  
                                l91 1FFF                                  l67 1DAA  
                 ??_TempSensor_Init 0035                        ___awdiv@sign 0028  
           TempControl_Init@hGpioId 0032                       ?_Gpio_InitPin 0023  
                                fsr 0004            __size_of_SysTick_Handler 0015  
               ___wmul@multiplicand 0022       __size_of_TempControl_SetState 0059  
         ??_Scheduler_sleepHardware 0020            __end_of_Scheduler_update 1772  
                    Adc_GetState@Id 0070                                 l120 1C31  
                               l113 08D1                                 l106 1DEB  
                               l131 1D3F                                 l124 1C82  
                               l117 1593                                 l320 07C0  
                               l232 1CF0                                 l170 1D70  
                               l410 0CF1                                 l146 0965  
                               l218 1C95                                 l155 1459  
                               l235 1CFC                                 l404 1601  
                               l501 1BF8                                 l341 03A4  
                               l229 1C19                                 l510 1D57  
                               l262 1F90                                 l158 128D  
                               l414 0D7E                                 l342 03F3  
                               l271 11F0                                 l407 1C70  
                               l167 1F61                                 l256 1F07  
                               l504 1C0E                                 l280 13A6  
                               l440 1C25                                 l192 1042  
                               l344 042E                                 l513 1D7B  
                               l265 11B2                                 l329 0144  
                               l425 0B97                                 l522 1C4E  
                               l274 1093                                 l186 0AC6  
                               l507 1D4C                                 l259 1F70  
                               l347 054A                                 l443 1D11  
                               l516 1D8B                                 l540 07FD  
                               l428 16E3                                 l356 1084  
                               l452 17FF                                 l277 10C8  
                               l381 1FC6                                 l189 1EDB  
                               l437 1DC9                                 l286 13F8  
                               l519 1C5E                                 l359 1E5E  
                               l543 1E86                                 l455 133C  
                               l367 0A0A                                 l471 0C41  
                               l464 12E3                                 l384 1CE7  
                               l537 11A3                                 l801 1397  
                               l393 0EA6                                 l546 1F34  
                               l474 0C78                                 l378 1671  
                               l467 123D                                 l635 1E1E  
                               l492 1C32                                 l661 1D28  
                               l637 1E36                                 l671 14C1  
                               l495 1C3E                                 l489 1EB0  
                               l649 1156                                 l498 1C03  
                               l907 110E                                 l788 152A  
            Gpio_SetPortState@State 0021            __size_of_Switch_GetState 0019  
                               _Led 00D8                                 _Ssd 00DE  
                               fsr0 0004                                 indf 0000  
                      ___awmod@sign 0030                     __end_of_I2c_ACK 1C5F  
    __size_of_TempSensorTask_Update 0106       __end_of_TempSensorTask_Update 0D7F  
          __end_of_Gpio_SetPinState 07FE            __size_of_SwitchTask_Init 0042  
                              l2011 10DD                                l2003 10C9  
                              l2101 14AA                                l2021 10FD  
                              l2013 10E1                                l2005 10CD  
                              l2103 14B3                                l2111 1FC8  
                              l2023 1104                                l2015 10E5  
                              l2007 10D3                                l2031 1207  
                              l2105 14B9                                l2113 1FCC  
                              l2017 10F6                                l2009 10D6  
                              l2025 110A                                l2033 121A  
                              l2201 1FA5                                l2041 1F0B  
                              l2121 1C8B                                l2051 1BFE  
                              l2115 1FD3                                l2019 10FC  
                              l2203 1CD6                                l2035 07C4  
                              l2131 1D94                                l2043 1CE8  
                              l2123 1C8D                                l2211 1E10  
                              l2053 1BEE                                l2061 1D50  
                              l2109 1FC7                                l2029 11F4  
                              l2301 138E                                l2133 1D9F  
                              l2037 1E62                                l2045 1CF4  
                              l2205 1675                                l2125 1C8F  
                              l2117 1C83                                l2221 1E32  
                              l2213 1E14                                l2135 115A  
                              l2151 1E8A                                l2055 1BF3  
                              l2311 0806                                l2231 14CE  
                              l2303 1393                                l2143 1EB4  
                              l2071 1119                                l2127 1C93  
                              l2119 1C87                                l2215 1E18  
                              l2153 1E8F                                l2049 1BF9  
                              l2065 1C04                                l2057 1D43  
                              l2401 10C5                                l2161 1F7B  
                              l2313 0807                                l2241 14DF  
                              l2233 14D0                                l2225 14C2  
                              l2137 1241                                l2321 1541  
                              l2129 1D8F                                l2145 100D  
                              l2209 12E7                                l2073 111D  
                              l2217 1E25                                l2091 147C  
                              l2083 145A                                l2155 1E92  
                              l2067 1C09                                l2059 1D48  
                              l2171 1D88                                l2163 1D71  
                              l2411 13C4                                l2315 0814  
                              l2251 14F7                                l2243 14E5  
                              l2235 14D4                                l2227 14C5  
                              l2331 1D29                                l2139 1D5B  
                              l2075 1134                                l2219 1E2C  
                              l2307 1DEC                                l2147 1C0F  
                              l2093 1480                                l2085 146C  
                              l2149 1E87                                l2165 1D76  
                              l2181 1C4F                                l2421 13F3  
                              l2413 13C9                                l2405 139B  
                              l2157 1F65                                l2341 13FC  
                              l2253 1508                                l2245 14E8  
                              l2261 151C                                l2237 14D9  
                              l2229 14C9                                l2317 152E  
                              l2333 1D30                                l2325 1C71  
                              l2077 113D                                l2069 110F  
                              l2501 0DC9                                l2309 1E0E  
                              l2095 1489                                l2087 146F  
                              l2175 1C3F                                l2167 1D80  
                              l2183 1C54                                l2415 13D9  
                              l2407 13A1                                l2159 1F6B  
                              l2263 1521                                l2255 150E  
                              l2247 14EF                                l2239 14DD  
                              l2271 1340                                l2335 1D32  
                              l2327 1C78                                l2079 114E  
                              l2431 00E0                                l2423 0067  
                              l2511 0E30                                l2503 0DE5  
                              l2351 0A1F                                l2343 1F38  
                              l2097 149B                                l2089 1478  
                              l2177 1C44                                l2169 1D83  
                              l2185 1C59                                l2417 13DE  
                              l2409 13B1                                l2193 1C62  
                              l2265 1526                                l2257 150F  
                              l2249 14F3                                l2281 1354  
                              l2273 1344                                l2337 1D37  
                              l2329 1C7C                                l2521 0C79  
                              l2441 0181                                l2433 00F9  
                              l2425 006E                                l2513 0E74  
                              l2505 0E08                                l2361 0A89  
                              l2353 0A2F                                l2345 1F4B  
                              l2099 14A9                                l2371 1EF9  
                              l2179 1C49                                l2419 13E6  
                              l2187 1E3A                                l2259 1516  
                              l2291 136C                                l2283 135A  
                              l2275 1349                                l2339 1D3E  
                              l2531 0CD0                                l2523 0C7F  
                              l2451 0296                                l2443 0241  
                              l2435 012B                                l2427 0082  
                              l2515 0E87                                l2507 0E15  
                              l2363 0AA0                                l2355 0A3F  
                              l2347 0A0E                                l2381 11CA  
                              l2373 11A7                                l2701 074D  
                              l2189 1E5B                                l2197 1C1D  
                              l2293 1376                                l2285 135D  
                              l2277 134B                                l2269 133D  
                              l2541 0D38                                l2533 0D05  
                              l2525 0C7F                                l2461 03D0  
                              l2453 02A8                                l2445 0258  
                              l2437 0159                                l2429 0094  
                              l2517 0E99                                l2509 0E1C  
                              l2365 0AA8                                l2357 0A4F  
                              l2349 0A0E                                l2605 1046  
                              l2621 1DAE                                l2613 159B  
                              l2367 1EDC                                l2391 108E  
                              l2383 11D6                                l2375 11AD  
                              l2703 0761                                l2199 1F94  
                              l2295 137C                                l2287 1364  
                              l2279 134F                                l2543 0D3E  
                              l2527 0CAA                                l2463 0409  
                              l2455 036A                                l2447 026C  
                              l2439 016D                                l2711 1DCA  
                              l2359 0A72                                l2631 1623  
                              l2551 17D9                                l2623 1DB3  
                              l2519 0ACA                                l2615 15AE  
                              l2607 1597                                l2369 1EEB  
                              l2393 109E                                l2385 11DE  
                              l2377 11BD                                l2705 077A  
                              l2641 054E                                l2625 1291  
                              l2297 1383                                l2289 1368  
                              l2545 0D47                                l2529 0CBB  
                              l2481 096C                                l2465 041D  
                              l2457 037F                                l2449 0282  
                              l2473 0522                                l2553 1CFD  
                              l2561 0BB8                                l2721 1DDE  
                              l2633 1630                                l2617 15B4  
                              l2395 10B1                                l2387 11EB  
                              l2379 11C5                                l2707 0796  
                              l2651 0595                                l2643 054E  
                              l2731 0848                                l2299 1389  
                              l2539 0D09                                l2491 09FA  
                              l2483 097E                                l2467 0453  
                              l2459 03BB                                l2555 1D03  
                              l2563 0BCE                                l2723 1DE7  
                              l2635 163D                                l2627 1605  
                              l2547 1775                                l2619 15BD  
                              l2397 10BB                                l2389 1088  
                              l2709 07A5                                l2661 05F1  
                              l2653 05A8                                l2645 0553  
                              l2741 0876                                l2725 0844  
                              l2485 0990                                l2821 0539  
                              l2469 0492                                l2565 0BE8  
                              l2557 0B98                                l2493 0D7F  
                              l2717 1DD0                                l2637 164C  
                              l2629 1616                                l2549 17B6  
                              l2399 10C0                                l2671 0650  
                              l2663 0604                                l2655 05BA  
                              l2647 0563                                l2735 085B  
                              l2487 099D                                l2479 0966  
                              l2567 0C33                                l2559 0B9E  
                              l2495 0D85                                l2719 1DD6  
                              l2639 165B                                l2681 06A3  
                              l2673 0663                                l2665 0617  
                              l2657 05CB                                l2649 0587  
                              l2737 086C                                l2489 09C5  
                              l2497 0D9D                                l2761 0952  
                              l2753 08D8                                l2745 1C26  
                              l2683 06B3                                l2675 0673  
                              l2667 062A                                l2659 05DE  
                              l2499 0DB2                                l2763 095B  
                              l2755 08EA                                l2747 08D2  
                              l2771 0EA7                                l2685 06C3  
                              l2677 0683                                l2669 063D  
                              l2765 0960                                l2757 0942  
                              l2781 0F6E                                l2773 0F38  
                              l1983 1C32                                l1991 1D1A  
                              l2695 0703                                l2687 06D3  
                              l2679 0693                                l2759 094A  
                              l2791 0FC3                                l2783 0F7F  
                              l2775 0F47                                l1985 1C38  
                              l1993 1D1E                                l2697 072F  
                              l2689 06E3                                l2793 0FD4  
                              l2785 0F90                                l2777 0F4C  
                              l1995 1D20                                l1987 1D15  
                              l2699 073E                                l2795 0FE3  
                              l2787 0FA1                                l2779 0F5D  
                              l1997 1D22                                l1989 1D16  
                              l2797 0FF2                                l2789 0FB2  
                              l1999 1D27                                l2799 0FF7  
                              u2000 1FFF                                u2001 1FFE  
                              u2010 1D94                                u2011 1D93  
                              u2100 1D80                                u2101 1D7F  
                              u2024 1160                                u3000 0D05  
                              u2025 115E                                u3001 0D04  
                              u2034 1181                                u3010 0D47  
                              u2210 1E32                                u2035 117F  
                              u2115 1F99                                u3011 0D46  
                              u2211 1E31                                u2300 151C  
                              u2220 14C9                                u3100 0BB8  
                              u2125 1FB7                                u2301 151B  
                              u2221 14C8                                u2045 1EB7  
                              u3101 0BB7                                u2205 1E26  
                              u2310 1521                                u2230 14D4  
                              u3110 0BE8                                u2135 1CDB  
                              u2311 1520                                u2231 14D3  
                              u2055 1ECC                                u3111 0BE7  
                              u2240 14E5                                u2400 138E  
                              u2320 1344                                u3120 0C67  
                              u3200 15BD                                u2241 14E4  
                              u2401 138D                                u2321 1343  
                              u2065 1012                                u2145 12EA  
                              u3121 0C65                                u3025 177A  
                              u3201 15BC                                u2090 1F7B  
                              u2410 0832                                u2330 134F  
                              u2074 1020                                u3130 0C68  
                              u2091 1F7A                                u2331 134E  
                              u2075 101E                                u2155 1300  
                              u3035 178B                                u1700 1C3E  
                              u2420 0840                                u2260 14F7  
                              u2340 135A                                u3300 1DE7  
                              u2180 1E18                                u1701 1C3D  
                              u2421 083F                                u2261 14F6  
                              u2341 1359                                u2085 1032  
                              u2165 1314                                u3301 1DE6  
                              u2181 1E17                                u3045 179B  
                              u1710 1D1A                                u3310 085A  
                              u2430 1540                                u2415 0825  
                              u1711 1D19                                u3311 0859  
                              u2255 14E9                                u2431 153F  
                              u2175 132D                                u3215 160A  
                              u3055 17AB                                u2600 13B1  
                              u2416 0826                                u1720 1D27  
                              u3320 086C                                u2280 1508  
                              u2360 136C                                u2440 1C78  
                              u2601 13B0                                u2417 082B  
                              u1721 1D26                                u3321 086B  
                              u2281 1507                                u2361 136B  
                              u2441 1C77                                u2505 0A44  
                              u3225 1619                                u3065 17B9  
                              u2610 13F3                                u2418 082C  
                              u3330 0875                                u1730 10D3  
                              u2370 1376                                u2450 1D30  
                              u2611 13F2                                u2419 0831  
                              u3331 0874                                u1731 10D2  
                              u2275 14F8                                u2371 1375  
                              u2355 135E                                u2451 1D2F  
                              u2195 1E1F                                u2515 0A52  
                              u3235 1626                                u3075 17CA  
                              u1804 07CA                                u2460 1D3E  
                              u1900 114E                                u2700 037F  
                              u2620 0082                                u3340 08EA  
                              u2285 1504                                u1805 07C8  
                              u2461 1D3D                                u1901 114D  
                              u2701 037E                                u2621 0081  
                              u3341 08E9                                u2525 0A63  
                              u3245 1633                                u3085 17DE  
                              u1910 146C                                u3270 072F  
                              u1750 10E5                                u2390 1389  
                              u1814 07E3                                u2710 03BB  
                              u2630 00E0                                u3350 0942  
                              u1911 146B                                u2615 13EF  
                              u3271 072E                                u1751 10E4  
                              u2295 1510                                u2391 1388  
                              u2375 1372                                u1815 07E1  
                              u2711 03BA                                u2631 00DF  
                              u3351 0941                                u2535 0A77  
                              u3255 1640                                u3095 17F0  
                              _PIE1 008C                                u3280 074D  
                              u1824 1E78                                u1840 1CF4  
                              u2720 03D0                                u2640 012B  
                              u3360 095B                                u2560 0AC6  
                              u3281 074C                                u1745 10D7  
                              u2385 137D                                u1825 1E76  
                              u1841 1CF3                                u2721 03CF  
                              u2641 012A                                u3361 095A  
                              u2561 0AC5                                u2545 0A91  
                              u3265 164F                                u1930 1480  
                              u1690 1C38                                u1850 1D50  
                              u2570 11BD                                u3290 0761  
                              u1770 10F6                                u1834 1E82  
                              u2730 0409                                u2650 0159  
                              u1931 147F                                u1691 1C37  
                              u1851 1D4F                                u2571 11BC  
                              u3291 0760                                u1771 10F5  
                              u1835 1E80                                u2731 0408  
                              u2651 0158                                u2635 00DC  
                              u2555 0AAB                                u2475 0A13  
                              u2580 11EB                                u1860 111D  
                              u2740 0453                                u2660 0241  
                              u2820 0DC9                                u1925 1471  
                              u2581 11EA                                u1765 10E6  
                              u1861 111C                                u2741 0452  
                              u2661 0240                                u2645 0127  
                              u2821 0DC8                                u2805 0DA0  
                              u2565 0AC2                                u2485 0A24  
                              u1950 149B                                u2590 109E  
                              u1790 110A                                u2750 097E  
                              u2670 0258                                u1951 149A  
                              u2591 109D                                u1791 1109  
                              u1775 10F2                                u1871 1126  
                              u2751 097D                                u2671 0257  
                              u2815 0DB5                                u2495 0A34  
                              u1872 112D                                u2760 099D  
                              u2680 0282                                u1945 1482  
                              u2585 11E7                                u1785 10FE  
                              u1873 1134                                u2761 099C  
                              u2681 0281                                u2905 0E33  
                              u1970 14B9                                u2770 09C5  
                              u2690 036A                                u2930 0E69  
                              u1971 14B8                                u1955 1497  
                              u2771 09C4                                u2691 0369  
                              u2931 0E67                                u2915 0E4B  
                              u2835 0DCC                                u1980 1FD3  
                              u2940 0E6A                                u1965 14AB  
                              u1981 1FD2                                u1885 1136  
                              u2925 0E5A                                u2845 0DDA  
                              u1990 1FF1                                u2790 0D9D  
                              u1895 113E                                u2855 0DE8  
                              u2791 0D9C                                u2865 0DF9  
                              u2785 0D88                                u2970 0E99  
                              u2890 0E30                                i1l43 1CC6  
                              u1995 1FE4                                u2971 0E98  
                              u2955 0E7B                                u2891 0E2F  
                              u2875 0E0B                                u1996 1FE5  
                              u1997 1FEA                                u2965 0E8A  
                              u2885 0E21                                u1998 1FEB  
                              u2990 0CD0                                u1999 1FF0  
                              u2991 0CCF                                u2985 0E9C  
                              _PIR1 000C                                _TMR0 0001  
                              _Gpio 00E6                 SsdTask_Init@dataPin 003F  
             ??_SwitchTask_GetState 0023                                _main 0EA7  
                              btemp 007E                                start 0012  
               __end_of_Eeprom_Init 1F08                 __end_of_Eeprom_Read 10C9  
               SsdTask_Init@ctrlPin 003D              TempControlTask_Init@Id 003D  
                 ___bmul@multiplier 0022                    __end_of_I2c_NACK 1C4F  
       TempControlTask_Init@cGpioId 003B                    __end_of_I2c_Read 1D8C  
                  ??_Scheduler_init 0024         TempControlTask_Init@hGpioId 0039  
           Scheduler_addTask@period 0026                      ??_Gpio_InitPin 0025  
               _TempSensor_GetState 1672                  Gpio_SetPinState@Id 002D  
                   _TempControlTask 0055                   HeaterTask_Init@Id 0047  
                             ?_main 0070                     __end_of___awdiv 152B  
                   __end_of___awmod 1398                     __end_of___lldiv 14C2  
                   ___awdiv@divisor 0023                               _T1CON 0010  
                   __end_of___lwdiv 110F                               i1l137 173B  
                             i1l139 1771                               i1l661 1CBD  
                   ___awdiv@counter 0027                               _TMR1H 000F  
                             _TMR1L 000E                               _PORTA 0005  
                             _PORTB 0006                               _PORTC 0007  
                             _PORTD 0008                               _PORTE 0009  
     TempControlTask_SetState@State 0020                 _TempSensorTask_Init 1594  
          TempSensorTask_Init@AdcId 0038                 ___lmul@multiplicand 0027  
          TempSensorTask_Init@Index 003A             __size_of_SsdTask_Update 0128  
                 fp__SsdTask_Update 0064           fp__TempControlTask_Update 005E  
                 ?_Gpio_GetPinState 0020                    ?_Eeprom_ReadPage 0023  
                  __end_of_Adc_Init 1C1A                ?_TempSensor_GetState 0070  
                 ?_LedTask_SetState 002A                               fpbase 0054  
                  __end_ofi1___bmul 1CBE                               pclath 000A  
                ??_Gpio_GetPinState 0021             __end_of_I2c_MasterStart 1C04  
              __end_of_LedTask_Init 12E4             __end_of_I2c_MasterWrite 1D58  
                ??_LedTask_SetState 002D                               status 0003  
                             wtemp0 007E                   Eeprom_Read@Buffer 0022  
              __end_of_Led_SetState 128E                ?_TempSensorTask_Init 0036  
                    SsdTask_Init@Id 0041             _Scheduler_dispatchTasks 08D2  
              __end_of_Eeprom_Write 1F91                      _TempSensorTask 01CE  
           SsdTask_SetSymbol@Symbol 0031                    __end_of_Led_Init 145A  
                   __initialization 0015                  Ssd_Init@dataGpioId 0034  
            TempControl_SetState@Id 0032                        __end_of_main 1000  
                   Ssd_Init@dataPin 0035                   ??_Scheduler_start 002A  
        ?_TempSensorTask_GetAverage 0070                  SsdTask_SetState@Id 002E  
                   Ssd_Init@ctrlPin 0033                           ??_I2c_ACK 0020  
                            ??_main 0051                    _TempControl_Init 1772  
           ?_TempControlTask_Update 0043                 Gpio_SetPinState@Pin 0023  
          ?_I2c_MasterRepeatedStart 0070             Eeprom_WritePage@Address 0027  
                  __end_of_Ssd_Init 0AC7                   ??_SysTick_Handler 0076  
                            _ADCON0 001F                              _ADCON1 009F  
             ??_TempSensor_GetState 003E                fp__SwitchTask_Update 0058  
                            _ADRESH 001E                              _ADRESL 009E  
                            _CCPR1H 0016                              _CCPR1L 0015  
                 ??_Switch_GetState 0027                    ___awdiv@dividend 0025  
                       _Eeprom_Init 1EDC                         _Eeprom_Read 1085  
                            i1l2601 1762                              i1l2603 176B  
                            i1l2571 1CAB                              i1l2581 1CBC  
                            i1l2573 1CAF                              i1l2575 1CB3  
                            i1l2591 16E8                              i1l2577 1CB5  
                            i1l2569 1CAA                              i1l2593 16FA  
                            i1l2585 16E4                              i1l2579 1CB7  
                            i1l2595 170C                              i1l2597 174D  
                            i1l2599 175C                              i1l2767 1CBE  
                            i1l2769 1CC1                              _INTCON 000B  
      __end_of_Scheduler_deleteTask 1594                              u314_20 1CAF  
                            u314_21 1CAE                              u315_20 1CBC  
     TempSensorTask_Update@Paramter 0043                              u315_21 1CBB  
                            u316_20 16FA                              u316_21 16F9  
                            u317_20 170C                              u317_21 170B  
                            u318_20 174D                              u318_21 174C  
                            u319_20 176B                              u319_21 176A  
               _Scheduler_goToSleep 1D29                              _SSPADD 0093  
                            _SSPCON 0014                              _SSPBUF 0013  
                  __end_of__fptable 0067            fp__TempSensorTask_Update 0055  
                  _SsdTask_SetState 1F91               ??_TempSensorTask_Init 0039  
                        Ssd_Init@Id 003B           SwitchTask_GetState@Buffer 0023  
                 ??_SwitchTask_Init 0039                              _Heater 0056  
                    Ssd_SetState@Id 0031                          _TempSensor 00B0  
             __end_of_Ssd_SetSymbol 1043    Scheduler_delaySoftwareMs@msDelay 0029  
 __size_of_TempControlTask_SetState 000C                          _Timer1Init 1C83  
         ?_TempControlTask_SetState 0020            __size_of_HeaterTask_Init 0276  
             SsdTask_SetState@State 002A                              ___bmul 1D12  
                            _Switch 00D2                              ___lmul 110F  
                            ___wmul 1E10             __size_of_LedTask_Update 00E1  
                         ??___awdiv 0027                           ??___awmod 002F  
                 fp__LedTask_Update 0061                           ??___lldiv 0038  
                         ??___lwdiv 0027                  Ssd_Init@ctrlGpioId 0032  
    __end_of_TempControlTask_Update 1D12                ?_Scheduler_goToSleep 0070  
                  ___awdiv@quotient 0029                     ___awmod@divisor 002B  
             Scheduler_update@index 0074                     ___awmod@counter 002F  
 __end_of_TempSensorTask_GetAverage 1C71                              fptable 004F  
                            fptotal 0010             ?_Scheduler_reportStatus 0070  
                 Led_SetState@State 002E                              saved_w 007E  
                Eeprom_Read@Address 0021                           ?_I2c_NACK 0070  
                         ?_I2c_Read 0070                __end_of_Gpio_InitPin 11A4  
           ??_Scheduler_initSysTick 0028                    ?_I2c_MasterStart 0070  
         ??_Scheduler_dispatchTasks 004B                    ?_I2c_MasterWrite 0070  
           __end_of__initialization 004B                     _TempSensor_Init 0AC7  
               ___bmul@multiplicand 0020                          _SwitchTask 00C9  
          TempControlTask_Init@cPin 003C            TempControlTask_Init@hPin 003A  
               SwitchTask_Update@Id 0045                      Led_Init@GpioId 0032  
             Scheduler_addTask@task 0027                      __pcstackCOMMON 0070  
                      __pidataBANK1 1000                        __pidataBANK3 1BE4  
  Scheduler_delaySoftwareUs@usDelay 0020     __end_of_I2c_MasterRepeatedStart 1BF9  
             ??_Scheduler_goToSleep 0020                           ?_Adc_Init 0070  
                 ?_Eeprom_WritePage 0023                           ?i1___bmul 0070  
                 ?_Scheduler_update 0070     Scheduler_displayError@errorCode 0030  
                ??_Eeprom_WritePage 0025      __end_of_Scheduler_reportStatus 1C83  
                ??_Scheduler_update 0073             __size_of_I2c_MasterInit 002A  
                    _SsdTask_Update 0D7F               __size_of_LedTask_Init 0056  
           __size_of_I2c_MasterWait 000D             __size_of_I2c_MasterStop 000B  
      __end_of_TempControlTask_Init 1DCA                    i1___bmul@product 0071  
                         ?_Led_Init 0032                          ??_I2c_NACK 0020  
                 ?_Gpio_SetPinState 0023               __size_of_Led_SetState 0050  
                        ??_I2c_Read 0020        __end_of_TempControl_SetState 133D  
             __size_of_Eeprom_Write 002F                          __pbssBANK0 0051  
                        __pbssBANK1 00A0                          __pbssBANK3 0190  
          TempControlTask_Update@Id 0045                  ??_Gpio_SetPinState 0025  
               SsdTask_SetSymbol@Id 0033                       ??_Switch_Init 0034  
                       ?_Timer1Init 0020                          __pmaintext 0EA7  
                    LedTask_Init@Id 0037                           ?_Ssd_Init 0032  
                           ?___bmul 0020                             ?___lmul 0023  
             _LedTask_SetState$1398 002D                             ?___wmul 0020  
          ??_Scheduler_displayError 0030           HeaterTask_Update@Paramter 0043  
                        __pintentry 0004                             _CCP1CON 0017  
                LedTask_Init@GpioId 0035                          ??_Adc_Init 0020  
                    ___lmul@product 002C         TempSensorTask_GetAverage@Id 0023  
                      _LedTask_Init 128E                          ??i1___bmul 0071  
                 ??_HeaterTask_Init 0042                _Scheduler_deleteTask 152B  
         Scheduler_deleteTask@index 0023                             _I2c_ACK 1C4F  
                     ?_SsdTask_Init 003C               Timer1Init@TicksNumber 0020  
                      _Led_SetState 123E              __end_of_SsdTask_Update 0EA7  
                      _Eeprom_Write 1F62                   TempSensor_Init@Id 0035  
                     ?_Ssd_SetState 002E          TempControlTask_SetState@Id 0021  
       __end_of_SwitchTask_GetState 1E5F                          ??_Led_Init 0034  
           __end_of_TempSensor_Init 0B98                             _SSPCON2 0091  
                           _SSPSTAT 0094               Eeprom_ReadPage@Buffer 0023  
               Gpio_SetPortState@Id 0029               Eeprom_ReadPage@Length 0024  
                 _SsdTask_SetSymbol 1CD3                         _TempControl 0051  
             _TempSensorTask_Update 0C79                         Ssd_Init@Pin 0039  
                           _LedTask 00BD                 HeaterTask_Update@Id 0048  
                ?_SsdTask_SetSymbol 0031                   _HeaterTask_Update 0067  
          __end_of_TempControl_Init 1800              I2c_MasterInit@BaudRate 003E  
                  LedTask_Update@Id 0048                     _Scheduler_start 1C26  
                    Gpio_InitPin@Id 0031                  ?_HeaterTask_Update 0043  
            SsdTask_SetState@Period 002B                             _SsdTask 00A0  
                        ??_Ssd_Init 0036           __size_of_Gpio_GetPinState 0028  
                    Led_SetState@Id 002F            ?_Scheduler_sleepHardware 0070  
               ??_SsdTask_SetSymbol 0032                      _LedTask_Update 0B98  
                   __size_of___bmul 0017           __size_of_LedTask_SetState 004D  
                           ___awdiv 14C2                     __size_of___lmul 0048  
                           ___awmod 133D                             ___lldiv 145A  
                   __size_of___wmul 0027                     _SysTick_Handler 1CBE  
               __end_of_Switch_Init 1F62                             ___lwdiv 10C9  
            SsdTask_Init@dataGpioId 003E                     Ssd_SetSymbol@Id 002E  
               ??_HeaterTask_Update 0045               ?_Scheduler_deleteTask 0070  
       ??_TempSensorTask_GetAverage 0023          ?_Scheduler_delaySoftwareMs 0029  
                    ??_SsdTask_Init 0040          ?_Scheduler_delaySoftwareUs 0020  
                   _Switch_GetState 1D58                             __ptext1 1594  
                           __ptext2 0AC7                             __ptext3 1C0F  
                           __ptext4 1DAB                             __ptext5 1772  
                           __ptext6 1043                             __ptext7 1F35  
                           __ptext8 1602                             __ptext9 0A0B  
          __end_of_SsdTask_SetState 1FC7                   Eeprom_WritePage@i 0028  
                   ?_SsdTask_Update 0043      TempControlTask_Update@Paramter 0043  
                    ??_Ssd_SetState 002F                    ___awmod@dividend 002D  
               i1___bmul@multiplier 0072               __size_of_Gpio_InitPin 004D  
                   _SwitchTask_Init 1043                 __size_of_Timer1Init 0013  
         __end_of_SsdTask_SetSymbol 1CE8    __end_of_TempControlTask_SetState 1C26  
                           clrloop0 1BDD                end_of_initialization 004B  
                      ?_Eeprom_Init 0070                        ?_Eeprom_Read 0070  
         __end_of_HeaterTask_Update 054B    __size_of_I2c_MasterRepeatedStart 000B  
                Gpio_GetPinState@Id 0026            __size_of_Eeprom_ReadPage 0061  
                   ___lldiv@divisor 0030              __end_of_LedTask_Update 0C79  
                   ___lldiv@counter 003D                       ?_Adc_GetState 0020  
              _TempControlTask_Init 1DAB     __size_of_Scheduler_displayError 001F  
                LedTask_SetState@Id 002F                _TempControl_SetState 12E4  
                      _Gpio_InitPin 1157                       Switch_Init@Id 0036  
 __end_of_Scheduler_delaySoftwareMs 0841        _Scheduler_dispatchTasks$1433 004C  
      _Scheduler_dispatchTasks$1428 004E   __end_of_Scheduler_delaySoftwareUs 2000  
            SsdTask_Init@ctrlGpioId 003C         __end_of_TempSensor_GetState 16E4  
                    _I2c_MasterInit 1E87             __size_of_Scheduler_init 0022  
                    _I2c_MasterWait 1C32                      _I2c_MasterStop 1C04  
              TempControl_Init@cPin 0035                TempControl_Init@hPin 0033  
                  ?_TempSensor_Init 0032         __end_of_TempSensorTask_Init 1602  
            ?_TempSensorTask_Update 0043             __end_of_Scheduler_start 1C32  
             Gpio_SetPortState@Pins 0020           _TempSensorTask_GetAverage 1C5F  
                 __size_of_I2c_NACK 0010                   __size_of_I2c_Read 001B  
    __size_of_Scheduler_initSysTick 0024       __end_of_Scheduler_initSysTick 1E10  
   __end_of_Scheduler_sleepHardware 07FF             __end_of_SysTick_Handler 1CD3  
                       _Switch_Init 1F35                      ??_Adc_GetState 0023  
                   ?_LedTask_Update 0043              Scheduler_addTask@delay 0025  
            Scheduler_addTask@index 0028                   _Scheduler_addTask 0841  
           __end_of_Switch_GetState 1D71        Scheduler_dispatchTasks@index 004F  
             ?_TempControlTask_Init 0039                      __end_of___bmul 1D29  
                ?_Scheduler_addTask 0023              ??_Scheduler_deleteTask 0023  
                    __end_of___lmul 1157               ?_TempControl_SetState 002E  
                    __end_of___wmul 1E37             __end_of_SwitchTask_Init 1085  
            __end_of_I2c_MasterInit 1EB1                   __size_of_Adc_Init 000B  
            __end_of_I2c_MasterWait 1C3F                    SsdTask_Update@Id 0049  
            __end_of_I2c_MasterStop 1C0F                 ??_Scheduler_addTask 0027  
                 __size_ofi1___bmul 0015                 start_initialization 0015  
                 Ssd_SetState@State 002E      Scheduler_delaySoftwareUs@delay 0028  
            __size_of_Ssd_SetSymbol 0039          __size_of_SsdTask_SetSymbol 0015  
            _Scheduler_displayError 1D8C                    Eeprom_ReadPage@i 0028  
         __size_of_Eeprom_WritePage 004D                 Ssd_SetSymbol@Symbol 002A  
        __size_of_HeaterTask_Update 04E4                   __size_of_Led_Init 0061  
                  Gpio_InitPin@Mode 0024              Eeprom_WritePage@Buffer 0023  
         __size_of_Scheduler_update 008E              Eeprom_WritePage@Length 0024  
          _TempControlTask_SetState 1C1A                __end_of_SsdTask_Init 1672  
         __end_of_Scheduler_addTask 08D2                     _HeaterTask_Init 054B  
                      ??_Timer1Init 0022                __end_of_Ssd_SetState 1EDC  
       __end_of_Scheduler_goToSleep 1D40                    _Gpio_GetPinState 1E5F  
          __size_of_I2c_MasterStart 000B             TempSensorTask_Update@Id 004A  
          __size_of_I2c_MasterWrite 0018                            ??___bmul 0021  
                          ??___lmul 002B                    _LedTask_SetState 11F1  
         __size_of_Gpio_SetPinState 003D                            ??___wmul 0024  
                        init_fetch0 1C96                  SwitchTask_Init@Pin 0038  
                 ??_Eeprom_ReadPage 0025                   __size_of_Ssd_Init 00BC  
                       __pdataBANK1 00E6                         __pdataBANK3 01DC  
                          ?_I2c_ACK 0070                     ?_I2c_MasterInit 003E  
                   ?_I2c_MasterWait 0070               Gpio_SetPinState@State 0024  
                   ?_I2c_MasterStop 0070                           ___latbits 0002  
                     __pcstackBANK0 0020                   __size_of__fptable 0018  
          ?_Scheduler_dispatchTasks 0070                   _Gpio_SetPortState 1F08  
               Eeprom_Write@Address 0024                  __end_of_Timer1Init 1C96  
            SsdTask_Update@Paramter 0043                    ?_Scheduler_start 0070  
                ?_Gpio_SetPortState 0020             _I2c_MasterRepeatedStart 1BEE  
              __size_of_Eeprom_Init 002C                __size_of_Eeprom_Read 0044  
                 ?_TempControl_Init 0032                 ??_Gpio_SetPortState 0022  
                  ?_SysTick_Handler 0070                    ___lwdiv@dividend 0025  
            ??_TempControlTask_Init 003D            ??_TempControlTask_Update 0045  
                ??_TempControl_Init 0036                       _Ssd_SetSymbol 100A  
              HeaterTask_Init@Index 0045                     LedTask_Init@Pin 0036  
                         __pfunctab 004F                   Switch_GetState@Id 0029  
                  ?_Switch_GetState 0070                            ?___awdiv 0023  
            ??_TempControl_SetState 002F           TempControl_SetState@State 002E  
                          ?___awmod 002B                            ?___lldiv 0030  
                          ?___lwdiv 0023                    ??_SsdTask_Update 0045  
       ??_Scheduler_delaySoftwareMs 002D         ??_Scheduler_delaySoftwareUs 0024  
                  ?_SwitchTask_Init 0037           SwitchTask_Update@Paramter 0043  
                 ?_SsdTask_SetState 002A                      _Scheduler_init 1DCA  
         __end_of_Gpio_SetPortState 1F35    __size_of_Scheduler_sleepHardware 0001  
              __end_of_Adc_GetState 1CFD                  ??_SsdTask_SetState 002D  
               Scheduler_init@index 0024              LedTask_SetState@Period 002B  
                  ___lwdiv@quotient 0027                            _I2c_NACK 1C3F  
                          _I2c_Read 1D71             __end_of_HeaterTask_Init 07C1  
                 interrupt_function 0004                           _scheduler 0190  
                    ___wmul@product 0024        __size_of_SwitchTask_GetState 0028  
                         clear_ram0 1BDC          __size_of_Scheduler_addTask 0091  
                TempSensor_Init@Pin 0033               i1___bmul@multiplicand 0070  
                    ?_Ssd_SetSymbol 002A  __size_of_TempSensorTask_GetAverage 0012  
                 Switch_Init@GpioId 0032            ??_Scheduler_reportStatus 0031  
            Eeprom_ReadPage@Address 0027                            _Adc_Init 1C0F  
                 _SwitchTask_Update 0966                            i1___bmul 1CA9  
                 ??_I2c_MasterStart 0020              __end_of_Scheduler_init 1DEC  
             TempSensor_GetState@Id 0042                   ??_I2c_MasterWrite 0020  
                 ___wmul@multiplier 0020                          Adc_Init@Id 0070  
                ?_SwitchTask_Update 0043     __end_of_Scheduler_dispatchTasks 0966  
                  __size_of_I2c_ACK 0010             ??_TempSensorTask_Update 0045  
         ??_I2c_MasterRepeatedStart 0020                            _Led_Init 13F9  
               ??_SwitchTask_Update 0045               __size_of_SsdTask_Init 0070  
                 ___lmul@multiplier 0023              TempSensorTask_Init@Pin 0037  
                  _Eeprom_WritePage 11A4                    ??_LedTask_Update 0045  
                  _Scheduler_update 16E4               __size_of_Ssd_SetState 002B  
         _Scheduler_delaySoftwareMs 0806           _Scheduler_delaySoftwareUs 1FC7  
             SwitchTask_GetState@Id 0024           TempSensorTask_Init@GpioId 0036  
                   Gpio_InitPin@Pin 0023                        ?_Switch_Init 0032  
   Scheduler_initSysTick@tickNumber 0028               I2c_MasterWrite@Buffer 0020  
                          _Ssd_Init 0A0B     __size_of_TempControlTask_Update 0015  
                 SwitchTask_Init@Id 0039                    _Gpio_SetPinState 07C1  
         __end_of_SwitchTask_Update 0A0B                    __size_of___awdiv 0069  
                  __size_of___awmod 005B                    __size_of___lldiv 0068  
              fp__HeaterTask_Update 005B                    __size_of___lwdiv 0046  
                   ?_Scheduler_init 0070               TempSensor_Init@GpioId 0032  
                Eeprom_Write@Buffer 0023                        _SsdTask_Init 1602  
                          __fptable 004F          __size_of_Gpio_SetPortState 002D  
           ?_Scheduler_displayError 0070                        _Ssd_SetState 1EB1  
        ??_TempControlTask_SetState 0021                     ___lwdiv@divisor 0023  
          __end_of_Gpio_GetPinState 1E87                     ___lwdiv@counter 0029  
                          __ptext10 1C26                            __ptext11 1DEC  
                          __ptext20 0966                            __ptext12 1E10  
                          __ptext21 0C79                            __ptext13 1C83  
                          __ptext30 1EB1                            __ptext22 1672  
                          __ptext14 1DCA                            __ptext31 1C71  
                          __ptext23 110F                            __ptext15 08D2  
                          __ptext40 1C5F                            __ptext32 1D8C  
                          __ptext24 1CE8                            __ptext16 0D7F  
                          __ptext41 1C1A                            __ptext33 1D29  
                          __ptext25 12E4                            __ptext17 0B98  
                          __ptext50 054B                            __ptext42 1E37  
                          __ptext34 07FE                            __ptext26 1D58  
                          __ptext18 1CFD                            __ptext51 1D12  
                          __ptext43 1CD3                            __ptext35 152B  
                          __ptext27 1E5F                            __ptext19 0067  
                          __ptext60 1C3F                            __ptext52 0806  
                          __ptext44 1F91                            __ptext36 123E  
                          __ptext28 100A                            __ptext61 1D40  
                          __ptext53 1FC7                            __ptext45 11F1  
                          __ptext37 07C1                            __ptext29 1F08  
                          __ptext70 1CBE                            __ptext62 1C04  
                          __ptext54 11A4                            __ptext46 10C9  
                          __ptext38 133D                            __ptext71 16E4  
                          __ptext63 1BF9                            __ptext55 1F62  
                          __ptext47 0841                            __ptext39 14C2  
                          __ptext72 1CA9                            __ptext64 1BEE  
                          __ptext56 1398                            __ptext48 128E  
                          __ptext65 1C32                            __ptext57 1C4F  
                          __ptext49 13F9                            __ptext66 1EDC  
                          __ptext58 1085                            __ptext67 1E87  
                          __ptext59 1D71                            __ptext68 145A  
                          __ptext69 1157            __end_of_LedTask_SetState 123E  
      __size_of_TempSensor_GetState 0072                    ?_HeaterTask_Init 0070  
                  _SsdSymbolPattern 01DC                       __size_of_main 0159  
                   _Eeprom_ReadPage 1398               LedTask_SetState@State 002A  
             SwitchTask_Init@GpioId 0037                     ??_Ssd_SetSymbol 002B  
      __size_of_TempSensorTask_Init 006E            __size_of_TempSensor_Init 00D1  
             _Scheduler_initSysTick 1DEC                    ??_I2c_MasterInit 0042  
                TempControl_Init@Id 0038                    ??_I2c_MasterWait 0020  
   __size_of_Scheduler_reportStatus 0012                    ??_I2c_MasterStop 0020  
         Scheduler_addTask@paramter 0023                       ?_LedTask_Init 0035  
     __size_of_Scheduler_deleteTask 0069               __size_of_Adc_GetState 0015  
             TempSensorTask_Init@Id 003C      __end_of_Scheduler_displayError 1DAB  
                     ?_Led_SetState 002E             _Scheduler_sleepHardware 07FE  
                     ?_Eeprom_Write 0023                          _INTCONbits 000B  
               _LedTask_Update$1434 0047              _TempControlTask_Update 1CFD  
                          init_ram0 1C9A                 Gpio_GetPinState@Pin 0020  
              TempSensor_Init@AdcId 0034                         Led_Init@Pin 0033  
                          intlevel1 004F                    ___lldiv@dividend 0034  
  __size_of_Scheduler_dispatchTasks 0094                        _Adc_GetState 1CE8  
        __size_of_SwitchTask_Update 00A5                      ??_LedTask_Init 0037  
            LedTask_Update@Paramter 0043        __size_of_Scheduler_goToSleep 0017  
                    ??_Led_SetState 002F                          Led_Init@Id 0034  
         __size_of_TempControl_Init 008E                      ??_Eeprom_Write 0024  
                        _OPTION_REG 0081                 _SwitchTask_GetState 1E37  
                  ___lldiv@quotient 0039                      Switch_Init@Pin 0033  
           __end_of_Eeprom_ReadPage 13F9              _Scheduler_reportStatus 1C71  
                     ??_Eeprom_Init 0042                       ??_Eeprom_Read 0021  
              ?_SwitchTask_GetState 0070           __size_of_SsdTask_SetState 0036  
            ?_Scheduler_initSysTick 0026   Scheduler_initSysTick@msTickPeriod 0026  
                   _I2c_MasterStart 1BF9            __size_of_Scheduler_start 000C  
                   _I2c_MasterWrite 1D40  
