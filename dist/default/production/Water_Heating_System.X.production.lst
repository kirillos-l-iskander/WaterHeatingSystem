

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Fri Jan 22 00:31:46 2021

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     6                           	psect	idataBANK3,global,class=CODE,delta=2,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    13                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,noexec
    14                           	psect	inittext,global,class=CODE,delta=2
    15                           	psect	clrtext,global,class=CODE,delta=2
    16                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    18                           	psect	maintext,global,class=CODE,split=1,delta=2
    19                           	psect	text1,local,class=CODE,merge=1,delta=2
    20                           	psect	text2,local,class=CODE,merge=1,delta=2
    21                           	psect	text3,local,class=CODE,merge=1,delta=2
    22                           	psect	text4,local,class=CODE,merge=1,delta=2
    23                           	psect	text5,local,class=CODE,merge=1,delta=2
    24                           	psect	text6,local,class=CODE,merge=1,delta=2
    25                           	psect	text7,local,class=CODE,merge=1,delta=2
    26                           	psect	text8,local,class=CODE,merge=1,delta=2
    27                           	psect	text9,local,class=CODE,merge=1,delta=2
    28                           	psect	text10,local,class=CODE,merge=1,delta=2
    29                           	psect	text11,local,class=CODE,merge=1,delta=2
    30                           	psect	text12,local,class=CODE,merge=1,delta=2
    31                           	psect	text13,local,class=CODE,merge=1,delta=2
    32                           	psect	text14,local,class=CODE,merge=1,delta=2
    33                           	psect	text15,local,class=CODE,merge=1,delta=2
    34                           	psect	text16,local,class=CODE,merge=1,delta=2
    35                           	psect	text17,local,class=CODE,merge=1,delta=2
    36                           	psect	text18,local,class=CODE,merge=1,delta=2
    37                           	psect	text19,local,class=CODE,merge=1,delta=2
    38                           	psect	text20,local,class=CODE,merge=1,delta=2
    39                           	psect	text21,local,class=CODE,merge=1,delta=2
    40                           	psect	text22,local,class=CODE,merge=1,delta=2
    41                           	psect	text23,local,class=CODE,merge=1,delta=2
    42                           	psect	text24,local,class=CODE,merge=1,delta=2
    43                           	psect	text25,local,class=CODE,merge=1,delta=2
    44                           	psect	text26,local,class=CODE,merge=1,delta=2
    45                           	psect	text27,local,class=CODE,merge=1,delta=2
    46                           	psect	text28,local,class=CODE,merge=1,delta=2
    47                           	psect	text29,local,class=CODE,merge=1,delta=2
    48                           	psect	text30,local,class=CODE,merge=1,delta=2
    49                           	psect	text31,local,class=CODE,merge=1,delta=2
    50                           	psect	text32,local,class=CODE,merge=1,delta=2
    51                           	psect	text33,local,class=CODE,merge=1,delta=2
    52                           	psect	text34,local,class=CODE,merge=1,delta=2
    53                           	psect	text35,local,class=CODE,merge=1,delta=2
    54                           	psect	text36,local,class=CODE,merge=1,delta=2
    55                           	psect	text37,local,class=CODE,merge=1,delta=2
    56                           	psect	text38,local,class=CODE,merge=1,delta=2,group=1
    57                           	psect	text39,local,class=CODE,merge=1,delta=2
    58                           	psect	text40,local,class=CODE,merge=1,delta=2
    59                           	psect	text41,local,class=CODE,merge=1,delta=2
    60                           	psect	text42,local,class=CODE,merge=1,delta=2
    61                           	psect	text43,local,class=CODE,merge=1,delta=2,group=1
    62                           	psect	text44,local,class=CODE,merge=1,delta=2,group=1
    63                           	psect	text45,local,class=CODE,merge=1,delta=2
    64                           	psect	text46,local,class=CODE,merge=1,delta=2
    65                           	psect	text47,local,class=CODE,merge=1,delta=2
    66                           	psect	text48,local,class=CODE,merge=1,delta=2
    67                           	psect	text49,local,class=CODE,merge=1,delta=2
    68                           	psect	text50,local,class=CODE,merge=1,delta=2
    69                           	psect	text51,local,class=CODE,merge=1,delta=2
    70                           	psect	text52,local,class=CODE,merge=1,delta=2
    71                           	psect	text53,local,class=CODE,merge=1,delta=2
    72                           	psect	text54,local,class=CODE,merge=1,delta=2,group=1
    73                           	psect	text55,local,class=CODE,merge=1,delta=2,group=1
    74                           	psect	text56,local,class=CODE,merge=1,delta=2
    75                           	psect	text57,local,class=CODE,merge=1,delta=2,group=1
    76                           	psect	text58,local,class=CODE,merge=1,delta=2
    77                           	psect	text59,local,class=CODE,merge=1,delta=2
    78                           	psect	text60,local,class=CODE,merge=1,delta=2
    79                           	psect	text61,local,class=CODE,merge=1,delta=2
    80                           	psect	text62,local,class=CODE,merge=1,delta=2
    81                           	psect	text63,local,class=CODE,merge=1,delta=2
    82                           	psect	text64,local,class=CODE,merge=1,delta=2
    83                           	psect	text65,local,class=CODE,merge=1,delta=2
    84                           	psect	intentry,global,class=CODE,delta=2
    85                           	psect	text66,local,class=CODE,merge=1,delta=2
    86                           	psect	text67,local,class=CODE,merge=1,delta=2
    87                           	psect	functab,global,class=ENTRY,delta=2
    88                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    89                           	dabs	1,0x7E,2
    90  0000                     
    91                           ; Version 2.20
    92                           ; Generated 12/02/2020 GMT
    93                           ; 
    94                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    95                           ; All rights reserved.
    96                           ; 
    97                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    98                           ; 
    99                           ; Redistribution and use in source and binary forms, with or without modification, are
   100                           ; permitted provided that the following conditions are met:
   101                           ; 
   102                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   103                           ;        conditions and the following disclaimer.
   104                           ; 
   105                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   106                           ;        of conditions and the following disclaimer in the documentation and/or other
   107                           ;        materials provided with the distribution.
   108                           ; 
   109                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   110                           ;        software without specific prior written permission.
   111                           ; 
   112                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   113                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   114                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   115                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   116                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   117                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   118                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   119                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   120                           ; 
   121                           ; 
   122                           ; Code-generator required, PIC16F877A Definitions
   123                           ; 
   124                           ; SFR Addresses
   125  0000                     	;# 
   126  0001                     	;# 
   127  0002                     	;# 
   128  0003                     	;# 
   129  0004                     	;# 
   130  0005                     	;# 
   131  0006                     	;# 
   132  0007                     	;# 
   133  0008                     	;# 
   134  0009                     	;# 
   135  000A                     	;# 
   136  000B                     	;# 
   137  000C                     	;# 
   138  000D                     	;# 
   139  000E                     	;# 
   140  000E                     	;# 
   141  000F                     	;# 
   142  0010                     	;# 
   143  0011                     	;# 
   144  0012                     	;# 
   145  0013                     	;# 
   146  0014                     	;# 
   147  0015                     	;# 
   148  0015                     	;# 
   149  0016                     	;# 
   150  0017                     	;# 
   151  0018                     	;# 
   152  0019                     	;# 
   153  001A                     	;# 
   154  001B                     	;# 
   155  001B                     	;# 
   156  001C                     	;# 
   157  001D                     	;# 
   158  001E                     	;# 
   159  001F                     	;# 
   160  0081                     	;# 
   161  0085                     	;# 
   162  0086                     	;# 
   163  0087                     	;# 
   164  0088                     	;# 
   165  0089                     	;# 
   166  008C                     	;# 
   167  008D                     	;# 
   168  008E                     	;# 
   169  0091                     	;# 
   170  0092                     	;# 
   171  0093                     	;# 
   172  0094                     	;# 
   173  0098                     	;# 
   174  0099                     	;# 
   175  009C                     	;# 
   176  009D                     	;# 
   177  009E                     	;# 
   178  009F                     	;# 
   179  010C                     	;# 
   180  010D                     	;# 
   181  010E                     	;# 
   182  010F                     	;# 
   183  018C                     	;# 
   184  018D                     	;# 
   185  0000                     	;# 
   186  0001                     	;# 
   187  0002                     	;# 
   188  0003                     	;# 
   189  0004                     	;# 
   190  0005                     	;# 
   191  0006                     	;# 
   192  0007                     	;# 
   193  0008                     	;# 
   194  0009                     	;# 
   195  000A                     	;# 
   196  000B                     	;# 
   197  000C                     	;# 
   198  000D                     	;# 
   199  000E                     	;# 
   200  000E                     	;# 
   201  000F                     	;# 
   202  0010                     	;# 
   203  0011                     	;# 
   204  0012                     	;# 
   205  0013                     	;# 
   206  0014                     	;# 
   207  0015                     	;# 
   208  0015                     	;# 
   209  0016                     	;# 
   210  0017                     	;# 
   211  0018                     	;# 
   212  0019                     	;# 
   213  001A                     	;# 
   214  001B                     	;# 
   215  001B                     	;# 
   216  001C                     	;# 
   217  001D                     	;# 
   218  001E                     	;# 
   219  001F                     	;# 
   220  0081                     	;# 
   221  0085                     	;# 
   222  0086                     	;# 
   223  0087                     	;# 
   224  0088                     	;# 
   225  0089                     	;# 
   226  008C                     	;# 
   227  008D                     	;# 
   228  008E                     	;# 
   229  0091                     	;# 
   230  0092                     	;# 
   231  0093                     	;# 
   232  0094                     	;# 
   233  0098                     	;# 
   234  0099                     	;# 
   235  009C                     	;# 
   236  009D                     	;# 
   237  009E                     	;# 
   238  009F                     	;# 
   239  010C                     	;# 
   240  010D                     	;# 
   241  010E                     	;# 
   242  010F                     	;# 
   243  018C                     	;# 
   244  018D                     	;# 
   245  0000                     	;# 
   246  0001                     	;# 
   247  0002                     	;# 
   248  0003                     	;# 
   249  0004                     	;# 
   250  0005                     	;# 
   251  0006                     	;# 
   252  0007                     	;# 
   253  0008                     	;# 
   254  0009                     	;# 
   255  000A                     	;# 
   256  000B                     	;# 
   257  000C                     	;# 
   258  000D                     	;# 
   259  000E                     	;# 
   260  000E                     	;# 
   261  000F                     	;# 
   262  0010                     	;# 
   263  0011                     	;# 
   264  0012                     	;# 
   265  0013                     	;# 
   266  0014                     	;# 
   267  0015                     	;# 
   268  0015                     	;# 
   269  0016                     	;# 
   270  0017                     	;# 
   271  0018                     	;# 
   272  0019                     	;# 
   273  001A                     	;# 
   274  001B                     	;# 
   275  001B                     	;# 
   276  001C                     	;# 
   277  001D                     	;# 
   278  001E                     	;# 
   279  001F                     	;# 
   280  0081                     	;# 
   281  0085                     	;# 
   282  0086                     	;# 
   283  0087                     	;# 
   284  0088                     	;# 
   285  0089                     	;# 
   286  008C                     	;# 
   287  008D                     	;# 
   288  008E                     	;# 
   289  0091                     	;# 
   290  0092                     	;# 
   291  0093                     	;# 
   292  0094                     	;# 
   293  0098                     	;# 
   294  0099                     	;# 
   295  009C                     	;# 
   296  009D                     	;# 
   297  009E                     	;# 
   298  009F                     	;# 
   299  010C                     	;# 
   300  010D                     	;# 
   301  010E                     	;# 
   302  010F                     	;# 
   303  018C                     	;# 
   304  018D                     	;# 
   305  0000                     	;# 
   306  0001                     	;# 
   307  0002                     	;# 
   308  0003                     	;# 
   309  0004                     	;# 
   310  0005                     	;# 
   311  0006                     	;# 
   312  0007                     	;# 
   313  0008                     	;# 
   314  0009                     	;# 
   315  000A                     	;# 
   316  000B                     	;# 
   317  000C                     	;# 
   318  000D                     	;# 
   319  000E                     	;# 
   320  000E                     	;# 
   321  000F                     	;# 
   322  0010                     	;# 
   323  0011                     	;# 
   324  0012                     	;# 
   325  0013                     	;# 
   326  0014                     	;# 
   327  0015                     	;# 
   328  0015                     	;# 
   329  0016                     	;# 
   330  0017                     	;# 
   331  0018                     	;# 
   332  0019                     	;# 
   333  001A                     	;# 
   334  001B                     	;# 
   335  001B                     	;# 
   336  001C                     	;# 
   337  001D                     	;# 
   338  001E                     	;# 
   339  001F                     	;# 
   340  0081                     	;# 
   341  0085                     	;# 
   342  0086                     	;# 
   343  0087                     	;# 
   344  0088                     	;# 
   345  0089                     	;# 
   346  008C                     	;# 
   347  008D                     	;# 
   348  008E                     	;# 
   349  0091                     	;# 
   350  0092                     	;# 
   351  0093                     	;# 
   352  0094                     	;# 
   353  0098                     	;# 
   354  0099                     	;# 
   355  009C                     	;# 
   356  009D                     	;# 
   357  009E                     	;# 
   358  009F                     	;# 
   359  010C                     	;# 
   360  010D                     	;# 
   361  010E                     	;# 
   362  010F                     	;# 
   363  018C                     	;# 
   364  018D                     	;# 
   365  0000                     	;# 
   366  0001                     	;# 
   367  0002                     	;# 
   368  0003                     	;# 
   369  0004                     	;# 
   370  0005                     	;# 
   371  0006                     	;# 
   372  0007                     	;# 
   373  0008                     	;# 
   374  0009                     	;# 
   375  000A                     	;# 
   376  000B                     	;# 
   377  000C                     	;# 
   378  000D                     	;# 
   379  000E                     	;# 
   380  000E                     	;# 
   381  000F                     	;# 
   382  0010                     	;# 
   383  0011                     	;# 
   384  0012                     	;# 
   385  0013                     	;# 
   386  0014                     	;# 
   387  0015                     	;# 
   388  0015                     	;# 
   389  0016                     	;# 
   390  0017                     	;# 
   391  0018                     	;# 
   392  0019                     	;# 
   393  001A                     	;# 
   394  001B                     	;# 
   395  001B                     	;# 
   396  001C                     	;# 
   397  001D                     	;# 
   398  001E                     	;# 
   399  001F                     	;# 
   400  0081                     	;# 
   401  0085                     	;# 
   402  0086                     	;# 
   403  0087                     	;# 
   404  0088                     	;# 
   405  0089                     	;# 
   406  008C                     	;# 
   407  008D                     	;# 
   408  008E                     	;# 
   409  0091                     	;# 
   410  0092                     	;# 
   411  0093                     	;# 
   412  0094                     	;# 
   413  0098                     	;# 
   414  0099                     	;# 
   415  009C                     	;# 
   416  009D                     	;# 
   417  009E                     	;# 
   418  009F                     	;# 
   419  010C                     	;# 
   420  010D                     	;# 
   421  010E                     	;# 
   422  010F                     	;# 
   423  018C                     	;# 
   424  018D                     	;# 
   425  0000                     	;# 
   426  0001                     	;# 
   427  0002                     	;# 
   428  0003                     	;# 
   429  0004                     	;# 
   430  0005                     	;# 
   431  0006                     	;# 
   432  0007                     	;# 
   433  0008                     	;# 
   434  0009                     	;# 
   435  000A                     	;# 
   436  000B                     	;# 
   437  000C                     	;# 
   438  000D                     	;# 
   439  000E                     	;# 
   440  000E                     	;# 
   441  000F                     	;# 
   442  0010                     	;# 
   443  0011                     	;# 
   444  0012                     	;# 
   445  0013                     	;# 
   446  0014                     	;# 
   447  0015                     	;# 
   448  0015                     	;# 
   449  0016                     	;# 
   450  0017                     	;# 
   451  0018                     	;# 
   452  0019                     	;# 
   453  001A                     	;# 
   454  001B                     	;# 
   455  001B                     	;# 
   456  001C                     	;# 
   457  001D                     	;# 
   458  001E                     	;# 
   459  001F                     	;# 
   460  0081                     	;# 
   461  0085                     	;# 
   462  0086                     	;# 
   463  0087                     	;# 
   464  0088                     	;# 
   465  0089                     	;# 
   466  008C                     	;# 
   467  008D                     	;# 
   468  008E                     	;# 
   469  0091                     	;# 
   470  0092                     	;# 
   471  0093                     	;# 
   472  0094                     	;# 
   473  0098                     	;# 
   474  0099                     	;# 
   475  009C                     	;# 
   476  009D                     	;# 
   477  009E                     	;# 
   478  009F                     	;# 
   479  010C                     	;# 
   480  010D                     	;# 
   481  010E                     	;# 
   482  010F                     	;# 
   483  018C                     	;# 
   484  018D                     	;# 
   485  0000                     	;# 
   486  0001                     	;# 
   487  0002                     	;# 
   488  0003                     	;# 
   489  0004                     	;# 
   490  0005                     	;# 
   491  0006                     	;# 
   492  0007                     	;# 
   493  0008                     	;# 
   494  0009                     	;# 
   495  000A                     	;# 
   496  000B                     	;# 
   497  000C                     	;# 
   498  000D                     	;# 
   499  000E                     	;# 
   500  000E                     	;# 
   501  000F                     	;# 
   502  0010                     	;# 
   503  0011                     	;# 
   504  0012                     	;# 
   505  0013                     	;# 
   506  0014                     	;# 
   507  0015                     	;# 
   508  0015                     	;# 
   509  0016                     	;# 
   510  0017                     	;# 
   511  0018                     	;# 
   512  0019                     	;# 
   513  001A                     	;# 
   514  001B                     	;# 
   515  001B                     	;# 
   516  001C                     	;# 
   517  001D                     	;# 
   518  001E                     	;# 
   519  001F                     	;# 
   520  0081                     	;# 
   521  0085                     	;# 
   522  0086                     	;# 
   523  0087                     	;# 
   524  0088                     	;# 
   525  0089                     	;# 
   526  008C                     	;# 
   527  008D                     	;# 
   528  008E                     	;# 
   529  0091                     	;# 
   530  0092                     	;# 
   531  0093                     	;# 
   532  0094                     	;# 
   533  0098                     	;# 
   534  0099                     	;# 
   535  009C                     	;# 
   536  009D                     	;# 
   537  009E                     	;# 
   538  009F                     	;# 
   539  010C                     	;# 
   540  010D                     	;# 
   541  010E                     	;# 
   542  010F                     	;# 
   543  018C                     	;# 
   544  018D                     	;# 
   545  0000                     	;# 
   546  0001                     	;# 
   547  0002                     	;# 
   548  0003                     	;# 
   549  0004                     	;# 
   550  0005                     	;# 
   551  0006                     	;# 
   552  0007                     	;# 
   553  0008                     	;# 
   554  0009                     	;# 
   555  000A                     	;# 
   556  000B                     	;# 
   557  000C                     	;# 
   558  000D                     	;# 
   559  000E                     	;# 
   560  000E                     	;# 
   561  000F                     	;# 
   562  0010                     	;# 
   563  0011                     	;# 
   564  0012                     	;# 
   565  0013                     	;# 
   566  0014                     	;# 
   567  0015                     	;# 
   568  0015                     	;# 
   569  0016                     	;# 
   570  0017                     	;# 
   571  0018                     	;# 
   572  0019                     	;# 
   573  001A                     	;# 
   574  001B                     	;# 
   575  001B                     	;# 
   576  001C                     	;# 
   577  001D                     	;# 
   578  001E                     	;# 
   579  001F                     	;# 
   580  0081                     	;# 
   581  0085                     	;# 
   582  0086                     	;# 
   583  0087                     	;# 
   584  0088                     	;# 
   585  0089                     	;# 
   586  008C                     	;# 
   587  008D                     	;# 
   588  008E                     	;# 
   589  0091                     	;# 
   590  0092                     	;# 
   591  0093                     	;# 
   592  0094                     	;# 
   593  0098                     	;# 
   594  0099                     	;# 
   595  009C                     	;# 
   596  009D                     	;# 
   597  009E                     	;# 
   598  009F                     	;# 
   599  010C                     	;# 
   600  010D                     	;# 
   601  010E                     	;# 
   602  010F                     	;# 
   603  018C                     	;# 
   604  018D                     	;# 
   605  0000                     	;# 
   606  0001                     	;# 
   607  0002                     	;# 
   608  0003                     	;# 
   609  0004                     	;# 
   610  0005                     	;# 
   611  0006                     	;# 
   612  0007                     	;# 
   613  0008                     	;# 
   614  0009                     	;# 
   615  000A                     	;# 
   616  000B                     	;# 
   617  000C                     	;# 
   618  000D                     	;# 
   619  000E                     	;# 
   620  000E                     	;# 
   621  000F                     	;# 
   622  0010                     	;# 
   623  0011                     	;# 
   624  0012                     	;# 
   625  0013                     	;# 
   626  0014                     	;# 
   627  0015                     	;# 
   628  0015                     	;# 
   629  0016                     	;# 
   630  0017                     	;# 
   631  0018                     	;# 
   632  0019                     	;# 
   633  001A                     	;# 
   634  001B                     	;# 
   635  001B                     	;# 
   636  001C                     	;# 
   637  001D                     	;# 
   638  001E                     	;# 
   639  001F                     	;# 
   640  0081                     	;# 
   641  0085                     	;# 
   642  0086                     	;# 
   643  0087                     	;# 
   644  0088                     	;# 
   645  0089                     	;# 
   646  008C                     	;# 
   647  008D                     	;# 
   648  008E                     	;# 
   649  0091                     	;# 
   650  0092                     	;# 
   651  0093                     	;# 
   652  0094                     	;# 
   653  0098                     	;# 
   654  0099                     	;# 
   655  009C                     	;# 
   656  009D                     	;# 
   657  009E                     	;# 
   658  009F                     	;# 
   659  010C                     	;# 
   660  010D                     	;# 
   661  010E                     	;# 
   662  010F                     	;# 
   663  018C                     	;# 
   664  018D                     	;# 
   665  0000                     	;# 
   666  0001                     	;# 
   667  0002                     	;# 
   668  0003                     	;# 
   669  0004                     	;# 
   670  0005                     	;# 
   671  0006                     	;# 
   672  0007                     	;# 
   673  0008                     	;# 
   674  0009                     	;# 
   675  000A                     	;# 
   676  000B                     	;# 
   677  000C                     	;# 
   678  000D                     	;# 
   679  000E                     	;# 
   680  000E                     	;# 
   681  000F                     	;# 
   682  0010                     	;# 
   683  0011                     	;# 
   684  0012                     	;# 
   685  0013                     	;# 
   686  0014                     	;# 
   687  0015                     	;# 
   688  0015                     	;# 
   689  0016                     	;# 
   690  0017                     	;# 
   691  0018                     	;# 
   692  0019                     	;# 
   693  001A                     	;# 
   694  001B                     	;# 
   695  001B                     	;# 
   696  001C                     	;# 
   697  001D                     	;# 
   698  001E                     	;# 
   699  001F                     	;# 
   700  0081                     	;# 
   701  0085                     	;# 
   702  0086                     	;# 
   703  0087                     	;# 
   704  0088                     	;# 
   705  0089                     	;# 
   706  008C                     	;# 
   707  008D                     	;# 
   708  008E                     	;# 
   709  0091                     	;# 
   710  0092                     	;# 
   711  0093                     	;# 
   712  0094                     	;# 
   713  0098                     	;# 
   714  0099                     	;# 
   715  009C                     	;# 
   716  009D                     	;# 
   717  009E                     	;# 
   718  009F                     	;# 
   719  010C                     	;# 
   720  010D                     	;# 
   721  010E                     	;# 
   722  010F                     	;# 
   723  018C                     	;# 
   724  018D                     	;# 
   725  0000                     	;# 
   726  0001                     	;# 
   727  0002                     	;# 
   728  0003                     	;# 
   729  0004                     	;# 
   730  0005                     	;# 
   731  0006                     	;# 
   732  0007                     	;# 
   733  0008                     	;# 
   734  0009                     	;# 
   735  000A                     	;# 
   736  000B                     	;# 
   737  000C                     	;# 
   738  000D                     	;# 
   739  000E                     	;# 
   740  000E                     	;# 
   741  000F                     	;# 
   742  0010                     	;# 
   743  0011                     	;# 
   744  0012                     	;# 
   745  0013                     	;# 
   746  0014                     	;# 
   747  0015                     	;# 
   748  0015                     	;# 
   749  0016                     	;# 
   750  0017                     	;# 
   751  0018                     	;# 
   752  0019                     	;# 
   753  001A                     	;# 
   754  001B                     	;# 
   755  001B                     	;# 
   756  001C                     	;# 
   757  001D                     	;# 
   758  001E                     	;# 
   759  001F                     	;# 
   760  0081                     	;# 
   761  0085                     	;# 
   762  0086                     	;# 
   763  0087                     	;# 
   764  0088                     	;# 
   765  0089                     	;# 
   766  008C                     	;# 
   767  008D                     	;# 
   768  008E                     	;# 
   769  0091                     	;# 
   770  0092                     	;# 
   771  0093                     	;# 
   772  0094                     	;# 
   773  0098                     	;# 
   774  0099                     	;# 
   775  009C                     	;# 
   776  009D                     	;# 
   777  009E                     	;# 
   778  009F                     	;# 
   779  010C                     	;# 
   780  010D                     	;# 
   781  010E                     	;# 
   782  010F                     	;# 
   783  018C                     	;# 
   784  018D                     	;# 
   785  0000                     	;# 
   786  0001                     	;# 
   787  0002                     	;# 
   788  0003                     	;# 
   789  0004                     	;# 
   790  0005                     	;# 
   791  0006                     	;# 
   792  0007                     	;# 
   793  0008                     	;# 
   794  0009                     	;# 
   795  000A                     	;# 
   796  000B                     	;# 
   797  000C                     	;# 
   798  000D                     	;# 
   799  000E                     	;# 
   800  000E                     	;# 
   801  000F                     	;# 
   802  0010                     	;# 
   803  0011                     	;# 
   804  0012                     	;# 
   805  0013                     	;# 
   806  0014                     	;# 
   807  0015                     	;# 
   808  0015                     	;# 
   809  0016                     	;# 
   810  0017                     	;# 
   811  0018                     	;# 
   812  0019                     	;# 
   813  001A                     	;# 
   814  001B                     	;# 
   815  001B                     	;# 
   816  001C                     	;# 
   817  001D                     	;# 
   818  001E                     	;# 
   819  001F                     	;# 
   820  0081                     	;# 
   821  0085                     	;# 
   822  0086                     	;# 
   823  0087                     	;# 
   824  0088                     	;# 
   825  0089                     	;# 
   826  008C                     	;# 
   827  008D                     	;# 
   828  008E                     	;# 
   829  0091                     	;# 
   830  0092                     	;# 
   831  0093                     	;# 
   832  0094                     	;# 
   833  0098                     	;# 
   834  0099                     	;# 
   835  009C                     	;# 
   836  009D                     	;# 
   837  009E                     	;# 
   838  009F                     	;# 
   839  010C                     	;# 
   840  010D                     	;# 
   841  010E                     	;# 
   842  010F                     	;# 
   843  018C                     	;# 
   844  018D                     	;# 
   845  0000                     	;# 
   846  0001                     	;# 
   847  0002                     	;# 
   848  0003                     	;# 
   849  0004                     	;# 
   850  0005                     	;# 
   851  0006                     	;# 
   852  0007                     	;# 
   853  0008                     	;# 
   854  0009                     	;# 
   855  000A                     	;# 
   856  000B                     	;# 
   857  000C                     	;# 
   858  000D                     	;# 
   859  000E                     	;# 
   860  000E                     	;# 
   861  000F                     	;# 
   862  0010                     	;# 
   863  0011                     	;# 
   864  0012                     	;# 
   865  0013                     	;# 
   866  0014                     	;# 
   867  0015                     	;# 
   868  0015                     	;# 
   869  0016                     	;# 
   870  0017                     	;# 
   871  0018                     	;# 
   872  0019                     	;# 
   873  001A                     	;# 
   874  001B                     	;# 
   875  001B                     	;# 
   876  001C                     	;# 
   877  001D                     	;# 
   878  001E                     	;# 
   879  001F                     	;# 
   880  0081                     	;# 
   881  0085                     	;# 
   882  0086                     	;# 
   883  0087                     	;# 
   884  0088                     	;# 
   885  0089                     	;# 
   886  008C                     	;# 
   887  008D                     	;# 
   888  008E                     	;# 
   889  0091                     	;# 
   890  0092                     	;# 
   891  0093                     	;# 
   892  0094                     	;# 
   893  0098                     	;# 
   894  0099                     	;# 
   895  009C                     	;# 
   896  009D                     	;# 
   897  009E                     	;# 
   898  009F                     	;# 
   899  010C                     	;# 
   900  010D                     	;# 
   901  010E                     	;# 
   902  010F                     	;# 
   903  018C                     	;# 
   904  018D                     	;# 
   905  0000                     	;# 
   906  0001                     	;# 
   907  0002                     	;# 
   908  0003                     	;# 
   909  0004                     	;# 
   910  0005                     	;# 
   911  0006                     	;# 
   912  0007                     	;# 
   913  0008                     	;# 
   914  0009                     	;# 
   915  000A                     	;# 
   916  000B                     	;# 
   917  000C                     	;# 
   918  000D                     	;# 
   919  000E                     	;# 
   920  000E                     	;# 
   921  000F                     	;# 
   922  0010                     	;# 
   923  0011                     	;# 
   924  0012                     	;# 
   925  0013                     	;# 
   926  0014                     	;# 
   927  0015                     	;# 
   928  0015                     	;# 
   929  0016                     	;# 
   930  0017                     	;# 
   931  0018                     	;# 
   932  0019                     	;# 
   933  001A                     	;# 
   934  001B                     	;# 
   935  001B                     	;# 
   936  001C                     	;# 
   937  001D                     	;# 
   938  001E                     	;# 
   939  001F                     	;# 
   940  0081                     	;# 
   941  0085                     	;# 
   942  0086                     	;# 
   943  0087                     	;# 
   944  0088                     	;# 
   945  0089                     	;# 
   946  008C                     	;# 
   947  008D                     	;# 
   948  008E                     	;# 
   949  0091                     	;# 
   950  0092                     	;# 
   951  0093                     	;# 
   952  0094                     	;# 
   953  0098                     	;# 
   954  0099                     	;# 
   955  009C                     	;# 
   956  009D                     	;# 
   957  009E                     	;# 
   958  009F                     	;# 
   959  010C                     	;# 
   960  010D                     	;# 
   961  010E                     	;# 
   962  010F                     	;# 
   963  018C                     	;# 
   964  018D                     	;# 
   965  0000                     	;# 
   966  0001                     	;# 
   967  0002                     	;# 
   968  0003                     	;# 
   969  0004                     	;# 
   970  0005                     	;# 
   971  0006                     	;# 
   972  0007                     	;# 
   973  0008                     	;# 
   974  0009                     	;# 
   975  000A                     	;# 
   976  000B                     	;# 
   977  000C                     	;# 
   978  000D                     	;# 
   979  000E                     	;# 
   980  000E                     	;# 
   981  000F                     	;# 
   982  0010                     	;# 
   983  0011                     	;# 
   984  0012                     	;# 
   985  0013                     	;# 
   986  0014                     	;# 
   987  0015                     	;# 
   988  0015                     	;# 
   989  0016                     	;# 
   990  0017                     	;# 
   991  0018                     	;# 
   992  0019                     	;# 
   993  001A                     	;# 
   994  001B                     	;# 
   995  001B                     	;# 
   996  001C                     	;# 
   997  001D                     	;# 
   998  001E                     	;# 
   999  001F                     	;# 
  1000  0081                     	;# 
  1001  0085                     	;# 
  1002  0086                     	;# 
  1003  0087                     	;# 
  1004  0088                     	;# 
  1005  0089                     	;# 
  1006  008C                     	;# 
  1007  008D                     	;# 
  1008  008E                     	;# 
  1009  0091                     	;# 
  1010  0092                     	;# 
  1011  0093                     	;# 
  1012  0094                     	;# 
  1013  0098                     	;# 
  1014  0099                     	;# 
  1015  009C                     	;# 
  1016  009D                     	;# 
  1017  009E                     	;# 
  1018  009F                     	;# 
  1019  010C                     	;# 
  1020  010D                     	;# 
  1021  010E                     	;# 
  1022  010F                     	;# 
  1023  018C                     	;# 
  1024  018D                     	;# 
  1025  0000                     	;# 
  1026  0001                     	;# 
  1027  0002                     	;# 
  1028  0003                     	;# 
  1029  0004                     	;# 
  1030  0005                     	;# 
  1031  0006                     	;# 
  1032  0007                     	;# 
  1033  0008                     	;# 
  1034  0009                     	;# 
  1035  000A                     	;# 
  1036  000B                     	;# 
  1037  000C                     	;# 
  1038  000D                     	;# 
  1039  000E                     	;# 
  1040  000E                     	;# 
  1041  000F                     	;# 
  1042  0010                     	;# 
  1043  0011                     	;# 
  1044  0012                     	;# 
  1045  0013                     	;# 
  1046  0014                     	;# 
  1047  0015                     	;# 
  1048  0015                     	;# 
  1049  0016                     	;# 
  1050  0017                     	;# 
  1051  0018                     	;# 
  1052  0019                     	;# 
  1053  001A                     	;# 
  1054  001B                     	;# 
  1055  001B                     	;# 
  1056  001C                     	;# 
  1057  001D                     	;# 
  1058  001E                     	;# 
  1059  001F                     	;# 
  1060  0081                     	;# 
  1061  0085                     	;# 
  1062  0086                     	;# 
  1063  0087                     	;# 
  1064  0088                     	;# 
  1065  0089                     	;# 
  1066  008C                     	;# 
  1067  008D                     	;# 
  1068  008E                     	;# 
  1069  0091                     	;# 
  1070  0092                     	;# 
  1071  0093                     	;# 
  1072  0094                     	;# 
  1073  0098                     	;# 
  1074  0099                     	;# 
  1075  009C                     	;# 
  1076  009D                     	;# 
  1077  009E                     	;# 
  1078  009F                     	;# 
  1079  010C                     	;# 
  1080  010D                     	;# 
  1081  010E                     	;# 
  1082  010F                     	;# 
  1083  018C                     	;# 
  1084  018D                     	;# 
  1085                           
  1086                           	psect	idataBANK0
  1087  16D6                     __pidataBANK0:
  1088                           
  1089                           ;initializer for _WH_TargetTemp_G
  1090  16D6  343C               	retlw	60
  1091                           
  1092                           ;initializer for _WH_PasswordFlag_G
  1093  16D7  3401               	retlw	1
  1094                           
  1095                           	psect	idataBANK1
  1096  16E0                     __pidataBANK1:
  1097                           
  1098                           ;initializer for _WH_EEPROMPassword_G
  1099  16E0  3423               	retlw	35
  1100  16E1  3450               	retlw	80
  1101  16E2  3477               	retlw	119
  1102  16E3  3472               	retlw	114
  1103  16E4  3455               	retlw	85
  1104  16E5  3470               	retlw	112
  1105  16E6  345F               	retlw	95
  1106  16E7  3431               	retlw	49
  1107                           
  1108                           	psect	idataBANK3
  1109  16E8                     __pidataBANK3:
  1110                           
  1111                           ;initializer for _SSD_SymbolPattern_G
  1112  16E8  343F               	retlw	63
  1113  16E9  3406               	retlw	6
  1114  16EA  345B               	retlw	91
  1115  16EB  344F               	retlw	79
  1116  16EC  3466               	retlw	102
  1117  16ED  346D               	retlw	109
  1118  16EE  347D               	retlw	125
  1119  16EF  3407               	retlw	7
  1120  16F0  347F               	retlw	127
  1121  16F1  346F               	retlw	111
  1122  0017                     _CCP1CON	set	23
  1123  0015                     _CCPR1L	set	21
  1124  0016                     _CCPR1H	set	22
  1125  0010                     _T1CON	set	16
  1126  000E                     _TMR1L	set	14
  1127  000F                     _TMR1H	set	15
  1128  000B                     _INTCON	set	11
  1129  0001                     _TMR0	set	1
  1130  000B                     _INTCONbits	set	11
  1131  000C                     _PIR1	set	12
  1132  0013                     _SSPBUF	set	19
  1133  0014                     _SSPCON	set	20
  1134  001E                     _ADRESH	set	30
  1135  001F                     _ADCON0	set	31
  1136  0007                     _PORTC	set	7
  1137  0006                     _PORTB	set	6
  1138  0005                     _PORTA	set	5
  1139  0008                     _PORTD	set	8
  1140  008C                     _PIE1	set	140
  1141  0081                     _OPTION_REG	set	129
  1142  0093                     _SSPADD	set	147
  1143  0091                     _SSPCON2	set	145
  1144  0094                     _SSPSTAT	set	148
  1145  009E                     _ADRESL	set	158
  1146  009F                     _ADCON1	set	159
  1147                           
  1148                           	psect	cinit
  1149  0015                     start_initialization:	
  1150                           ; #config settings
  1151                           
  1152  0015                     __initialization:
  1153                           
  1154                           ; Initialize objects allocated to BANK3
  1155  0015  1783               	bsf	3,7	;select IRP bank2
  1156  0016  309A               	movlw	low (__pdataBANK3+10)
  1157  0017  00FD               	movwf	btemp+-1
  1158  0018  3016               	movlw	high __pidataBANK3
  1159  0019  00FE               	movwf	btemp
  1160  001A  30E8               	movlw	low __pidataBANK3
  1161  001B  00FF               	movwf	btemp+1
  1162  001C  3090               	movlw	low __pdataBANK3
  1163  001D  0084               	movwf	4
  1164  001E  160A  118A  276A  120A  118A  	fcall	init_ram0
  1165                           
  1166                           ; Initialize objects allocated to BANK1
  1167  0023  1383               	bcf	3,7	;select IRP bank0
  1168  0024  30EC               	movlw	low (__pdataBANK1+8)
  1169  0025  00FD               	movwf	btemp+-1
  1170  0026  3016               	movlw	high __pidataBANK1
  1171  0027  00FE               	movwf	btemp
  1172  0028  30E0               	movlw	low __pidataBANK1
  1173  0029  00FF               	movwf	btemp+1
  1174  002A  30E4               	movlw	low __pdataBANK1
  1175  002B  0084               	movwf	4
  1176  002C  160A  118A  276A  120A  118A  	fcall	init_ram0
  1177                           
  1178                           ; Initialize objects allocated to BANK0
  1179  0031  160A  118A  26D6  120A  118A  	fcall	__pidataBANK0	;fetch initializer
  1180  0036  00EE               	movwf	__pdataBANK0& (0+127)
  1181  0037  160A  118A  26D7  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
  1182  003C  00EF               	movwf	(__pdataBANK0+1)& (0+127)
  1183                           
  1184                           ; Clear objects allocated to BANK1
  1185  003D  30A0               	movlw	low __pbssBANK1
  1186  003E  0084               	movwf	4
  1187  003F  30E4               	movlw	low (__pbssBANK1+68)
  1188  0040  160A  118A  26D8  120A  118A  	fcall	clear_ram0
  1189                           
  1190                           ; Clear objects allocated to BANK0
  1191  0045  3020               	movlw	low __pbssBANK0
  1192  0046  0084               	movwf	4
  1193  0047  304D               	movlw	low (__pbssBANK0+45)
  1194  0048  160A  118A  26D8  120A  118A  	fcall	clear_ram0
  1195                           
  1196                           ; Clear objects allocated to COMMON
  1197  004D  01FA               	clrf	__pbssCOMMON& (0+127)
  1198  004E  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
  1199  004F  01FC               	clrf	(__pbssCOMMON+2)& (0+127)
  1200  0050  01FD               	clrf	(__pbssCOMMON+3)& (0+127)
  1201  0051                     end_of_initialization:	
  1202                           ;End of C runtime variable initialization code
  1203                           
  1204  0051                     __end_of__initialization:
  1205  0051  0183               	clrf	3
  1206  0052  120A  118A  2940   	ljmp	_main	;jump to C main() function
  1207                           
  1208                           	psect	bssCOMMON
  1209  007A                     __pbssCOMMON:
  1210  007A                     _SCH_ErrorTickCount_G:
  1211  007A                     	ds	2
  1212  007C                     _WH_Counter_G:
  1213  007C                     	ds	2
  1214                           
  1215                           	psect	bssBANK0
  1216  0020                     __pbssBANK0:
  1217  0020                     _ADC_G:
  1218  0020                     	ds	10
  1219  002A                     _SW_G:
  1220  002A                     	ds	9
  1221  0033                     _DISP_G:
  1222  0033                     	ds	8
  1223  003B                     _SSD_G:
  1224  003B                     	ds	8
  1225  0043                     _LED_G:
  1226  0043                     	ds	2
  1227  0045                     _HCU_G:
  1228  0045                     	ds	2
  1229  0047                     _SCH_IntFlag_G:
  1230  0047                     	ds	1
  1231  0048                     _SCH_ErrorCode_G:
  1232  0048                     	ds	1
  1233  0049                     _WH_AvgTemp_G:
  1234  0049                     	ds	1
  1235  004A                     _WH_PreState_G:
  1236  004A                     	ds	1
  1237  004B                     _WH_State_G:
  1238  004B                     	ds	1
  1239  004C                     _SSD_Num_G:
  1240  004C                     	ds	1
  1241                           
  1242                           	psect	dataBANK0
  1243  006E                     __pdataBANK0:
  1244  006E                     _WH_TargetTemp_G:
  1245  006E                     	ds	1
  1246  006F                     _WH_PasswordFlag_G:
  1247  006F                     	ds	1
  1248                           
  1249                           	psect	bssBANK1
  1250  00A0                     __pbssBANK1:
  1251  00A0                     _SCH_Tasks:
  1252  00A0                     	ds	48
  1253  00D0                     _TEMP_G:
  1254  00D0                     	ds	12
  1255  00DC                     _WH_PasswordRead_G:
  1256  00DC                     	ds	8
  1257                           
  1258                           	psect	dataBANK1
  1259  00E4                     __pdataBANK1:
  1260  00E4                     _WH_EEPROMPassword_G:
  1261  00E4                     	ds	8
  1262                           
  1263                           	psect	dataBANK3
  1264  0190                     __pdataBANK3:
  1265  0190                     _SSD_SymbolPattern_G:
  1266  0190                     	ds	10
  1267                           
  1268                           	psect	inittext
  1269  1766                     init_fetch0:	
  1270                           ;	Called with low address in FSR and high address in W
  1271                           
  1272  1766  087E               	movf	btemp,w
  1273  1767  008A               	movwf	10
  1274  1768  087F               	movf	btemp+1,w
  1275  1769  0082               	movwf	2
  1276  176A                     init_ram0:	
  1277                           ;Called with:
  1278                           ;	high address of idata address in btemp 
  1279                           ;	low address of idata address in btemp+1 
  1280                           ;	low address of data in FSR
  1281                           ;	high address + 1 of data in btemp-1
  1282                           
  1283  176A  160A  118A  2766  160A  118A  	fcall	init_fetch0
  1284  176F  0080               	movwf	0
  1285  1770  0A84               	incf	4,f
  1286  1771  0804               	movf	4,w
  1287  1772  067D               	xorwf	btemp+-1,w
  1288  1773  1903               	btfsc	3,2
  1289  1774  3400               	retlw	0
  1290  1775  0AFF               	incf	btemp+1,f
  1291  1776  1903               	btfsc	3,2
  1292  1777  0AFE               	incf	btemp,f
  1293  1778  2F6A               	goto	init_ram0
  1294                           
  1295                           	psect	clrtext
  1296  16D8                     clear_ram0:	
  1297                           ;	Called with FSR containing the base address, and
  1298                           ;	W with the last address+1
  1299                           
  1300  16D8  0064               	clrwdt	;clear the watchdog before getting into this loop
  1301  16D9                     clrloop0:
  1302  16D9  0180               	clrf	0	;clear RAM location pointed to by FSR
  1303  16DA  0A84               	incf	4,f	;increment pointer
  1304  16DB  0604               	xorwf	4,w	;XOR with final address
  1305  16DC  1903               	btfsc	3,2	;have we reached the end yet?
  1306  16DD  3400               	retlw	0	;all done for this memory range, return
  1307  16DE  0604               	xorwf	4,w	;XOR again to restore value
  1308  16DF  2ED9               	goto	clrloop0	;do the next byte
  1309                           
  1310                           	psect	cstackCOMMON
  1311  0070                     __pcstackCOMMON:
  1312  0070                     ?_SCH_Init:
  1313  0070                     ?_LED_Init:	
  1314                           ; 1 bytes @ 0x0
  1315                           
  1316  0070                     ?_SW_Init:	
  1317                           ; 1 bytes @ 0x0
  1318                           
  1319  0070                     ?_ADC_Init:	
  1320                           ; 1 bytes @ 0x0
  1321                           
  1322  0070                     ?_TEMP_Init:	
  1323                           ; 1 bytes @ 0x0
  1324                           
  1325  0070                     ?_HCU_Init:	
  1326                           ; 1 bytes @ 0x0
  1327                           
  1328  0070                     ?_DISP_Init:	
  1329                           ; 1 bytes @ 0x0
  1330                           
  1331  0070                     ?_SSD_Init:	
  1332                           ; 1 bytes @ 0x0
  1333                           
  1334  0070                     ?_WH_Init:	
  1335                           ; 1 bytes @ 0x0
  1336                           
  1337  0070                     ?_LED_Update:	
  1338                           ; 1 bytes @ 0x0
  1339                           
  1340  0070                     ?_SW_Update:	
  1341                           ; 1 bytes @ 0x0
  1342                           
  1343  0070                     ?_ADC_Update:	
  1344                           ; 1 bytes @ 0x0
  1345                           
  1346  0070                     ?_TEMP_Update:	
  1347                           ; 1 bytes @ 0x0
  1348                           
  1349  0070                     ?_HCU_Update:	
  1350                           ; 1 bytes @ 0x0
  1351                           
  1352  0070                     ?_DISP_Update:	
  1353                           ; 1 bytes @ 0x0
  1354                           
  1355  0070                     ?_SSD_Update:	
  1356                           ; 1 bytes @ 0x0
  1357                           
  1358  0070                     ?_WH_Task:	
  1359                           ; 1 bytes @ 0x0
  1360                           
  1361  0070                     ?_SCH_Start:	
  1362                           ; 1 bytes @ 0x0
  1363                           
  1364  0070                     ?_SCH_Dispatch_Tasks:	
  1365                           ; 1 bytes @ 0x0
  1366                           
  1367  0070                     ?_I2C_Master_Start:	
  1368                           ; 1 bytes @ 0x0
  1369                           
  1370  0070                     ?_I2C_Master_RepeatedStart:	
  1371                           ; 1 bytes @ 0x0
  1372                           
  1373  0070                     ?_I2C_Master_Write:	
  1374                           ; 1 bytes @ 0x0
  1375                           
  1376  0070                     ?_I2C_Master_Stop:	
  1377                           ; 1 bytes @ 0x0
  1378                           
  1379  0070                     ?_I2C_Read:	
  1380                           ; 1 bytes @ 0x0
  1381                           
  1382  0070                     ?_I2C_NACK:	
  1383                           ; 1 bytes @ 0x0
  1384                           
  1385  0070                     ?_I2C_ACK:	
  1386                           ; 1 bytes @ 0x0
  1387                           
  1388  0070                     ?_WH_OffMode:	
  1389                           ; 1 bytes @ 0x0
  1390                           
  1391  0070                     ?_WH_OperationMode:	
  1392                           ; 1 bytes @ 0x0
  1393                           
  1394  0070                     ?_WH_NormalMode:	
  1395                           ; 1 bytes @ 0x0
  1396                           
  1397  0070                     ?_WH_TempSetMode:	
  1398                           ; 1 bytes @ 0x0
  1399                           
  1400  0070                     ?_WH_ResetMode:	
  1401                           ; 1 bytes @ 0x0
  1402                           
  1403  0070                     ?_SCH_Delete_Task:	
  1404                           ; 1 bytes @ 0x0
  1405                           
  1406  0070                     ?_SW_GetState:	
  1407                           ; 1 bytes @ 0x0
  1408                           
  1409  0070                     ?_ADC_GetState:	
  1410                           ; 1 bytes @ 0x0
  1411                           
  1412  0070                     ?_TEMP_GetAverage:	
  1413                           ; 1 bytes @ 0x0
  1414                           
  1415  0070                     ?_EEPROM_Init:	
  1416                           ; 1 bytes @ 0x0
  1417                           
  1418  0070                     ?_EEPROM_Read:	
  1419                           ; 1 bytes @ 0x0
  1420                           
  1421  0070                     ?_I2C_Master_Wait:	
  1422                           ; 1 bytes @ 0x0
  1423                           
  1424  0070                     ?_SCH_Report_Status:	
  1425                           ; 1 bytes @ 0x0
  1426                           
  1427  0070                     ?_SCH_Go_To_Sleep:	
  1428                           ; 1 bytes @ 0x0
  1429                           
  1430  0070                     ?_SCH_Update:	
  1431                           ; 1 bytes @ 0x0
  1432                           
  1433  0070                     ?_SysTick_Handler:	
  1434                           ; 1 bytes @ 0x0
  1435                           
  1436  0070                     ?i1___bmul:	
  1437                           ; 1 bytes @ 0x0
  1438                           
  1439  0070                     ?_main:	
  1440                           ; 1 bytes @ 0x0
  1441                           
  1442  0070                     i1___bmul@multiplicand:	
  1443                           ; 2 bytes @ 0x0
  1444                           
  1445                           
  1446                           ; 1 bytes @ 0x0
  1447  0070                     	ds	1
  1448  0071                     ??i1___bmul:
  1449  0071                     i1___bmul@product:	
  1450                           ; 1 bytes @ 0x1
  1451                           
  1452                           
  1453                           ; 1 bytes @ 0x1
  1454  0071                     	ds	1
  1455  0072                     i1___bmul@multiplier:
  1456                           
  1457                           ; 1 bytes @ 0x2
  1458  0072                     	ds	1
  1459  0073                     ??_SCH_Update:
  1460                           
  1461                           ; 1 bytes @ 0x3
  1462  0073                     	ds	2
  1463  0075                     SCH_Update@Index:
  1464                           
  1465                           ; 1 bytes @ 0x5
  1466  0075                     	ds	1
  1467  0076                     ??_SysTick_Handler:
  1468                           
  1469                           ; 1 bytes @ 0x6
  1470  0076                     	ds	4
  1471                           
  1472                           	psect	cstackBANK0
  1473  004D                     __pcstackBANK0:
  1474  004D                     ??_ADC_Init:
  1475  004D                     ??_TEMP_Init:	
  1476                           ; 1 bytes @ 0x0
  1477                           
  1478  004D                     ??_TEMP_Update:	
  1479                           ; 1 bytes @ 0x0
  1480                           
  1481  004D                     ?_GPIO_InitPin:	
  1482                           ; 1 bytes @ 0x0
  1483                           
  1484  004D                     ?_GPIO_SetPinState:	
  1485                           ; 1 bytes @ 0x0
  1486                           
  1487  004D                     ?_GPIO_SetPortState:	
  1488                           ; 1 bytes @ 0x0
  1489                           
  1490  004D                     ?_GPIO_GetPinState:	
  1491                           ; 1 bytes @ 0x0
  1492                           
  1493  004D                     ??_I2C_Master_Start:	
  1494                           ; 1 bytes @ 0x0
  1495                           
  1496  004D                     ??_I2C_Master_RepeatedStart:	
  1497                           ; 1 bytes @ 0x0
  1498                           
  1499  004D                     ??_I2C_Master_Write:	
  1500                           ; 1 bytes @ 0x0
  1501                           
  1502  004D                     ??_I2C_Master_Stop:	
  1503                           ; 1 bytes @ 0x0
  1504                           
  1505  004D                     ??_I2C_Read:	
  1506                           ; 1 bytes @ 0x0
  1507                           
  1508  004D                     ??_I2C_NACK:	
  1509                           ; 1 bytes @ 0x0
  1510                           
  1511  004D                     ??_I2C_ACK:	
  1512                           ; 1 bytes @ 0x0
  1513                           
  1514  004D                     ?_LED_SetState:	
  1515                           ; 1 bytes @ 0x0
  1516                           
  1517  004D                     ?_HCU_SetState:	
  1518                           ; 1 bytes @ 0x0
  1519                           
  1520  004D                     ?_TIM1_Init:	
  1521                           ; 1 bytes @ 0x0
  1522                           
  1523  004D                     ?_SW_Delay_us:	
  1524                           ; 1 bytes @ 0x0
  1525                           
  1526  004D                     ?_SSD_SetState:	
  1527                           ; 1 bytes @ 0x0
  1528                           
  1529  004D                     ??_SW_GetState:	
  1530                           ; 1 bytes @ 0x0
  1531                           
  1532  004D                     ??_ADC_GetState:	
  1533                           ; 1 bytes @ 0x0
  1534                           
  1535  004D                     ??_I2C_Master_Wait:	
  1536                           ; 1 bytes @ 0x0
  1537                           
  1538  004D                     ?_DISP_SetState:	
  1539                           ; 1 bytes @ 0x0
  1540                           
  1541  004D                     ??_SCH_Go_To_Sleep:	
  1542                           ; 1 bytes @ 0x0
  1543                           
  1544  004D                     ?___bmul:	
  1545                           ; 1 bytes @ 0x0
  1546                           
  1547  004D                     ?___awdiv:	
  1548                           ; 1 bytes @ 0x0
  1549                           
  1550  004D                     ?___lwdiv:	
  1551                           ; 2 bytes @ 0x0
  1552                           
  1553  004D                     ?___lmul:	
  1554                           ; 2 bytes @ 0x0
  1555                           
  1556  004D                     SSD_SetState@State:	
  1557                           ; 4 bytes @ 0x0
  1558                           
  1559  004D                     TEMP_Init@Index:	
  1560                           ; 1 bytes @ 0x0
  1561                           
  1562  004D                     I2C_Master_Write@Data:	
  1563                           ; 1 bytes @ 0x0
  1564                           
  1565  004D                     DISP_SetState@State:	
  1566                           ; 1 bytes @ 0x0
  1567                           
  1568  004D                     HCU_SetState@State:	
  1569                           ; 1 bytes @ 0x0
  1570                           
  1571  004D                     LED_SetState@State:	
  1572                           ; 1 bytes @ 0x0
  1573                           
  1574  004D                     ___bmul@multiplicand:	
  1575                           ; 1 bytes @ 0x0
  1576                           
  1577  004D                     GPIO_InitPin@GPIOx:	
  1578                           ; 1 bytes @ 0x0
  1579                           
  1580  004D                     GPIO_SetPinState@GPIOx:	
  1581                           ; 2 bytes @ 0x0
  1582                           
  1583  004D                     GPIO_GetPinState@GPIOx:	
  1584                           ; 2 bytes @ 0x0
  1585                           
  1586  004D                     GPIO_SetPortState@GPIOx:	
  1587                           ; 2 bytes @ 0x0
  1588                           
  1589  004D                     TIM1_Init@Ticks_N:	
  1590                           ; 2 bytes @ 0x0
  1591                           
  1592  004D                     ___awdiv@divisor:	
  1593                           ; 2 bytes @ 0x0
  1594                           
  1595  004D                     ___lwdiv@divisor:	
  1596                           ; 2 bytes @ 0x0
  1597                           
  1598  004D                     SW_Delay_us@Delay_us:	
  1599                           ; 2 bytes @ 0x0
  1600                           
  1601  004D                     ___lmul@multiplier:	
  1602                           ; 4 bytes @ 0x0
  1603                           
  1604                           
  1605                           ; 4 bytes @ 0x0
  1606  004D                     	ds	1
  1607  004E                     ??_LED_SetState:
  1608  004E                     ??_HCU_SetState:	
  1609                           ; 1 bytes @ 0x1
  1610                           
  1611  004E                     ??_SSD_SetState:	
  1612                           ; 1 bytes @ 0x1
  1613                           
  1614  004E                     ?_EEPROM_Write:	
  1615                           ; 1 bytes @ 0x1
  1616                           
  1617  004E                     ?_EEPROM_WritePage:	
  1618                           ; 1 bytes @ 0x1
  1619                           
  1620  004E                     ??_EEPROM_Read:	
  1621                           ; 1 bytes @ 0x1
  1622                           
  1623  004E                     ?_EEPROM_ReadPage:	
  1624                           ; 1 bytes @ 0x1
  1625                           
  1626  004E                     ??_DISP_SetState:	
  1627                           ; 1 bytes @ 0x1
  1628                           
  1629  004E                     ??___bmul:	
  1630                           ; 1 bytes @ 0x1
  1631                           
  1632  004E                     EEPROM_Write@Data:	
  1633                           ; 1 bytes @ 0x1
  1634                           
  1635  004E                     EEPROM_WritePage@Data_P:	
  1636                           ; 1 bytes @ 0x1
  1637                           
  1638  004E                     EEPROM_Read@Address:	
  1639                           ; 1 bytes @ 0x1
  1640                           
  1641  004E                     EEPROM_ReadPage@Data_P:	
  1642                           ; 1 bytes @ 0x1
  1643                           
  1644  004E                     ___bmul@product:	
  1645                           ; 1 bytes @ 0x1
  1646                           
  1647                           
  1648                           ; 1 bytes @ 0x1
  1649  004E                     	ds	1
  1650  004F                     ??_TIM1_Init:
  1651  004F                     ??_EEPROM_Write:	
  1652                           ; 1 bytes @ 0x2
  1653                           
  1654  004F                     SW_GetState@SWx:	
  1655                           ; 1 bytes @ 0x2
  1656                           
  1657  004F                     EEPROM_Write@Address:	
  1658                           ; 1 bytes @ 0x2
  1659                           
  1660  004F                     EEPROM_WritePage@Length:	
  1661                           ; 1 bytes @ 0x2
  1662                           
  1663  004F                     EEPROM_Read@Data:	
  1664                           ; 1 bytes @ 0x2
  1665                           
  1666  004F                     EEPROM_ReadPage@Length:	
  1667                           ; 1 bytes @ 0x2
  1668                           
  1669  004F                     GPIO_InitPin@PINx:	
  1670                           ; 1 bytes @ 0x2
  1671                           
  1672  004F                     GPIO_SetPinState@PINx:	
  1673                           ; 1 bytes @ 0x2
  1674                           
  1675  004F                     GPIO_GetPinState@PINx:	
  1676                           ; 1 bytes @ 0x2
  1677                           
  1678  004F                     GPIO_SetPortState@PINx:	
  1679                           ; 1 bytes @ 0x2
  1680                           
  1681  004F                     ___bmul@multiplier:	
  1682                           ; 1 bytes @ 0x2
  1683                           
  1684  004F                     ___awdiv@dividend:	
  1685                           ; 1 bytes @ 0x2
  1686                           
  1687  004F                     ___lwdiv@dividend:	
  1688                           ; 2 bytes @ 0x2
  1689                           
  1690                           
  1691                           ; 2 bytes @ 0x2
  1692  004F                     	ds	1
  1693  0050                     ?_SCH_Add_Task:
  1694  0050                     ??_GPIO_GetPinState:	
  1695                           ; 1 bytes @ 0x3
  1696                           
  1697  0050                     ??_SCH_Delete_Task:	
  1698                           ; 1 bytes @ 0x3
  1699                           
  1700  0050                     ??_EEPROM_WritePage:	
  1701                           ; 1 bytes @ 0x3
  1702                           
  1703  0050                     ??_EEPROM_ReadPage:	
  1704                           ; 1 bytes @ 0x3
  1705                           
  1706  0050                     SSD_SetState@SSDx:	
  1707                           ; 1 bytes @ 0x3
  1708                           
  1709  0050                     SW_GetState@State:	
  1710                           ; 1 bytes @ 0x3
  1711                           
  1712  0050                     DISP_SetState@DISPx:	
  1713                           ; 1 bytes @ 0x3
  1714                           
  1715  0050                     SCH_Delete_Task@Index:	
  1716                           ; 1 bytes @ 0x3
  1717                           
  1718  0050                     HCU_SetState@HCUx:	
  1719                           ; 1 bytes @ 0x3
  1720                           
  1721  0050                     LED_SetState@LEDx:	
  1722                           ; 1 bytes @ 0x3
  1723                           
  1724  0050                     GPIO_InitPin@Mode:	
  1725                           ; 1 bytes @ 0x3
  1726                           
  1727  0050                     GPIO_SetPinState@State:	
  1728                           ; 1 bytes @ 0x3
  1729                           
  1730  0050                     GPIO_SetPortState@State:	
  1731                           ; 1 bytes @ 0x3
  1732                           
  1733  0050                     SCH_Add_Task@Delay:	
  1734                           ; 1 bytes @ 0x3
  1735                           
  1736                           
  1737                           ; 2 bytes @ 0x3
  1738  0050                     	ds	1
  1739  0051                     ??_SCH_Init:
  1740  0051                     ??_DISP_Init:	
  1741                           ; 1 bytes @ 0x4
  1742                           
  1743  0051                     ??_DISP_Update:	
  1744                           ; 1 bytes @ 0x4
  1745                           
  1746  0051                     ??_GPIO_InitPin:	
  1747                           ; 1 bytes @ 0x4
  1748                           
  1749  0051                     ??_GPIO_SetPinState:	
  1750                           ; 1 bytes @ 0x4
  1751                           
  1752  0051                     ??_GPIO_SetPortState:	
  1753                           ; 1 bytes @ 0x4
  1754                           
  1755  0051                     ??_WH_OffMode:	
  1756                           ; 1 bytes @ 0x4
  1757                           
  1758  0051                     ??_WH_ResetMode:	
  1759                           ; 1 bytes @ 0x4
  1760                           
  1761  0051                     ??_SW_Delay_us:	
  1762                           ; 1 bytes @ 0x4
  1763                           
  1764  0051                     ??_SCH_Report_Status:	
  1765                           ; 1 bytes @ 0x4
  1766                           
  1767  0051                     ??___awdiv:	
  1768                           ; 1 bytes @ 0x4
  1769                           
  1770  0051                     ??___lwdiv:	
  1771                           ; 1 bytes @ 0x4
  1772                           
  1773  0051                     SCH_Init@Index:	
  1774                           ; 1 bytes @ 0x4
  1775                           
  1776  0051                     ___awdiv@counter:	
  1777                           ; 1 bytes @ 0x4
  1778                           
  1779  0051                     ___lwdiv@quotient:	
  1780                           ; 1 bytes @ 0x4
  1781                           
  1782  0051                     ___lmul@multiplicand:	
  1783                           ; 2 bytes @ 0x4
  1784                           
  1785                           
  1786                           ; 4 bytes @ 0x4
  1787  0051                     	ds	1
  1788  0052                     ??_SW_Update:
  1789  0052                     EEPROM_WritePage@Address:	
  1790                           ; 1 bytes @ 0x5
  1791                           
  1792  0052                     EEPROM_ReadPage@Address:	
  1793                           ; 1 bytes @ 0x5
  1794                           
  1795  0052                     ___awdiv@sign:	
  1796                           ; 1 bytes @ 0x5
  1797                           
  1798  0052                     SCH_Add_Task@Period:	
  1799                           ; 1 bytes @ 0x5
  1800                           
  1801                           
  1802                           ; 2 bytes @ 0x5
  1803  0052                     	ds	1
  1804  0053                     ??_LED_Update:
  1805  0053                     ??_HCU_Update:	
  1806                           ; 1 bytes @ 0x6
  1807                           
  1808  0053                     ??_SSD_Update:	
  1809                           ; 1 bytes @ 0x6
  1810                           
  1811  0053                     ___lwdiv@counter:	
  1812                           ; 1 bytes @ 0x6
  1813                           
  1814  0053                     EEPROM_WritePage@i:	
  1815                           ; 1 bytes @ 0x6
  1816                           
  1817  0053                     EEPROM_ReadPage@i:	
  1818                           ; 2 bytes @ 0x6
  1819                           
  1820  0053                     ___awdiv@quotient:	
  1821                           ; 2 bytes @ 0x6
  1822                           
  1823                           
  1824                           ; 2 bytes @ 0x6
  1825  0053                     	ds	1
  1826  0054                     ??_SCH_Add_Task:
  1827  0054                     ??_TEMP_GetAverage:	
  1828                           ; 1 bytes @ 0x7
  1829                           
  1830  0054                     SCH_Add_Task@Task_P:	
  1831                           ; 1 bytes @ 0x7
  1832                           
  1833                           
  1834                           ; 1 bytes @ 0x7
  1835  0054                     	ds	1
  1836  0055                     ??___lmul:
  1837  0055                     ?___awmod:	
  1838                           ; 1 bytes @ 0x8
  1839                           
  1840  0055                     SCH_Add_Task@Index:	
  1841                           ; 2 bytes @ 0x8
  1842                           
  1843  0055                     SW_Delay_us@Delay:	
  1844                           ; 1 bytes @ 0x8
  1845                           
  1846  0055                     ___awmod@divisor:	
  1847                           ; 1 bytes @ 0x8
  1848                           
  1849                           
  1850                           ; 2 bytes @ 0x8
  1851  0055                     	ds	1
  1852  0056                     ?_SW_Delay_ms:
  1853  0056                     TEMP_GetAverage@AvgTemp:	
  1854                           ; 1 bytes @ 0x9
  1855                           
  1856  0056                     SW_Delay_ms@Delay_ms:	
  1857                           ; 2 bytes @ 0x9
  1858                           
  1859  0056                     ___lmul@product:	
  1860                           ; 4 bytes @ 0x9
  1861                           
  1862                           
  1863                           ; 4 bytes @ 0x9
  1864  0056                     	ds	1
  1865  0057                     ??_LED_Init:
  1866  0057                     ??_SW_Init:	
  1867                           ; 1 bytes @ 0xA
  1868                           
  1869  0057                     ??_HCU_Init:	
  1870                           ; 1 bytes @ 0xA
  1871                           
  1872  0057                     ??_SSD_Init:	
  1873                           ; 1 bytes @ 0xA
  1874                           
  1875  0057                     ___awmod@dividend:	
  1876                           ; 1 bytes @ 0xA
  1877                           
  1878                           
  1879                           ; 2 bytes @ 0xA
  1880  0057                     	ds	1
  1881  0058                     TEMP_GetAverage@Index:
  1882                           
  1883                           ; 1 bytes @ 0xB
  1884  0058                     	ds	1
  1885  0059                     ??_WH_OperationMode:
  1886  0059                     ??___awmod:	
  1887                           ; 1 bytes @ 0xC
  1888                           
  1889  0059                     ___awmod@counter:	
  1890                           ; 1 bytes @ 0xC
  1891                           
  1892                           
  1893                           ; 1 bytes @ 0xC
  1894  0059                     	ds	1
  1895  005A                     ??_SW_Delay_ms:
  1896  005A                     ?_SysTick_Init:	
  1897                           ; 1 bytes @ 0xD
  1898                           
  1899  005A                     ?___lldiv:	
  1900                           ; 1 bytes @ 0xD
  1901                           
  1902  005A                     ___awmod@sign:	
  1903                           ; 4 bytes @ 0xD
  1904                           
  1905  005A                     SysTick_Init@TicksPeriod_ms:	
  1906                           ; 1 bytes @ 0xD
  1907                           
  1908  005A                     ___lldiv@divisor:	
  1909                           ; 4 bytes @ 0xD
  1910                           
  1911                           
  1912                           ; 4 bytes @ 0xD
  1913  005A                     	ds	1
  1914  005B                     ?_SSD_SetSymbol:
  1915  005B                     SSD_SetSymbol@Symbol:	
  1916                           ; 1 bytes @ 0xE
  1917                           
  1918                           
  1919                           ; 1 bytes @ 0xE
  1920  005B                     	ds	1
  1921  005C                     ??_SSD_SetSymbol:
  1922                           
  1923                           ; 1 bytes @ 0xF
  1924  005C                     	ds	2
  1925  005E                     ??_SysTick_Init:
  1926  005E                     SSD_SetSymbol@SSDx:	
  1927                           ; 1 bytes @ 0x11
  1928                           
  1929  005E                     ___lldiv@dividend:	
  1930                           ; 1 bytes @ 0x11
  1931                           
  1932                           
  1933                           ; 4 bytes @ 0x11
  1934  005E                     	ds	1
  1935  005F                     ??_WH_NormalMode:
  1936  005F                     ??_WH_TempSetMode:	
  1937                           ; 1 bytes @ 0x12
  1938                           
  1939                           
  1940                           ; 1 bytes @ 0x12
  1941  005F                     	ds	2
  1942  0061                     ??_WH_Task:
  1943                           
  1944                           ; 1 bytes @ 0x14
  1945  0061                     	ds	1
  1946  0062                     ??___lldiv:
  1947  0062                     SysTick_Init@Ticks_N:	
  1948                           ; 1 bytes @ 0x15
  1949                           
  1950                           
  1951                           ; 4 bytes @ 0x15
  1952  0062                     	ds	1
  1953  0063                     ___lldiv@quotient:
  1954                           
  1955                           ; 4 bytes @ 0x16
  1956  0063                     	ds	3
  1957  0066                     ??_SCH_Start:
  1958                           
  1959                           ; 1 bytes @ 0x19
  1960  0066                     	ds	1
  1961  0067                     ___lldiv@counter:
  1962                           
  1963                           ; 1 bytes @ 0x1A
  1964  0067                     	ds	1
  1965  0068                     ??_ADC_Update:
  1966  0068                     ?_I2C_Master_Init:	
  1967                           ; 1 bytes @ 0x1B
  1968                           
  1969  0068                     I2C_Master_Init@BaudRate:	
  1970                           ; 1 bytes @ 0x1B
  1971                           
  1972                           
  1973                           ; 4 bytes @ 0x1B
  1974  0068                     	ds	2
  1975  006A                     ??_SCH_Dispatch_Tasks:
  1976                           
  1977                           ; 1 bytes @ 0x1D
  1978  006A                     	ds	2
  1979  006C                     ??_WH_Init:
  1980  006C                     ??_I2C_Master_Init:	
  1981                           ; 1 bytes @ 0x1F
  1982                           
  1983  006C                     ??_EEPROM_Init:	
  1984                           ; 1 bytes @ 0x1F
  1985                           
  1986  006C                     SCH_Dispatch_Tasks@Index:	
  1987                           ; 1 bytes @ 0x1F
  1988                           
  1989                           
  1990                           ; 1 bytes @ 0x1F
  1991  006C                     	ds	1
  1992  006D                     WH_Init@Index:
  1993                           
  1994                           ; 1 bytes @ 0x20
  1995  006D                     	ds	1
  1996  006E                     ??_main:
  1997                           
  1998                           	psect	maintext
  1999  0140                     __pmaintext:	
  2000                           ; 1 bytes @ 0x21
  2001 ;;
  2002 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2003 ;;
  2004 ;; *************** function _main *****************
  2005 ;; Defined at:
  2006 ;;		line 19 in file "main.c"
  2007 ;; Parameters:    Size  Location     Type
  2008 ;;		None
  2009 ;; Auto vars:     Size  Location     Type
  2010 ;;		None
  2011 ;; Return value:  Size  Location     Type
  2012 ;;                  2   44[None  ] int 
  2013 ;; Registers used:
  2014 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2015 ;; Tracked objects:
  2016 ;;		On entry : B00/0
  2017 ;;		On exit  : 0/0
  2018 ;;		Unchanged: 0/0
  2019 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2020 ;;      Params:         0       0       0       0       0
  2021 ;;      Locals:         0       0       0       0       0
  2022 ;;      Temps:          0       0       0       0       0
  2023 ;;      Totals:         0       0       0       0       0
  2024 ;;Total ram usage:        0 bytes
  2025 ;; Hardware stack levels required when called:    9
  2026 ;; This function calls:
  2027 ;;		_ADC_Init
  2028 ;;		_DISP_Init
  2029 ;;		_HCU_Init
  2030 ;;		_LED_Init
  2031 ;;		_SCH_Add_Task
  2032 ;;		_SCH_Dispatch_Tasks
  2033 ;;		_SCH_Init
  2034 ;;		_SCH_Start
  2035 ;;		_SSD_Init
  2036 ;;		_SW_Init
  2037 ;;		_TEMP_Init
  2038 ;;		_WH_Init
  2039 ;; This function is called by:
  2040 ;;		Startup code after reset
  2041 ;; This function uses a non-reentrant model
  2042 ;;
  2043                           
  2044                           
  2045                           ;psect for function _main
  2046  0140                     _main:
  2047  0140                     l3349:	
  2048                           ;incstack = 0
  2049 ;; hardware stack exceeded
  2050                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2051                           
  2052                           
  2053                           ;main.c: 21:     SCH_Init();
  2054  0140  120A  158A  200D  120A  118A  	fcall	_SCH_Init
  2055                           
  2056                           ;main.c: 22:     LED_Init();
  2057  0145  120A  158A  20FD  120A  118A  	fcall	_LED_Init
  2058                           
  2059                           ;main.c: 23:     SW_Init();
  2060  014A  120A  158A  22FB  120A  118A  	fcall	_SW_Init
  2061  014F                     l3351:
  2062                           
  2063                           ;main.c: 24:     ADC_Init();
  2064  014F  120A  158A  20BA  120A  118A  	fcall	_ADC_Init
  2065  0154                     l3353:
  2066                           
  2067                           ;main.c: 25:     TEMP_Init();
  2068  0154  160A  118A  27E8  120A  118A  	fcall	_TEMP_Init
  2069  0159                     l3355:
  2070                           
  2071                           ;main.c: 26:     HCU_Init();
  2072  0159  120A  158A  20DA  120A  118A  	fcall	_HCU_Init
  2073  015E                     l3357:
  2074                           
  2075                           ;main.c: 27:     DISP_Init();
  2076  015E  120A  158A  2120  120A  118A  	fcall	_DISP_Init
  2077  0163                     l3359:
  2078                           
  2079                           ;main.c: 28:     SSD_Init();
  2080  0163  120A  118A  21F3  120A  118A  	fcall	_SSD_Init
  2081  0168                     l3361:
  2082                           
  2083                           ;main.c: 29:     WH_Init();
  2084  0168  120A  118A  26D8  120A  118A  	fcall	_WH_Init
  2085  016D                     l3363:
  2086                           
  2087                           ;main.c: 30:     SCH_Add_Task(LED_Update, 0/(5), 5/(5));
  2088  016D  3000               	movlw	0
  2089  016E  1283               	bcf	3,5	;RP0=0, select bank0
  2090  016F  1303               	bcf	3,6	;RP1=0, select bank0
  2091  0170  00D0               	movwf	SCH_Add_Task@Delay
  2092  0171  00D1               	movwf	SCH_Add_Task@Delay+1
  2093  0172  3001               	movlw	1
  2094  0173  00D2               	movwf	SCH_Add_Task@Period
  2095  0174  3000               	movlw	0
  2096  0175  00D3               	movwf	SCH_Add_Task@Period+1
  2097  0176  3004               	movlw	(low (fp__LED_Update-fpbase))& (0+255)
  2098  0177  120A  118A  25EB  120A  118A  	fcall	_SCH_Add_Task
  2099  017C                     l3365:
  2100                           
  2101                           ;main.c: 31:     SCH_Add_Task(SW_Update, 0/(5), 10/(5));
  2102  017C  3000               	movlw	0
  2103  017D  1283               	bcf	3,5	;RP0=0, select bank0
  2104  017E  1303               	bcf	3,6	;RP1=0, select bank0
  2105  017F  00D0               	movwf	SCH_Add_Task@Delay
  2106  0180  00D1               	movwf	SCH_Add_Task@Delay+1
  2107  0181  3002               	movlw	2
  2108  0182  00D2               	movwf	SCH_Add_Task@Period
  2109  0183  3000               	movlw	0
  2110  0184  00D3               	movwf	SCH_Add_Task@Period+1
  2111  0185  3007               	movlw	(low (fp__SW_Update-fpbase))& (0+255)
  2112  0186  120A  118A  25EB  120A  118A  	fcall	_SCH_Add_Task
  2113  018B                     l3367:
  2114                           
  2115                           ;main.c: 32:     SCH_Add_Task(ADC_Update, 0/(5), 100/(5));
  2116  018B  3000               	movlw	0
  2117  018C  1283               	bcf	3,5	;RP0=0, select bank0
  2118  018D  1303               	bcf	3,6	;RP1=0, select bank0
  2119  018E  00D0               	movwf	SCH_Add_Task@Delay
  2120  018F  00D1               	movwf	SCH_Add_Task@Delay+1
  2121  0190  3014               	movlw	20
  2122  0191  00D2               	movwf	SCH_Add_Task@Period
  2123  0192  3000               	movlw	0
  2124  0193  00D3               	movwf	SCH_Add_Task@Period+1
  2125  0194  300A               	movlw	(low (fp__ADC_Update-fpbase))& (0+255)
  2126  0195  120A  118A  25EB  120A  118A  	fcall	_SCH_Add_Task
  2127  019A                     l3369:
  2128                           
  2129                           ;main.c: 33:     SCH_Add_Task(TEMP_Update, 0/(5), 100/(5));
  2130  019A  3000               	movlw	0
  2131  019B  1283               	bcf	3,5	;RP0=0, select bank0
  2132  019C  1303               	bcf	3,6	;RP1=0, select bank0
  2133  019D  00D0               	movwf	SCH_Add_Task@Delay
  2134  019E  00D1               	movwf	SCH_Add_Task@Delay+1
  2135  019F  3014               	movlw	20
  2136  01A0  00D2               	movwf	SCH_Add_Task@Period
  2137  01A1  3000               	movlw	0
  2138  01A2  00D3               	movwf	SCH_Add_Task@Period+1
  2139  01A3  300D               	movlw	(low (fp__TEMP_Update-fpbase))& (0+255)
  2140  01A4  120A  118A  25EB  120A  118A  	fcall	_SCH_Add_Task
  2141  01A9                     l3371:
  2142                           
  2143                           ;main.c: 34:     SCH_Add_Task(HCU_Update, 0/(5), 100/(5));
  2144  01A9  3000               	movlw	0
  2145  01AA  1283               	bcf	3,5	;RP0=0, select bank0
  2146  01AB  1303               	bcf	3,6	;RP1=0, select bank0
  2147  01AC  00D0               	movwf	SCH_Add_Task@Delay
  2148  01AD  00D1               	movwf	SCH_Add_Task@Delay+1
  2149  01AE  3014               	movlw	20
  2150  01AF  00D2               	movwf	SCH_Add_Task@Period
  2151  01B0  3000               	movlw	0
  2152  01B1  00D3               	movwf	SCH_Add_Task@Period+1
  2153  01B2  3010               	movlw	(low (fp__HCU_Update-fpbase))& (0+255)
  2154  01B3  120A  118A  25EB  120A  118A  	fcall	_SCH_Add_Task
  2155  01B8                     l3373:
  2156                           
  2157                           ;main.c: 35:     SCH_Add_Task(DISP_Update, 0/(5), 100/(5));
  2158  01B8  3000               	movlw	0
  2159  01B9  1283               	bcf	3,5	;RP0=0, select bank0
  2160  01BA  1303               	bcf	3,6	;RP1=0, select bank0
  2161  01BB  00D0               	movwf	SCH_Add_Task@Delay
  2162  01BC  00D1               	movwf	SCH_Add_Task@Delay+1
  2163  01BD  3014               	movlw	20
  2164  01BE  00D2               	movwf	SCH_Add_Task@Period
  2165  01BF  3000               	movlw	0
  2166  01C0  00D3               	movwf	SCH_Add_Task@Period+1
  2167  01C1  3013               	movlw	(low (fp__DISP_Update-fpbase))& (0+255)
  2168  01C2  120A  118A  25EB  120A  118A  	fcall	_SCH_Add_Task
  2169  01C7                     l3375:
  2170                           
  2171                           ;main.c: 36:     SCH_Add_Task(SSD_Update, 0/(5), 5/(5));
  2172  01C7  3000               	movlw	0
  2173  01C8  1283               	bcf	3,5	;RP0=0, select bank0
  2174  01C9  1303               	bcf	3,6	;RP1=0, select bank0
  2175  01CA  00D0               	movwf	SCH_Add_Task@Delay
  2176  01CB  00D1               	movwf	SCH_Add_Task@Delay+1
  2177  01CC  3001               	movlw	1
  2178  01CD  00D2               	movwf	SCH_Add_Task@Period
  2179  01CE  3000               	movlw	0
  2180  01CF  00D3               	movwf	SCH_Add_Task@Period+1
  2181  01D0  3016               	movlw	(low (fp__SSD_Update-fpbase))& (0+255)
  2182  01D1  120A  118A  25EB  120A  118A  	fcall	_SCH_Add_Task
  2183  01D6                     l3377:
  2184                           
  2185                           ;main.c: 37:     SCH_Add_Task(WH_Task, 0/(5), 100/(5));
  2186  01D6  3000               	movlw	0
  2187  01D7  1283               	bcf	3,5	;RP0=0, select bank0
  2188  01D8  1303               	bcf	3,6	;RP1=0, select bank0
  2189  01D9  00D0               	movwf	SCH_Add_Task@Delay
  2190  01DA  00D1               	movwf	SCH_Add_Task@Delay+1
  2191  01DB  3014               	movlw	20
  2192  01DC  00D2               	movwf	SCH_Add_Task@Period
  2193  01DD  3000               	movlw	0
  2194  01DE  00D3               	movwf	SCH_Add_Task@Period+1
  2195  01DF  3001               	movlw	(low (fp__WH_Task-fpbase))& (0+255)
  2196  01E0  120A  118A  25EB  120A  118A  	fcall	_SCH_Add_Task
  2197  01E5                     l3379:
  2198                           
  2199                           ;main.c: 38:     SCH_Start();
  2200  01E5  160A  118A  2713  120A  118A  	fcall	_SCH_Start
  2201  01EA                     l3381:
  2202                           
  2203                           ;main.c: 40:     {;main.c: 41:         SCH_Dispatch_Tasks();
  2204  01EA  120A  118A  2665  120A  118A  	fcall	_SCH_Dispatch_Tasks
  2205  01EF  29EA               	goto	l3381
  2206  01F0  120A  118A  2812   	ljmp	start
  2207  01F3                     __end_of_main:
  2208                           
  2209                           	psect	text1
  2210  06D8                     __ptext1:	
  2211 ;; *************** function _WH_Init *****************
  2212 ;; Defined at:
  2213 ;;		line 18 in file "WH.c"
  2214 ;; Parameters:    Size  Location     Type
  2215 ;;		None
  2216 ;; Auto vars:     Size  Location     Type
  2217 ;;  Index           1   32[BANK0 ] unsigned char 
  2218 ;; Return value:  Size  Location     Type
  2219 ;;                  1    wreg      void 
  2220 ;; Registers used:
  2221 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2222 ;; Tracked objects:
  2223 ;;		On entry : 0/0
  2224 ;;		On exit  : 0/0
  2225 ;;		Unchanged: 0/0
  2226 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2227 ;;      Params:         0       0       0       0       0
  2228 ;;      Locals:         0       1       0       0       0
  2229 ;;      Temps:          0       1       0       0       0
  2230 ;;      Totals:         0       2       0       0       0
  2231 ;;Total ram usage:        2 bytes
  2232 ;; Hardware stack levels used:    1
  2233 ;; Hardware stack levels required when called:    6
  2234 ;; This function calls:
  2235 ;;		_EEPROM_Init
  2236 ;;		_EEPROM_Read
  2237 ;;		_EEPROM_ReadPage
  2238 ;;		_EEPROM_Write
  2239 ;;		_EEPROM_WritePage
  2240 ;;		_SW_Delay_ms
  2241 ;; This function is called by:
  2242 ;;		_main
  2243 ;; This function uses a non-reentrant model
  2244 ;;
  2245                           
  2246                           
  2247                           ;psect for function _WH_Init
  2248  06D8                     _WH_Init:
  2249  06D8                     l3253:	
  2250                           ;incstack = 0
  2251                           ; Regs used in _WH_Init: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2252                           
  2253  06D8                     l3255:
  2254                           
  2255                           ;WH.c: 21:     EEPROM_Init();
  2256  06D8  160A  118A  2723  120A  118A  	fcall	_EEPROM_Init
  2257  06DD                     l3257:
  2258                           
  2259                           ;WH.c: 23:     EEPROM_ReadPage(0, WH_PasswordRead_G, 8);
  2260  06DD  30DC               	movlw	(low (_WH_PasswordRead_G| 0))& (0+255)
  2261  06DE  00FF               	movwf	btemp+1
  2262  06DF  087F               	movf	btemp+1,w
  2263  06E0  1283               	bcf	3,5	;RP0=0, select bank0
  2264  06E1  1303               	bcf	3,6	;RP1=0, select bank0
  2265  06E2  00CE               	movwf	EEPROM_ReadPage@Data_P
  2266  06E3  3008               	movlw	8
  2267  06E4  00FF               	movwf	btemp+1
  2268  06E5  087F               	movf	btemp+1,w
  2269  06E6  00CF               	movwf	EEPROM_ReadPage@Length
  2270  06E7  3000               	movlw	0
  2271  06E8  120A  158A  26D3  120A  118A  	fcall	_EEPROM_ReadPage
  2272                           
  2273                           ;WH.c: 24:     for(Index = 0; Index < 8; Index++)
  2274  06ED  1283               	bcf	3,5	;RP0=0, select bank0
  2275  06EE  1303               	bcf	3,6	;RP1=0, select bank0
  2276  06EF  01ED               	clrf	WH_Init@Index
  2277  06F0                     l3263:
  2278                           
  2279                           ;WH.c: 25:     {;WH.c: 26:         if(WH_EEPROMPassword_G[Index] != WH_PasswordRead_G[In
      +                          dex])
  2280  06F0  086D               	movf	WH_Init@Index,w
  2281  06F1  3EDC               	addlw	(low (_WH_PasswordRead_G| 0))& (0+255)
  2282  06F2  0084               	movwf	4
  2283  06F3  1383               	bcf	3,7	;select IRP bank1
  2284  06F4  0800               	movf	0,w
  2285  06F5  00EC               	movwf	??_WH_Init
  2286  06F6  086D               	movf	WH_Init@Index,w
  2287  06F7  3EE4               	addlw	(low (_WH_EEPROMPassword_G| 0))& (0+255)
  2288  06F8  0084               	movwf	4
  2289  06F9  0800               	movf	0,w
  2290  06FA  066C               	xorwf	??_WH_Init,w
  2291  06FB  1903               	skipnz
  2292  06FC  2EFE               	goto	u2341
  2293  06FD  2EFF               	goto	u2340
  2294  06FE                     u2341:
  2295  06FE  2F01               	goto	l3267
  2296  06FF                     u2340:
  2297  06FF                     l3265:
  2298                           
  2299                           ;WH.c: 27:         {;WH.c: 28:             WH_PasswordFlag_G = 0;
  2300  06FF  01EF               	clrf	_WH_PasswordFlag_G	;volatile
  2301                           
  2302                           ;WH.c: 29:             break;
  2303  0700  2F0B               	goto	l3271
  2304  0701                     l3267:
  2305                           
  2306                           ;WH.c: 31:     }
  2307  0701  3001               	movlw	1
  2308  0702  00FF               	movwf	btemp+1
  2309  0703  087F               	movf	btemp+1,w
  2310  0704  07ED               	addwf	WH_Init@Index,f
  2311  0705                     l3269:
  2312  0705  3008               	movlw	8
  2313  0706  026D               	subwf	WH_Init@Index,w
  2314  0707  1C03               	skipc
  2315  0708  2F0A               	goto	u2351
  2316  0709  2F0B               	goto	u2350
  2317  070A                     u2351:
  2318  070A  2EF0               	goto	l3263
  2319  070B                     u2350:
  2320  070B                     l3271:
  2321                           
  2322                           ;WH.c: 32:     if(WH_PasswordFlag_G)
  2323  070B  086F               	movf	_WH_PasswordFlag_G,w	;volatile
  2324  070C  1903               	btfsc	3,2
  2325  070D  2F0F               	goto	u2361
  2326  070E  2F10               	goto	u2360
  2327  070F                     u2361:
  2328  070F  2F1C               	goto	l3275
  2329  0710                     u2360:
  2330  0710                     l3273:
  2331                           
  2332                           ;WH.c: 33:     {;WH.c: 34:         WH_TargetTemp_G = EEPROM_Read(8);
  2333  0710  3008               	movlw	8
  2334  0711  120A  158A  2459  120A  118A  	fcall	_EEPROM_Read
  2335  0716  00FF               	movwf	btemp+1
  2336  0717  087F               	movf	btemp+1,w
  2337  0718  1283               	bcf	3,5	;RP0=0, select bank0
  2338  0719  1303               	bcf	3,6	;RP1=0, select bank0
  2339  071A  00EE               	movwf	_WH_TargetTemp_G	;volatile
  2340                           
  2341                           ;WH.c: 35:     }else
  2342  071B  2F45               	goto	l390
  2343  071C                     l3275:
  2344                           
  2345                           ;WH.c: 36:     {;WH.c: 37:         EEPROM_WritePage(0, WH_EEPROMPassword_G, 8);
  2346  071C  30E4               	movlw	(low (_WH_EEPROMPassword_G| 0))& (0+255)
  2347  071D  00FF               	movwf	btemp+1
  2348  071E  087F               	movf	btemp+1,w
  2349  071F  00CE               	movwf	EEPROM_WritePage@Data_P
  2350  0720  3008               	movlw	8
  2351  0721  00FF               	movwf	btemp+1
  2352  0722  087F               	movf	btemp+1,w
  2353  0723  00CF               	movwf	EEPROM_WritePage@Length
  2354  0724  3000               	movlw	0
  2355  0725  120A  118A  27AF  120A  118A  	fcall	_EEPROM_WritePage
  2356  072A                     l3277:
  2357                           
  2358                           ;WH.c: 38:         SW_Delay_ms(10);
  2359  072A  3000               	movlw	0
  2360  072B  1283               	bcf	3,5	;RP0=0, select bank0
  2361  072C  1303               	bcf	3,6	;RP1=0, select bank0
  2362  072D  00D9               	movwf	SW_Delay_ms@Delay_ms+3
  2363  072E  3000               	movlw	0
  2364  072F  00D8               	movwf	SW_Delay_ms@Delay_ms+2
  2365  0730  3000               	movlw	0
  2366  0731  00D7               	movwf	SW_Delay_ms@Delay_ms+1
  2367  0732  300A               	movlw	10
  2368  0733  00D6               	movwf	SW_Delay_ms@Delay_ms
  2369  0734  120A  158A  23E1  120A  118A  	fcall	_SW_Delay_ms
  2370  0739                     l3279:
  2371                           
  2372                           ;WH.c: 39:         EEPROM_Write(8, WH_TargetTemp_G);
  2373  0739  1283               	bcf	3,5	;RP0=0, select bank0
  2374  073A  1303               	bcf	3,6	;RP1=0, select bank0
  2375  073B  086E               	movf	_WH_TargetTemp_G,w	;volatile
  2376  073C  00FF               	movwf	btemp+1
  2377  073D  087F               	movf	btemp+1,w
  2378  073E  00CE               	movwf	EEPROM_Write@Data
  2379  073F  3008               	movlw	8
  2380  0740  120A  158A  2296  120A  118A  	fcall	_EEPROM_Write
  2381  0745                     l390:
  2382  0745  0008               	return
  2383  0746                     __end_of_WH_Init:
  2384                           
  2385                           	psect	text2
  2386  0BE1                     __ptext2:	
  2387 ;; *************** function _SW_Delay_ms *****************
  2388 ;; Defined at:
  2389 ;;		line 33 in file "SCH_CONFIG.c"
  2390 ;; Parameters:    Size  Location     Type
  2391 ;;  Delay_ms        4    9[BANK0 ] volatile unsigned long 
  2392 ;; Auto vars:     Size  Location     Type
  2393 ;;		None
  2394 ;; Return value:  Size  Location     Type
  2395 ;;                  1    wreg      void 
  2396 ;; Registers used:
  2397 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2398 ;; Tracked objects:
  2399 ;;		On entry : 0/0
  2400 ;;		On exit  : 0/0
  2401 ;;		Unchanged: 0/0
  2402 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2403 ;;      Params:         0       4       0       0       0
  2404 ;;      Locals:         0       0       0       0       0
  2405 ;;      Temps:          0       4       0       0       0
  2406 ;;      Totals:         0       8       0       0       0
  2407 ;;Total ram usage:        8 bytes
  2408 ;; Hardware stack levels used:    1
  2409 ;; Hardware stack levels required when called:    4
  2410 ;; This function calls:
  2411 ;;		_SW_Delay_us
  2412 ;; This function is called by:
  2413 ;;		_WH_Init
  2414 ;; This function uses a non-reentrant model
  2415 ;;
  2416                           
  2417                           
  2418                           ;psect for function _SW_Delay_ms
  2419  0BE1                     _SW_Delay_ms:
  2420  0BE1                     l3067:	
  2421                           ;incstack = 0
  2422                           ; Regs used in _SW_Delay_ms: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2423                           
  2424                           
  2425                           ;SCH_CONFIG.c: 33: void SW_Delay_ms(volatile uint32_t Delay_ms);SCH_CONFIG.c: 34: {;SCH_
      +                          CONFIG.c: 35:  while(Delay_ms-- > 0)
  2426  0BE1  2BEF               	goto	l3071
  2427  0BE2                     l3069:
  2428                           
  2429                           ;SCH_CONFIG.c: 36:  {;SCH_CONFIG.c: 37:   SW_Delay_us(1000);
  2430  0BE2  3000               	movlw	0
  2431  0BE3  00D0               	movwf	SW_Delay_us@Delay_us+3
  2432  0BE4  3000               	movlw	0
  2433  0BE5  00CF               	movwf	SW_Delay_us@Delay_us+2
  2434  0BE6  3003               	movlw	3
  2435  0BE7  00CE               	movwf	SW_Delay_us@Delay_us+1
  2436  0BE8  30E8               	movlw	232
  2437  0BE9  00CD               	movwf	SW_Delay_us@Delay_us
  2438  0BEA  120A  158A  2333  120A  158A  	fcall	_SW_Delay_us
  2439  0BEF                     l3071:
  2440                           
  2441                           ;SCH_CONFIG.c: 35:  while(Delay_ms-- > 0)
  2442  0BEF  3001               	movlw	1
  2443  0BF0  1283               	bcf	3,5	;RP0=0, select bank0
  2444  0BF1  1303               	bcf	3,6	;RP1=0, select bank0
  2445  0BF2  00DA               	movwf	??_SW_Delay_ms
  2446  0BF3  3000               	movlw	0
  2447  0BF4  00DB               	movwf	??_SW_Delay_ms+1
  2448  0BF5  3000               	movlw	0
  2449  0BF6  00DC               	movwf	??_SW_Delay_ms+2
  2450  0BF7  3000               	movlw	0
  2451  0BF8  00DD               	movwf	??_SW_Delay_ms+3
  2452  0BF9  085A               	movf	??_SW_Delay_ms,w
  2453  0BFA  02D6               	subwf	SW_Delay_ms@Delay_ms,f	;volatile
  2454  0BFB  085B               	movf	??_SW_Delay_ms+1,w
  2455  0BFC  1C03               	skipc
  2456  0BFD  0F5B               	incfsz	??_SW_Delay_ms+1,w
  2457  0BFE  2C00               	goto	u2215
  2458  0BFF  2C01               	goto	u2216
  2459  0C00                     u2215:
  2460  0C00  02D7               	subwf	SW_Delay_ms@Delay_ms+1,f	;volatile
  2461  0C01                     u2216:
  2462  0C01  085C               	movf	??_SW_Delay_ms+2,w
  2463  0C02  1C03               	skipc
  2464  0C03  0F5C               	incfsz	??_SW_Delay_ms+2,w
  2465  0C04  2C06               	goto	u2217
  2466  0C05  2C07               	goto	u2218
  2467  0C06                     u2217:
  2468  0C06  02D8               	subwf	SW_Delay_ms@Delay_ms+2,f	;volatile
  2469  0C07                     u2218:
  2470  0C07  085D               	movf	??_SW_Delay_ms+3,w
  2471  0C08  1C03               	skipc
  2472  0C09  0F5D               	incfsz	??_SW_Delay_ms+3,w
  2473  0C0A  2C0C               	goto	u2219
  2474  0C0B  2C0D               	goto	u2210
  2475  0C0C                     u2219:
  2476  0C0C  02D9               	subwf	SW_Delay_ms@Delay_ms+3,f	;volatile
  2477  0C0D                     u2210:
  2478  0C0D  0A56               	incf	SW_Delay_ms@Delay_ms,w	;volatile
  2479  0C0E  1D03               	skipz
  2480  0C0F  2C1A               	goto	u2221
  2481  0C10  0A57               	incf	SW_Delay_ms@Delay_ms+1,w	;volatile
  2482  0C11  1D03               	skipz
  2483  0C12  2C1A               	goto	u2221
  2484  0C13  0A58               	incf	SW_Delay_ms@Delay_ms+2,w	;volatile
  2485  0C14  1D03               	skipz
  2486  0C15  2C1A               	goto	u2221
  2487  0C16  0A59               	incf	SW_Delay_ms@Delay_ms+3,w	;volatile
  2488  0C17  1D03               	btfss	3,2
  2489  0C18  2C1A               	goto	u2221
  2490  0C19  2C1B               	goto	u2220
  2491  0C1A                     u2221:
  2492  0C1A  2BE2               	goto	l3069
  2493  0C1B                     u2220:
  2494  0C1B                     l529:
  2495  0C1B  0008               	return
  2496  0C1C                     __end_of_SW_Delay_ms:
  2497                           
  2498                           	psect	text3
  2499  0B33                     __ptext3:	
  2500 ;; *************** function _SW_Delay_us *****************
  2501 ;; Defined at:
  2502 ;;		line 41 in file "SCH_CONFIG.c"
  2503 ;; Parameters:    Size  Location     Type
  2504 ;;  Delay_us        4    0[BANK0 ] volatile unsigned long 
  2505 ;; Auto vars:     Size  Location     Type
  2506 ;;  Delay           1    8[BANK0 ] volatile unsigned char 
  2507 ;; Return value:  Size  Location     Type
  2508 ;;                  1    wreg      void 
  2509 ;; Registers used:
  2510 ;;		wreg, status,2, status,0, btemp+1
  2511 ;; Tracked objects:
  2512 ;;		On entry : 0/0
  2513 ;;		On exit  : 0/0
  2514 ;;		Unchanged: 0/0
  2515 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2516 ;;      Params:         0       4       0       0       0
  2517 ;;      Locals:         0       1       0       0       0
  2518 ;;      Temps:          0       4       0       0       0
  2519 ;;      Totals:         0       9       0       0       0
  2520 ;;Total ram usage:        9 bytes
  2521 ;; Hardware stack levels used:    1
  2522 ;; Hardware stack levels required when called:    3
  2523 ;; This function calls:
  2524 ;;		Nothing
  2525 ;; This function is called by:
  2526 ;;		_SW_Delay_ms
  2527 ;; This function uses a non-reentrant model
  2528 ;;
  2529                           
  2530                           
  2531                           ;psect for function _SW_Delay_us
  2532  0B33                     _SW_Delay_us:
  2533  0B33                     l2851:	
  2534                           ;incstack = 0
  2535                           ; Regs used in _SW_Delay_us: [wreg+status,2+status,0+btemp+1]
  2536                           
  2537                           
  2538                           ;SCH_CONFIG.c: 41: void SW_Delay_us(volatile uint32_t Delay_us);SCH_CONFIG.c: 42: {;SCH_
      +                          CONFIG.c: 43:  volatile uint8_t Delay;;SCH_CONFIG.c: 44:  while(Delay_us-- > 0)
  2539  0B33  2B3F               	goto	l2857
  2540  0B34                     l2853:
  2541                           
  2542                           ;SCH_CONFIG.c: 45:  {;SCH_CONFIG.c: 46:   Delay = 255;
  2543  0B34  30FF               	movlw	255
  2544  0B35  00FF               	movwf	btemp+1
  2545  0B36  087F               	movf	btemp+1,w
  2546  0B37  00D5               	movwf	SW_Delay_us@Delay	;volatile
  2547  0B38                     l2855:	
  2548                           ;SCH_CONFIG.c: 47:   while(Delay--);
  2549                           
  2550  0B38  3001               	movlw	1
  2551  0B39  02D5               	subwf	SW_Delay_us@Delay,f	;volatile
  2552  0B3A  0A55               	incf	SW_Delay_us@Delay,w	;volatile
  2553  0B3B  1D03               	btfss	3,2
  2554  0B3C  2B3E               	goto	u1831
  2555  0B3D  2B3F               	goto	u1830
  2556  0B3E                     u1831:
  2557  0B3E  2B38               	goto	l2855
  2558  0B3F                     u1830:
  2559  0B3F                     l2857:
  2560                           
  2561                           ;SCH_CONFIG.c: 44:  while(Delay_us-- > 0)
  2562  0B3F  3001               	movlw	1
  2563  0B40  1283               	bcf	3,5	;RP0=0, select bank0
  2564  0B41  1303               	bcf	3,6	;RP1=0, select bank0
  2565  0B42  00D1               	movwf	??_SW_Delay_us
  2566  0B43  3000               	movlw	0
  2567  0B44  00D2               	movwf	??_SW_Delay_us+1
  2568  0B45  3000               	movlw	0
  2569  0B46  00D3               	movwf	??_SW_Delay_us+2
  2570  0B47  3000               	movlw	0
  2571  0B48  00D4               	movwf	??_SW_Delay_us+3
  2572  0B49  0851               	movf	??_SW_Delay_us,w
  2573  0B4A  02CD               	subwf	SW_Delay_us@Delay_us,f	;volatile
  2574  0B4B  0852               	movf	??_SW_Delay_us+1,w
  2575  0B4C  1C03               	skipc
  2576  0B4D  0F52               	incfsz	??_SW_Delay_us+1,w
  2577  0B4E  2B50               	goto	u1845
  2578  0B4F  2B51               	goto	u1846
  2579  0B50                     u1845:
  2580  0B50  02CE               	subwf	SW_Delay_us@Delay_us+1,f	;volatile
  2581  0B51                     u1846:
  2582  0B51  0853               	movf	??_SW_Delay_us+2,w
  2583  0B52  1C03               	skipc
  2584  0B53  0F53               	incfsz	??_SW_Delay_us+2,w
  2585  0B54  2B56               	goto	u1847
  2586  0B55  2B57               	goto	u1848
  2587  0B56                     u1847:
  2588  0B56  02CF               	subwf	SW_Delay_us@Delay_us+2,f	;volatile
  2589  0B57                     u1848:
  2590  0B57  0854               	movf	??_SW_Delay_us+3,w
  2591  0B58  1C03               	skipc
  2592  0B59  0F54               	incfsz	??_SW_Delay_us+3,w
  2593  0B5A  2B5C               	goto	u1849
  2594  0B5B  2B5D               	goto	u1840
  2595  0B5C                     u1849:
  2596  0B5C  02D0               	subwf	SW_Delay_us@Delay_us+3,f	;volatile
  2597  0B5D                     u1840:
  2598  0B5D  0A4D               	incf	SW_Delay_us@Delay_us,w	;volatile
  2599  0B5E  1D03               	skipz
  2600  0B5F  2B6A               	goto	u1851
  2601  0B60  0A4E               	incf	SW_Delay_us@Delay_us+1,w	;volatile
  2602  0B61  1D03               	skipz
  2603  0B62  2B6A               	goto	u1851
  2604  0B63  0A4F               	incf	SW_Delay_us@Delay_us+2,w	;volatile
  2605  0B64  1D03               	skipz
  2606  0B65  2B6A               	goto	u1851
  2607  0B66  0A50               	incf	SW_Delay_us@Delay_us+3,w	;volatile
  2608  0B67  1D03               	btfss	3,2
  2609  0B68  2B6A               	goto	u1851
  2610  0B69  2B6B               	goto	u1850
  2611  0B6A                     u1851:
  2612  0B6A  2B34               	goto	l2853
  2613  0B6B                     u1850:
  2614  0B6B                     l538:
  2615  0B6B  0008               	return
  2616  0B6C                     __end_of_SW_Delay_us:
  2617                           
  2618                           	psect	text4
  2619  07AF                     __ptext4:	
  2620 ;; *************** function _EEPROM_WritePage *****************
  2621 ;; Defined at:
  2622 ;;		line 23 in file "EEPROM.c"
  2623 ;; Parameters:    Size  Location     Type
  2624 ;;  Address         1    wreg     unsigned char 
  2625 ;;  Data_P          1    1[BANK0 ] PTR unsigned char 
  2626 ;;		 -> WH_EEPROMPassword_G(8), 
  2627 ;;  Length          1    2[BANK0 ] unsigned char 
  2628 ;; Auto vars:     Size  Location     Type
  2629 ;;  Address         1    5[BANK0 ] unsigned char 
  2630 ;;  i               2    6[BANK0 ] unsigned int 
  2631 ;; Return value:  Size  Location     Type
  2632 ;;                  1    wreg      void 
  2633 ;; Registers used:
  2634 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2635 ;; Tracked objects:
  2636 ;;		On entry : 0/0
  2637 ;;		On exit  : 0/0
  2638 ;;		Unchanged: 0/0
  2639 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2640 ;;      Params:         0       2       0       0       0
  2641 ;;      Locals:         0       3       0       0       0
  2642 ;;      Temps:          0       2       0       0       0
  2643 ;;      Totals:         0       7       0       0       0
  2644 ;;Total ram usage:        7 bytes
  2645 ;; Hardware stack levels used:    1
  2646 ;; Hardware stack levels required when called:    5
  2647 ;; This function calls:
  2648 ;;		_I2C_Master_RepeatedStart
  2649 ;;		_I2C_Master_Start
  2650 ;;		_I2C_Master_Stop
  2651 ;;		_I2C_Master_Write
  2652 ;; This function is called by:
  2653 ;;		_WH_Init
  2654 ;; This function uses a non-reentrant model
  2655 ;;
  2656                           
  2657                           
  2658                           ;psect for function _EEPROM_WritePage
  2659  07AF                     _EEPROM_WritePage:
  2660                           
  2661                           ;incstack = 0
  2662                           ; Regs used in _EEPROM_WritePage: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2663                           ;EEPROM_WritePage@Address stored from wreg
  2664  07AF  1283               	bcf	3,5	;RP0=0, select bank0
  2665  07B0  1303               	bcf	3,6	;RP1=0, select bank0
  2666  07B1  00D2               	movwf	EEPROM_WritePage@Address
  2667  07B2                     l2977:
  2668                           
  2669                           ;EEPROM.c: 23: void EEPROM_WritePage(uint8_t Address, uint8_t* Data_P, uint8_t Length);E
      +                          EPROM.c: 24: {;EEPROM.c: 25:     I2C_Master_Start();
  2670  07B2  160A  118A  26FD  120A  118A  	fcall	_I2C_Master_Start
  2671                           
  2672                           ;EEPROM.c: 27:     while(I2C_Master_Write(0xA0))
  2673  07B7  2FBD               	goto	l215
  2674  07B8                     l2979:
  2675                           
  2676                           ;EEPROM.c: 28:         I2C_Master_RepeatedStart();
  2677  07B8  160A  118A  26F2  120A  118A  	fcall	_I2C_Master_RepeatedStart
  2678  07BD                     l215:
  2679                           
  2680                           ;EEPROM.c: 27:     while(I2C_Master_Write(0xA0))
  2681  07BD  30A0               	movlw	160
  2682  07BE  160A  118A  27D0  120A  118A  	fcall	_I2C_Master_Write
  2683  07C3  3A00               	xorlw	0
  2684  07C4  1D03               	skipz
  2685  07C5  2FC7               	goto	u2081
  2686  07C6  2FC8               	goto	u2080
  2687  07C7                     u2081:
  2688  07C7  2FB8               	goto	l2979
  2689  07C8                     u2080:
  2690  07C8                     l2981:
  2691                           
  2692                           ;EEPROM.c: 29:     I2C_Master_Write(Address);
  2693  07C8  1283               	bcf	3,5	;RP0=0, select bank0
  2694  07C9  1303               	bcf	3,6	;RP1=0, select bank0
  2695  07CA  0852               	movf	EEPROM_WritePage@Address,w
  2696  07CB  160A  118A  27D0  120A  118A  	fcall	_I2C_Master_Write
  2697  07D0                     l2983:
  2698                           
  2699                           ;EEPROM.c: 30:     for(unsigned int i=0; i<Length; i++)
  2700  07D0  1283               	bcf	3,5	;RP0=0, select bank0
  2701  07D1  1303               	bcf	3,6	;RP1=0, select bank0
  2702  07D2  01D3               	clrf	EEPROM_WritePage@i
  2703  07D3  01D4               	clrf	EEPROM_WritePage@i+1
  2704  07D4  2FE9               	goto	l2989
  2705  07D5                     l2985:
  2706                           
  2707                           ;EEPROM.c: 31:         I2C_Master_Write(Data_P[i]);
  2708  07D5  0853               	movf	EEPROM_WritePage@i,w
  2709  07D6  074E               	addwf	EEPROM_WritePage@Data_P,w
  2710  07D7  00D0               	movwf	??_EEPROM_WritePage
  2711  07D8  0850               	movf	??_EEPROM_WritePage,w
  2712  07D9  0084               	movwf	4
  2713  07DA  1383               	bcf	3,7	;select IRP bank0
  2714  07DB  0800               	movf	0,w
  2715  07DC  160A  118A  27D0  120A  118A  	fcall	_I2C_Master_Write
  2716  07E1                     l2987:
  2717  07E1  3001               	movlw	1
  2718  07E2  1283               	bcf	3,5	;RP0=0, select bank0
  2719  07E3  1303               	bcf	3,6	;RP1=0, select bank0
  2720  07E4  07D3               	addwf	EEPROM_WritePage@i,f
  2721  07E5  1803               	skipnc
  2722  07E6  0AD4               	incf	EEPROM_WritePage@i+1,f
  2723  07E7  3000               	movlw	0
  2724  07E8  07D4               	addwf	EEPROM_WritePage@i+1,f
  2725  07E9                     l2989:
  2726  07E9  084F               	movf	EEPROM_WritePage@Length,w
  2727  07EA  00D0               	movwf	??_EEPROM_WritePage
  2728  07EB  01D1               	clrf	??_EEPROM_WritePage+1
  2729  07EC  0851               	movf	??_EEPROM_WritePage+1,w
  2730  07ED  0254               	subwf	EEPROM_WritePage@i+1,w
  2731  07EE  1D03               	skipz
  2732  07EF  2FF2               	goto	u2095
  2733  07F0  0850               	movf	??_EEPROM_WritePage,w
  2734  07F1  0253               	subwf	EEPROM_WritePage@i,w
  2735  07F2                     u2095:
  2736  07F2  1C03               	skipc
  2737  07F3  2FF5               	goto	u2091
  2738  07F4  2FF6               	goto	u2090
  2739  07F5                     u2091:
  2740  07F5  2FD5               	goto	l2985
  2741  07F6                     u2090:
  2742  07F6                     l2991:
  2743                           
  2744                           ;EEPROM.c: 32:     I2C_Master_Stop();
  2745  07F6  160A  118A  2708  120A  118A  	fcall	_I2C_Master_Stop
  2746  07FB                     l221:
  2747  07FB  0008               	return
  2748  07FC                     __end_of_EEPROM_WritePage:
  2749                           
  2750                           	psect	text5
  2751  0ED3                     __ptext5:	
  2752 ;; *************** function _EEPROM_ReadPage *****************
  2753 ;; Defined at:
  2754 ;;		line 51 in file "EEPROM.c"
  2755 ;; Parameters:    Size  Location     Type
  2756 ;;  Address         1    wreg     unsigned char 
  2757 ;;  Data_P          1    1[BANK0 ] PTR unsigned char 
  2758 ;;		 -> WH_PasswordRead_G(8), 
  2759 ;;  Length          1    2[BANK0 ] unsigned char 
  2760 ;; Auto vars:     Size  Location     Type
  2761 ;;  Address         1    5[BANK0 ] unsigned char 
  2762 ;;  i               2    6[BANK0 ] unsigned int 
  2763 ;; Return value:  Size  Location     Type
  2764 ;;                  1    wreg      void 
  2765 ;; Registers used:
  2766 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2767 ;; Tracked objects:
  2768 ;;		On entry : 0/0
  2769 ;;		On exit  : 0/0
  2770 ;;		Unchanged: 0/0
  2771 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2772 ;;      Params:         0       2       0       0       0
  2773 ;;      Locals:         0       3       0       0       0
  2774 ;;      Temps:          0       2       0       0       0
  2775 ;;      Totals:         0       7       0       0       0
  2776 ;;Total ram usage:        7 bytes
  2777 ;; Hardware stack levels used:    1
  2778 ;; Hardware stack levels required when called:    5
  2779 ;; This function calls:
  2780 ;;		_I2C_ACK
  2781 ;;		_I2C_Master_RepeatedStart
  2782 ;;		_I2C_Master_Start
  2783 ;;		_I2C_Master_Stop
  2784 ;;		_I2C_Master_Write
  2785 ;;		_I2C_Read
  2786 ;; This function is called by:
  2787 ;;		_WH_Init
  2788 ;; This function uses a non-reentrant model
  2789 ;;
  2790                           
  2791                           
  2792                           ;psect for function _EEPROM_ReadPage
  2793  0ED3                     _EEPROM_ReadPage:
  2794                           
  2795                           ;incstack = 0
  2796                           ; Regs used in _EEPROM_ReadPage: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2797                           ;EEPROM_ReadPage@Address stored from wreg
  2798  0ED3  1283               	bcf	3,5	;RP0=0, select bank0
  2799  0ED4  1303               	bcf	3,6	;RP1=0, select bank0
  2800  0ED5  00D2               	movwf	EEPROM_ReadPage@Address
  2801  0ED6                     l3009:
  2802                           
  2803                           ;EEPROM.c: 51: void EEPROM_ReadPage(uint8_t Address, uint8_t* Data_P, uint8_t Length);EE
      +                          PROM.c: 52: {;EEPROM.c: 53:     I2C_Master_Start();
  2804  0ED6  160A  118A  26FD  120A  158A  	fcall	_I2C_Master_Start
  2805                           
  2806                           ;EEPROM.c: 55:     while(I2C_Master_Write(0xA0))
  2807  0EDB  2EE1               	goto	l230
  2808  0EDC                     l3011:
  2809                           
  2810                           ;EEPROM.c: 56:         I2C_Master_RepeatedStart();
  2811  0EDC  160A  118A  26F2  120A  158A  	fcall	_I2C_Master_RepeatedStart
  2812  0EE1                     l230:
  2813                           
  2814                           ;EEPROM.c: 55:     while(I2C_Master_Write(0xA0))
  2815  0EE1  30A0               	movlw	160
  2816  0EE2  160A  118A  27D0  120A  158A  	fcall	_I2C_Master_Write
  2817  0EE7  3A00               	xorlw	0
  2818  0EE8  1D03               	skipz
  2819  0EE9  2EEB               	goto	u2111
  2820  0EEA  2EEC               	goto	u2110
  2821  0EEB                     u2111:
  2822  0EEB  2EDC               	goto	l3011
  2823  0EEC                     u2110:
  2824  0EEC                     l3013:
  2825                           
  2826                           ;EEPROM.c: 57:     I2C_Master_Write(Address);
  2827  0EEC  1283               	bcf	3,5	;RP0=0, select bank0
  2828  0EED  1303               	bcf	3,6	;RP1=0, select bank0
  2829  0EEE  0852               	movf	EEPROM_ReadPage@Address,w
  2830  0EEF  160A  118A  27D0  120A  158A  	fcall	_I2C_Master_Write
  2831                           
  2832                           ;EEPROM.c: 58:     I2C_Master_Start();
  2833  0EF4  160A  118A  26FD  120A  158A  	fcall	_I2C_Master_Start
  2834                           
  2835                           ;EEPROM.c: 59:     I2C_Master_Write(0xA1);
  2836  0EF9  30A1               	movlw	161
  2837  0EFA  160A  118A  27D0  120A  158A  	fcall	_I2C_Master_Write
  2838  0EFF                     l3015:
  2839                           
  2840                           ;EEPROM.c: 60:     for(unsigned int i=0; i<Length; i++)
  2841  0EFF  1283               	bcf	3,5	;RP0=0, select bank0
  2842  0F00  1303               	bcf	3,6	;RP1=0, select bank0
  2843  0F01  01D3               	clrf	EEPROM_ReadPage@i
  2844  0F02  01D4               	clrf	EEPROM_ReadPage@i+1
  2845  0F03  2F21               	goto	l3023
  2846  0F04                     l3017:
  2847                           
  2848                           ;EEPROM.c: 61:     {;EEPROM.c: 62:         Data_P[i] = I2C_Read();
  2849  0F04  120A  158A  2027  120A  158A  	fcall	_I2C_Read
  2850  0F09  00FF               	movwf	btemp+1
  2851  0F0A  1283               	bcf	3,5	;RP0=0, select bank0
  2852  0F0B  1303               	bcf	3,6	;RP1=0, select bank0
  2853  0F0C  0853               	movf	EEPROM_ReadPage@i,w
  2854  0F0D  074E               	addwf	EEPROM_ReadPage@Data_P,w
  2855  0F0E  00D0               	movwf	??_EEPROM_ReadPage
  2856  0F0F  0850               	movf	??_EEPROM_ReadPage,w
  2857  0F10  0084               	movwf	4
  2858  0F11  087F               	movf	btemp+1,w
  2859  0F12  1383               	bcf	3,7	;select IRP bank0
  2860  0F13  0080               	movwf	0
  2861  0F14                     l3019:
  2862                           
  2863                           ;EEPROM.c: 63:         I2C_ACK();
  2864  0F14  160A  118A  2743  120A  158A  	fcall	_I2C_ACK
  2865  0F19                     l3021:
  2866                           
  2867                           ;EEPROM.c: 64:     }
  2868  0F19  3001               	movlw	1
  2869  0F1A  1283               	bcf	3,5	;RP0=0, select bank0
  2870  0F1B  1303               	bcf	3,6	;RP1=0, select bank0
  2871  0F1C  07D3               	addwf	EEPROM_ReadPage@i,f
  2872  0F1D  1803               	skipnc
  2873  0F1E  0AD4               	incf	EEPROM_ReadPage@i+1,f
  2874  0F1F  3000               	movlw	0
  2875  0F20  07D4               	addwf	EEPROM_ReadPage@i+1,f
  2876  0F21                     l3023:
  2877  0F21  084F               	movf	EEPROM_ReadPage@Length,w
  2878  0F22  00D0               	movwf	??_EEPROM_ReadPage
  2879  0F23  01D1               	clrf	??_EEPROM_ReadPage+1
  2880  0F24  0851               	movf	??_EEPROM_ReadPage+1,w
  2881  0F25  0254               	subwf	EEPROM_ReadPage@i+1,w
  2882  0F26  1D03               	skipz
  2883  0F27  2F2A               	goto	u2125
  2884  0F28  0850               	movf	??_EEPROM_ReadPage,w
  2885  0F29  0253               	subwf	EEPROM_ReadPage@i,w
  2886  0F2A                     u2125:
  2887  0F2A  1C03               	skipc
  2888  0F2B  2F2D               	goto	u2121
  2889  0F2C  2F2E               	goto	u2120
  2890  0F2D                     u2121:
  2891  0F2D  2F04               	goto	l3017
  2892  0F2E                     u2120:
  2893  0F2E                     l3025:
  2894                           
  2895                           ;EEPROM.c: 65:     I2C_Master_Stop();
  2896  0F2E  160A  118A  2708  120A  158A  	fcall	_I2C_Master_Stop
  2897  0F33                     l236:
  2898  0F33  0008               	return
  2899  0F34                     __end_of_EEPROM_ReadPage:
  2900                           
  2901                           	psect	text6
  2902  1743                     __ptext6:	
  2903 ;; *************** function _I2C_ACK *****************
  2904 ;; Defined at:
  2905 ;;		line 55 in file "I2C.c"
  2906 ;; Parameters:    Size  Location     Type
  2907 ;;		None
  2908 ;; Auto vars:     Size  Location     Type
  2909 ;;		None
  2910 ;; Return value:  Size  Location     Type
  2911 ;;                  1    wreg      void 
  2912 ;; Registers used:
  2913 ;;		wreg, status,2, status,0, pclath, cstack
  2914 ;; Tracked objects:
  2915 ;;		On entry : 0/0
  2916 ;;		On exit  : 0/0
  2917 ;;		Unchanged: 0/0
  2918 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2919 ;;      Params:         0       0       0       0       0
  2920 ;;      Locals:         0       0       0       0       0
  2921 ;;      Temps:          0       0       0       0       0
  2922 ;;      Totals:         0       0       0       0       0
  2923 ;;Total ram usage:        0 bytes
  2924 ;; Hardware stack levels used:    1
  2925 ;; Hardware stack levels required when called:    4
  2926 ;; This function calls:
  2927 ;;		_I2C_Master_Wait
  2928 ;; This function is called by:
  2929 ;;		_EEPROM_ReadPage
  2930 ;; This function uses a non-reentrant model
  2931 ;;
  2932                           
  2933                           
  2934                           ;psect for function _I2C_ACK
  2935  1743                     _I2C_ACK:
  2936  1743                     l2733:	
  2937                           ;incstack = 0
  2938                           ; Regs used in _I2C_ACK: [wreg+status,2+status,0+pclath+cstack]
  2939                           
  2940                           
  2941                           ;I2C.c: 57:     SSPCON2 = SSPCON2 & (~0x20);
  2942  1743  1683               	bsf	3,5	;RP0=1, select bank1
  2943  1744  1303               	bcf	3,6	;RP1=0, select bank1
  2944  1745  0811               	movf	17,w	;volatile
  2945  1746  39DF               	andlw	223
  2946  1747  0091               	movwf	17	;volatile
  2947  1748                     l2735:
  2948                           
  2949                           ;I2C.c: 58:     I2C_Master_Wait();
  2950  1748  120A  158A  2000  160A  118A  	fcall	_I2C_Master_Wait
  2951  174D                     l2737:
  2952                           
  2953                           ;I2C.c: 59:     SSPCON2 = SSPCON2 | (0x10);
  2954  174D  1683               	bsf	3,5	;RP0=1, select bank1
  2955  174E  1303               	bcf	3,6	;RP1=0, select bank1
  2956  174F  0811               	movf	17,w	;volatile
  2957  1750  3810               	iorlw	16
  2958  1751  0091               	movwf	17	;volatile
  2959  1752                     l285:
  2960  1752  0008               	return
  2961  1753                     __end_of_I2C_ACK:
  2962                           
  2963                           	psect	text7
  2964  0C59                     __ptext7:	
  2965 ;; *************** function _EEPROM_Read *****************
  2966 ;; Defined at:
  2967 ;;		line 35 in file "EEPROM.c"
  2968 ;; Parameters:    Size  Location     Type
  2969 ;;  Address         1    wreg     unsigned char 
  2970 ;; Auto vars:     Size  Location     Type
  2971 ;;  Address         1    1[BANK0 ] unsigned char 
  2972 ;;  Data            1    2[BANK0 ] unsigned char 
  2973 ;; Return value:  Size  Location     Type
  2974 ;;                  1    wreg      unsigned char 
  2975 ;; Registers used:
  2976 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2977 ;; Tracked objects:
  2978 ;;		On entry : 0/0
  2979 ;;		On exit  : 0/0
  2980 ;;		Unchanged: 0/0
  2981 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2982 ;;      Params:         0       0       0       0       0
  2983 ;;      Locals:         0       2       0       0       0
  2984 ;;      Temps:          0       0       0       0       0
  2985 ;;      Totals:         0       2       0       0       0
  2986 ;;Total ram usage:        2 bytes
  2987 ;; Hardware stack levels used:    1
  2988 ;; Hardware stack levels required when called:    5
  2989 ;; This function calls:
  2990 ;;		_I2C_Master_RepeatedStart
  2991 ;;		_I2C_Master_Start
  2992 ;;		_I2C_Master_Stop
  2993 ;;		_I2C_Master_Write
  2994 ;;		_I2C_NACK
  2995 ;;		_I2C_Read
  2996 ;; This function is called by:
  2997 ;;		_WH_Init
  2998 ;; This function uses a non-reentrant model
  2999 ;;
  3000                           
  3001                           
  3002                           ;psect for function _EEPROM_Read
  3003  0C59                     _EEPROM_Read:
  3004                           
  3005                           ;incstack = 0
  3006                           ; Regs used in _EEPROM_Read: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3007                           ;EEPROM_Read@Address stored from wreg
  3008  0C59  1283               	bcf	3,5	;RP0=0, select bank0
  3009  0C5A  1303               	bcf	3,6	;RP1=0, select bank0
  3010  0C5B  00CE               	movwf	EEPROM_Read@Address
  3011  0C5C                     l2993:
  3012                           
  3013                           ;EEPROM.c: 35: uint8_t EEPROM_Read(uint8_t Address);EEPROM.c: 36: {;EEPROM.c: 37:     ui
      +                          nt8_t Data;;EEPROM.c: 38:     I2C_Master_Start();
  3014  0C5C  160A  118A  26FD  120A  158A  	fcall	_I2C_Master_Start
  3015                           
  3016                           ;EEPROM.c: 40:     while(I2C_Master_Write(0xA0))
  3017  0C61  2C67               	goto	l224
  3018  0C62                     l2995:
  3019                           
  3020                           ;EEPROM.c: 41:         I2C_Master_RepeatedStart();
  3021  0C62  160A  118A  26F2  120A  158A  	fcall	_I2C_Master_RepeatedStart
  3022  0C67                     l224:
  3023                           
  3024                           ;EEPROM.c: 40:     while(I2C_Master_Write(0xA0))
  3025  0C67  30A0               	movlw	160
  3026  0C68  160A  118A  27D0  120A  158A  	fcall	_I2C_Master_Write
  3027  0C6D  3A00               	xorlw	0
  3028  0C6E  1D03               	skipz
  3029  0C6F  2C71               	goto	u2101
  3030  0C70  2C72               	goto	u2100
  3031  0C71                     u2101:
  3032  0C71  2C62               	goto	l2995
  3033  0C72                     u2100:
  3034  0C72                     l2997:
  3035                           
  3036                           ;EEPROM.c: 42:     I2C_Master_Write(Address);
  3037  0C72  1283               	bcf	3,5	;RP0=0, select bank0
  3038  0C73  1303               	bcf	3,6	;RP1=0, select bank0
  3039  0C74  084E               	movf	EEPROM_Read@Address,w
  3040  0C75  160A  118A  27D0  120A  158A  	fcall	_I2C_Master_Write
  3041                           
  3042                           ;EEPROM.c: 43:     I2C_Master_Start();
  3043  0C7A  160A  118A  26FD  120A  158A  	fcall	_I2C_Master_Start
  3044                           
  3045                           ;EEPROM.c: 44:     I2C_Master_Write(0xA1);
  3046  0C7F  30A1               	movlw	161
  3047  0C80  160A  118A  27D0  120A  158A  	fcall	_I2C_Master_Write
  3048  0C85                     l2999:
  3049                           
  3050                           ;EEPROM.c: 45:     Data = I2C_Read();
  3051  0C85  120A  158A  2027  120A  158A  	fcall	_I2C_Read
  3052  0C8A  00FF               	movwf	btemp+1
  3053  0C8B  087F               	movf	btemp+1,w
  3054  0C8C  1283               	bcf	3,5	;RP0=0, select bank0
  3055  0C8D  1303               	bcf	3,6	;RP1=0, select bank0
  3056  0C8E  00CF               	movwf	EEPROM_Read@Data
  3057  0C8F                     l3001:
  3058                           
  3059                           ;EEPROM.c: 46:     I2C_NACK();
  3060  0C8F  160A  118A  2733  120A  158A  	fcall	_I2C_NACK
  3061  0C94                     l3003:
  3062                           
  3063                           ;EEPROM.c: 47:     I2C_Master_Stop();
  3064  0C94  160A  118A  2708  120A  158A  	fcall	_I2C_Master_Stop
  3065  0C99                     l3005:
  3066                           
  3067                           ;EEPROM.c: 48:     return Data;
  3068  0C99  1283               	bcf	3,5	;RP0=0, select bank0
  3069  0C9A  1303               	bcf	3,6	;RP1=0, select bank0
  3070  0C9B  084F               	movf	EEPROM_Read@Data,w
  3071  0C9C                     l227:
  3072  0C9C  0008               	return
  3073  0C9D                     __end_of_EEPROM_Read:
  3074                           
  3075                           	psect	text8
  3076  0827                     __ptext8:	
  3077 ;; *************** function _I2C_Read *****************
  3078 ;; Defined at:
  3079 ;;		line 45 in file "I2C.c"
  3080 ;; Parameters:    Size  Location     Type
  3081 ;;		None
  3082 ;; Auto vars:     Size  Location     Type
  3083 ;;		None
  3084 ;; Return value:  Size  Location     Type
  3085 ;;                  1    wreg      unsigned char 
  3086 ;; Registers used:
  3087 ;;		wreg, status,2, status,0, pclath, cstack
  3088 ;; Tracked objects:
  3089 ;;		On entry : 0/0
  3090 ;;		On exit  : 0/0
  3091 ;;		Unchanged: 0/0
  3092 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3093 ;;      Params:         0       0       0       0       0
  3094 ;;      Locals:         0       0       0       0       0
  3095 ;;      Temps:          0       0       0       0       0
  3096 ;;      Totals:         0       0       0       0       0
  3097 ;;Total ram usage:        0 bytes
  3098 ;; Hardware stack levels used:    1
  3099 ;; Hardware stack levels required when called:    4
  3100 ;; This function calls:
  3101 ;;		_I2C_Master_Wait
  3102 ;; This function is called by:
  3103 ;;		_EEPROM_Read
  3104 ;;		_EEPROM_ReadPage
  3105 ;; This function uses a non-reentrant model
  3106 ;;
  3107                           
  3108                           
  3109                           ;psect for function _I2C_Read
  3110  0827                     _I2C_Read:
  3111  0827                     l2715:	
  3112                           ;incstack = 0
  3113                           ; Regs used in _I2C_Read: [wreg+status,2+status,0+pclath+cstack]
  3114                           
  3115                           
  3116                           ;I2C.c: 47:     I2C_Master_Wait();
  3117  0827  120A  158A  2000  120A  158A  	fcall	_I2C_Master_Wait
  3118  082C                     l2717:
  3119                           
  3120                           ;I2C.c: 48:     SSPCON2 = SSPCON2 | (0x08);
  3121  082C  1683               	bsf	3,5	;RP0=1, select bank1
  3122  082D  1303               	bcf	3,6	;RP1=0, select bank1
  3123  082E  0811               	movf	17,w	;volatile
  3124  082F  3808               	iorlw	8
  3125  0830  0091               	movwf	17	;volatile
  3126  0831                     l279:	
  3127                           ;I2C.c: 49:     while(!(PIR1 & 0x08));
  3128                           
  3129  0831  1283               	bcf	3,5	;RP0=0, select bank0
  3130  0832  1D8C               	btfss	12,3	;volatile
  3131  0833  2835               	goto	u1691
  3132  0834  2836               	goto	u1690
  3133  0835                     u1691:
  3134  0835  2831               	goto	l279
  3135  0836                     u1690:
  3136  0836                     l2719:
  3137                           
  3138                           ;I2C.c: 50:     PIR1 = PIR1 & (~0x08);
  3139  0836  080C               	movf	12,w	;volatile
  3140  0837  39F7               	andlw	247
  3141  0838  008C               	movwf	12	;volatile
  3142  0839                     l2721:
  3143                           
  3144                           ;I2C.c: 51:     I2C_Master_Wait();
  3145  0839  120A  158A  2000  120A  158A  	fcall	_I2C_Master_Wait
  3146  083E                     l2723:
  3147                           
  3148                           ;I2C.c: 52:     return SSPBUF;
  3149  083E  1283               	bcf	3,5	;RP0=0, select bank0
  3150  083F  1303               	bcf	3,6	;RP1=0, select bank0
  3151  0840  0813               	movf	19,w	;volatile
  3152  0841                     l282:
  3153  0841  0008               	return
  3154  0842                     __end_of_I2C_Read:
  3155                           
  3156                           	psect	text9
  3157  1733                     __ptext9:	
  3158 ;; *************** function _I2C_NACK *****************
  3159 ;; Defined at:
  3160 ;;		line 62 in file "I2C.c"
  3161 ;; Parameters:    Size  Location     Type
  3162 ;;		None
  3163 ;; Auto vars:     Size  Location     Type
  3164 ;;		None
  3165 ;; Return value:  Size  Location     Type
  3166 ;;                  1    wreg      void 
  3167 ;; Registers used:
  3168 ;;		wreg, status,2, status,0, pclath, cstack
  3169 ;; Tracked objects:
  3170 ;;		On entry : 0/0
  3171 ;;		On exit  : 0/0
  3172 ;;		Unchanged: 0/0
  3173 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3174 ;;      Params:         0       0       0       0       0
  3175 ;;      Locals:         0       0       0       0       0
  3176 ;;      Temps:          0       0       0       0       0
  3177 ;;      Totals:         0       0       0       0       0
  3178 ;;Total ram usage:        0 bytes
  3179 ;; Hardware stack levels used:    1
  3180 ;; Hardware stack levels required when called:    4
  3181 ;; This function calls:
  3182 ;;		_I2C_Master_Wait
  3183 ;; This function is called by:
  3184 ;;		_EEPROM_Read
  3185 ;; This function uses a non-reentrant model
  3186 ;;
  3187                           
  3188                           
  3189                           ;psect for function _I2C_NACK
  3190  1733                     _I2C_NACK:
  3191  1733                     l2727:	
  3192                           ;incstack = 0
  3193                           ; Regs used in _I2C_NACK: [wreg+status,2+status,0+pclath+cstack]
  3194                           
  3195                           
  3196                           ;I2C.c: 64:     SSPCON2 = SSPCON2 | (0x20);
  3197  1733  1683               	bsf	3,5	;RP0=1, select bank1
  3198  1734  1303               	bcf	3,6	;RP1=0, select bank1
  3199  1735  0811               	movf	17,w	;volatile
  3200  1736  3820               	iorlw	32
  3201  1737  0091               	movwf	17	;volatile
  3202  1738                     l2729:
  3203                           
  3204                           ;I2C.c: 65:     I2C_Master_Wait();
  3205  1738  120A  158A  2000  160A  118A  	fcall	_I2C_Master_Wait
  3206  173D                     l2731:
  3207                           
  3208                           ;I2C.c: 66:     SSPCON2 = SSPCON2 | (0x10);
  3209  173D  1683               	bsf	3,5	;RP0=1, select bank1
  3210  173E  1303               	bcf	3,6	;RP1=0, select bank1
  3211  173F  0811               	movf	17,w	;volatile
  3212  1740  3810               	iorlw	16
  3213  1741  0091               	movwf	17	;volatile
  3214  1742                     l288:
  3215  1742  0008               	return
  3216  1743                     __end_of_I2C_NACK:
  3217                           
  3218                           	psect	text10
  3219  1723                     __ptext10:	
  3220 ;; *************** function _EEPROM_Init *****************
  3221 ;; Defined at:
  3222 ;;		line 7 in file "EEPROM.c"
  3223 ;; Parameters:    Size  Location     Type
  3224 ;;		None
  3225 ;; Auto vars:     Size  Location     Type
  3226 ;;		None
  3227 ;; Return value:  Size  Location     Type
  3228 ;;                  1    wreg      void 
  3229 ;; Registers used:
  3230 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3231 ;; Tracked objects:
  3232 ;;		On entry : 0/0
  3233 ;;		On exit  : 0/0
  3234 ;;		Unchanged: 0/0
  3235 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3236 ;;      Params:         0       0       0       0       0
  3237 ;;      Locals:         0       0       0       0       0
  3238 ;;      Temps:          0       0       0       0       0
  3239 ;;      Totals:         0       0       0       0       0
  3240 ;;Total ram usage:        0 bytes
  3241 ;; Hardware stack levels used:    1
  3242 ;; Hardware stack levels required when called:    5
  3243 ;; This function calls:
  3244 ;;		_I2C_Master_Init
  3245 ;; This function is called by:
  3246 ;;		_WH_Init
  3247 ;; This function uses a non-reentrant model
  3248 ;;
  3249                           
  3250                           
  3251                           ;psect for function _EEPROM_Init
  3252  1723                     _EEPROM_Init:
  3253  1723                     l2975:	
  3254                           ;incstack = 0
  3255                           ; Regs used in _EEPROM_Init: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3256                           
  3257                           
  3258                           ;EEPROM.c: 9:     I2C_Master_Init(100000);
  3259  1723  3000               	movlw	0
  3260  1724  1283               	bcf	3,5	;RP0=0, select bank0
  3261  1725  1303               	bcf	3,6	;RP1=0, select bank0
  3262  1726  00EB               	movwf	I2C_Master_Init@BaudRate+3
  3263  1727  3001               	movlw	1
  3264  1728  00EA               	movwf	I2C_Master_Init@BaudRate+2
  3265  1729  3086               	movlw	134
  3266  172A  00E9               	movwf	I2C_Master_Init@BaudRate+1
  3267  172B  30A0               	movlw	160
  3268  172C  00E8               	movwf	I2C_Master_Init@BaudRate
  3269  172D  120A  158A  2572  160A  118A  	fcall	_I2C_Master_Init
  3270  1732                     l206:
  3271  1732  0008               	return
  3272  1733                     __end_of_EEPROM_Init:
  3273                           
  3274                           	psect	text11
  3275  0D72                     __ptext11:	
  3276 ;; *************** function _I2C_Master_Init *****************
  3277 ;; Defined at:
  3278 ;;		line 3 in file "I2C.c"
  3279 ;; Parameters:    Size  Location     Type
  3280 ;;  BaudRate        4   27[BANK0 ] const unsigned long 
  3281 ;; Auto vars:     Size  Location     Type
  3282 ;;		None
  3283 ;; Return value:  Size  Location     Type
  3284 ;;                  1    wreg      void 
  3285 ;; Registers used:
  3286 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3287 ;; Tracked objects:
  3288 ;;		On entry : 0/0
  3289 ;;		On exit  : 0/0
  3290 ;;		Unchanged: 0/0
  3291 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3292 ;;      Params:         0       4       0       0       0
  3293 ;;      Locals:         0       0       0       0       0
  3294 ;;      Temps:          0       0       0       0       0
  3295 ;;      Totals:         0       4       0       0       0
  3296 ;;Total ram usage:        4 bytes
  3297 ;; Hardware stack levels used:    1
  3298 ;; Hardware stack levels required when called:    4
  3299 ;; This function calls:
  3300 ;;		_GPIO_InitPin
  3301 ;;		___lldiv
  3302 ;; This function is called by:
  3303 ;;		_EEPROM_Init
  3304 ;; This function uses a non-reentrant model
  3305 ;;
  3306                           
  3307                           
  3308                           ;psect for function _I2C_Master_Init
  3309  0D72                     _I2C_Master_Init:
  3310  0D72                     l2703:	
  3311                           ;incstack = 0
  3312                           ; Regs used in _I2C_Master_Init: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3313                           
  3314                           
  3315                           ;I2C.c: 3: void I2C_Master_Init(const uint32_t BaudRate);I2C.c: 4: {;I2C.c: 5:     SSPST
      +                          AT = 0;
  3316  0D72  1683               	bsf	3,5	;RP0=1, select bank1
  3317  0D73  1303               	bcf	3,6	;RP1=0, select bank1
  3318  0D74  0194               	clrf	20	;volatile
  3319  0D75                     l2705:
  3320                           
  3321                           ;I2C.c: 6:     SSPCON = SSPCON | (0x28);
  3322  0D75  1283               	bcf	3,5	;RP0=0, select bank0
  3323  0D76  1303               	bcf	3,6	;RP1=0, select bank0
  3324  0D77  0814               	movf	20,w	;volatile
  3325  0D78  3828               	iorlw	40
  3326  0D79  0094               	movwf	20	;volatile
  3327  0D7A                     l2707:
  3328                           
  3329                           ;I2C.c: 7:     SSPCON2 = 0;
  3330  0D7A  1683               	bsf	3,5	;RP0=1, select bank1
  3331  0D7B  1303               	bcf	3,6	;RP1=0, select bank1
  3332  0D7C  0191               	clrf	17	;volatile
  3333  0D7D                     l2709:
  3334                           
  3335                           ;I2C.c: 8:     SSPADD = (((16000000)/(4))/BaudRate)-1;
  3336  0D7D  1283               	bcf	3,5	;RP0=0, select bank0
  3337  0D7E  1303               	bcf	3,6	;RP1=0, select bank0
  3338  0D7F  086B               	movf	I2C_Master_Init@BaudRate+3,w
  3339  0D80  00DD               	movwf	___lldiv@divisor+3
  3340  0D81  086A               	movf	I2C_Master_Init@BaudRate+2,w
  3341  0D82  00DC               	movwf	___lldiv@divisor+2
  3342  0D83  0869               	movf	I2C_Master_Init@BaudRate+1,w
  3343  0D84  00DB               	movwf	___lldiv@divisor+1
  3344  0D85  0868               	movf	I2C_Master_Init@BaudRate,w
  3345  0D86  00DA               	movwf	___lldiv@divisor
  3346  0D87  3000               	movlw	0
  3347  0D88  00E1               	movwf	___lldiv@dividend+3
  3348  0D89  303D               	movlw	61
  3349  0D8A  00E0               	movwf	___lldiv@dividend+2
  3350  0D8B  3009               	movlw	9
  3351  0D8C  00DF               	movwf	___lldiv@dividend+1
  3352  0D8D  3000               	movlw	0
  3353  0D8E  00DE               	movwf	___lldiv@dividend
  3354  0D8F  120A  158A  2798  120A  158A  	fcall	___lldiv
  3355  0D94  1283               	bcf	3,5	;RP0=0, select bank0
  3356  0D95  1303               	bcf	3,6	;RP1=0, select bank0
  3357  0D96  085A               	movf	?___lldiv,w
  3358  0D97  3EFF               	addlw	255
  3359  0D98  1683               	bsf	3,5	;RP0=1, select bank1
  3360  0D99  1303               	bcf	3,6	;RP1=0, select bank1
  3361  0D9A  0093               	movwf	19	;volatile
  3362  0D9B                     l2711:
  3363                           
  3364                           ;I2C.c: 9:     GPIO_InitPin((((GPIO_TypeDef*)&PORTC)), (4), (1));
  3365  0D9B  3007               	movlw	7
  3366  0D9C  1283               	bcf	3,5	;RP0=0, select bank0
  3367  0D9D  1303               	bcf	3,6	;RP1=0, select bank0
  3368  0D9E  00CD               	movwf	GPIO_InitPin@GPIOx
  3369  0D9F  3000               	movlw	0
  3370  0DA0  00CE               	movwf	GPIO_InitPin@GPIOx+1
  3371  0DA1  3004               	movlw	4
  3372  0DA2  00FF               	movwf	btemp+1
  3373  0DA3  087F               	movf	btemp+1,w
  3374  0DA4  00CF               	movwf	GPIO_InitPin@PINx
  3375  0DA5  01D0               	clrf	GPIO_InitPin@Mode
  3376  0DA6  0AD0               	incf	GPIO_InitPin@Mode,f
  3377  0DA7  120A  158A  22C5  120A  158A  	fcall	_GPIO_InitPin
  3378  0DAC                     l2713:
  3379                           
  3380                           ;I2C.c: 10:     GPIO_InitPin((((GPIO_TypeDef*)&PORTC)), (3), (1));
  3381  0DAC  3007               	movlw	7
  3382  0DAD  1283               	bcf	3,5	;RP0=0, select bank0
  3383  0DAE  1303               	bcf	3,6	;RP1=0, select bank0
  3384  0DAF  00CD               	movwf	GPIO_InitPin@GPIOx
  3385  0DB0  3000               	movlw	0
  3386  0DB1  00CE               	movwf	GPIO_InitPin@GPIOx+1
  3387  0DB2  3003               	movlw	3
  3388  0DB3  00FF               	movwf	btemp+1
  3389  0DB4  087F               	movf	btemp+1,w
  3390  0DB5  00CF               	movwf	GPIO_InitPin@PINx
  3391  0DB6  01D0               	clrf	GPIO_InitPin@Mode
  3392  0DB7  0AD0               	incf	GPIO_InitPin@Mode,f
  3393  0DB8  120A  158A  22C5  120A  158A  	fcall	_GPIO_InitPin
  3394  0DBD                     l255:
  3395  0DBD  0008               	return
  3396  0DBE                     __end_of_I2C_Master_Init:
  3397                           
  3398                           	psect	text12
  3399  17E8                     __ptext12:	
  3400 ;; *************** function _TEMP_Init *****************
  3401 ;; Defined at:
  3402 ;;		line 6 in file "TEMP.c"
  3403 ;; Parameters:    Size  Location     Type
  3404 ;;		None
  3405 ;; Auto vars:     Size  Location     Type
  3406 ;;  Index           1    0[BANK0 ] unsigned char 
  3407 ;; Return value:  Size  Location     Type
  3408 ;;                  1    wreg      void 
  3409 ;; Registers used:
  3410 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  3411 ;; Tracked objects:
  3412 ;;		On entry : 0/0
  3413 ;;		On exit  : 0/0
  3414 ;;		Unchanged: 0/0
  3415 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3416 ;;      Params:         0       0       0       0       0
  3417 ;;      Locals:         0       1       0       0       0
  3418 ;;      Temps:          0       0       0       0       0
  3419 ;;      Totals:         0       1       0       0       0
  3420 ;;Total ram usage:        1 bytes
  3421 ;; Hardware stack levels used:    1
  3422 ;; Hardware stack levels required when called:    3
  3423 ;; This function calls:
  3424 ;;		Nothing
  3425 ;; This function is called by:
  3426 ;;		_main
  3427 ;; This function uses a non-reentrant model
  3428 ;;
  3429                           
  3430                           
  3431                           ;psect for function _TEMP_Init
  3432  17E8                     _TEMP_Init:
  3433  17E8                     l3203:	
  3434                           ;incstack = 0
  3435                           ; Regs used in _TEMP_Init: [wreg-fsr0h+status,2+status,0+btemp+1]
  3436                           
  3437                           
  3438                           ;TEMP.c: 8:     uint8_t Index = 0;
  3439  17E8  1283               	bcf	3,5	;RP0=0, select bank0
  3440  17E9  1303               	bcf	3,6	;RP1=0, select bank0
  3441  17EA  01CD               	clrf	TEMP_Init@Index
  3442                           
  3443                           ;TEMP.c: 9:     for(Index = 0; Index < 10; Index++)
  3444  17EB  01CD               	clrf	TEMP_Init@Index
  3445  17EC                     l3209:
  3446                           
  3447                           ;TEMP.c: 10:         TEMP_G[0].Array[Index] = 0;
  3448  17EC  084D               	movf	TEMP_Init@Index,w
  3449  17ED  3ED0               	addlw	(low (_TEMP_G| 0))& (0+255)
  3450  17EE  0084               	movwf	4
  3451  17EF  1383               	bcf	3,7	;select IRP bank1
  3452  17F0  0180               	clrf	0
  3453  17F1                     l3211:
  3454  17F1  3001               	movlw	1
  3455  17F2  00FF               	movwf	btemp+1
  3456  17F3  087F               	movf	btemp+1,w
  3457  17F4  07CD               	addwf	TEMP_Init@Index,f
  3458  17F5                     l3213:
  3459  17F5  300A               	movlw	10
  3460  17F6  024D               	subwf	TEMP_Init@Index,w
  3461  17F7  1C03               	skipc
  3462  17F8  2FFA               	goto	u2331
  3463  17F9  2FFB               	goto	u2330
  3464  17FA                     u2331:
  3465  17FA  2FEC               	goto	l3209
  3466  17FB                     u2330:
  3467  17FB                     l3215:
  3468                           
  3469                           ;TEMP.c: 11:     TEMP_G[0].Index = 0;
  3470  17FB  1683               	bsf	3,5	;RP0=1, select bank1
  3471  17FC  1303               	bcf	3,6	;RP1=0, select bank1
  3472  17FD  01DA               	clrf	(_TEMP_G^(0+128)+10)	;volatile
  3473                           
  3474                           ;TEMP.c: 12:     TEMP_G[0].AvgFlag = 0;
  3475  17FE  01DB               	clrf	(_TEMP_G^(0+128)+11)	;volatile
  3476  17FF                     l177:
  3477  17FF  0008               	return
  3478  1800                     __end_of_TEMP_Init:
  3479                           
  3480                           	psect	text13
  3481  0AFB                     __ptext13:	
  3482 ;; *************** function _SW_Init *****************
  3483 ;; Defined at:
  3484 ;;		line 5 in file "SW.c"
  3485 ;; Parameters:    Size  Location     Type
  3486 ;;		None
  3487 ;; Auto vars:     Size  Location     Type
  3488 ;;		None
  3489 ;; Return value:  Size  Location     Type
  3490 ;;                  1    wreg      void 
  3491 ;; Registers used:
  3492 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3493 ;; Tracked objects:
  3494 ;;		On entry : 0/0
  3495 ;;		On exit  : 0/0
  3496 ;;		Unchanged: 0/0
  3497 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3498 ;;      Params:         0       0       0       0       0
  3499 ;;      Locals:         0       0       0       0       0
  3500 ;;      Temps:          0       0       0       0       0
  3501 ;;      Totals:         0       0       0       0       0
  3502 ;;Total ram usage:        0 bytes
  3503 ;; Hardware stack levels used:    1
  3504 ;; Hardware stack levels required when called:    4
  3505 ;; This function calls:
  3506 ;;		_GPIO_InitPin
  3507 ;; This function is called by:
  3508 ;;		_main
  3509 ;; This function uses a non-reentrant model
  3510 ;;
  3511                           
  3512                           
  3513                           ;psect for function _SW_Init
  3514  0AFB                     _SW_Init:
  3515  0AFB                     l3183:	
  3516                           ;incstack = 0
  3517                           ; Regs used in _SW_Init: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3518                           
  3519                           
  3520                           ;SW.c: 7:     SW_G[0].State = 0;
  3521  0AFB  1283               	bcf	3,5	;RP0=0, select bank0
  3522  0AFC  1303               	bcf	3,6	;RP1=0, select bank0
  3523  0AFD  01AA               	clrf	_SW_G	;volatile
  3524                           
  3525                           ;SW.c: 8:     SW_G[0].Counter = 0;
  3526  0AFE  01AB               	clrf	_SW_G+1	;volatile
  3527                           
  3528                           ;SW.c: 9:     SW_G[0].Lock = 0;
  3529  0AFF  01AC               	clrf	_SW_G+2	;volatile
  3530                           
  3531                           ;SW.c: 10:     SW_G[1].State = 0;
  3532  0B00  01AD               	clrf	_SW_G+3	;volatile
  3533                           
  3534                           ;SW.c: 11:     SW_G[1].Counter = 0;
  3535  0B01  01AE               	clrf	_SW_G+4	;volatile
  3536                           
  3537                           ;SW.c: 12:     SW_G[1].Lock = 0;
  3538  0B02  01AF               	clrf	_SW_G+5	;volatile
  3539                           
  3540                           ;SW.c: 13:     SW_G[2].State = 0;
  3541  0B03  01B0               	clrf	_SW_G+6	;volatile
  3542                           
  3543                           ;SW.c: 14:     SW_G[2].Counter = 0;
  3544  0B04  01B1               	clrf	_SW_G+7	;volatile
  3545                           
  3546                           ;SW.c: 15:     SW_G[2].Lock = 0;
  3547  0B05  01B2               	clrf	_SW_G+8	;volatile
  3548  0B06                     l3185:
  3549                           
  3550                           ;SW.c: 16:     GPIO_InitPin((((GPIO_TypeDef*)&PORTB)), (0), (1));
  3551  0B06  3006               	movlw	6
  3552  0B07  00CD               	movwf	GPIO_InitPin@GPIOx
  3553  0B08  3000               	movlw	0
  3554  0B09  00CE               	movwf	GPIO_InitPin@GPIOx+1
  3555  0B0A  01CF               	clrf	GPIO_InitPin@PINx
  3556  0B0B  01D0               	clrf	GPIO_InitPin@Mode
  3557  0B0C  0AD0               	incf	GPIO_InitPin@Mode,f
  3558  0B0D  120A  158A  22C5  120A  158A  	fcall	_GPIO_InitPin
  3559  0B12                     l3187:
  3560                           
  3561                           ;SW.c: 17:     GPIO_InitPin((((GPIO_TypeDef*)&PORTB)), (1), (1));
  3562  0B12  3006               	movlw	6
  3563  0B13  1283               	bcf	3,5	;RP0=0, select bank0
  3564  0B14  1303               	bcf	3,6	;RP1=0, select bank0
  3565  0B15  00CD               	movwf	GPIO_InitPin@GPIOx
  3566  0B16  3000               	movlw	0
  3567  0B17  00CE               	movwf	GPIO_InitPin@GPIOx+1
  3568  0B18  01CF               	clrf	GPIO_InitPin@PINx
  3569  0B19  0ACF               	incf	GPIO_InitPin@PINx,f
  3570  0B1A  01D0               	clrf	GPIO_InitPin@Mode
  3571  0B1B  0AD0               	incf	GPIO_InitPin@Mode,f
  3572  0B1C  120A  158A  22C5  120A  158A  	fcall	_GPIO_InitPin
  3573  0B21                     l3189:
  3574                           
  3575                           ;SW.c: 18:     GPIO_InitPin((((GPIO_TypeDef*)&PORTB)), (2), (1));
  3576  0B21  3006               	movlw	6
  3577  0B22  1283               	bcf	3,5	;RP0=0, select bank0
  3578  0B23  1303               	bcf	3,6	;RP1=0, select bank0
  3579  0B24  00CD               	movwf	GPIO_InitPin@GPIOx
  3580  0B25  3000               	movlw	0
  3581  0B26  00CE               	movwf	GPIO_InitPin@GPIOx+1
  3582  0B27  3002               	movlw	2
  3583  0B28  00FF               	movwf	btemp+1
  3584  0B29  087F               	movf	btemp+1,w
  3585  0B2A  00CF               	movwf	GPIO_InitPin@PINx
  3586  0B2B  01D0               	clrf	GPIO_InitPin@Mode
  3587  0B2C  0AD0               	incf	GPIO_InitPin@Mode,f
  3588  0B2D  120A  158A  22C5  120A  158A  	fcall	_GPIO_InitPin
  3589  0B32                     l120:
  3590  0B32  0008               	return
  3591  0B33                     __end_of_SW_Init:
  3592                           
  3593                           	psect	text14
  3594  01F3                     __ptext14:	
  3595 ;; *************** function _SSD_Init *****************
  3596 ;; Defined at:
  3597 ;;		line 7 in file "SSD.c"
  3598 ;; Parameters:    Size  Location     Type
  3599 ;;		None
  3600 ;; Auto vars:     Size  Location     Type
  3601 ;;		None
  3602 ;; Return value:  Size  Location     Type
  3603 ;;                  1    wreg      void 
  3604 ;; Registers used:
  3605 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3606 ;; Tracked objects:
  3607 ;;		On entry : 0/0
  3608 ;;		On exit  : 0/0
  3609 ;;		Unchanged: 0/0
  3610 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3611 ;;      Params:         0       0       0       0       0
  3612 ;;      Locals:         0       0       0       0       0
  3613 ;;      Temps:          0       0       0       0       0
  3614 ;;      Totals:         0       0       0       0       0
  3615 ;;Total ram usage:        0 bytes
  3616 ;; Hardware stack levels used:    1
  3617 ;; Hardware stack levels required when called:    4
  3618 ;; This function calls:
  3619 ;;		_GPIO_InitPin
  3620 ;; This function is called by:
  3621 ;;		_main
  3622 ;; This function uses a non-reentrant model
  3623 ;;
  3624                           
  3625                           
  3626                           ;psect for function _SSD_Init
  3627  01F3                     _SSD_Init:
  3628  01F3                     l3231:	
  3629                           ;incstack = 0
  3630                           ; Regs used in _SSD_Init: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3631                           
  3632                           
  3633                           ;SSD.c: 9:     SSD_G[0].State = 0;
  3634  01F3  1283               	bcf	3,5	;RP0=0, select bank0
  3635  01F4  1303               	bcf	3,6	;RP1=0, select bank0
  3636  01F5  01BB               	clrf	_SSD_G	;volatile
  3637                           
  3638                           ;SSD.c: 10:     SSD_G[0].Symbol = 0;
  3639  01F6  01BC               	clrf	_SSD_G+1	;volatile
  3640                           
  3641                           ;SSD.c: 11:     SSD_G[1].State = 0;
  3642  01F7  01BD               	clrf	_SSD_G+2	;volatile
  3643                           
  3644                           ;SSD.c: 12:     SSD_G[1].Symbol = 0;
  3645  01F8  01BE               	clrf	_SSD_G+3	;volatile
  3646                           
  3647                           ;SSD.c: 13:     SSD_G[2].State = 0;
  3648  01F9  01BF               	clrf	_SSD_G+4	;volatile
  3649                           
  3650                           ;SSD.c: 14:     SSD_G[2].Symbol = 0;
  3651  01FA  01C0               	clrf	_SSD_G+5	;volatile
  3652                           
  3653                           ;SSD.c: 15:     SSD_G[3].State = 0;
  3654  01FB  01C1               	clrf	_SSD_G+6	;volatile
  3655                           
  3656                           ;SSD.c: 16:     SSD_G[3].Symbol = 0;
  3657  01FC  01C2               	clrf	_SSD_G+7	;volatile
  3658  01FD                     l3233:
  3659                           
  3660                           ;SSD.c: 17:     GPIO_InitPin((((GPIO_TypeDef*)&PORTD)), (0), (0));
  3661  01FD  3008               	movlw	8
  3662  01FE  00CD               	movwf	GPIO_InitPin@GPIOx
  3663  01FF  3000               	movlw	0
  3664  0200  00CE               	movwf	GPIO_InitPin@GPIOx+1
  3665  0201  01CF               	clrf	GPIO_InitPin@PINx
  3666  0202  01D0               	clrf	GPIO_InitPin@Mode
  3667  0203  120A  158A  22C5  120A  118A  	fcall	_GPIO_InitPin
  3668  0208                     l3235:
  3669                           
  3670                           ;SSD.c: 18:     GPIO_InitPin((((GPIO_TypeDef*)&PORTD)), (1), (0));
  3671  0208  3008               	movlw	8
  3672  0209  1283               	bcf	3,5	;RP0=0, select bank0
  3673  020A  1303               	bcf	3,6	;RP1=0, select bank0
  3674  020B  00CD               	movwf	GPIO_InitPin@GPIOx
  3675  020C  3000               	movlw	0
  3676  020D  00CE               	movwf	GPIO_InitPin@GPIOx+1
  3677  020E  01CF               	clrf	GPIO_InitPin@PINx
  3678  020F  0ACF               	incf	GPIO_InitPin@PINx,f
  3679  0210  01D0               	clrf	GPIO_InitPin@Mode
  3680  0211  120A  158A  22C5  120A  118A  	fcall	_GPIO_InitPin
  3681  0216                     l3237:
  3682                           
  3683                           ;SSD.c: 19:     GPIO_InitPin((((GPIO_TypeDef*)&PORTD)), (2), (0));
  3684  0216  3008               	movlw	8
  3685  0217  1283               	bcf	3,5	;RP0=0, select bank0
  3686  0218  1303               	bcf	3,6	;RP1=0, select bank0
  3687  0219  00CD               	movwf	GPIO_InitPin@GPIOx
  3688  021A  3000               	movlw	0
  3689  021B  00CE               	movwf	GPIO_InitPin@GPIOx+1
  3690  021C  3002               	movlw	2
  3691  021D  00FF               	movwf	btemp+1
  3692  021E  087F               	movf	btemp+1,w
  3693  021F  00CF               	movwf	GPIO_InitPin@PINx
  3694  0220  01D0               	clrf	GPIO_InitPin@Mode
  3695  0221  120A  158A  22C5  120A  118A  	fcall	_GPIO_InitPin
  3696  0226                     l3239:
  3697                           
  3698                           ;SSD.c: 20:     GPIO_InitPin((((GPIO_TypeDef*)&PORTD)), (3), (0));
  3699  0226  3008               	movlw	8
  3700  0227  1283               	bcf	3,5	;RP0=0, select bank0
  3701  0228  1303               	bcf	3,6	;RP1=0, select bank0
  3702  0229  00CD               	movwf	GPIO_InitPin@GPIOx
  3703  022A  3000               	movlw	0
  3704  022B  00CE               	movwf	GPIO_InitPin@GPIOx+1
  3705  022C  3003               	movlw	3
  3706  022D  00FF               	movwf	btemp+1
  3707  022E  087F               	movf	btemp+1,w
  3708  022F  00CF               	movwf	GPIO_InitPin@PINx
  3709  0230  01D0               	clrf	GPIO_InitPin@Mode
  3710  0231  120A  158A  22C5  120A  118A  	fcall	_GPIO_InitPin
  3711  0236                     l3241:
  3712                           
  3713                           ;SSD.c: 21:     GPIO_InitPin((((GPIO_TypeDef*)&PORTD)), (4), (0));
  3714  0236  3008               	movlw	8
  3715  0237  1283               	bcf	3,5	;RP0=0, select bank0
  3716  0238  1303               	bcf	3,6	;RP1=0, select bank0
  3717  0239  00CD               	movwf	GPIO_InitPin@GPIOx
  3718  023A  3000               	movlw	0
  3719  023B  00CE               	movwf	GPIO_InitPin@GPIOx+1
  3720  023C  3004               	movlw	4
  3721  023D  00FF               	movwf	btemp+1
  3722  023E  087F               	movf	btemp+1,w
  3723  023F  00CF               	movwf	GPIO_InitPin@PINx
  3724  0240  01D0               	clrf	GPIO_InitPin@Mode
  3725  0241  120A  158A  22C5  120A  118A  	fcall	_GPIO_InitPin
  3726  0246                     l3243:
  3727                           
  3728                           ;SSD.c: 22:     GPIO_InitPin((((GPIO_TypeDef*)&PORTD)), (5), (0));
  3729  0246  3008               	movlw	8
  3730  0247  1283               	bcf	3,5	;RP0=0, select bank0
  3731  0248  1303               	bcf	3,6	;RP1=0, select bank0
  3732  0249  00CD               	movwf	GPIO_InitPin@GPIOx
  3733  024A  3000               	movlw	0
  3734  024B  00CE               	movwf	GPIO_InitPin@GPIOx+1
  3735  024C  3005               	movlw	5
  3736  024D  00FF               	movwf	btemp+1
  3737  024E  087F               	movf	btemp+1,w
  3738  024F  00CF               	movwf	GPIO_InitPin@PINx
  3739  0250  01D0               	clrf	GPIO_InitPin@Mode
  3740  0251  120A  158A  22C5  120A  118A  	fcall	_GPIO_InitPin
  3741  0256                     l3245:
  3742                           
  3743                           ;SSD.c: 23:     GPIO_InitPin((((GPIO_TypeDef*)&PORTD)), (6), (0));
  3744  0256  3008               	movlw	8
  3745  0257  1283               	bcf	3,5	;RP0=0, select bank0
  3746  0258  1303               	bcf	3,6	;RP1=0, select bank0
  3747  0259  00CD               	movwf	GPIO_InitPin@GPIOx
  3748  025A  3000               	movlw	0
  3749  025B  00CE               	movwf	GPIO_InitPin@GPIOx+1
  3750  025C  3006               	movlw	6
  3751  025D  00FF               	movwf	btemp+1
  3752  025E  087F               	movf	btemp+1,w
  3753  025F  00CF               	movwf	GPIO_InitPin@PINx
  3754  0260  01D0               	clrf	GPIO_InitPin@Mode
  3755  0261  120A  158A  22C5  120A  118A  	fcall	_GPIO_InitPin
  3756  0266                     l3247:
  3757                           
  3758                           ;SSD.c: 24:     GPIO_InitPin((((GPIO_TypeDef*)&PORTD)), (7), (0));
  3759  0266  3008               	movlw	8
  3760  0267  1283               	bcf	3,5	;RP0=0, select bank0
  3761  0268  1303               	bcf	3,6	;RP1=0, select bank0
  3762  0269  00CD               	movwf	GPIO_InitPin@GPIOx
  3763  026A  3000               	movlw	0
  3764  026B  00CE               	movwf	GPIO_InitPin@GPIOx+1
  3765  026C  3007               	movlw	7
  3766  026D  00FF               	movwf	btemp+1
  3767  026E  087F               	movf	btemp+1,w
  3768  026F  00CF               	movwf	GPIO_InitPin@PINx
  3769  0270  01D0               	clrf	GPIO_InitPin@Mode
  3770  0271  120A  158A  22C5  120A  118A  	fcall	_GPIO_InitPin
  3771  0276                     l3249:
  3772                           
  3773                           ;SSD.c: 25:     GPIO_InitPin((((GPIO_TypeDef*)&PORTA)), (5), (0));
  3774  0276  3005               	movlw	5
  3775  0277  1283               	bcf	3,5	;RP0=0, select bank0
  3776  0278  1303               	bcf	3,6	;RP1=0, select bank0
  3777  0279  00CD               	movwf	GPIO_InitPin@GPIOx
  3778  027A  3000               	movlw	0
  3779  027B  00CE               	movwf	GPIO_InitPin@GPIOx+1
  3780  027C  3005               	movlw	5
  3781  027D  00FF               	movwf	btemp+1
  3782  027E  087F               	movf	btemp+1,w
  3783  027F  00CF               	movwf	GPIO_InitPin@PINx
  3784  0280  01D0               	clrf	GPIO_InitPin@Mode
  3785  0281  120A  158A  22C5  120A  118A  	fcall	_GPIO_InitPin
  3786  0286                     l3251:
  3787                           
  3788                           ;SSD.c: 26:     GPIO_InitPin((((GPIO_TypeDef*)&PORTA)), (4), (0));
  3789  0286  3005               	movlw	5
  3790  0287  1283               	bcf	3,5	;RP0=0, select bank0
  3791  0288  1303               	bcf	3,6	;RP1=0, select bank0
  3792  0289  00CD               	movwf	GPIO_InitPin@GPIOx
  3793  028A  3000               	movlw	0
  3794  028B  00CE               	movwf	GPIO_InitPin@GPIOx+1
  3795  028C  3004               	movlw	4
  3796  028D  00FF               	movwf	btemp+1
  3797  028E  087F               	movf	btemp+1,w
  3798  028F  00CF               	movwf	GPIO_InitPin@PINx
  3799  0290  01D0               	clrf	GPIO_InitPin@Mode
  3800  0291  120A  158A  22C5  120A  118A  	fcall	_GPIO_InitPin
  3801  0296                     l67:
  3802  0296  0008               	return
  3803  0297                     __end_of_SSD_Init:
  3804                           
  3805                           	psect	text15
  3806  1713                     __ptext15:	
  3807 ;; *************** function _SCH_Start *****************
  3808 ;; Defined at:
  3809 ;;		line 20 in file "SCH.c"
  3810 ;; Parameters:    Size  Location     Type
  3811 ;;		None
  3812 ;; Auto vars:     Size  Location     Type
  3813 ;;		None
  3814 ;; Return value:  Size  Location     Type
  3815 ;;                  1    wreg      void 
  3816 ;; Registers used:
  3817 ;;		wreg, status,2, status,0, pclath, cstack
  3818 ;; Tracked objects:
  3819 ;;		On entry : 0/0
  3820 ;;		On exit  : 0/0
  3821 ;;		Unchanged: 0/0
  3822 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3823 ;;      Params:         0       0       0       0       0
  3824 ;;      Locals:         0       0       0       0       0
  3825 ;;      Temps:          0       0       0       0       0
  3826 ;;      Totals:         0       0       0       0       0
  3827 ;;Total ram usage:        0 bytes
  3828 ;; Hardware stack levels used:    1
  3829 ;; Hardware stack levels required when called:    5
  3830 ;; This function calls:
  3831 ;;		_SysTick_Init
  3832 ;; This function is called by:
  3833 ;;		_main
  3834 ;; This function uses a non-reentrant model
  3835 ;;
  3836                           
  3837                           
  3838                           ;psect for function _SCH_Start
  3839  1713                     _SCH_Start:
  3840  1713                     l3307:	
  3841                           ;incstack = 0
  3842                           ; Regs used in _SCH_Start: [wreg+status,2+status,0+pclath+cstack]
  3843                           
  3844                           
  3845                           ;SCH.c: 22:  SysTick_Init((5));
  3846  1713  3000               	movlw	0
  3847  1714  1283               	bcf	3,5	;RP0=0, select bank0
  3848  1715  1303               	bcf	3,6	;RP1=0, select bank0
  3849  1716  00DD               	movwf	SysTick_Init@TicksPeriod_ms+3
  3850  1717  3000               	movlw	0
  3851  1718  00DC               	movwf	SysTick_Init@TicksPeriod_ms+2
  3852  1719  3000               	movlw	0
  3853  171A  00DB               	movwf	SysTick_Init@TicksPeriod_ms+1
  3854  171B  3005               	movlw	5
  3855  171C  00DA               	movwf	SysTick_Init@TicksPeriod_ms
  3856  171D  120A  158A  25BE  160A  118A  	fcall	_SysTick_Init
  3857  1722                     l454:
  3858  1722  0008               	return
  3859  1723                     __end_of_SCH_Start:
  3860                           
  3861                           	psect	text16
  3862  0DBE                     __ptext16:	
  3863 ;; *************** function _SysTick_Init *****************
  3864 ;; Defined at:
  3865 ;;		line 3 in file "SCH_CONFIG.c"
  3866 ;; Parameters:    Size  Location     Type
  3867 ;;  TicksPeriod_    4   13[BANK0 ]  unsigned long 
  3868 ;; Auto vars:     Size  Location     Type
  3869 ;;  Ticks_N         4   21[BANK0 ] volatile unsigned long 
  3870 ;; Return value:  Size  Location     Type
  3871 ;;                  1    wreg      unsigned char 
  3872 ;; Registers used:
  3873 ;;		wreg, status,2, status,0, pclath, cstack
  3874 ;; Tracked objects:
  3875 ;;		On entry : 0/0
  3876 ;;		On exit  : 0/0
  3877 ;;		Unchanged: 0/0
  3878 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3879 ;;      Params:         0       4       0       0       0
  3880 ;;      Locals:         0       4       0       0       0
  3881 ;;      Temps:          0       4       0       0       0
  3882 ;;      Totals:         0      12       0       0       0
  3883 ;;Total ram usage:       12 bytes
  3884 ;; Hardware stack levels used:    1
  3885 ;; Hardware stack levels required when called:    4
  3886 ;; This function calls:
  3887 ;;		_TIM1_Init
  3888 ;;		___lmul
  3889 ;; This function is called by:
  3890 ;;		_SCH_Start
  3891 ;; This function uses a non-reentrant model
  3892 ;;
  3893                           
  3894                           
  3895                           ;psect for function _SysTick_Init
  3896  0DBE                     _SysTick_Init:
  3897  0DBE                     l3107:	
  3898                           ;incstack = 0
  3899                           ; Regs used in _SysTick_Init: [wreg+status,2+status,0+pclath+cstack]
  3900                           
  3901                           
  3902                           ;SCH_CONFIG.c: 3: uint8_t SysTick_Init(volatile const uint32_t TicksPeriod_ms);SCH_CONFI
      +                          G.c: 4: {;SCH_CONFIG.c: 5:  volatile uint32_t Ticks_N = ((((16000000)/(4))/1000)*TicksPe
      +                          riod_ms)-1;
  3903  0DBE  30FF               	movlw	255
  3904  0DBF  1283               	bcf	3,5	;RP0=0, select bank0
  3905  0DC0  1303               	bcf	3,6	;RP1=0, select bank0
  3906  0DC1  00DE               	movwf	??_SysTick_Init
  3907  0DC2  30FF               	movlw	255
  3908  0DC3  00DF               	movwf	??_SysTick_Init+1
  3909  0DC4  30FF               	movlw	255
  3910  0DC5  00E0               	movwf	??_SysTick_Init+2
  3911  0DC6  30FF               	movlw	255
  3912  0DC7  00E1               	movwf	??_SysTick_Init+3
  3913  0DC8  085D               	movf	SysTick_Init@TicksPeriod_ms+3,w	;volatile
  3914  0DC9  00D0               	movwf	___lmul@multiplier+3
  3915  0DCA  085C               	movf	SysTick_Init@TicksPeriod_ms+2,w	;volatile
  3916  0DCB  00CF               	movwf	___lmul@multiplier+2
  3917  0DCC  085B               	movf	SysTick_Init@TicksPeriod_ms+1,w	;volatile
  3918  0DCD  00CE               	movwf	___lmul@multiplier+1
  3919  0DCE  085A               	movf	SysTick_Init@TicksPeriod_ms,w	;volatile
  3920  0DCF  00CD               	movwf	___lmul@multiplier
  3921  0DD0  3000               	movlw	0
  3922  0DD1  00D4               	movwf	___lmul@multiplicand+3
  3923  0DD2  3000               	movlw	0
  3924  0DD3  00D3               	movwf	___lmul@multiplicand+2
  3925  0DD4  300F               	movlw	15
  3926  0DD5  00D2               	movwf	___lmul@multiplicand+1
  3927  0DD6  30A0               	movlw	160
  3928  0DD7  00D1               	movwf	___lmul@multiplicand
  3929  0DD8  120A  158A  252A  120A  158A  	fcall	___lmul
  3930  0DDD  1283               	bcf	3,5	;RP0=0, select bank0
  3931  0DDE  1303               	bcf	3,6	;RP1=0, select bank0
  3932  0DDF  084D               	movf	?___lmul,w
  3933  0DE0  07DE               	addwf	??_SysTick_Init,f
  3934  0DE1  084E               	movf	?___lmul+1,w
  3935  0DE2  1803               	skipnc
  3936  0DE3  0F4E               	incfsz	?___lmul+1,w
  3937  0DE4  2DE6               	goto	u2240
  3938  0DE5  2DE7               	goto	u2241
  3939  0DE6                     u2240:
  3940  0DE6  07DF               	addwf	??_SysTick_Init+1,f
  3941  0DE7                     u2241:
  3942  0DE7  084F               	movf	?___lmul+2,w
  3943  0DE8  1803               	skipnc
  3944  0DE9  0F4F               	incfsz	?___lmul+2,w
  3945  0DEA  2DEC               	goto	u2242
  3946  0DEB  2DED               	goto	u2243
  3947  0DEC                     u2242:
  3948  0DEC  07E0               	addwf	??_SysTick_Init+2,f
  3949  0DED                     u2243:
  3950  0DED  0850               	movf	?___lmul+3,w
  3951  0DEE  1803               	skipnc
  3952  0DEF  0A50               	incf	?___lmul+3,w
  3953  0DF0  07E1               	addwf	??_SysTick_Init+3,f
  3954  0DF1  0861               	movf	??_SysTick_Init+3,w
  3955  0DF2  00E5               	movwf	SysTick_Init@Ticks_N+3	;volatile
  3956  0DF3  0860               	movf	??_SysTick_Init+2,w
  3957  0DF4  00E4               	movwf	SysTick_Init@Ticks_N+2	;volatile
  3958  0DF5  085F               	movf	??_SysTick_Init+1,w
  3959  0DF6  00E3               	movwf	SysTick_Init@Ticks_N+1	;volatile
  3960  0DF7  085E               	movf	??_SysTick_Init,w
  3961  0DF8  00E2               	movwf	SysTick_Init@Ticks_N	;volatile
  3962  0DF9                     l3109:
  3963                           
  3964                           ;SCH_CONFIG.c: 6:  if(Ticks_N < (65536))
  3965  0DF9  0865               	movf	SysTick_Init@Ticks_N+3,w	;volatile
  3966  0DFA  1D03               	btfss	3,2
  3967  0DFB  2E0B               	goto	u2251
  3968  0DFC  3001               	movlw	1
  3969  0DFD  0264               	subwf	SysTick_Init@Ticks_N+2,w	;volatile
  3970  0DFE  1D03               	skipz
  3971  0DFF  2E08               	goto	u2253
  3972  0E00  3000               	movlw	0
  3973  0E01  0263               	subwf	SysTick_Init@Ticks_N+1,w	;volatile
  3974  0E02  1D03               	skipz
  3975  0E03  2E08               	goto	u2253
  3976  0E04  3000               	movlw	0
  3977  0E05  0262               	subwf	SysTick_Init@Ticks_N,w	;volatile
  3978  0E06  1D03               	skipz
  3979  0E07  2E08               	goto	u2253
  3980  0E08                     u2253:
  3981  0E08  1803               	btfsc	3,0
  3982  0E09  2E0B               	goto	u2251
  3983  0E0A  2E0C               	goto	u2250
  3984  0E0B                     u2251:
  3985  0E0B  2E16               	goto	l511
  3986  0E0C                     u2250:
  3987  0E0C                     l3111:
  3988                           
  3989                           ;SCH_CONFIG.c: 7:  {;SCH_CONFIG.c: 8:         TIM1_Init((uint16_t)Ticks_N);
  3990  0E0C  0863               	movf	SysTick_Init@Ticks_N+1,w	;volatile
  3991  0E0D  00CE               	movwf	TIM1_Init@Ticks_N+1
  3992  0E0E  0862               	movf	SysTick_Init@Ticks_N,w	;volatile
  3993  0E0F  00CD               	movwf	TIM1_Init@Ticks_N
  3994  0E10  160A  118A  2753  120A  158A  	fcall	_TIM1_Init
  3995  0E15                     l3113:
  3996                           
  3997                           ;SCH_CONFIG.c: 9:         (INTCONbits.GIE = 1);
  3998  0E15  178B               	bsf	11,7	;volatile
  3999  0E16                     l511:
  4000  0E16  0008               	return
  4001  0E17                     __end_of_SysTick_Init:
  4002                           
  4003                           	psect	text17
  4004  1753                     __ptext17:	
  4005 ;; *************** function _TIM1_Init *****************
  4006 ;; Defined at:
  4007 ;;		line 16 in file "TIM.c"
  4008 ;; Parameters:    Size  Location     Type
  4009 ;;  Ticks_N         2    0[BANK0 ] unsigned short 
  4010 ;; Auto vars:     Size  Location     Type
  4011 ;;		None
  4012 ;; Return value:  Size  Location     Type
  4013 ;;                  1    wreg      void 
  4014 ;; Registers used:
  4015 ;;		wreg, status,2
  4016 ;; Tracked objects:
  4017 ;;		On entry : 0/0
  4018 ;;		On exit  : 0/0
  4019 ;;		Unchanged: 0/0
  4020 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4021 ;;      Params:         0       2       0       0       0
  4022 ;;      Locals:         0       0       0       0       0
  4023 ;;      Temps:          0       0       0       0       0
  4024 ;;      Totals:         0       2       0       0       0
  4025 ;;Total ram usage:        2 bytes
  4026 ;; Hardware stack levels used:    1
  4027 ;; Hardware stack levels required when called:    3
  4028 ;; This function calls:
  4029 ;;		Nothing
  4030 ;; This function is called by:
  4031 ;;		_SysTick_Init
  4032 ;; This function uses a non-reentrant model
  4033 ;;
  4034                           
  4035                           
  4036                           ;psect for function _TIM1_Init
  4037  1753                     _TIM1_Init:
  4038  1753                     l2839:	
  4039                           ;incstack = 0
  4040                           ; Regs used in _TIM1_Init: [wreg+status,2]
  4041                           
  4042                           
  4043                           ;TIM.c: 16: void TIM1_Init(uint16_t Ticks_N);TIM.c: 17: {;TIM.c: 19:     TMR1H = 0;
  4044  1753  1283               	bcf	3,5	;RP0=0, select bank0
  4045  1754  1303               	bcf	3,6	;RP1=0, select bank0
  4046  1755  018F               	clrf	15	;volatile
  4047                           
  4048                           ;TIM.c: 20:     TMR1L = 0;
  4049  1756  018E               	clrf	14	;volatile
  4050  1757                     l2841:
  4051                           
  4052                           ;TIM.c: 23:     T1CON = 0x01;
  4053  1757  3001               	movlw	1
  4054  1758  0090               	movwf	16	;volatile
  4055                           
  4056                           ;TIM.c: 26:     CCPR1H = Ticks_N>>8;
  4057  1759  084E               	movf	TIM1_Init@Ticks_N+1,w
  4058  175A  0096               	movwf	22	;volatile
  4059  175B                     l2843:
  4060                           
  4061                           ;TIM.c: 27:     CCPR1L = Ticks_N;
  4062  175B  084D               	movf	TIM1_Init@Ticks_N,w
  4063  175C  0095               	movwf	21	;volatile
  4064  175D                     l2845:
  4065                           
  4066                           ;TIM.c: 29:     CCP1CON = 0x0B;
  4067  175D  300B               	movlw	11
  4068  175E  0097               	movwf	23	;volatile
  4069  175F                     l2847:
  4070                           
  4071                           ;TIM.c: 32:     PIE1 = 0x04;
  4072  175F  3004               	movlw	4
  4073  1760  1683               	bsf	3,5	;RP0=1, select bank1
  4074  1761  1303               	bcf	3,6	;RP1=0, select bank1
  4075  1762  008C               	movwf	12	;volatile
  4076  1763                     l2849:
  4077                           
  4078                           ;TIM.c: 34:     INTCON = 0x40;
  4079  1763  3040               	movlw	64
  4080  1764  008B               	movwf	11	;volatile
  4081  1765                     l621:
  4082  1765  0008               	return
  4083  1766                     __end_of_TIM1_Init:
  4084                           
  4085                           	psect	text18
  4086  080D                     __ptext18:	
  4087 ;; *************** function _SCH_Init *****************
  4088 ;; Defined at:
  4089 ;;		line 8 in file "SCH.c"
  4090 ;; Parameters:    Size  Location     Type
  4091 ;;		None
  4092 ;; Auto vars:     Size  Location     Type
  4093 ;;  Index           1    4[BANK0 ] unsigned char 
  4094 ;; Return value:  Size  Location     Type
  4095 ;;                  1    wreg      void 
  4096 ;; Registers used:
  4097 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4098 ;; Tracked objects:
  4099 ;;		On entry : 0/0
  4100 ;;		On exit  : 0/0
  4101 ;;		Unchanged: 0/0
  4102 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4103 ;;      Params:         0       0       0       0       0
  4104 ;;      Locals:         0       1       0       0       0
  4105 ;;      Temps:          0       0       0       0       0
  4106 ;;      Totals:         0       1       0       0       0
  4107 ;;Total ram usage:        1 bytes
  4108 ;; Hardware stack levels used:    1
  4109 ;; Hardware stack levels required when called:    5
  4110 ;; This function calls:
  4111 ;;		_SCH_Delete_Task
  4112 ;; This function is called by:
  4113 ;;		_main
  4114 ;; This function uses a non-reentrant model
  4115 ;;
  4116                           
  4117                           
  4118                           ;psect for function _SCH_Init
  4119  080D                     _SCH_Init:
  4120  080D                     l3163:	
  4121                           ;incstack = 0
  4122                           ; Regs used in _SCH_Init: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4123                           
  4124                           
  4125                           ;SCH.c: 10:  uint8_t Index;;SCH.c: 11:  for(Index = 0; Index < (8); Index++)
  4126  080D  1283               	bcf	3,5	;RP0=0, select bank0
  4127  080E  1303               	bcf	3,6	;RP1=0, select bank0
  4128  080F  01D1               	clrf	SCH_Init@Index
  4129  0810                     l3169:
  4130                           
  4131                           ;SCH.c: 12:  {;SCH.c: 13:   SCH_Delete_Task(Index);
  4132  0810  0851               	movf	SCH_Init@Index,w
  4133  0811  120A  158A  2672  120A  158A  	fcall	_SCH_Delete_Task
  4134  0816                     l3171:
  4135                           
  4136                           ;SCH.c: 14:  }
  4137  0816  3001               	movlw	1
  4138  0817  00FF               	movwf	btemp+1
  4139  0818  087F               	movf	btemp+1,w
  4140  0819  1283               	bcf	3,5	;RP0=0, select bank0
  4141  081A  1303               	bcf	3,6	;RP1=0, select bank0
  4142  081B  07D1               	addwf	SCH_Init@Index,f
  4143  081C                     l3173:
  4144  081C  3008               	movlw	8
  4145  081D  0251               	subwf	SCH_Init@Index,w
  4146  081E  1C03               	skipc
  4147  081F  2821               	goto	u2321
  4148  0820  2822               	goto	u2320
  4149  0821                     u2321:
  4150  0821  2810               	goto	l3169
  4151  0822                     u2320:
  4152  0822                     l3175:
  4153                           
  4154                           ;SCH.c: 15:  SCH_ErrorCode_G = 0;
  4155  0822  01C8               	clrf	_SCH_ErrorCode_G	;volatile
  4156                           
  4157                           ;SCH.c: 16:  SCH_ErrorTickCount_G = 0;
  4158  0823  01FA               	clrf	_SCH_ErrorTickCount_G	;volatile
  4159  0824  01FB               	clrf	_SCH_ErrorTickCount_G+1	;volatile
  4160                           
  4161                           ;SCH.c: 17:  SCH_IntFlag_G = 0;
  4162  0825  01C7               	clrf	_SCH_IntFlag_G	;volatile
  4163  0826                     l451:
  4164  0826  0008               	return
  4165  0827                     __end_of_SCH_Init:
  4166                           
  4167                           	psect	text19
  4168  0665                     __ptext19:	
  4169 ;; *************** function _SCH_Dispatch_Tasks *****************
  4170 ;; Defined at:
  4171 ;;		line 116 in file "SCH.c"
  4172 ;; Parameters:    Size  Location     Type
  4173 ;;		None
  4174 ;; Auto vars:     Size  Location     Type
  4175 ;;  Index           1   31[BANK0 ] unsigned char 
  4176 ;; Return value:  Size  Location     Type
  4177 ;;                  1    wreg      void 
  4178 ;; Registers used:
  4179 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4180 ;; Tracked objects:
  4181 ;;		On entry : 0/0
  4182 ;;		On exit  : 0/0
  4183 ;;		Unchanged: 0/0
  4184 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4185 ;;      Params:         0       0       0       0       0
  4186 ;;      Locals:         0       1       0       0       0
  4187 ;;      Temps:          0       2       0       0       0
  4188 ;;      Totals:         0       3       0       0       0
  4189 ;;Total ram usage:        3 bytes
  4190 ;; Hardware stack levels used:    1
  4191 ;; Hardware stack levels required when called:    8
  4192 ;; This function calls:
  4193 ;;		Absolute function
  4194 ;;		_ADC_Update
  4195 ;;		_DISP_Update
  4196 ;;		_HCU_Update
  4197 ;;		_LED_Update
  4198 ;;		_SCH_Delete_Task
  4199 ;;		_SCH_Go_To_Sleep
  4200 ;;		_SCH_Report_Status
  4201 ;;		_SSD_Update
  4202 ;;		_SW_Update
  4203 ;;		_TEMP_Update
  4204 ;;		_WH_Task
  4205 ;;		___bmul
  4206 ;; This function is called by:
  4207 ;;		_main
  4208 ;; This function uses a non-reentrant model
  4209 ;;
  4210                           
  4211                           
  4212                           ;psect for function _SCH_Dispatch_Tasks
  4213  0665                     _SCH_Dispatch_Tasks:
  4214  0665                     l3309:	
  4215                           ;incstack = 0
  4216 ;; hardware stack exceeded
  4217                           ; Regs used in _SCH_Dispatch_Tasks: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4218                           
  4219                           
  4220                           ;SCH.c: 118:  uint8_t Index;;SCH.c: 119:  for(Index = 0; Index < (8); Index++)
  4221  0665  1283               	bcf	3,5	;RP0=0, select bank0
  4222  0666  1303               	bcf	3,6	;RP1=0, select bank0
  4223  0667  01EC               	clrf	SCH_Dispatch_Tasks@Index
  4224  0668                     l3315:
  4225                           
  4226                           ;SCH.c: 120:  {;SCH.c: 121:   if(SCH_Tasks[Index].RunMe != 0)
  4227  0668  3006               	movlw	6
  4228  0669  00FF               	movwf	btemp+1
  4229  066A  087F               	movf	btemp+1,w
  4230  066B  00CD               	movwf	___bmul@multiplicand
  4231  066C  086C               	movf	SCH_Dispatch_Tasks@Index,w
  4232  066D  160A  118A  27B9  120A  118A  	fcall	___bmul
  4233  0672  3EA5               	addlw	(low ((_SCH_Tasks| 0+5)))& (0+255)
  4234  0673  0084               	movwf	4
  4235  0674  1383               	bcf	3,7	;select IRP bank1
  4236  0675  0800               	movf	0,w
  4237  0676  1903               	btfsc	3,2
  4238  0677  2E79               	goto	u2401
  4239  0678  2E7A               	goto	u2400
  4240  0679                     u2401:
  4241  0679  2EC1               	goto	l3321
  4242  067A                     u2400:
  4243  067A                     l3317:
  4244                           
  4245                           ;SCH.c: 122:   {;SCH.c: 123:    (*SCH_Tasks[Index].Task_P)();
  4246  067A  3006               	movlw	6
  4247  067B  00FF               	movwf	btemp+1
  4248  067C  087F               	movf	btemp+1,w
  4249  067D  1283               	bcf	3,5	;RP0=0, select bank0
  4250  067E  1303               	bcf	3,6	;RP1=0, select bank0
  4251  067F  00CD               	movwf	___bmul@multiplicand
  4252  0680  086C               	movf	SCH_Dispatch_Tasks@Index,w
  4253  0681  160A  118A  27B9  120A  118A  	fcall	___bmul
  4254  0686  3EA0               	addlw	(low (_SCH_Tasks| 0))& (0+255)
  4255  0687  0084               	movwf	4
  4256  0688  1383               	bcf	3,7	;select IRP bank1
  4257  0689  0800               	movf	0,w
  4258  068A  120A  118A  2055  120A  118A  	fcall	fptable
  4259                           
  4260                           ;SCH.c: 124:    SCH_Tasks[Index].RunMe = 0;
  4261  068F  3006               	movlw	6
  4262  0690  00FF               	movwf	btemp+1
  4263  0691  087F               	movf	btemp+1,w
  4264  0692  1283               	bcf	3,5	;RP0=0, select bank0
  4265  0693  1303               	bcf	3,6	;RP1=0, select bank0
  4266  0694  00CD               	movwf	___bmul@multiplicand
  4267  0695  086C               	movf	SCH_Dispatch_Tasks@Index,w
  4268  0696  160A  118A  27B9  120A  118A  	fcall	___bmul
  4269  069B  3EA5               	addlw	(low ((_SCH_Tasks| 0+5)))& (0+255)
  4270  069C  0084               	movwf	4
  4271  069D  1383               	bcf	3,7	;select IRP bank1
  4272  069E  0180               	clrf	0
  4273                           
  4274                           ;SCH.c: 125:    if(SCH_Tasks[Index].Period == 0)
  4275  069F  3006               	movlw	6
  4276  06A0  00FF               	movwf	btemp+1
  4277  06A1  087F               	movf	btemp+1,w
  4278  06A2  1283               	bcf	3,5	;RP0=0, select bank0
  4279  06A3  1303               	bcf	3,6	;RP1=0, select bank0
  4280  06A4  00CD               	movwf	___bmul@multiplicand
  4281  06A5  086C               	movf	SCH_Dispatch_Tasks@Index,w
  4282  06A6  160A  118A  27B9  120A  118A  	fcall	___bmul
  4283  06AB  3EA3               	addlw	(low ((_SCH_Tasks| 0+3)))& (0+255)
  4284  06AC  0084               	movwf	4
  4285  06AD  1383               	bcf	3,7	;select IRP bank1
  4286  06AE  0800               	movf	0,w
  4287  06AF  1283               	bcf	3,5	;RP0=0, select bank0
  4288  06B0  1303               	bcf	3,6	;RP1=0, select bank0
  4289  06B1  00EA               	movwf	??_SCH_Dispatch_Tasks
  4290  06B2  0A84               	incf	4,f
  4291  06B3  0800               	movf	0,w
  4292  06B4  00EB               	movwf	??_SCH_Dispatch_Tasks+1
  4293  06B5  086A               	movf	??_SCH_Dispatch_Tasks,w
  4294  06B6  046B               	iorwf	??_SCH_Dispatch_Tasks+1,w
  4295  06B7  1D03               	btfss	3,2
  4296  06B8  2EBA               	goto	u2411
  4297  06B9  2EBB               	goto	u2410
  4298  06BA                     u2411:
  4299  06BA  2EC1               	goto	l3321
  4300  06BB                     u2410:
  4301  06BB                     l3319:
  4302                           
  4303                           ;SCH.c: 126:    {;SCH.c: 127:     SCH_Delete_Task(Index);
  4304  06BB  086C               	movf	SCH_Dispatch_Tasks@Index,w
  4305  06BC  120A  158A  2672  120A  118A  	fcall	_SCH_Delete_Task
  4306  06C1                     l3321:
  4307                           
  4308                           ;SCH.c: 130:  }
  4309  06C1  3001               	movlw	1
  4310  06C2  00FF               	movwf	btemp+1
  4311  06C3  087F               	movf	btemp+1,w
  4312  06C4  1283               	bcf	3,5	;RP0=0, select bank0
  4313  06C5  1303               	bcf	3,6	;RP1=0, select bank0
  4314  06C6  07EC               	addwf	SCH_Dispatch_Tasks@Index,f
  4315  06C7                     l3323:
  4316  06C7  3008               	movlw	8
  4317  06C8  026C               	subwf	SCH_Dispatch_Tasks@Index,w
  4318  06C9  1C03               	skipc
  4319  06CA  2ECC               	goto	u2421
  4320  06CB  2ECD               	goto	u2420
  4321  06CC                     u2421:
  4322  06CC  2E68               	goto	l3315
  4323  06CD                     u2420:
  4324  06CD                     l3325:
  4325                           
  4326                           ;SCH.c: 131:  SCH_Report_Status();
  4327  06CD  120A  158A  241C  120A  118A  	fcall	_SCH_Report_Status
  4328  06D2                     l3327:
  4329                           
  4330                           ;SCH.c: 132:  SCH_Go_To_Sleep();
  4331  06D2  120A  118A  2003  120A  118A  	fcall	_SCH_Go_To_Sleep
  4332  06D7                     l497:
  4333  06D7  0008               	return
  4334  06D8                     __end_of_SCH_Dispatch_Tasks:
  4335                           
  4336                           	psect	text20
  4337  0570                     __ptext20:	
  4338 ;; *************** function _SSD_Update *****************
  4339 ;; Defined at:
  4340 ;;		line 29 in file "SSD.c"
  4341 ;; Parameters:    Size  Location     Type
  4342 ;;		None
  4343 ;; Auto vars:     Size  Location     Type
  4344 ;;		None
  4345 ;; Return value:  Size  Location     Type
  4346 ;;                  1    wreg      void 
  4347 ;; Registers used:
  4348 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4349 ;; Tracked objects:
  4350 ;;		On entry : 0/0
  4351 ;;		On exit  : 0/0
  4352 ;;		Unchanged: 0/0
  4353 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4354 ;;      Params:         0       0       0       0       0
  4355 ;;      Locals:         0       0       0       0       0
  4356 ;;      Temps:          0       1       0       0       0
  4357 ;;      Totals:         0       1       0       0       0
  4358 ;;Total ram usage:        1 bytes
  4359 ;; Hardware stack levels used:    1
  4360 ;; Hardware stack levels required when called:    4
  4361 ;; This function calls:
  4362 ;;		_GPIO_SetPinState
  4363 ;;		_GPIO_SetPortState
  4364 ;; This function is called by:
  4365 ;;		_main
  4366 ;;		_SCH_Dispatch_Tasks
  4367 ;; This function uses a non-reentrant model
  4368 ;;
  4369                           
  4370                           
  4371                           ;psect for function _SSD_Update
  4372  0570                     _SSD_Update:
  4373  0570                     l2889:	
  4374                           ;incstack = 0
  4375                           ; Regs used in _SSD_Update: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4376                           
  4377                           
  4378                           ;SSD.c: 31:     GPIO_SetPinState((((GPIO_TypeDef*)&PORTA)), (5), (0));
  4379  0570  3005               	movlw	5
  4380  0571  1283               	bcf	3,5	;RP0=0, select bank0
  4381  0572  1303               	bcf	3,6	;RP1=0, select bank0
  4382  0573  00CD               	movwf	GPIO_SetPinState@GPIOx
  4383  0574  3000               	movlw	0
  4384  0575  00CE               	movwf	GPIO_SetPinState@GPIOx+1
  4385  0576  3005               	movlw	5
  4386  0577  00FF               	movwf	btemp+1
  4387  0578  087F               	movf	btemp+1,w
  4388  0579  00CF               	movwf	GPIO_SetPinState@PINx
  4389  057A  01D0               	clrf	GPIO_SetPinState@State
  4390  057B  120A  158A  2144  120A  118A  	fcall	_GPIO_SetPinState
  4391                           
  4392                           ;SSD.c: 32:     GPIO_SetPinState((((GPIO_TypeDef*)&PORTA)), (4), (0));
  4393  0580  3005               	movlw	5
  4394  0581  1283               	bcf	3,5	;RP0=0, select bank0
  4395  0582  1303               	bcf	3,6	;RP1=0, select bank0
  4396  0583  00CD               	movwf	GPIO_SetPinState@GPIOx
  4397  0584  3000               	movlw	0
  4398  0585  00CE               	movwf	GPIO_SetPinState@GPIOx+1
  4399  0586  3004               	movlw	4
  4400  0587  00FF               	movwf	btemp+1
  4401  0588  087F               	movf	btemp+1,w
  4402  0589  00CF               	movwf	GPIO_SetPinState@PINx
  4403  058A  01D0               	clrf	GPIO_SetPinState@State
  4404  058B  120A  158A  2144  120A  118A  	fcall	_GPIO_SetPinState
  4405                           
  4406                           ;SSD.c: 33:     GPIO_SetPortState((((GPIO_TypeDef*)&PORTD)), 0xFF, SSD_SymbolPattern_G[S
      +                          SD_G[SSD_Num_G].Symbol]);
  4407  0590  3008               	movlw	8
  4408  0591  1283               	bcf	3,5	;RP0=0, select bank0
  4409  0592  1303               	bcf	3,6	;RP1=0, select bank0
  4410  0593  00CD               	movwf	GPIO_SetPortState@GPIOx
  4411  0594  3000               	movlw	0
  4412  0595  00CE               	movwf	GPIO_SetPortState@GPIOx+1
  4413  0596  30FF               	movlw	255
  4414  0597  00FF               	movwf	btemp+1
  4415  0598  087F               	movf	btemp+1,w
  4416  0599  00CF               	movwf	GPIO_SetPortState@PINx
  4417  059A  084C               	movf	_SSD_Num_G,w	;volatile
  4418  059B  00D3               	movwf	??_SSD_Update
  4419  059C  0753               	addwf	??_SSD_Update,w
  4420  059D  3E3C               	addlw	(low ((_SSD_G| 0+1)))& (0+255)
  4421  059E  0084               	movwf	4
  4422  059F  1383               	bcf	3,7	;select IRP bank0
  4423  05A0  0800               	movf	0,w
  4424  05A1  3E90               	addlw	(low (_SSD_SymbolPattern_G| (0+256)))& (0+255)
  4425  05A2  0084               	movwf	4
  4426  05A3  1783               	bsf	3,7	;select IRP bank3
  4427  05A4  0800               	movf	0,w
  4428  05A5  00FF               	movwf	btemp+1
  4429  05A6  087F               	movf	btemp+1,w
  4430  05A7  00D0               	movwf	GPIO_SetPortState@State
  4431  05A8  160A  118A  27A3  120A  118A  	fcall	_GPIO_SetPortState
  4432  05AD                     l2891:
  4433                           
  4434                           ;SSD.c: 34:     if(SSD_Num_G == 0)
  4435  05AD  1283               	bcf	3,5	;RP0=0, select bank0
  4436  05AE  1303               	bcf	3,6	;RP1=0, select bank0
  4437  05AF  084C               	movf	_SSD_Num_G,w	;volatile
  4438  05B0  1D03               	btfss	3,2
  4439  05B1  2DB3               	goto	u1931
  4440  05B2  2DB4               	goto	u1930
  4441  05B3                     u1931:
  4442  05B3  2DC5               	goto	l2895
  4443  05B4                     u1930:
  4444  05B4                     l2893:
  4445                           
  4446                           ;SSD.c: 35:     {;SSD.c: 36:         GPIO_SetPinState((((GPIO_TypeDef*)&PORTA)), (5), SS
      +                          D_G[0].State);
  4447  05B4  3005               	movlw	5
  4448  05B5  00CD               	movwf	GPIO_SetPinState@GPIOx
  4449  05B6  3000               	movlw	0
  4450  05B7  00CE               	movwf	GPIO_SetPinState@GPIOx+1
  4451  05B8  3005               	movlw	5
  4452  05B9  00FF               	movwf	btemp+1
  4453  05BA  087F               	movf	btemp+1,w
  4454  05BB  00CF               	movwf	GPIO_SetPinState@PINx
  4455  05BC  083B               	movf	_SSD_G,w	;volatile
  4456  05BD  00FF               	movwf	btemp+1
  4457  05BE  087F               	movf	btemp+1,w
  4458  05BF  00D0               	movwf	GPIO_SetPinState@State
  4459  05C0  120A  158A  2144  120A  118A  	fcall	_GPIO_SetPinState
  4460  05C5                     l2895:
  4461                           
  4462                           ;SSD.c: 38:     if(SSD_Num_G == 1)
  4463  05C5  1283               	bcf	3,5	;RP0=0, select bank0
  4464  05C6  1303               	bcf	3,6	;RP1=0, select bank0
  4465  05C7  034C               	decf	_SSD_Num_G,w	;volatile
  4466  05C8  1D03               	btfss	3,2
  4467  05C9  2DCB               	goto	u1941
  4468  05CA  2DCC               	goto	u1940
  4469  05CB                     u1941:
  4470  05CB  2DDD               	goto	l2899
  4471  05CC                     u1940:
  4472  05CC                     l2897:
  4473                           
  4474                           ;SSD.c: 39:     {;SSD.c: 40:         GPIO_SetPinState((((GPIO_TypeDef*)&PORTA)), (4), SS
      +                          D_G[1].State);
  4475  05CC  3005               	movlw	5
  4476  05CD  00CD               	movwf	GPIO_SetPinState@GPIOx
  4477  05CE  3000               	movlw	0
  4478  05CF  00CE               	movwf	GPIO_SetPinState@GPIOx+1
  4479  05D0  3004               	movlw	4
  4480  05D1  00FF               	movwf	btemp+1
  4481  05D2  087F               	movf	btemp+1,w
  4482  05D3  00CF               	movwf	GPIO_SetPinState@PINx
  4483  05D4  083D               	movf	_SSD_G+2,w	;volatile
  4484  05D5  00FF               	movwf	btemp+1
  4485  05D6  087F               	movf	btemp+1,w
  4486  05D7  00D0               	movwf	GPIO_SetPinState@State
  4487  05D8  120A  158A  2144  120A  118A  	fcall	_GPIO_SetPinState
  4488  05DD                     l2899:
  4489                           
  4490                           ;SSD.c: 42:     SSD_Num_G++;
  4491  05DD  3001               	movlw	1
  4492  05DE  00FF               	movwf	btemp+1
  4493  05DF  087F               	movf	btemp+1,w
  4494  05E0  1283               	bcf	3,5	;RP0=0, select bank0
  4495  05E1  1303               	bcf	3,6	;RP1=0, select bank0
  4496  05E2  07CC               	addwf	_SSD_Num_G,f	;volatile
  4497  05E3                     l2901:
  4498                           
  4499                           ;SSD.c: 43:     if(SSD_Num_G == 2)
  4500  05E3  3002               	movlw	2
  4501  05E4  064C               	xorwf	_SSD_Num_G,w	;volatile
  4502  05E5  1D03               	btfss	3,2
  4503  05E6  2DE8               	goto	u1951
  4504  05E7  2DE9               	goto	u1950
  4505  05E8                     u1951:
  4506  05E8  2DEA               	goto	l73
  4507  05E9                     u1950:
  4508  05E9                     l2903:
  4509                           
  4510                           ;SSD.c: 44:     {;SSD.c: 45:         SSD_Num_G = 0;
  4511  05E9  01CC               	clrf	_SSD_Num_G	;volatile
  4512  05EA                     l73:
  4513  05EA  0008               	return
  4514  05EB                     __end_of_SSD_Update:
  4515                           
  4516                           	psect	text21
  4517  0297                     __ptext21:	
  4518 ;; *************** function _DISP_Update *****************
  4519 ;; Defined at:
  4520 ;;		line 20 in file "DISP.c"
  4521 ;; Parameters:    Size  Location     Type
  4522 ;;		None
  4523 ;; Auto vars:     Size  Location     Type
  4524 ;;		None
  4525 ;; Return value:  Size  Location     Type
  4526 ;;                  1    wreg      void 
  4527 ;; Registers used:
  4528 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4529 ;; Tracked objects:
  4530 ;;		On entry : 0/0
  4531 ;;		On exit  : 0/0
  4532 ;;		Unchanged: 0/0
  4533 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4534 ;;      Params:         0       0       0       0       0
  4535 ;;      Locals:         0       0       0       0       0
  4536 ;;      Temps:          0       0       0       0       0
  4537 ;;      Totals:         0       0       0       0       0
  4538 ;;Total ram usage:        0 bytes
  4539 ;; Hardware stack levels used:    1
  4540 ;; Hardware stack levels required when called:    4
  4541 ;; This function calls:
  4542 ;;		_LED_SetState
  4543 ;;		_SSD_SetState
  4544 ;; This function is called by:
  4545 ;;		_main
  4546 ;;		_SCH_Dispatch_Tasks
  4547 ;; This function uses a non-reentrant model
  4548 ;;
  4549                           
  4550                           
  4551                           ;psect for function _DISP_Update
  4552  0297                     _DISP_Update:
  4553  0297                     l3027:	
  4554                           ;incstack = 0
  4555                           ; Regs used in _DISP_Update: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4556                           
  4557                           
  4558                           ;DISP.c: 22:     if(DISP_G[0].State)
  4559  0297  1283               	bcf	3,5	;RP0=0, select bank0
  4560  0298  1303               	bcf	3,6	;RP1=0, select bank0
  4561  0299  0833               	movf	_DISP_G,w	;volatile
  4562  029A  1903               	btfsc	3,2
  4563  029B  2A9D               	goto	u2131
  4564  029C  2A9E               	goto	u2130
  4565  029D                     u2131:
  4566  029D  2AD2               	goto	l3045
  4567  029E                     u2130:
  4568  029E                     l3029:
  4569                           
  4570                           ;DISP.c: 23:     {;DISP.c: 24:         if(DISP_G[0].Blink)
  4571  029E  0834               	movf	_DISP_G+1,w	;volatile
  4572  029F  1903               	btfsc	3,2
  4573  02A0  2AA2               	goto	u2141
  4574  02A1  2AA3               	goto	u2140
  4575  02A2                     u2141:
  4576  02A2  2AAA               	goto	l3033
  4577  02A3                     u2140:
  4578  02A3                     l3031:
  4579                           
  4580                           ;DISP.c: 25:         {;DISP.c: 26:             DISP_G[0].Counter++;
  4581  02A3  3001               	movlw	1
  4582  02A4  07B5               	addwf	_DISP_G+2,f	;volatile
  4583  02A5  1803               	skipnc
  4584  02A6  0AB6               	incf	_DISP_G+3,f	;volatile
  4585  02A7  3000               	movlw	0
  4586  02A8  07B6               	addwf	_DISP_G+3,f	;volatile
  4587                           
  4588                           ;DISP.c: 27:         }else
  4589  02A9  2AAC               	goto	l3035
  4590  02AA                     l3033:
  4591                           
  4592                           ;DISP.c: 28:         {;DISP.c: 29:             DISP_G[0].Counter = 0;
  4593  02AA  01B5               	clrf	_DISP_G+2	;volatile
  4594  02AB  01B6               	clrf	_DISP_G+3	;volatile
  4595  02AC                     l3035:
  4596                           
  4597                           ;DISP.c: 31:         if(DISP_G[0].Counter <= 1000/100)
  4598  02AC  3000               	movlw	0
  4599  02AD  0236               	subwf	_DISP_G+3,w	;volatile
  4600  02AE  300B               	movlw	11
  4601  02AF  1903               	skipnz
  4602  02B0  0235               	subwf	_DISP_G+2,w	;volatile
  4603  02B1  1803               	skipnc
  4604  02B2  2AB4               	goto	u2151
  4605  02B3  2AB5               	goto	u2150
  4606  02B4                     u2151:
  4607  02B4  2ABE               	goto	l3039
  4608  02B5                     u2150:
  4609  02B5                     l3037:
  4610                           
  4611                           ;DISP.c: 32:         {;DISP.c: 33:             LED_SetState((6), (1));
  4612  02B5  01CD               	clrf	LED_SetState@State
  4613  02B6  0ACD               	incf	LED_SetState@State,f
  4614  02B7  3006               	movlw	6
  4615  02B8  120A  158A  207C  120A  118A  	fcall	_LED_SetState
  4616                           
  4617                           ;DISP.c: 34:         }else if(DISP_G[0].Counter <= 2000/100)
  4618  02BD  2AD9               	goto	l3047
  4619  02BE                     l3039:
  4620  02BE  3000               	movlw	0
  4621  02BF  0236               	subwf	_DISP_G+3,w	;volatile
  4622  02C0  3015               	movlw	21
  4623  02C1  1903               	skipnz
  4624  02C2  0235               	subwf	_DISP_G+2,w	;volatile
  4625  02C3  1803               	skipnc
  4626  02C4  2AC6               	goto	u2161
  4627  02C5  2AC7               	goto	u2160
  4628  02C6                     u2161:
  4629  02C6  2ACF               	goto	l3043
  4630  02C7                     u2160:
  4631  02C7                     l3041:
  4632                           
  4633                           ;DISP.c: 35:         {;DISP.c: 36:             LED_SetState((6), (0));
  4634  02C7  01CD               	clrf	LED_SetState@State
  4635  02C8  3006               	movlw	6
  4636  02C9  120A  158A  207C  120A  118A  	fcall	_LED_SetState
  4637                           
  4638                           ;DISP.c: 37:         }else
  4639  02CE  2AD9               	goto	l3047
  4640  02CF                     l3043:
  4641                           
  4642                           ;DISP.c: 38:         {;DISP.c: 39:             DISP_G[0].Counter = 0;
  4643  02CF  01B5               	clrf	_DISP_G+2	;volatile
  4644  02D0  01B6               	clrf	_DISP_G+3	;volatile
  4645  02D1  2AD9               	goto	l3047
  4646  02D2                     l3045:
  4647                           
  4648                           ;DISP.c: 42:     {;DISP.c: 43:         LED_SetState((6), (0));
  4649  02D2  01CD               	clrf	LED_SetState@State
  4650  02D3  3006               	movlw	6
  4651  02D4  120A  158A  207C  120A  118A  	fcall	_LED_SetState
  4652  02D9                     l3047:
  4653                           
  4654                           ;DISP.c: 45:     if(DISP_G[1].State)
  4655  02D9  1283               	bcf	3,5	;RP0=0, select bank0
  4656  02DA  1303               	bcf	3,6	;RP1=0, select bank0
  4657  02DB  0837               	movf	_DISP_G+4,w	;volatile
  4658  02DC  1903               	btfsc	3,2
  4659  02DD  2ADF               	goto	u2171
  4660  02DE  2AE0               	goto	u2170
  4661  02DF                     u2171:
  4662  02DF  2B27               	goto	l3065
  4663  02E0                     u2170:
  4664  02E0                     l3049:
  4665                           
  4666                           ;DISP.c: 46:     {;DISP.c: 47:         if(DISP_G[1].Blink)
  4667  02E0  0838               	movf	_DISP_G+5,w	;volatile
  4668  02E1  1903               	btfsc	3,2
  4669  02E2  2AE4               	goto	u2181
  4670  02E3  2AE5               	goto	u2180
  4671  02E4                     u2181:
  4672  02E4  2AEC               	goto	l3053
  4673  02E5                     u2180:
  4674  02E5                     l3051:
  4675                           
  4676                           ;DISP.c: 48:         {;DISP.c: 49:             DISP_G[1].Counter++;
  4677  02E5  3001               	movlw	1
  4678  02E6  07B9               	addwf	_DISP_G+6,f	;volatile
  4679  02E7  1803               	skipnc
  4680  02E8  0ABA               	incf	_DISP_G+7,f	;volatile
  4681  02E9  3000               	movlw	0
  4682  02EA  07BA               	addwf	_DISP_G+7,f	;volatile
  4683                           
  4684                           ;DISP.c: 50:         }else
  4685  02EB  2AEE               	goto	l3055
  4686  02EC                     l3053:
  4687                           
  4688                           ;DISP.c: 51:         {;DISP.c: 52:             DISP_G[1].Counter = 0;
  4689  02EC  01B9               	clrf	_DISP_G+6	;volatile
  4690  02ED  01BA               	clrf	_DISP_G+7	;volatile
  4691  02EE                     l3055:
  4692                           
  4693                           ;DISP.c: 54:         if(DISP_G[1].Counter <= 1000/100)
  4694  02EE  3000               	movlw	0
  4695  02EF  023A               	subwf	_DISP_G+7,w	;volatile
  4696  02F0  300B               	movlw	11
  4697  02F1  1903               	skipnz
  4698  02F2  0239               	subwf	_DISP_G+6,w	;volatile
  4699  02F3  1803               	skipnc
  4700  02F4  2AF6               	goto	u2191
  4701  02F5  2AF7               	goto	u2190
  4702  02F6                     u2191:
  4703  02F6  2B0A               	goto	l3059
  4704  02F7                     u2190:
  4705  02F7                     l3057:
  4706                           
  4707                           ;DISP.c: 55:         {;DISP.c: 56:             SSD_SetState((5), (1));
  4708  02F7  01CD               	clrf	SSD_SetState@State
  4709  02F8  0ACD               	incf	SSD_SetState@State,f
  4710  02F9  3005               	movlw	5
  4711  02FA  120A  158A  2209  120A  118A  	fcall	_SSD_SetState
  4712                           
  4713                           ;DISP.c: 57:             SSD_SetState((4), (1));
  4714  02FF  1283               	bcf	3,5	;RP0=0, select bank0
  4715  0300  1303               	bcf	3,6	;RP1=0, select bank0
  4716  0301  01CD               	clrf	SSD_SetState@State
  4717  0302  0ACD               	incf	SSD_SetState@State,f
  4718  0303  3004               	movlw	4
  4719  0304  120A  158A  2209  120A  118A  	fcall	_SSD_SetState
  4720                           
  4721                           ;DISP.c: 58:         }else if(DISP_G[1].Counter <= 2000/100)
  4722  0309  2B37               	goto	l316
  4723  030A                     l3059:
  4724  030A  3000               	movlw	0
  4725  030B  023A               	subwf	_DISP_G+7,w	;volatile
  4726  030C  3015               	movlw	21
  4727  030D  1903               	skipnz
  4728  030E  0239               	subwf	_DISP_G+6,w	;volatile
  4729  030F  1803               	skipnc
  4730  0310  2B12               	goto	u2201
  4731  0311  2B13               	goto	u2200
  4732  0312                     u2201:
  4733  0312  2B24               	goto	l3063
  4734  0313                     u2200:
  4735  0313                     l3061:
  4736                           
  4737                           ;DISP.c: 59:         {;DISP.c: 60:             SSD_SetState((5), (0));
  4738  0313  01CD               	clrf	SSD_SetState@State
  4739  0314  3005               	movlw	5
  4740  0315  120A  158A  2209  120A  118A  	fcall	_SSD_SetState
  4741                           
  4742                           ;DISP.c: 61:             SSD_SetState((4), (0));
  4743  031A  1283               	bcf	3,5	;RP0=0, select bank0
  4744  031B  1303               	bcf	3,6	;RP1=0, select bank0
  4745  031C  01CD               	clrf	SSD_SetState@State
  4746  031D  3004               	movlw	4
  4747  031E  120A  158A  2209  120A  118A  	fcall	_SSD_SetState
  4748                           
  4749                           ;DISP.c: 62:         }else
  4750  0323  2B37               	goto	l316
  4751  0324                     l3063:
  4752                           
  4753                           ;DISP.c: 63:         {;DISP.c: 64:             DISP_G[1].Counter = 0;
  4754  0324  01B9               	clrf	_DISP_G+6	;volatile
  4755  0325  01BA               	clrf	_DISP_G+7	;volatile
  4756  0326  2B37               	goto	l316
  4757  0327                     l3065:
  4758                           
  4759                           ;DISP.c: 67:     {;DISP.c: 68:         SSD_SetState((5), (0));
  4760  0327  01CD               	clrf	SSD_SetState@State
  4761  0328  3005               	movlw	5
  4762  0329  120A  158A  2209  120A  118A  	fcall	_SSD_SetState
  4763                           
  4764                           ;DISP.c: 69:         SSD_SetState((4), (0));
  4765  032E  1283               	bcf	3,5	;RP0=0, select bank0
  4766  032F  1303               	bcf	3,6	;RP1=0, select bank0
  4767  0330  01CD               	clrf	SSD_SetState@State
  4768  0331  3004               	movlw	4
  4769  0332  120A  158A  2209  120A  118A  	fcall	_SSD_SetState
  4770  0337                     l316:
  4771  0337  0008               	return
  4772  0338                     __end_of_DISP_Update:
  4773                           
  4774                           	psect	text22
  4775  09B7                     __ptext22:	
  4776 ;; *************** function _HCU_Update *****************
  4777 ;; Defined at:
  4778 ;;		line 13 in file "HCU.c"
  4779 ;; Parameters:    Size  Location     Type
  4780 ;;		None
  4781 ;; Auto vars:     Size  Location     Type
  4782 ;;		None
  4783 ;; Return value:  Size  Location     Type
  4784 ;;                  1    wreg      void 
  4785 ;; Registers used:
  4786 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4787 ;; Tracked objects:
  4788 ;;		On entry : 0/0
  4789 ;;		On exit  : 0/0
  4790 ;;		Unchanged: 0/0
  4791 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4792 ;;      Params:         0       0       0       0       0
  4793 ;;      Locals:         0       0       0       0       0
  4794 ;;      Temps:          0       0       0       0       0
  4795 ;;      Totals:         0       0       0       0       0
  4796 ;;Total ram usage:        0 bytes
  4797 ;; Hardware stack levels used:    1
  4798 ;; Hardware stack levels required when called:    4
  4799 ;; This function calls:
  4800 ;;		_GPIO_SetPinState
  4801 ;; This function is called by:
  4802 ;;		_main
  4803 ;;		_SCH_Dispatch_Tasks
  4804 ;; This function uses a non-reentrant model
  4805 ;;
  4806                           
  4807                           
  4808                           ;psect for function _HCU_Update
  4809  09B7                     _HCU_Update:
  4810  09B7                     l3143:	
  4811                           ;incstack = 0
  4812                           ; Regs used in _HCU_Update: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4813                           
  4814                           
  4815                           ;HCU.c: 15:     GPIO_SetPinState((((GPIO_TypeDef*)&PORTC)), (5), HCU_G[0].State);
  4816  09B7  3007               	movlw	7
  4817  09B8  1283               	bcf	3,5	;RP0=0, select bank0
  4818  09B9  1303               	bcf	3,6	;RP1=0, select bank0
  4819  09BA  00CD               	movwf	GPIO_SetPinState@GPIOx
  4820  09BB  3000               	movlw	0
  4821  09BC  00CE               	movwf	GPIO_SetPinState@GPIOx+1
  4822  09BD  3005               	movlw	5
  4823  09BE  00FF               	movwf	btemp+1
  4824  09BF  087F               	movf	btemp+1,w
  4825  09C0  00CF               	movwf	GPIO_SetPinState@PINx
  4826  09C1  0845               	movf	_HCU_G,w	;volatile
  4827  09C2  00FF               	movwf	btemp+1
  4828  09C3  087F               	movf	btemp+1,w
  4829  09C4  00D0               	movwf	GPIO_SetPinState@State
  4830  09C5  120A  158A  2144  120A  158A  	fcall	_GPIO_SetPinState
  4831                           
  4832                           ;HCU.c: 16:     GPIO_SetPinState((((GPIO_TypeDef*)&PORTC)), (2), HCU_G[1].State);
  4833  09CA  3007               	movlw	7
  4834  09CB  1283               	bcf	3,5	;RP0=0, select bank0
  4835  09CC  1303               	bcf	3,6	;RP1=0, select bank0
  4836  09CD  00CD               	movwf	GPIO_SetPinState@GPIOx
  4837  09CE  3000               	movlw	0
  4838  09CF  00CE               	movwf	GPIO_SetPinState@GPIOx+1
  4839  09D0  3002               	movlw	2
  4840  09D1  00FF               	movwf	btemp+1
  4841  09D2  087F               	movf	btemp+1,w
  4842  09D3  00CF               	movwf	GPIO_SetPinState@PINx
  4843  09D4  0846               	movf	_HCU_G+1,w	;volatile
  4844  09D5  00FF               	movwf	btemp+1
  4845  09D6  087F               	movf	btemp+1,w
  4846  09D7  00D0               	movwf	GPIO_SetPinState@State
  4847  09D8  120A  158A  2144  120A  158A  	fcall	_GPIO_SetPinState
  4848  09DD                     l552:
  4849  09DD  0008               	return
  4850  09DE                     __end_of_HCU_Update:
  4851                           
  4852                           	psect	text23
  4853  085E                     __ptext23:	
  4854 ;; *************** function _TEMP_Update *****************
  4855 ;; Defined at:
  4856 ;;		line 15 in file "TEMP.c"
  4857 ;; Parameters:    Size  Location     Type
  4858 ;;		None
  4859 ;; Auto vars:     Size  Location     Type
  4860 ;;		None
  4861 ;; Return value:  Size  Location     Type
  4862 ;;                  1    wreg      void 
  4863 ;; Registers used:
  4864 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4865 ;; Tracked objects:
  4866 ;;		On entry : 0/0
  4867 ;;		On exit  : 0/0
  4868 ;;		Unchanged: 0/0
  4869 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4870 ;;      Params:         0       0       0       0       0
  4871 ;;      Locals:         0       0       0       0       0
  4872 ;;      Temps:          0       0       0       0       0
  4873 ;;      Totals:         0       0       0       0       0
  4874 ;;Total ram usage:        0 bytes
  4875 ;; Hardware stack levels used:    1
  4876 ;; Hardware stack levels required when called:    4
  4877 ;; This function calls:
  4878 ;;		_ADC_GetState
  4879 ;; This function is called by:
  4880 ;;		_main
  4881 ;;		_SCH_Dispatch_Tasks
  4882 ;; This function uses a non-reentrant model
  4883 ;;
  4884                           
  4885                           
  4886                           ;psect for function _TEMP_Update
  4887  085E                     _TEMP_Update:
  4888  085E                     l2965:	
  4889                           ;incstack = 0
  4890                           ; Regs used in _TEMP_Update: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4891                           
  4892                           
  4893                           ;TEMP.c: 17:     TEMP_G[0].Array[TEMP_G[0].Index++] = ADC_GetState();
  4894  085E  120A  118A  27FC  120A  158A  	fcall	_ADC_GetState
  4895  0863  00FF               	movwf	btemp+1
  4896  0864  1683               	bsf	3,5	;RP0=1, select bank1
  4897  0865  1303               	bcf	3,6	;RP1=0, select bank1
  4898  0866  085A               	movf	(_TEMP_G^(0+128)+10),w	;volatile
  4899  0867  3ED0               	addlw	(low (_TEMP_G| 0))& (0+255)
  4900  0868  0084               	movwf	4
  4901  0869  087F               	movf	btemp+1,w
  4902  086A  1383               	bcf	3,7	;select IRP bank1
  4903  086B  0080               	movwf	0
  4904  086C                     l2967:
  4905  086C  3001               	movlw	1
  4906  086D  00FF               	movwf	btemp+1
  4907  086E  087F               	movf	btemp+1,w
  4908  086F  07DA               	addwf	(_TEMP_G^(0+128)+10),f	;volatile
  4909  0870                     l2969:
  4910                           
  4911                           ;TEMP.c: 18:     if(TEMP_G[0].Index == 10)
  4912  0870  300A               	movlw	10
  4913  0871  065A               	xorwf	(_TEMP_G^(0+128)+10),w	;volatile
  4914  0872  1D03               	btfss	3,2
  4915  0873  2875               	goto	u2071
  4916  0874  2876               	goto	u2070
  4917  0875                     u2071:
  4918  0875  287B               	goto	l181
  4919  0876                     u2070:
  4920  0876                     l2971:
  4921                           
  4922                           ;TEMP.c: 19:     {;TEMP.c: 20:         TEMP_G[0].Index = 0;
  4923  0876  01DA               	clrf	(_TEMP_G^(0+128)+10)	;volatile
  4924  0877                     l2973:
  4925                           
  4926                           ;TEMP.c: 21:         TEMP_G[0].AvgFlag = 1;
  4927  0877  3001               	movlw	1
  4928  0878  00FF               	movwf	btemp+1
  4929  0879  087F               	movf	btemp+1,w
  4930  087A  00DB               	movwf	(_TEMP_G^(0+128)+11)	;volatile
  4931  087B                     l181:
  4932  087B  0008               	return
  4933  087C                     __end_of_TEMP_Update:
  4934                           
  4935                           	psect	text24
  4936  0F34                     __ptext24:	
  4937 ;; *************** function _ADC_Update *****************
  4938 ;; Defined at:
  4939 ;;		line 15 in file "ADC.c"
  4940 ;; Parameters:    Size  Location     Type
  4941 ;;		None
  4942 ;; Auto vars:     Size  Location     Type
  4943 ;;		None
  4944 ;; Return value:  Size  Location     Type
  4945 ;;                  1    wreg      void 
  4946 ;; Registers used:
  4947 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4948 ;; Tracked objects:
  4949 ;;		On entry : 0/0
  4950 ;;		On exit  : 0/0
  4951 ;;		Unchanged: 0/0
  4952 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4953 ;;      Params:         0       0       0       0       0
  4954 ;;      Locals:         0       0       0       0       0
  4955 ;;      Temps:          0       2       0       0       0
  4956 ;;      Totals:         0       2       0       0       0
  4957 ;;Total ram usage:        2 bytes
  4958 ;; Hardware stack levels used:    1
  4959 ;; Hardware stack levels required when called:    4
  4960 ;; This function calls:
  4961 ;;		___lldiv
  4962 ;;		___lmul
  4963 ;; This function is called by:
  4964 ;;		_main
  4965 ;;		_SCH_Dispatch_Tasks
  4966 ;; This function uses a non-reentrant model
  4967 ;;
  4968                           
  4969                           
  4970                           ;psect for function _ADC_Update
  4971  0F34                     _ADC_Update:
  4972  0F34                     l2959:	
  4973                           ;incstack = 0
  4974                           ; Regs used in _ADC_Update: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4975                           
  4976                           
  4977                           ;ADC.c: 17:     ADCON0 = ADCON0 | (ADC_G[0].Channel<<3);
  4978  0F34  1283               	bcf	3,5	;RP0=0, select bank0
  4979  0F35  1303               	bcf	3,6	;RP1=0, select bank0
  4980  0F36  0820               	movf	_ADC_G,w	;volatile
  4981  0F37  00E8               	movwf	??_ADC_Update
  4982  0F38  3002               	movlw	2
  4983  0F39                     u2055:
  4984  0F39  1003               	clrc
  4985  0F3A  0DE8               	rlf	??_ADC_Update,f
  4986  0F3B  3EFF               	addlw	-1
  4987  0F3C  1D03               	skipz
  4988  0F3D  2F39               	goto	u2055
  4989  0F3E  1003               	clrc
  4990  0F3F  0D68               	rlf	??_ADC_Update,w
  4991  0F40  041F               	iorwf	31,w	;volatile
  4992  0F41  009F               	movwf	31	;volatile
  4993  0F42                     l2961:
  4994                           
  4995                           ;ADC.c: 18:     ADCON0 = ADCON0 | 0x04;
  4996  0F42  081F               	movf	31,w	;volatile
  4997  0F43  3804               	iorlw	4
  4998  0F44  009F               	movwf	31	;volatile
  4999  0F45                     l162:	
  5000                           ;ADC.c: 19:     while(ADCON0 & 0x04);
  5001                           
  5002  0F45  191F               	btfsc	31,2	;volatile
  5003  0F46  2F48               	goto	u2061
  5004  0F47  2F49               	goto	u2060
  5005  0F48                     u2061:
  5006  0F48  2F45               	goto	l162
  5007  0F49                     u2060:
  5008  0F49                     l2963:
  5009                           
  5010                           ;ADC.c: 20:     ADC_G[0].Result = ((ADRESH<<8) + ADRESL) * ADC_G[0].VoltMulti / ADC_G[0]
      +                          .VoltDivide;
  5011  0F49  3005               	movlw	5
  5012  0F4A  3E20               	addlw	(low (_ADC_G| 0))& (0+255)
  5013  0F4B  0084               	movwf	4
  5014  0F4C  1383               	bcf	3,7	;select IRP bank0
  5015  0F4D  0800               	movf	0,w
  5016  0F4E  00DA               	movwf	___lldiv@divisor
  5017  0F4F  0A84               	incf	4,f
  5018  0F50  0800               	movf	0,w
  5019  0F51  00DB               	movwf	___lldiv@divisor+1
  5020  0F52  0A84               	incf	4,f
  5021  0F53  0800               	movf	0,w
  5022  0F54  00DC               	movwf	___lldiv@divisor+2
  5023  0F55  0A84               	incf	4,f
  5024  0F56  0800               	movf	0,w
  5025  0F57  00DD               	movwf	___lldiv@divisor+3
  5026  0F58  081E               	movf	30,w	;volatile
  5027  0F59  00E8               	movwf	??_ADC_Update
  5028  0F5A  01E9               	clrf	??_ADC_Update+1
  5029  0F5B  0868               	movf	??_ADC_Update,w
  5030  0F5C  00E9               	movwf	??_ADC_Update+1
  5031  0F5D  01E8               	clrf	??_ADC_Update
  5032  0F5E  1683               	bsf	3,5	;RP0=1, select bank1
  5033  0F5F  1303               	bcf	3,6	;RP1=0, select bank1
  5034  0F60  081E               	movf	30,w	;volatile
  5035  0F61  1283               	bcf	3,5	;RP0=0, select bank0
  5036  0F62  1303               	bcf	3,6	;RP1=0, select bank0
  5037  0F63  0768               	addwf	??_ADC_Update,w
  5038  0F64  00CD               	movwf	___lmul@multiplier
  5039  0F65  3000               	movlw	0
  5040  0F66  1803               	skipnc
  5041  0F67  3001               	movlw	1
  5042  0F68  0769               	addwf	??_ADC_Update+1,w
  5043  0F69  00CE               	movwf	___lmul@multiplier+1
  5044  0F6A  01CF               	clrf	___lmul@multiplier+2
  5045  0F6B  1BCE               	btfsc	___lmul@multiplier+1,7
  5046  0F6C  03CF               	decf	___lmul@multiplier+2,f
  5047  0F6D  084F               	movf	___lmul@multiplier+2,w
  5048  0F6E  00D0               	movwf	___lmul@multiplier+3
  5049  0F6F  3001               	movlw	1
  5050  0F70  3E20               	addlw	(low (_ADC_G| 0))& (0+255)
  5051  0F71  0084               	movwf	4
  5052  0F72  0800               	movf	0,w
  5053  0F73  00D1               	movwf	___lmul@multiplicand
  5054  0F74  0A84               	incf	4,f
  5055  0F75  0800               	movf	0,w
  5056  0F76  00D2               	movwf	___lmul@multiplicand+1
  5057  0F77  0A84               	incf	4,f
  5058  0F78  0800               	movf	0,w
  5059  0F79  00D3               	movwf	___lmul@multiplicand+2
  5060  0F7A  0A84               	incf	4,f
  5061  0F7B  0800               	movf	0,w
  5062  0F7C  00D4               	movwf	___lmul@multiplicand+3
  5063  0F7D  120A  158A  252A  120A  158A  	fcall	___lmul
  5064  0F82  1283               	bcf	3,5	;RP0=0, select bank0
  5065  0F83  1303               	bcf	3,6	;RP1=0, select bank0
  5066  0F84  0850               	movf	?___lmul+3,w
  5067  0F85  00E1               	movwf	___lldiv@dividend+3
  5068  0F86  084F               	movf	?___lmul+2,w
  5069  0F87  00E0               	movwf	___lldiv@dividend+2
  5070  0F88  084E               	movf	?___lmul+1,w
  5071  0F89  00DF               	movwf	___lldiv@dividend+1
  5072  0F8A  084D               	movf	?___lmul,w
  5073  0F8B  00DE               	movwf	___lldiv@dividend
  5074  0F8C  120A  158A  2798  120A  158A  	fcall	___lldiv
  5075  0F91  1283               	bcf	3,5	;RP0=0, select bank0
  5076  0F92  1303               	bcf	3,6	;RP1=0, select bank0
  5077  0F93  085A               	movf	?___lldiv,w
  5078  0F94  00FF               	movwf	btemp+1
  5079  0F95  087F               	movf	btemp+1,w
  5080  0F96  00A9               	movwf	_ADC_G+9	;volatile
  5081  0F97                     l165:
  5082  0F97  0008               	return
  5083  0F98                     __end_of_ADC_Update:
  5084                           
  5085                           	psect	text25
  5086  03D6                     __ptext25:	
  5087 ;; *************** function _SW_Update *****************
  5088 ;; Defined at:
  5089 ;;		line 21 in file "SW.c"
  5090 ;; Parameters:    Size  Location     Type
  5091 ;;		None
  5092 ;; Auto vars:     Size  Location     Type
  5093 ;;		None
  5094 ;; Return value:  Size  Location     Type
  5095 ;;                  1    wreg      void 
  5096 ;; Registers used:
  5097 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5098 ;; Tracked objects:
  5099 ;;		On entry : 0/0
  5100 ;;		On exit  : 0/0
  5101 ;;		Unchanged: 0/0
  5102 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5103 ;;      Params:         0       0       0       0       0
  5104 ;;      Locals:         0       0       0       0       0
  5105 ;;      Temps:          0       0       0       0       0
  5106 ;;      Totals:         0       0       0       0       0
  5107 ;;Total ram usage:        0 bytes
  5108 ;; Hardware stack levels used:    1
  5109 ;; Hardware stack levels required when called:    4
  5110 ;; This function calls:
  5111 ;;		_GPIO_GetPinState
  5112 ;; This function is called by:
  5113 ;;		_main
  5114 ;;		_SCH_Dispatch_Tasks
  5115 ;; This function uses a non-reentrant model
  5116 ;;
  5117                           
  5118                           
  5119                           ;psect for function _SW_Update
  5120  03D6                     _SW_Update:
  5121  03D6                     l2905:	
  5122                           ;incstack = 0
  5123                           ; Regs used in _SW_Update: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5124                           
  5125                           
  5126                           ;SW.c: 23:     if(SW_G[0].Lock)
  5127  03D6  1283               	bcf	3,5	;RP0=0, select bank0
  5128  03D7  1303               	bcf	3,6	;RP1=0, select bank0
  5129  03D8  082C               	movf	_SW_G+2,w	;volatile
  5130  03D9  1903               	btfsc	3,2
  5131  03DA  2BDC               	goto	u1961
  5132  03DB  2BDD               	goto	u1960
  5133  03DC                     u1961:
  5134  03DC  2BE0               	goto	l2909
  5135  03DD                     u1960:
  5136  03DD                     l2907:
  5137                           
  5138                           ;SW.c: 24:     {;SW.c: 25:         SW_G[0].Lock--;
  5139  03DD  3001               	movlw	1
  5140  03DE  02AC               	subwf	_SW_G+2,f	;volatile
  5141                           
  5142                           ;SW.c: 26:     }else if(!GPIO_GetPinState((((GPIO_TypeDef*)&PORTB)), (0)))
  5143  03DF  2C08               	goto	l2923
  5144  03E0                     l2909:
  5145  03E0  3006               	movlw	6
  5146  03E1  00CD               	movwf	GPIO_GetPinState@GPIOx
  5147  03E2  3000               	movlw	0
  5148  03E3  00CE               	movwf	GPIO_GetPinState@GPIOx+1
  5149  03E4  01CF               	clrf	GPIO_GetPinState@PINx
  5150  03E5  120A  158A  2042  120A  118A  	fcall	_GPIO_GetPinState
  5151  03EA  3A00               	xorlw	0
  5152  03EB  1D03               	skipz
  5153  03EC  2BEE               	goto	u1971
  5154  03ED  2BEF               	goto	u1970
  5155  03EE                     u1971:
  5156  03EE  2C05               	goto	l2921
  5157  03EF                     u1970:
  5158  03EF                     l2911:
  5159                           
  5160                           ;SW.c: 27:     {;SW.c: 28:         SW_G[0].Counter++;
  5161  03EF  3001               	movlw	1
  5162  03F0  00FF               	movwf	btemp+1
  5163  03F1  087F               	movf	btemp+1,w
  5164  03F2  1283               	bcf	3,5	;RP0=0, select bank0
  5165  03F3  1303               	bcf	3,6	;RP1=0, select bank0
  5166  03F4  07AB               	addwf	_SW_G+1,f	;volatile
  5167  03F5                     l2913:
  5168                           
  5169                           ;SW.c: 29:         if(SW_G[0].Counter >= 2)
  5170  03F5  3002               	movlw	2
  5171  03F6  022B               	subwf	_SW_G+1,w	;volatile
  5172  03F7  1C03               	skipc
  5173  03F8  2BFA               	goto	u1981
  5174  03F9  2BFB               	goto	u1980
  5175  03FA                     u1981:
  5176  03FA  2C08               	goto	l2923
  5177  03FB                     u1980:
  5178  03FB                     l2915:
  5179                           
  5180                           ;SW.c: 30:         {;SW.c: 31:             SW_G[0].State = 1;
  5181  03FB  3001               	movlw	1
  5182  03FC  00FF               	movwf	btemp+1
  5183  03FD  087F               	movf	btemp+1,w
  5184  03FE  00AA               	movwf	_SW_G	;volatile
  5185  03FF                     l2917:
  5186                           
  5187                           ;SW.c: 32:             SW_G[0].Counter = 0;
  5188  03FF  01AB               	clrf	_SW_G+1	;volatile
  5189  0400                     l2919:
  5190                           
  5191                           ;SW.c: 33:             SW_G[0].Lock = 1000/10;
  5192  0400  3064               	movlw	100
  5193  0401  00FF               	movwf	btemp+1
  5194  0402  087F               	movf	btemp+1,w
  5195  0403  00AC               	movwf	_SW_G+2	;volatile
  5196  0404  2C08               	goto	l2923
  5197  0405                     l2921:
  5198                           
  5199                           ;SW.c: 36:     {;SW.c: 37:         SW_G[0].Counter = 0;
  5200  0405  1283               	bcf	3,5	;RP0=0, select bank0
  5201  0406  1303               	bcf	3,6	;RP1=0, select bank0
  5202  0407  01AB               	clrf	_SW_G+1	;volatile
  5203  0408                     l2923:
  5204                           
  5205                           ;SW.c: 40:     if(SW_G[1].Lock)
  5206  0408  082F               	movf	_SW_G+5,w	;volatile
  5207  0409  1903               	btfsc	3,2
  5208  040A  2C0C               	goto	u1991
  5209  040B  2C0D               	goto	u1990
  5210  040C                     u1991:
  5211  040C  2C10               	goto	l2927
  5212  040D                     u1990:
  5213  040D                     l2925:
  5214                           
  5215                           ;SW.c: 41:     {;SW.c: 42:         SW_G[1].Lock--;
  5216  040D  3001               	movlw	1
  5217  040E  02AF               	subwf	_SW_G+5,f	;volatile
  5218                           
  5219                           ;SW.c: 43:     }else if(!GPIO_GetPinState((((GPIO_TypeDef*)&PORTB)), (1)))
  5220  040F  2C39               	goto	l2941
  5221  0410                     l2927:
  5222  0410  3006               	movlw	6
  5223  0411  00CD               	movwf	GPIO_GetPinState@GPIOx
  5224  0412  3000               	movlw	0
  5225  0413  00CE               	movwf	GPIO_GetPinState@GPIOx+1
  5226  0414  01CF               	clrf	GPIO_GetPinState@PINx
  5227  0415  0ACF               	incf	GPIO_GetPinState@PINx,f
  5228  0416  120A  158A  2042  120A  118A  	fcall	_GPIO_GetPinState
  5229  041B  3A00               	xorlw	0
  5230  041C  1D03               	skipz
  5231  041D  2C1F               	goto	u2001
  5232  041E  2C20               	goto	u2000
  5233  041F                     u2001:
  5234  041F  2C36               	goto	l2939
  5235  0420                     u2000:
  5236  0420                     l2929:
  5237                           
  5238                           ;SW.c: 44:     {;SW.c: 45:         SW_G[1].Counter++;
  5239  0420  3001               	movlw	1
  5240  0421  00FF               	movwf	btemp+1
  5241  0422  087F               	movf	btemp+1,w
  5242  0423  1283               	bcf	3,5	;RP0=0, select bank0
  5243  0424  1303               	bcf	3,6	;RP1=0, select bank0
  5244  0425  07AE               	addwf	_SW_G+4,f	;volatile
  5245  0426                     l2931:
  5246                           
  5247                           ;SW.c: 46:         if(SW_G[1].Counter >= 2)
  5248  0426  3002               	movlw	2
  5249  0427  022E               	subwf	_SW_G+4,w	;volatile
  5250  0428  1C03               	skipc
  5251  0429  2C2B               	goto	u2011
  5252  042A  2C2C               	goto	u2010
  5253  042B                     u2011:
  5254  042B  2C39               	goto	l2941
  5255  042C                     u2010:
  5256  042C                     l2933:
  5257                           
  5258                           ;SW.c: 47:         {;SW.c: 48:             SW_G[1].State = 1;
  5259  042C  3001               	movlw	1
  5260  042D  00FF               	movwf	btemp+1
  5261  042E  087F               	movf	btemp+1,w
  5262  042F  00AD               	movwf	_SW_G+3	;volatile
  5263  0430                     l2935:
  5264                           
  5265                           ;SW.c: 49:             SW_G[1].Counter = 0;
  5266  0430  01AE               	clrf	_SW_G+4	;volatile
  5267  0431                     l2937:
  5268                           
  5269                           ;SW.c: 50:             SW_G[1].Lock = 1000/10;
  5270  0431  3064               	movlw	100
  5271  0432  00FF               	movwf	btemp+1
  5272  0433  087F               	movf	btemp+1,w
  5273  0434  00AF               	movwf	_SW_G+5	;volatile
  5274  0435  2C39               	goto	l2941
  5275  0436                     l2939:
  5276                           
  5277                           ;SW.c: 53:     {;SW.c: 54:         SW_G[1].Counter = 0;
  5278  0436  1283               	bcf	3,5	;RP0=0, select bank0
  5279  0437  1303               	bcf	3,6	;RP1=0, select bank0
  5280  0438  01AE               	clrf	_SW_G+4	;volatile
  5281  0439                     l2941:
  5282                           
  5283                           ;SW.c: 57:     if(SW_G[2].Lock)
  5284  0439  0832               	movf	_SW_G+8,w	;volatile
  5285  043A  1903               	btfsc	3,2
  5286  043B  2C3D               	goto	u2021
  5287  043C  2C3E               	goto	u2020
  5288  043D                     u2021:
  5289  043D  2C41               	goto	l2945
  5290  043E                     u2020:
  5291  043E                     l2943:
  5292                           
  5293                           ;SW.c: 58:     {;SW.c: 59:         SW_G[2].Lock--;
  5294  043E  3001               	movlw	1
  5295  043F  02B2               	subwf	_SW_G+8,f	;volatile
  5296                           
  5297                           ;SW.c: 60:     }else if(!GPIO_GetPinState((((GPIO_TypeDef*)&PORTB)), (2)))
  5298  0440  2C6C               	goto	l138
  5299  0441                     l2945:
  5300  0441  3006               	movlw	6
  5301  0442  00CD               	movwf	GPIO_GetPinState@GPIOx
  5302  0443  3000               	movlw	0
  5303  0444  00CE               	movwf	GPIO_GetPinState@GPIOx+1
  5304  0445  3002               	movlw	2
  5305  0446  00FF               	movwf	btemp+1
  5306  0447  087F               	movf	btemp+1,w
  5307  0448  00CF               	movwf	GPIO_GetPinState@PINx
  5308  0449  120A  158A  2042  120A  118A  	fcall	_GPIO_GetPinState
  5309  044E  3A00               	xorlw	0
  5310  044F  1D03               	skipz
  5311  0450  2C52               	goto	u2031
  5312  0451  2C53               	goto	u2030
  5313  0452                     u2031:
  5314  0452  2C69               	goto	l2957
  5315  0453                     u2030:
  5316  0453                     l2947:
  5317                           
  5318                           ;SW.c: 61:     {;SW.c: 62:         SW_G[2].Counter++;
  5319  0453  3001               	movlw	1
  5320  0454  00FF               	movwf	btemp+1
  5321  0455  087F               	movf	btemp+1,w
  5322  0456  1283               	bcf	3,5	;RP0=0, select bank0
  5323  0457  1303               	bcf	3,6	;RP1=0, select bank0
  5324  0458  07B1               	addwf	_SW_G+7,f	;volatile
  5325  0459                     l2949:
  5326                           
  5327                           ;SW.c: 63:         if(SW_G[2].Counter >= 2)
  5328  0459  3002               	movlw	2
  5329  045A  0231               	subwf	_SW_G+7,w	;volatile
  5330  045B  1C03               	skipc
  5331  045C  2C5E               	goto	u2041
  5332  045D  2C5F               	goto	u2040
  5333  045E                     u2041:
  5334  045E  2C6C               	goto	l138
  5335  045F                     u2040:
  5336  045F                     l2951:
  5337                           
  5338                           ;SW.c: 64:         {;SW.c: 65:             SW_G[2].State = 1;
  5339  045F  3001               	movlw	1
  5340  0460  00FF               	movwf	btemp+1
  5341  0461  087F               	movf	btemp+1,w
  5342  0462  00B0               	movwf	_SW_G+6	;volatile
  5343  0463                     l2953:
  5344                           
  5345                           ;SW.c: 66:             SW_G[2].Counter = 0;
  5346  0463  01B1               	clrf	_SW_G+7	;volatile
  5347  0464                     l2955:
  5348                           
  5349                           ;SW.c: 67:             SW_G[2].Lock = 1000/10;
  5350  0464  3064               	movlw	100
  5351  0465  00FF               	movwf	btemp+1
  5352  0466  087F               	movf	btemp+1,w
  5353  0467  00B2               	movwf	_SW_G+8	;volatile
  5354  0468  2C6C               	goto	l138
  5355  0469                     l2957:
  5356                           
  5357                           ;SW.c: 70:     {;SW.c: 71:         SW_G[2].Counter = 0;
  5358  0469  1283               	bcf	3,5	;RP0=0, select bank0
  5359  046A  1303               	bcf	3,6	;RP1=0, select bank0
  5360  046B  01B1               	clrf	_SW_G+7	;volatile
  5361  046C                     l138:
  5362  046C  0008               	return
  5363  046D                     __end_of_SW_Update:
  5364                           
  5365                           	psect	text26
  5366  0990                     __ptext26:	
  5367 ;; *************** function _LED_Update *****************
  5368 ;; Defined at:
  5369 ;;		line 13 in file "LED.c"
  5370 ;; Parameters:    Size  Location     Type
  5371 ;;		None
  5372 ;; Auto vars:     Size  Location     Type
  5373 ;;		None
  5374 ;; Return value:  Size  Location     Type
  5375 ;;                  1    wreg      void 
  5376 ;; Registers used:
  5377 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5378 ;; Tracked objects:
  5379 ;;		On entry : 0/0
  5380 ;;		On exit  : 0/0
  5381 ;;		Unchanged: 0/0
  5382 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5383 ;;      Params:         0       0       0       0       0
  5384 ;;      Locals:         0       0       0       0       0
  5385 ;;      Temps:          0       0       0       0       0
  5386 ;;      Totals:         0       0       0       0       0
  5387 ;;Total ram usage:        0 bytes
  5388 ;; Hardware stack levels used:    1
  5389 ;; Hardware stack levels required when called:    4
  5390 ;; This function calls:
  5391 ;;		_GPIO_SetPinState
  5392 ;; This function is called by:
  5393 ;;		_main
  5394 ;;		_SCH_Dispatch_Tasks
  5395 ;; This function uses a non-reentrant model
  5396 ;;
  5397                           
  5398                           
  5399                           ;psect for function _LED_Update
  5400  0990                     _LED_Update:
  5401  0990                     l3145:	
  5402                           ;incstack = 0
  5403                           ; Regs used in _LED_Update: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5404                           
  5405                           
  5406                           ;LED.c: 15:     GPIO_SetPinState((((GPIO_TypeDef*)&PORTB)), (7), LED_G[0].State);
  5407  0990  3006               	movlw	6
  5408  0991  1283               	bcf	3,5	;RP0=0, select bank0
  5409  0992  1303               	bcf	3,6	;RP1=0, select bank0
  5410  0993  00CD               	movwf	GPIO_SetPinState@GPIOx
  5411  0994  3000               	movlw	0
  5412  0995  00CE               	movwf	GPIO_SetPinState@GPIOx+1
  5413  0996  3007               	movlw	7
  5414  0997  00FF               	movwf	btemp+1
  5415  0998  087F               	movf	btemp+1,w
  5416  0999  00CF               	movwf	GPIO_SetPinState@PINx
  5417  099A  0843               	movf	_LED_G,w	;volatile
  5418  099B  00FF               	movwf	btemp+1
  5419  099C  087F               	movf	btemp+1,w
  5420  099D  00D0               	movwf	GPIO_SetPinState@State
  5421  099E  120A  158A  2144  120A  158A  	fcall	_GPIO_SetPinState
  5422                           
  5423                           ;LED.c: 16:     GPIO_SetPinState((((GPIO_TypeDef*)&PORTB)), (6), LED_G[1].State);
  5424  09A3  3006               	movlw	6
  5425  09A4  1283               	bcf	3,5	;RP0=0, select bank0
  5426  09A5  1303               	bcf	3,6	;RP1=0, select bank0
  5427  09A6  00CD               	movwf	GPIO_SetPinState@GPIOx
  5428  09A7  3000               	movlw	0
  5429  09A8  00CE               	movwf	GPIO_SetPinState@GPIOx+1
  5430  09A9  3006               	movlw	6
  5431  09AA  00FF               	movwf	btemp+1
  5432  09AB  087F               	movf	btemp+1,w
  5433  09AC  00CF               	movwf	GPIO_SetPinState@PINx
  5434  09AD  0844               	movf	_LED_G+1,w	;volatile
  5435  09AE  00FF               	movwf	btemp+1
  5436  09AF  087F               	movf	btemp+1,w
  5437  09B0  00D0               	movwf	GPIO_SetPinState@State
  5438  09B1  120A  158A  2144  120A  158A  	fcall	_GPIO_SetPinState
  5439  09B6                     l573:
  5440  09B6  0008               	return
  5441  09B7                     __end_of_LED_Update:
  5442                           
  5443                           	psect	text27
  5444  0CE3                     __ptext27:	
  5445 ;; *************** function _WH_Task *****************
  5446 ;; Defined at:
  5447 ;;		line 43 in file "WH.c"
  5448 ;; Parameters:    Size  Location     Type
  5449 ;;		None
  5450 ;; Auto vars:     Size  Location     Type
  5451 ;;		None
  5452 ;; Return value:  Size  Location     Type
  5453 ;;                  1    wreg      void 
  5454 ;; Registers used:
  5455 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5456 ;; Tracked objects:
  5457 ;;		On entry : 0/0
  5458 ;;		On exit  : 0/0
  5459 ;;		Unchanged: 0/0
  5460 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5461 ;;      Params:         0       0       0       0       0
  5462 ;;      Locals:         0       0       0       0       0
  5463 ;;      Temps:          0       2       0       0       0
  5464 ;;      Totals:         0       2       0       0       0
  5465 ;;Total ram usage:        2 bytes
  5466 ;; Hardware stack levels used:    1
  5467 ;; Hardware stack levels required when called:    7
  5468 ;; This function calls:
  5469 ;;		_EEPROM_Write
  5470 ;;		_WH_NormalMode
  5471 ;;		_WH_OffMode
  5472 ;;		_WH_OperationMode
  5473 ;;		_WH_ResetMode
  5474 ;;		_WH_TempSetMode
  5475 ;; This function is called by:
  5476 ;;		_main
  5477 ;;		_SCH_Dispatch_Tasks
  5478 ;; This function uses a non-reentrant model
  5479 ;;
  5480                           
  5481                           
  5482                           ;psect for function _WH_Task
  5483  0CE3                     _WH_Task:
  5484  0CE3                     l3073:	
  5485                           ;incstack = 0
  5486 ;; hardware stack exceeded
  5487                           ; Regs used in _WH_Task: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5488                           
  5489                           
  5490                           ;WH.c: 45:     switch(WH_State_G)
  5491  0CE3  2D0E               	goto	l3089
  5492  0CE4                     l3075:
  5493                           
  5494                           ;WH.c: 48:             WH_OffMode();
  5495  0CE4  120A  158A  216A  120A  158A  	fcall	_WH_OffMode
  5496                           
  5497                           ;WH.c: 49:             break;
  5498  0CE9  2D29               	goto	l400
  5499  0CEA                     l3077:
  5500                           
  5501                           ;WH.c: 51:             WH_OperationMode();
  5502  0CEA  120A  118A  24F2  120A  158A  	fcall	_WH_OperationMode
  5503                           
  5504                           ;WH.c: 52:             break;
  5505  0CEF  2D29               	goto	l400
  5506  0CF0                     l3079:
  5507                           
  5508                           ;WH.c: 54:             WH_NormalMode();
  5509  0CF0  120A  118A  246D  120A  158A  	fcall	_WH_NormalMode
  5510                           
  5511                           ;WH.c: 55:             break;
  5512  0CF5  2D29               	goto	l400
  5513  0CF6                     l3081:
  5514                           
  5515                           ;WH.c: 57:             WH_TempSetMode();
  5516  0CF6  120A  118A  2073  120A  158A  	fcall	_WH_TempSetMode
  5517                           
  5518                           ;WH.c: 58:             break;
  5519  0CFB  2D29               	goto	l400
  5520  0CFC                     l3083:
  5521                           
  5522                           ;WH.c: 60:             WH_ResetMode();
  5523  0CFC  120A  158A  236C  120A  158A  	fcall	_WH_ResetMode
  5524  0D01                     l3085:
  5525                           
  5526                           ;WH.c: 61:             EEPROM_Write(8, WH_TargetTemp_G);
  5527  0D01  1283               	bcf	3,5	;RP0=0, select bank0
  5528  0D02  1303               	bcf	3,6	;RP1=0, select bank0
  5529  0D03  086E               	movf	_WH_TargetTemp_G,w	;volatile
  5530  0D04  00FF               	movwf	btemp+1
  5531  0D05  087F               	movf	btemp+1,w
  5532  0D06  00CE               	movwf	EEPROM_Write@Data
  5533  0D07  3008               	movlw	8
  5534  0D08  120A  158A  2296  120A  158A  	fcall	_EEPROM_Write
  5535                           
  5536                           ;WH.c: 62:             break;
  5537  0D0D  2D29               	goto	l400
  5538  0D0E                     l3089:
  5539  0D0E  1283               	bcf	3,5	;RP0=0, select bank0
  5540  0D0F  1303               	bcf	3,6	;RP1=0, select bank0
  5541  0D10  084B               	movf	_WH_State_G,w	;volatile
  5542  0D11  00E1               	movwf	??_WH_Task
  5543  0D12  01E2               	clrf	??_WH_Task+1
  5544                           
  5545                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5546                           ; Switch size 1, requested type "simple"
  5547                           ; Number of cases is 1, Range of values is 0 to 0
  5548                           ; switch strategies available:
  5549                           ; Name         Instructions Cycles
  5550                           ; simple_byte            4     3 (average)
  5551                           ; direct_byte           11     8 (fixed)
  5552                           ; jumptable            260     6 (fixed)
  5553                           ;	Chosen strategy is simple_byte
  5554  0D13  0862               	movf	??_WH_Task+1,w
  5555  0D14  3A00               	xorlw	0	; case 0
  5556  0D15  1903               	skipnz
  5557  0D16  2D18               	goto	l3641
  5558  0D17  2D29               	goto	l400
  5559  0D18                     l3641:
  5560                           
  5561                           ; Switch size 1, requested type "simple"
  5562                           ; Number of cases is 5, Range of values is 0 to 4
  5563                           ; switch strategies available:
  5564                           ; Name         Instructions Cycles
  5565                           ; simple_byte           16     9 (average)
  5566                           ; direct_byte           23     8 (fixed)
  5567                           ; jumptable            260     6 (fixed)
  5568                           ;	Chosen strategy is simple_byte
  5569  0D18  0861               	movf	??_WH_Task,w
  5570  0D19  3A00               	xorlw	0	; case 0
  5571  0D1A  1903               	skipnz
  5572  0D1B  2CE4               	goto	l3075
  5573  0D1C  3A01               	xorlw	1	; case 1
  5574  0D1D  1903               	skipnz
  5575  0D1E  2CEA               	goto	l3077
  5576  0D1F  3A03               	xorlw	3	; case 2
  5577  0D20  1903               	skipnz
  5578  0D21  2CF0               	goto	l3079
  5579  0D22  3A01               	xorlw	1	; case 3
  5580  0D23  1903               	skipnz
  5581  0D24  2CF6               	goto	l3081
  5582  0D25  3A07               	xorlw	7	; case 4
  5583  0D26  1903               	skipnz
  5584  0D27  2CFC               	goto	l3083
  5585  0D28  2D29               	goto	l400
  5586  0D29                     l400:
  5587  0D29  0008               	return
  5588  0D2A                     __end_of_WH_Task:
  5589                           
  5590                           	psect	text28
  5591  0073                     __ptext28:	
  5592 ;; *************** function _WH_TempSetMode *****************
  5593 ;; Defined at:
  5594 ;;		line 116 in file "WH.c"
  5595 ;; Parameters:    Size  Location     Type
  5596 ;;		None
  5597 ;; Auto vars:     Size  Location     Type
  5598 ;;		None
  5599 ;; Return value:  Size  Location     Type
  5600 ;;                  1    wreg      void 
  5601 ;; Registers used:
  5602 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5603 ;; Tracked objects:
  5604 ;;		On entry : 0/0
  5605 ;;		On exit  : 0/0
  5606 ;;		Unchanged: 0/0
  5607 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5608 ;;      Params:         0       0       0       0       0
  5609 ;;      Locals:         0       0       0       0       0
  5610 ;;      Temps:          0       2       0       0       0
  5611 ;;      Totals:         0       2       0       0       0
  5612 ;;Total ram usage:        2 bytes
  5613 ;; Hardware stack levels used:    1
  5614 ;; Hardware stack levels required when called:    6
  5615 ;; This function calls:
  5616 ;;		_DISP_SetState
  5617 ;;		_EEPROM_Write
  5618 ;;		_SSD_SetSymbol
  5619 ;;		_SW_GetState
  5620 ;;		___awdiv
  5621 ;;		___awmod
  5622 ;; This function is called by:
  5623 ;;		_WH_Task
  5624 ;; This function uses a non-reentrant model
  5625 ;;
  5626                           
  5627                           
  5628                           ;psect for function _WH_TempSetMode
  5629  0073                     _WH_TempSetMode:
  5630  0073                     l2795:	
  5631                           ;incstack = 0
  5632 ;; hardware stack exceeded
  5633                           ; Regs used in _WH_TempSetMode: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5634                           
  5635                           
  5636                           ;WH.c: 118:     WH_PreState_G = WH_State_G;
  5637  0073  1283               	bcf	3,5	;RP0=0, select bank0
  5638  0074  1303               	bcf	3,6	;RP1=0, select bank0
  5639  0075  084B               	movf	_WH_State_G,w	;volatile
  5640  0076  00FF               	movwf	btemp+1
  5641  0077  087F               	movf	btemp+1,w
  5642  0078  00CA               	movwf	_WH_PreState_G	;volatile
  5643  0079                     l2797:
  5644                           
  5645                           ;WH.c: 119:     DISP_SetState(3, 1);
  5646  0079  01CD               	clrf	DISP_SetState@State
  5647  007A  0ACD               	incf	DISP_SetState@State,f
  5648  007B  3003               	movlw	3
  5649  007C  120A  158A  2267  120A  118A  	fcall	_DISP_SetState
  5650  0081                     l2799:
  5651                           
  5652                           ;WH.c: 120:     SSD_SetSymbol((5), WH_TargetTemp_G%10);
  5653  0081  300A               	movlw	10
  5654  0082  1283               	bcf	3,5	;RP0=0, select bank0
  5655  0083  1303               	bcf	3,6	;RP1=0, select bank0
  5656  0084  00D5               	movwf	___awmod@divisor
  5657  0085  3000               	movlw	0
  5658  0086  00D6               	movwf	___awmod@divisor+1
  5659  0087  086E               	movf	_WH_TargetTemp_G,w	;volatile
  5660  0088  00DF               	movwf	??_WH_TempSetMode
  5661  0089  01E0               	clrf	??_WH_TempSetMode+1
  5662  008A  085F               	movf	??_WH_TempSetMode,w
  5663  008B  00D7               	movwf	___awmod@dividend
  5664  008C  0860               	movf	??_WH_TempSetMode+1,w
  5665  008D  00D8               	movwf	___awmod@dividend+1
  5666  008E  120A  158A  2617  120A  118A  	fcall	___awmod
  5667  0093  1283               	bcf	3,5	;RP0=0, select bank0
  5668  0094  1303               	bcf	3,6	;RP1=0, select bank0
  5669  0095  0855               	movf	?___awmod,w
  5670  0096  00FF               	movwf	btemp+1
  5671  0097  087F               	movf	btemp+1,w
  5672  0098  00DB               	movwf	SSD_SetSymbol@Symbol
  5673  0099  3005               	movlw	5
  5674  009A  120A  158A  2238  120A  118A  	fcall	_SSD_SetSymbol
  5675  009F                     l2801:
  5676                           
  5677                           ;WH.c: 121:     SSD_SetSymbol((4), (WH_TargetTemp_G/10)%10);
  5678  009F  300A               	movlw	10
  5679  00A0  1283               	bcf	3,5	;RP0=0, select bank0
  5680  00A1  1303               	bcf	3,6	;RP1=0, select bank0
  5681  00A2  00D5               	movwf	___awmod@divisor
  5682  00A3  3000               	movlw	0
  5683  00A4  00D6               	movwf	___awmod@divisor+1
  5684  00A5  300A               	movlw	10
  5685  00A6  00CD               	movwf	___awdiv@divisor
  5686  00A7  3000               	movlw	0
  5687  00A8  00CE               	movwf	___awdiv@divisor+1
  5688  00A9  086E               	movf	_WH_TargetTemp_G,w	;volatile
  5689  00AA  00DF               	movwf	??_WH_TempSetMode
  5690  00AB  01E0               	clrf	??_WH_TempSetMode+1
  5691  00AC  085F               	movf	??_WH_TempSetMode,w
  5692  00AD  00CF               	movwf	___awdiv@dividend
  5693  00AE  0860               	movf	??_WH_TempSetMode+1,w
  5694  00AF  00D0               	movwf	___awdiv@dividend+1
  5695  00B0  120A  118A  2746  120A  118A  	fcall	___awdiv
  5696  00B5  1283               	bcf	3,5	;RP0=0, select bank0
  5697  00B6  1303               	bcf	3,6	;RP1=0, select bank0
  5698  00B7  084E               	movf	?___awdiv+1,w
  5699  00B8  00D8               	movwf	___awmod@dividend+1
  5700  00B9  084D               	movf	?___awdiv,w
  5701  00BA  00D7               	movwf	___awmod@dividend
  5702  00BB  120A  158A  2617  120A  118A  	fcall	___awmod
  5703  00C0  1283               	bcf	3,5	;RP0=0, select bank0
  5704  00C1  1303               	bcf	3,6	;RP1=0, select bank0
  5705  00C2  0855               	movf	?___awmod,w
  5706  00C3  00FF               	movwf	btemp+1
  5707  00C4  087F               	movf	btemp+1,w
  5708  00C5  00DB               	movwf	SSD_SetSymbol@Symbol
  5709  00C6  3004               	movlw	4
  5710  00C7  120A  158A  2238  120A  118A  	fcall	_SSD_SetSymbol
  5711  00CC                     l2803:
  5712                           
  5713                           ;WH.c: 122:     if(SW_GetState((2)) && WH_TargetTemp_G <= 70)
  5714  00CC  3002               	movlw	2
  5715  00CD  120A  158A  21DE  120A  118A  	fcall	_SW_GetState
  5716  00D2  3A00               	xorlw	0
  5717  00D3  1903               	skipnz
  5718  00D4  28D6               	goto	u1771
  5719  00D5  28D7               	goto	u1770
  5720  00D6                     u1771:
  5721  00D6  28E5               	goto	l2811
  5722  00D7                     u1770:
  5723  00D7                     l2805:
  5724  00D7  3047               	movlw	71
  5725  00D8  1283               	bcf	3,5	;RP0=0, select bank0
  5726  00D9  1303               	bcf	3,6	;RP1=0, select bank0
  5727  00DA  026E               	subwf	_WH_TargetTemp_G,w	;volatile
  5728  00DB  1803               	skipnc
  5729  00DC  28DE               	goto	u1781
  5730  00DD  28DF               	goto	u1780
  5731  00DE                     u1781:
  5732  00DE  28E5               	goto	l2811
  5733  00DF                     u1780:
  5734  00DF                     l2807:
  5735                           
  5736                           ;WH.c: 123:     {;WH.c: 124:         WH_TargetTemp_G += 5;
  5737  00DF  3005               	movlw	5
  5738  00E0  00FF               	movwf	btemp+1
  5739  00E1  087F               	movf	btemp+1,w
  5740  00E2  07EE               	addwf	_WH_TargetTemp_G,f	;volatile
  5741  00E3                     l2809:
  5742                           
  5743                           ;WH.c: 125:         WH_Counter_G = 0;
  5744  00E3  01FC               	clrf	_WH_Counter_G	;volatile
  5745  00E4  01FD               	clrf	_WH_Counter_G+1	;volatile
  5746  00E5                     l2811:
  5747                           
  5748                           ;WH.c: 127:     if(SW_GetState((1)) && WH_TargetTemp_G >= 40)
  5749  00E5  3001               	movlw	1
  5750  00E6  120A  158A  21DE  120A  118A  	fcall	_SW_GetState
  5751  00EB  3A00               	xorlw	0
  5752  00EC  1903               	skipnz
  5753  00ED  28EF               	goto	u1791
  5754  00EE  28F0               	goto	u1790
  5755  00EF                     u1791:
  5756  00EF  28FC               	goto	l2819
  5757  00F0                     u1790:
  5758  00F0                     l2813:
  5759  00F0  3028               	movlw	40
  5760  00F1  1283               	bcf	3,5	;RP0=0, select bank0
  5761  00F2  1303               	bcf	3,6	;RP1=0, select bank0
  5762  00F3  026E               	subwf	_WH_TargetTemp_G,w	;volatile
  5763  00F4  1C03               	skipc
  5764  00F5  28F7               	goto	u1801
  5765  00F6  28F8               	goto	u1800
  5766  00F7                     u1801:
  5767  00F7  28FC               	goto	l2819
  5768  00F8                     u1800:
  5769  00F8                     l2815:
  5770                           
  5771                           ;WH.c: 128:     {;WH.c: 129:         WH_TargetTemp_G -= 5;
  5772  00F8  3005               	movlw	5
  5773  00F9  02EE               	subwf	_WH_TargetTemp_G,f	;volatile
  5774  00FA                     l2817:
  5775                           
  5776                           ;WH.c: 130:         WH_Counter_G = 0;
  5777  00FA  01FC               	clrf	_WH_Counter_G	;volatile
  5778  00FB  01FD               	clrf	_WH_Counter_G+1	;volatile
  5779  00FC                     l2819:
  5780                           
  5781                           ;WH.c: 132:     if(SW_GetState((0)))
  5782  00FC  3000               	movlw	0
  5783  00FD  120A  158A  21DE  120A  118A  	fcall	_SW_GetState
  5784  0102  3A00               	xorlw	0
  5785  0103  1903               	skipnz
  5786  0104  2906               	goto	u1811
  5787  0105  2907               	goto	u1810
  5788  0106                     u1811:
  5789  0106  290E               	goto	l2823
  5790  0107                     u1810:
  5791  0107                     l2821:
  5792                           
  5793                           ;WH.c: 133:     {;WH.c: 134:         WH_State_G = ResetMode;
  5794  0107  3004               	movlw	4
  5795  0108  00FF               	movwf	btemp+1
  5796  0109  087F               	movf	btemp+1,w
  5797  010A  1283               	bcf	3,5	;RP0=0, select bank0
  5798  010B  1303               	bcf	3,6	;RP1=0, select bank0
  5799  010C  00CB               	movwf	_WH_State_G	;volatile
  5800                           
  5801                           ;WH.c: 135:     }else
  5802  010D  2914               	goto	l2825
  5803  010E                     l2823:
  5804                           
  5805                           ;WH.c: 136:     {;WH.c: 137:         WH_State_G = OperationMode;
  5806  010E  3001               	movlw	1
  5807  010F  00FF               	movwf	btemp+1
  5808  0110  087F               	movf	btemp+1,w
  5809  0111  1283               	bcf	3,5	;RP0=0, select bank0
  5810  0112  1303               	bcf	3,6	;RP1=0, select bank0
  5811  0113  00CB               	movwf	_WH_State_G	;volatile
  5812  0114                     l2825:
  5813                           
  5814                           ;WH.c: 139:     if(WH_Counter_G++ >= 5000/(100*2))
  5815  0114  087D               	movf	_WH_Counter_G+1,w	;volatile
  5816  0115  00E0               	movwf	??_WH_TempSetMode+1
  5817  0116  087C               	movf	_WH_Counter_G,w	;volatile
  5818  0117  00DF               	movwf	??_WH_TempSetMode
  5819  0118  0AFC               	incf	_WH_Counter_G,f	;volatile
  5820  0119  1903               	skipnz
  5821  011A  0AFD               	incf	_WH_Counter_G+1,f	;volatile
  5822  011B  3000               	movlw	0
  5823  011C  0260               	subwf	??_WH_TempSetMode+1,w
  5824  011D  3019               	movlw	25
  5825  011E  1903               	skipnz
  5826  011F  025F               	subwf	??_WH_TempSetMode,w
  5827  0120  1C03               	skipc
  5828  0121  2923               	goto	u1821
  5829  0122  2924               	goto	u1820
  5830  0123                     u1821:
  5831  0123  293F               	goto	l429
  5832  0124                     u1820:
  5833  0124                     l2827:
  5834                           
  5835                           ;WH.c: 140:     {;WH.c: 141:         WH_Counter_G = 0;
  5836  0124  01FC               	clrf	_WH_Counter_G	;volatile
  5837  0125  01FD               	clrf	_WH_Counter_G+1	;volatile
  5838  0126                     l2829:
  5839                           
  5840                           ;WH.c: 142:         DISP_SetState(3, 0);
  5841  0126  01CD               	clrf	DISP_SetState@State
  5842  0127  3003               	movlw	3
  5843  0128  120A  158A  2267  120A  118A  	fcall	_DISP_SetState
  5844  012D                     l2831:
  5845                           
  5846                           ;WH.c: 143:         EEPROM_Write(8, WH_TargetTemp_G);
  5847  012D  1283               	bcf	3,5	;RP0=0, select bank0
  5848  012E  1303               	bcf	3,6	;RP1=0, select bank0
  5849  012F  086E               	movf	_WH_TargetTemp_G,w	;volatile
  5850  0130  00FF               	movwf	btemp+1
  5851  0131  087F               	movf	btemp+1,w
  5852  0132  00CE               	movwf	EEPROM_Write@Data
  5853  0133  3008               	movlw	8
  5854  0134  120A  158A  2296  120A  118A  	fcall	_EEPROM_Write
  5855  0139                     l2833:
  5856                           
  5857                           ;WH.c: 144:         WH_State_G = NormalMode;
  5858  0139  3002               	movlw	2
  5859  013A  00FF               	movwf	btemp+1
  5860  013B  087F               	movf	btemp+1,w
  5861  013C  1283               	bcf	3,5	;RP0=0, select bank0
  5862  013D  1303               	bcf	3,6	;RP1=0, select bank0
  5863  013E  00CB               	movwf	_WH_State_G	;volatile
  5864  013F                     l429:
  5865  013F  0008               	return
  5866  0140                     __end_of_WH_TempSetMode:
  5867                           
  5868                           	psect	text29
  5869  0A96                     __ptext29:	
  5870 ;; *************** function _EEPROM_Write *****************
  5871 ;; Defined at:
  5872 ;;		line 12 in file "EEPROM.c"
  5873 ;; Parameters:    Size  Location     Type
  5874 ;;  Address         1    wreg     unsigned char 
  5875 ;;  Data            1    1[BANK0 ] unsigned char 
  5876 ;; Auto vars:     Size  Location     Type
  5877 ;;  Address         1    2[BANK0 ] unsigned char 
  5878 ;; Return value:  Size  Location     Type
  5879 ;;                  1    wreg      void 
  5880 ;; Registers used:
  5881 ;;		wreg, status,2, status,0, pclath, cstack
  5882 ;; Tracked objects:
  5883 ;;		On entry : 0/0
  5884 ;;		On exit  : 0/0
  5885 ;;		Unchanged: 0/0
  5886 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5887 ;;      Params:         0       1       0       0       0
  5888 ;;      Locals:         0       1       0       0       0
  5889 ;;      Temps:          0       0       0       0       0
  5890 ;;      Totals:         0       2       0       0       0
  5891 ;;Total ram usage:        2 bytes
  5892 ;; Hardware stack levels used:    1
  5893 ;; Hardware stack levels required when called:    5
  5894 ;; This function calls:
  5895 ;;		_I2C_Master_RepeatedStart
  5896 ;;		_I2C_Master_Start
  5897 ;;		_I2C_Master_Stop
  5898 ;;		_I2C_Master_Write
  5899 ;; This function is called by:
  5900 ;;		_WH_Init
  5901 ;;		_WH_Task
  5902 ;;		_WH_TempSetMode
  5903 ;; This function uses a non-reentrant model
  5904 ;;
  5905                           
  5906                           
  5907                           ;psect for function _EEPROM_Write
  5908  0A96                     _EEPROM_Write:
  5909                           
  5910                           ;incstack = 0
  5911                           ; Regs used in _EEPROM_Write: [wreg+status,2+status,0+pclath+cstack]
  5912                           ;EEPROM_Write@Address stored from wreg
  5913  0A96  1283               	bcf	3,5	;RP0=0, select bank0
  5914  0A97  1303               	bcf	3,6	;RP1=0, select bank0
  5915  0A98  00CF               	movwf	EEPROM_Write@Address
  5916  0A99                     l2521:
  5917                           
  5918                           ;EEPROM.c: 12: void EEPROM_Write(uint8_t Address, uint8_t Data);EEPROM.c: 13: {;EEPROM.c
      +                          : 14:     I2C_Master_Start();
  5919  0A99  160A  118A  26FD  120A  158A  	fcall	_I2C_Master_Start
  5920                           
  5921                           ;EEPROM.c: 16:     while(I2C_Master_Write(0xA0))
  5922  0A9E  2AA4               	goto	l209
  5923  0A9F                     l2523:
  5924                           
  5925                           ;EEPROM.c: 17:         I2C_Master_RepeatedStart();
  5926  0A9F  160A  118A  26F2  120A  158A  	fcall	_I2C_Master_RepeatedStart
  5927  0AA4                     l209:
  5928                           
  5929                           ;EEPROM.c: 16:     while(I2C_Master_Write(0xA0))
  5930  0AA4  30A0               	movlw	160
  5931  0AA5  160A  118A  27D0  120A  158A  	fcall	_I2C_Master_Write
  5932  0AAA  3A00               	xorlw	0
  5933  0AAB  1D03               	skipz
  5934  0AAC  2AAE               	goto	u1381
  5935  0AAD  2AAF               	goto	u1380
  5936  0AAE                     u1381:
  5937  0AAE  2A9F               	goto	l2523
  5938  0AAF                     u1380:
  5939  0AAF                     l2525:
  5940                           
  5941                           ;EEPROM.c: 18:     I2C_Master_Write(Address);
  5942  0AAF  1283               	bcf	3,5	;RP0=0, select bank0
  5943  0AB0  1303               	bcf	3,6	;RP1=0, select bank0
  5944  0AB1  084F               	movf	EEPROM_Write@Address,w
  5945  0AB2  160A  118A  27D0  120A  158A  	fcall	_I2C_Master_Write
  5946                           
  5947                           ;EEPROM.c: 19:     I2C_Master_Write(Data);
  5948  0AB7  1283               	bcf	3,5	;RP0=0, select bank0
  5949  0AB8  1303               	bcf	3,6	;RP1=0, select bank0
  5950  0AB9  084E               	movf	EEPROM_Write@Data,w
  5951  0ABA  160A  118A  27D0  120A  158A  	fcall	_I2C_Master_Write
  5952                           
  5953                           ;EEPROM.c: 20:     I2C_Master_Stop();
  5954  0ABF  160A  118A  2708  120A  158A  	fcall	_I2C_Master_Stop
  5955  0AC4                     l212:
  5956  0AC4  0008               	return
  5957  0AC5                     __end_of_EEPROM_Write:
  5958                           
  5959                           	psect	text30
  5960  17D0                     __ptext30:	
  5961 ;; *************** function _I2C_Master_Write *****************
  5962 ;; Defined at:
  5963 ;;		line 36 in file "I2C.c"
  5964 ;; Parameters:    Size  Location     Type
  5965 ;;  Data            1    wreg     unsigned char 
  5966 ;; Auto vars:     Size  Location     Type
  5967 ;;  Data            1    0[BANK0 ] unsigned char 
  5968 ;; Return value:  Size  Location     Type
  5969 ;;                  1    wreg      unsigned char 
  5970 ;; Registers used:
  5971 ;;		wreg, status,2, status,0, pclath, cstack
  5972 ;; Tracked objects:
  5973 ;;		On entry : 0/0
  5974 ;;		On exit  : 0/0
  5975 ;;		Unchanged: 0/0
  5976 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5977 ;;      Params:         0       0       0       0       0
  5978 ;;      Locals:         0       1       0       0       0
  5979 ;;      Temps:          0       0       0       0       0
  5980 ;;      Totals:         0       1       0       0       0
  5981 ;;Total ram usage:        1 bytes
  5982 ;; Hardware stack levels used:    1
  5983 ;; Hardware stack levels required when called:    4
  5984 ;; This function calls:
  5985 ;;		_I2C_Master_Wait
  5986 ;; This function is called by:
  5987 ;;		_EEPROM_Write
  5988 ;;		_EEPROM_WritePage
  5989 ;;		_EEPROM_Read
  5990 ;;		_EEPROM_ReadPage
  5991 ;; This function uses a non-reentrant model
  5992 ;;
  5993                           
  5994                           
  5995                           ;psect for function _I2C_Master_Write
  5996  17D0                     _I2C_Master_Write:
  5997                           
  5998                           ;incstack = 0
  5999                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  6000                           ;I2C_Master_Write@Data stored from wreg
  6001  17D0  1283               	bcf	3,5	;RP0=0, select bank0
  6002  17D1  1303               	bcf	3,6	;RP1=0, select bank0
  6003  17D2  00CD               	movwf	I2C_Master_Write@Data
  6004  17D3                     l2411:
  6005                           
  6006                           ;I2C.c: 36: uint8_t I2C_Master_Write(uint8_t Data);I2C.c: 37: {;I2C.c: 38:     I2C_Maste
      +                          r_Wait();
  6007  17D3  120A  158A  2000  160A  118A  	fcall	_I2C_Master_Wait
  6008  17D8                     l2413:
  6009                           
  6010                           ;I2C.c: 39:     SSPBUF = Data;
  6011  17D8  1283               	bcf	3,5	;RP0=0, select bank0
  6012  17D9  1303               	bcf	3,6	;RP1=0, select bank0
  6013  17DA  084D               	movf	I2C_Master_Write@Data,w
  6014  17DB  0093               	movwf	19	;volatile
  6015  17DC                     l273:	
  6016                           ;I2C.c: 40:     while(!(PIR1 & 0x08));
  6017                           
  6018  17DC  1D8C               	btfss	12,3	;volatile
  6019  17DD  2FDF               	goto	u1261
  6020  17DE  2FE0               	goto	u1260
  6021  17DF                     u1261:
  6022  17DF  2FDC               	goto	l273
  6023  17E0                     u1260:
  6024  17E0                     l2415:
  6025                           
  6026                           ;I2C.c: 41:     PIR1 = PIR1 & (~0x08);
  6027  17E0  080C               	movf	12,w	;volatile
  6028  17E1  39F7               	andlw	247
  6029  17E2  008C               	movwf	12	;volatile
  6030                           
  6031                           ;I2C.c: 42:     return (SSPCON2 & 0x40);
  6032  17E3  1683               	bsf	3,5	;RP0=1, select bank1
  6033  17E4  1303               	bcf	3,6	;RP1=0, select bank1
  6034  17E5  0811               	movf	17,w	;volatile
  6035  17E6  3940               	andlw	64
  6036  17E7                     l276:
  6037  17E7  0008               	return
  6038  17E8                     __end_of_I2C_Master_Write:
  6039                           
  6040                           	psect	text31
  6041  1708                     __ptext31:	
  6042 ;; *************** function _I2C_Master_Stop *****************
  6043 ;; Defined at:
  6044 ;;		line 30 in file "I2C.c"
  6045 ;; Parameters:    Size  Location     Type
  6046 ;;		None
  6047 ;; Auto vars:     Size  Location     Type
  6048 ;;		None
  6049 ;; Return value:  Size  Location     Type
  6050 ;;                  1    wreg      void 
  6051 ;; Registers used:
  6052 ;;		wreg, status,2, status,0, pclath, cstack
  6053 ;; Tracked objects:
  6054 ;;		On entry : 0/0
  6055 ;;		On exit  : 0/0
  6056 ;;		Unchanged: 0/0
  6057 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6058 ;;      Params:         0       0       0       0       0
  6059 ;;      Locals:         0       0       0       0       0
  6060 ;;      Temps:          0       0       0       0       0
  6061 ;;      Totals:         0       0       0       0       0
  6062 ;;Total ram usage:        0 bytes
  6063 ;; Hardware stack levels used:    1
  6064 ;; Hardware stack levels required when called:    4
  6065 ;; This function calls:
  6066 ;;		_I2C_Master_Wait
  6067 ;; This function is called by:
  6068 ;;		_EEPROM_Write
  6069 ;;		_EEPROM_WritePage
  6070 ;;		_EEPROM_Read
  6071 ;;		_EEPROM_ReadPage
  6072 ;; This function uses a non-reentrant model
  6073 ;;
  6074                           
  6075                           
  6076                           ;psect for function _I2C_Master_Stop
  6077  1708                     _I2C_Master_Stop:
  6078  1708                     l2419:	
  6079                           ;incstack = 0
  6080                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  6081                           
  6082                           
  6083                           ;I2C.c: 32:     I2C_Master_Wait();
  6084  1708  120A  158A  2000  160A  118A  	fcall	_I2C_Master_Wait
  6085  170D                     l2421:
  6086                           
  6087                           ;I2C.c: 33:     SSPCON2 = SSPCON2 | (0x04);
  6088  170D  1683               	bsf	3,5	;RP0=1, select bank1
  6089  170E  1303               	bcf	3,6	;RP1=0, select bank1
  6090  170F  0811               	movf	17,w	;volatile
  6091  1710  3804               	iorlw	4
  6092  1711  0091               	movwf	17	;volatile
  6093  1712                     l270:
  6094  1712  0008               	return
  6095  1713                     __end_of_I2C_Master_Stop:
  6096                           
  6097                           	psect	text32
  6098  16FD                     __ptext32:	
  6099 ;; *************** function _I2C_Master_Start *****************
  6100 ;; Defined at:
  6101 ;;		line 18 in file "I2C.c"
  6102 ;; Parameters:    Size  Location     Type
  6103 ;;		None
  6104 ;; Auto vars:     Size  Location     Type
  6105 ;;		None
  6106 ;; Return value:  Size  Location     Type
  6107 ;;                  1    wreg      void 
  6108 ;; Registers used:
  6109 ;;		wreg, status,2, status,0, pclath, cstack
  6110 ;; Tracked objects:
  6111 ;;		On entry : 0/0
  6112 ;;		On exit  : 0/0
  6113 ;;		Unchanged: 0/0
  6114 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6115 ;;      Params:         0       0       0       0       0
  6116 ;;      Locals:         0       0       0       0       0
  6117 ;;      Temps:          0       0       0       0       0
  6118 ;;      Totals:         0       0       0       0       0
  6119 ;;Total ram usage:        0 bytes
  6120 ;; Hardware stack levels used:    1
  6121 ;; Hardware stack levels required when called:    4
  6122 ;; This function calls:
  6123 ;;		_I2C_Master_Wait
  6124 ;; This function is called by:
  6125 ;;		_EEPROM_Write
  6126 ;;		_EEPROM_WritePage
  6127 ;;		_EEPROM_Read
  6128 ;;		_EEPROM_ReadPage
  6129 ;; This function uses a non-reentrant model
  6130 ;;
  6131                           
  6132                           
  6133                           ;psect for function _I2C_Master_Start
  6134  16FD                     _I2C_Master_Start:
  6135  16FD                     l2403:	
  6136                           ;incstack = 0
  6137                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  6138                           
  6139                           
  6140                           ;I2C.c: 20:     I2C_Master_Wait();
  6141  16FD  120A  158A  2000  160A  118A  	fcall	_I2C_Master_Wait
  6142  1702                     l2405:
  6143                           
  6144                           ;I2C.c: 21:     SSPCON2 = SSPCON2 | (0x01);
  6145  1702  1683               	bsf	3,5	;RP0=1, select bank1
  6146  1703  1303               	bcf	3,6	;RP1=0, select bank1
  6147  1704  0811               	movf	17,w	;volatile
  6148  1705  3801               	iorlw	1
  6149  1706  0091               	movwf	17	;volatile
  6150  1707                     l264:
  6151  1707  0008               	return
  6152  1708                     __end_of_I2C_Master_Start:
  6153                           
  6154                           	psect	text33
  6155  16F2                     __ptext33:	
  6156 ;; *************** function _I2C_Master_RepeatedStart *****************
  6157 ;; Defined at:
  6158 ;;		line 24 in file "I2C.c"
  6159 ;; Parameters:    Size  Location     Type
  6160 ;;		None
  6161 ;; Auto vars:     Size  Location     Type
  6162 ;;		None
  6163 ;; Return value:  Size  Location     Type
  6164 ;;                  1    wreg      void 
  6165 ;; Registers used:
  6166 ;;		wreg, status,2, status,0, pclath, cstack
  6167 ;; Tracked objects:
  6168 ;;		On entry : 0/0
  6169 ;;		On exit  : 0/0
  6170 ;;		Unchanged: 0/0
  6171 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6172 ;;      Params:         0       0       0       0       0
  6173 ;;      Locals:         0       0       0       0       0
  6174 ;;      Temps:          0       0       0       0       0
  6175 ;;      Totals:         0       0       0       0       0
  6176 ;;Total ram usage:        0 bytes
  6177 ;; Hardware stack levels used:    1
  6178 ;; Hardware stack levels required when called:    4
  6179 ;; This function calls:
  6180 ;;		_I2C_Master_Wait
  6181 ;; This function is called by:
  6182 ;;		_EEPROM_Write
  6183 ;;		_EEPROM_WritePage
  6184 ;;		_EEPROM_Read
  6185 ;;		_EEPROM_ReadPage
  6186 ;; This function uses a non-reentrant model
  6187 ;;
  6188                           
  6189                           
  6190                           ;psect for function _I2C_Master_RepeatedStart
  6191  16F2                     _I2C_Master_RepeatedStart:
  6192  16F2                     l2407:	
  6193                           ;incstack = 0
  6194                           ; Regs used in _I2C_Master_RepeatedStart: [wreg+status,2+status,0+pclath+cstack]
  6195                           
  6196                           
  6197                           ;I2C.c: 26:     I2C_Master_Wait();
  6198  16F2  120A  158A  2000  160A  118A  	fcall	_I2C_Master_Wait
  6199  16F7                     l2409:
  6200                           
  6201                           ;I2C.c: 27:     SSPCON2 = SSPCON2 | (0x02);
  6202  16F7  1683               	bsf	3,5	;RP0=1, select bank1
  6203  16F8  1303               	bcf	3,6	;RP1=0, select bank1
  6204  16F9  0811               	movf	17,w	;volatile
  6205  16FA  3802               	iorlw	2
  6206  16FB  0091               	movwf	17	;volatile
  6207  16FC                     l267:
  6208  16FC  0008               	return
  6209  16FD                     __end_of_I2C_Master_RepeatedStart:
  6210                           
  6211                           	psect	text34
  6212  0800                     __ptext34:	
  6213 ;; *************** function _I2C_Master_Wait *****************
  6214 ;; Defined at:
  6215 ;;		line 13 in file "I2C.c"
  6216 ;; Parameters:    Size  Location     Type
  6217 ;;		None
  6218 ;; Auto vars:     Size  Location     Type
  6219 ;;		None
  6220 ;; Return value:  Size  Location     Type
  6221 ;;                  1    wreg      void 
  6222 ;; Registers used:
  6223 ;;		wreg, status,2
  6224 ;; Tracked objects:
  6225 ;;		On entry : 0/0
  6226 ;;		On exit  : 0/0
  6227 ;;		Unchanged: 0/0
  6228 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6229 ;;      Params:         0       0       0       0       0
  6230 ;;      Locals:         0       0       0       0       0
  6231 ;;      Temps:          0       0       0       0       0
  6232 ;;      Totals:         0       0       0       0       0
  6233 ;;Total ram usage:        0 bytes
  6234 ;; Hardware stack levels used:    1
  6235 ;; Hardware stack levels required when called:    3
  6236 ;; This function calls:
  6237 ;;		Nothing
  6238 ;; This function is called by:
  6239 ;;		_I2C_Master_Start
  6240 ;;		_I2C_Master_RepeatedStart
  6241 ;;		_I2C_Master_Stop
  6242 ;;		_I2C_Master_Write
  6243 ;;		_I2C_Read
  6244 ;;		_I2C_ACK
  6245 ;;		_I2C_NACK
  6246 ;; This function uses a non-reentrant model
  6247 ;;
  6248                           
  6249                           
  6250                           ;psect for function _I2C_Master_Wait
  6251  0800                     _I2C_Master_Wait:
  6252  0800                     l2399:	
  6253                           ;incstack = 0
  6254                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  6255                           
  6256  0800                     l258:	
  6257                           ;I2C.c: 15:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  6258                           
  6259  0800  1683               	bsf	3,5	;RP0=1, select bank1
  6260  0801  1303               	bcf	3,6	;RP1=0, select bank1
  6261  0802  1914               	btfsc	20,2	;volatile
  6262  0803  2805               	goto	u1241
  6263  0804  2806               	goto	u1240
  6264  0805                     u1241:
  6265  0805  2800               	goto	l258
  6266  0806                     u1240:
  6267  0806                     l2401:
  6268  0806  0811               	movf	17,w	;volatile
  6269  0807  391F               	andlw	31
  6270  0808  1D03               	btfss	3,2
  6271  0809  280B               	goto	u1251
  6272  080A  280C               	goto	u1250
  6273  080B                     u1251:
  6274  080B  2800               	goto	l258
  6275  080C                     u1250:
  6276  080C                     l261:
  6277  080C  0008               	return
  6278  080D                     __end_of_I2C_Master_Wait:
  6279                           
  6280                           	psect	text35
  6281  0B6C                     __ptext35:	
  6282 ;; *************** function _WH_ResetMode *****************
  6283 ;; Defined at:
  6284 ;;		line 148 in file "WH.c"
  6285 ;; Parameters:    Size  Location     Type
  6286 ;;		None
  6287 ;; Auto vars:     Size  Location     Type
  6288 ;;		None
  6289 ;; Return value:  Size  Location     Type
  6290 ;;                  1    wreg      void 
  6291 ;; Registers used:
  6292 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6293 ;; Tracked objects:
  6294 ;;		On entry : 0/0
  6295 ;;		On exit  : 0/0
  6296 ;;		Unchanged: 0/0
  6297 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6298 ;;      Params:         0       0       0       0       0
  6299 ;;      Locals:         0       0       0       0       0
  6300 ;;      Temps:          0       0       0       0       0
  6301 ;;      Totals:         0       0       0       0       0
  6302 ;;Total ram usage:        0 bytes
  6303 ;; Hardware stack levels used:    1
  6304 ;; Hardware stack levels required when called:    4
  6305 ;; This function calls:
  6306 ;;		_DISP_SetState
  6307 ;;		_HCU_SetState
  6308 ;; This function is called by:
  6309 ;;		_WH_Task
  6310 ;; This function uses a non-reentrant model
  6311 ;;
  6312                           
  6313                           
  6314                           ;psect for function _WH_ResetMode
  6315  0B6C                     _WH_ResetMode:
  6316  0B6C                     l2835:	
  6317                           ;incstack = 0
  6318                           ; Regs used in _WH_ResetMode: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6319                           
  6320                           
  6321                           ;WH.c: 150:     HCU_SetState((5), (0));
  6322  0B6C  1283               	bcf	3,5	;RP0=0, select bank0
  6323  0B6D  1303               	bcf	3,6	;RP1=0, select bank0
  6324  0B6E  01CD               	clrf	HCU_SetState@State
  6325  0B6F  3005               	movlw	5
  6326  0B70  120A  158A  209B  120A  158A  	fcall	_HCU_SetState
  6327                           
  6328                           ;WH.c: 151:     HCU_SetState((2), (0));
  6329  0B75  1283               	bcf	3,5	;RP0=0, select bank0
  6330  0B76  1303               	bcf	3,6	;RP1=0, select bank0
  6331  0B77  01CD               	clrf	HCU_SetState@State
  6332  0B78  3002               	movlw	2
  6333  0B79  120A  158A  209B  120A  158A  	fcall	_HCU_SetState
  6334                           
  6335                           ;WH.c: 152:     DISP_SetState(0, 0);
  6336  0B7E  1283               	bcf	3,5	;RP0=0, select bank0
  6337  0B7F  1303               	bcf	3,6	;RP1=0, select bank0
  6338  0B80  01CD               	clrf	DISP_SetState@State
  6339  0B81  3000               	movlw	0
  6340  0B82  120A  158A  2267  120A  158A  	fcall	_DISP_SetState
  6341                           
  6342                           ;WH.c: 153:     DISP_SetState(1, 0);
  6343  0B87  1283               	bcf	3,5	;RP0=0, select bank0
  6344  0B88  1303               	bcf	3,6	;RP1=0, select bank0
  6345  0B89  01CD               	clrf	DISP_SetState@State
  6346  0B8A  3001               	movlw	1
  6347  0B8B  120A  158A  2267  120A  158A  	fcall	_DISP_SetState
  6348                           
  6349                           ;WH.c: 154:     DISP_SetState(2, 0);
  6350  0B90  1283               	bcf	3,5	;RP0=0, select bank0
  6351  0B91  1303               	bcf	3,6	;RP1=0, select bank0
  6352  0B92  01CD               	clrf	DISP_SetState@State
  6353  0B93  3002               	movlw	2
  6354  0B94  120A  158A  2267  120A  158A  	fcall	_DISP_SetState
  6355                           
  6356                           ;WH.c: 155:     DISP_SetState(3, 0);
  6357  0B99  1283               	bcf	3,5	;RP0=0, select bank0
  6358  0B9A  1303               	bcf	3,6	;RP1=0, select bank0
  6359  0B9B  01CD               	clrf	DISP_SetState@State
  6360  0B9C  3003               	movlw	3
  6361  0B9D  120A  158A  2267  120A  158A  	fcall	_DISP_SetState
  6362  0BA2                     l2837:
  6363                           
  6364                           ;WH.c: 156:     WH_State_G = OffMode;
  6365  0BA2  1283               	bcf	3,5	;RP0=0, select bank0
  6366  0BA3  1303               	bcf	3,6	;RP1=0, select bank0
  6367  0BA4  01CB               	clrf	_WH_State_G	;volatile
  6368  0BA5                     l432:
  6369  0BA5  0008               	return
  6370  0BA6                     __end_of_WH_ResetMode:
  6371                           
  6372                           	psect	text36
  6373  04F2                     __ptext36:	
  6374 ;; *************** function _WH_OperationMode *****************
  6375 ;; Defined at:
  6376 ;;		line 76 in file "WH.c"
  6377 ;; Parameters:    Size  Location     Type
  6378 ;;		None
  6379 ;; Auto vars:     Size  Location     Type
  6380 ;;		None
  6381 ;; Return value:  Size  Location     Type
  6382 ;;                  1    wreg      void 
  6383 ;; Registers used:
  6384 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6385 ;; Tracked objects:
  6386 ;;		On entry : 0/0
  6387 ;;		On exit  : 0/0
  6388 ;;		Unchanged: 0/0
  6389 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6390 ;;      Params:         0       0       0       0       0
  6391 ;;      Locals:         0       0       0       0       0
  6392 ;;      Temps:          0       3       0       0       0
  6393 ;;      Totals:         0       3       0       0       0
  6394 ;;Total ram usage:        3 bytes
  6395 ;; Hardware stack levels used:    1
  6396 ;; Hardware stack levels required when called:    5
  6397 ;; This function calls:
  6398 ;;		_DISP_SetState
  6399 ;;		_HCU_SetState
  6400 ;;		_TEMP_GetAverage
  6401 ;; This function is called by:
  6402 ;;		_WH_Task
  6403 ;; This function uses a non-reentrant model
  6404 ;;
  6405                           
  6406                           
  6407                           ;psect for function _WH_OperationMode
  6408  04F2                     _WH_OperationMode:
  6409  04F2                     l2761:	
  6410                           ;incstack = 0
  6411                           ; Regs used in _WH_OperationMode: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6412                           
  6413                           
  6414                           ;WH.c: 78:     WH_AvgTemp_G = TEMP_GetAverage();
  6415  04F2  120A  158A  23A6  120A  118A  	fcall	_TEMP_GetAverage
  6416  04F7  00FF               	movwf	btemp+1
  6417  04F8  087F               	movf	btemp+1,w
  6418  04F9  1283               	bcf	3,5	;RP0=0, select bank0
  6419  04FA  1303               	bcf	3,6	;RP1=0, select bank0
  6420  04FB  00C9               	movwf	_WH_AvgTemp_G	;volatile
  6421  04FC                     l2763:
  6422                           
  6423                           ;WH.c: 79:     if(WH_AvgTemp_G <= (WH_TargetTemp_G - 5))
  6424  04FC  086E               	movf	_WH_TargetTemp_G,w	;volatile
  6425  04FD  3EFB               	addlw	251
  6426  04FE  00D9               	movwf	??_WH_OperationMode
  6427  04FF  30FF               	movlw	255
  6428  0500  1803               	skipnc
  6429  0501  3000               	movlw	0
  6430  0502  00DA               	movwf	??_WH_OperationMode+1
  6431  0503  085A               	movf	??_WH_OperationMode+1,w
  6432  0504  3A80               	xorlw	128
  6433  0505  00DB               	movwf	??_WH_OperationMode+2
  6434  0506  3080               	movlw	128
  6435  0507  025B               	subwf	??_WH_OperationMode+2,w
  6436  0508  1D03               	skipz
  6437  0509  2D0C               	goto	u1715
  6438  050A  0849               	movf	_WH_AvgTemp_G,w	;volatile
  6439  050B  0259               	subwf	??_WH_OperationMode,w
  6440  050C                     u1715:
  6441  050C  1C03               	skipc
  6442  050D  2D0F               	goto	u1711
  6443  050E  2D10               	goto	u1710
  6444  050F                     u1711:
  6445  050F  2D2E               	goto	l2767
  6446  0510                     u1710:
  6447  0510                     l2765:
  6448                           
  6449                           ;WH.c: 80:     {;WH.c: 81:         HCU_SetState((5), (1));
  6450  0510  1283               	bcf	3,5	;RP0=0, select bank0
  6451  0511  1303               	bcf	3,6	;RP1=0, select bank0
  6452  0512  01CD               	clrf	HCU_SetState@State
  6453  0513  0ACD               	incf	HCU_SetState@State,f
  6454  0514  3005               	movlw	5
  6455  0515  120A  158A  209B  120A  118A  	fcall	_HCU_SetState
  6456                           
  6457                           ;WH.c: 82:         HCU_SetState((2), (0));
  6458  051A  1283               	bcf	3,5	;RP0=0, select bank0
  6459  051B  1303               	bcf	3,6	;RP1=0, select bank0
  6460  051C  01CD               	clrf	HCU_SetState@State
  6461  051D  3002               	movlw	2
  6462  051E  120A  158A  209B  120A  118A  	fcall	_HCU_SetState
  6463                           
  6464                           ;WH.c: 83:         DISP_SetState(1, 1);
  6465  0523  1283               	bcf	3,5	;RP0=0, select bank0
  6466  0524  1303               	bcf	3,6	;RP1=0, select bank0
  6467  0525  01CD               	clrf	DISP_SetState@State
  6468  0526  0ACD               	incf	DISP_SetState@State,f
  6469  0527  3001               	movlw	1
  6470  0528  120A  158A  2267  120A  118A  	fcall	_DISP_SetState
  6471                           
  6472                           ;WH.c: 84:     }else if(WH_AvgTemp_G >= (WH_TargetTemp_G + 5))
  6473  052D  2D5E               	goto	l2771
  6474  052E                     l2767:
  6475  052E  1283               	bcf	3,5	;RP0=0, select bank0
  6476  052F  1303               	bcf	3,6	;RP1=0, select bank0
  6477  0530  086E               	movf	_WH_TargetTemp_G,w	;volatile
  6478  0531  3E05               	addlw	5
  6479  0532  00D9               	movwf	??_WH_OperationMode
  6480  0533  3000               	movlw	0
  6481  0534  1803               	skipnc
  6482  0535  3001               	movlw	1
  6483  0536  00DA               	movwf	??_WH_OperationMode+1
  6484  0537  085A               	movf	??_WH_OperationMode+1,w
  6485  0538  3A80               	xorlw	128
  6486  0539  3C80               	sublw	128
  6487  053A  1D03               	skipz
  6488  053B  2D3E               	goto	u1725
  6489  053C  0859               	movf	??_WH_OperationMode,w
  6490  053D  0249               	subwf	_WH_AvgTemp_G,w	;volatile
  6491  053E                     u1725:
  6492  053E  1C03               	skipc
  6493  053F  2D41               	goto	u1721
  6494  0540  2D42               	goto	u1720
  6495  0541                     u1721:
  6496  0541  2D5E               	goto	l2771
  6497  0542                     u1720:
  6498  0542                     l2769:
  6499                           
  6500                           ;WH.c: 85:     {;WH.c: 86:         HCU_SetState((5), (0));
  6501  0542  1283               	bcf	3,5	;RP0=0, select bank0
  6502  0543  1303               	bcf	3,6	;RP1=0, select bank0
  6503  0544  01CD               	clrf	HCU_SetState@State
  6504  0545  3005               	movlw	5
  6505  0546  120A  158A  209B  120A  118A  	fcall	_HCU_SetState
  6506                           
  6507                           ;WH.c: 87:         HCU_SetState((2), (1));
  6508  054B  1283               	bcf	3,5	;RP0=0, select bank0
  6509  054C  1303               	bcf	3,6	;RP1=0, select bank0
  6510  054D  01CD               	clrf	HCU_SetState@State
  6511  054E  0ACD               	incf	HCU_SetState@State,f
  6512  054F  3002               	movlw	2
  6513  0550  120A  158A  209B  120A  118A  	fcall	_HCU_SetState
  6514                           
  6515                           ;WH.c: 88:         DISP_SetState(1, 0);
  6516  0555  1283               	bcf	3,5	;RP0=0, select bank0
  6517  0556  1303               	bcf	3,6	;RP1=0, select bank0
  6518  0557  01CD               	clrf	DISP_SetState@State
  6519  0558  3001               	movlw	1
  6520  0559  120A  158A  2267  120A  118A  	fcall	_DISP_SetState
  6521  055E                     l2771:
  6522                           
  6523                           ;WH.c: 90:     if(WH_PreState_G == TempSetMode)
  6524  055E  3003               	movlw	3
  6525  055F  1283               	bcf	3,5	;RP0=0, select bank0
  6526  0560  1303               	bcf	3,6	;RP1=0, select bank0
  6527  0561  064A               	xorwf	_WH_PreState_G,w	;volatile
  6528  0562  1D03               	btfss	3,2
  6529  0563  2D65               	goto	u1731
  6530  0564  2D66               	goto	u1730
  6531  0565                     u1731:
  6532  0565  2D6B               	goto	l2775
  6533  0566                     u1730:
  6534  0566                     l2773:
  6535                           
  6536                           ;WH.c: 91:     {;WH.c: 92:         WH_State_G = TempSetMode;
  6537  0566  3003               	movlw	3
  6538  0567  00FF               	movwf	btemp+1
  6539  0568  087F               	movf	btemp+1,w
  6540  0569  00CB               	movwf	_WH_State_G	;volatile
  6541                           
  6542                           ;WH.c: 93:     }else
  6543  056A  2D6F               	goto	l412
  6544  056B                     l2775:
  6545                           
  6546                           ;WH.c: 94:     {;WH.c: 95:         WH_State_G = NormalMode;
  6547  056B  3002               	movlw	2
  6548  056C  00FF               	movwf	btemp+1
  6549  056D  087F               	movf	btemp+1,w
  6550  056E  00CB               	movwf	_WH_State_G	;volatile
  6551  056F                     l412:
  6552  056F  0008               	return
  6553  0570                     __end_of_WH_OperationMode:
  6554                           
  6555                           	psect	text37
  6556  0BA6                     __ptext37:	
  6557 ;; *************** function _TEMP_GetAverage *****************
  6558 ;; Defined at:
  6559 ;;		line 25 in file "TEMP.c"
  6560 ;; Parameters:    Size  Location     Type
  6561 ;;		None
  6562 ;; Auto vars:     Size  Location     Type
  6563 ;;  AvgTemp         2    9[BANK0 ] unsigned short 
  6564 ;;  Index           1   11[BANK0 ] unsigned char 
  6565 ;; Return value:  Size  Location     Type
  6566 ;;                  1    wreg      unsigned char 
  6567 ;; Registers used:
  6568 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6569 ;; Tracked objects:
  6570 ;;		On entry : 0/0
  6571 ;;		On exit  : 0/0
  6572 ;;		Unchanged: 0/0
  6573 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6574 ;;      Params:         0       0       0       0       0
  6575 ;;      Locals:         0       3       0       0       0
  6576 ;;      Temps:          0       2       0       0       0
  6577 ;;      Totals:         0       5       0       0       0
  6578 ;;Total ram usage:        5 bytes
  6579 ;; Hardware stack levels used:    1
  6580 ;; Hardware stack levels required when called:    4
  6581 ;; This function calls:
  6582 ;;		___lwdiv
  6583 ;; This function is called by:
  6584 ;;		_WH_OperationMode
  6585 ;; This function uses a non-reentrant model
  6586 ;;
  6587                           
  6588                           
  6589                           ;psect for function _TEMP_GetAverage
  6590  0BA6                     _TEMP_GetAverage:
  6591  0BA6                     l2499:	
  6592                           ;incstack = 0
  6593                           ; Regs used in _TEMP_GetAverage: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6594                           
  6595                           
  6596                           ;TEMP.c: 28:     uint16_t AvgTemp = 0;
  6597  0BA6  1283               	bcf	3,5	;RP0=0, select bank0
  6598  0BA7  1303               	bcf	3,6	;RP1=0, select bank0
  6599  0BA8  01D6               	clrf	TEMP_GetAverage@AvgTemp
  6600  0BA9  01D7               	clrf	TEMP_GetAverage@AvgTemp+1
  6601  0BAA                     l2501:
  6602                           
  6603                           ;TEMP.c: 29:     if(TEMP_G[0].AvgFlag)
  6604  0BAA  1683               	bsf	3,5	;RP0=1, select bank1
  6605  0BAB  1303               	bcf	3,6	;RP1=0, select bank1
  6606  0BAC  085B               	movf	(_TEMP_G^(0+128)+11),w	;volatile
  6607  0BAD  1903               	btfsc	3,2
  6608  0BAE  2BB0               	goto	u1361
  6609  0BAF  2BB1               	goto	u1360
  6610  0BB0                     u1361:
  6611  0BB0  2BDE               	goto	l2517
  6612  0BB1                     u1360:
  6613  0BB1                     l2503:
  6614                           
  6615                           ;TEMP.c: 30:     {;TEMP.c: 31:         for(Index = 0; Index < 10; Index++)
  6616  0BB1  1283               	bcf	3,5	;RP0=0, select bank0
  6617  0BB2  1303               	bcf	3,6	;RP1=0, select bank0
  6618  0BB3  01D8               	clrf	TEMP_GetAverage@Index
  6619  0BB4                     l2509:
  6620                           
  6621                           ;TEMP.c: 32:         {;TEMP.c: 33:             AvgTemp += TEMP_G[0].Array[Index];
  6622  0BB4  0858               	movf	TEMP_GetAverage@Index,w
  6623  0BB5  3ED0               	addlw	(low (_TEMP_G| 0))& (0+255)
  6624  0BB6  0084               	movwf	4
  6625  0BB7  1383               	bcf	3,7	;select IRP bank1
  6626  0BB8  0800               	movf	0,w
  6627  0BB9  00D4               	movwf	??_TEMP_GetAverage
  6628  0BBA  01D5               	clrf	??_TEMP_GetAverage+1
  6629  0BBB  0854               	movf	??_TEMP_GetAverage,w
  6630  0BBC  07D6               	addwf	TEMP_GetAverage@AvgTemp,f
  6631  0BBD  1803               	skipnc
  6632  0BBE  0AD7               	incf	TEMP_GetAverage@AvgTemp+1,f
  6633  0BBF  0855               	movf	??_TEMP_GetAverage+1,w
  6634  0BC0  07D7               	addwf	TEMP_GetAverage@AvgTemp+1,f
  6635  0BC1                     l2511:
  6636                           
  6637                           ;TEMP.c: 34:         }
  6638  0BC1  3001               	movlw	1
  6639  0BC2  00FF               	movwf	btemp+1
  6640  0BC3  087F               	movf	btemp+1,w
  6641  0BC4  07D8               	addwf	TEMP_GetAverage@Index,f
  6642  0BC5                     l2513:
  6643  0BC5  300A               	movlw	10
  6644  0BC6  0258               	subwf	TEMP_GetAverage@Index,w
  6645  0BC7  1C03               	skipc
  6646  0BC8  2BCA               	goto	u1371
  6647  0BC9  2BCB               	goto	u1370
  6648  0BCA                     u1371:
  6649  0BCA  2BB4               	goto	l2509
  6650  0BCB                     u1370:
  6651  0BCB                     l2515:
  6652                           
  6653                           ;TEMP.c: 35:         AvgTemp /= 10;
  6654  0BCB  300A               	movlw	10
  6655  0BCC  00CD               	movwf	___lwdiv@divisor
  6656  0BCD  3000               	movlw	0
  6657  0BCE  00CE               	movwf	___lwdiv@divisor+1
  6658  0BCF  0857               	movf	TEMP_GetAverage@AvgTemp+1,w
  6659  0BD0  00D0               	movwf	___lwdiv@dividend+1
  6660  0BD1  0856               	movf	TEMP_GetAverage@AvgTemp,w
  6661  0BD2  00CF               	movwf	___lwdiv@dividend
  6662  0BD3  120A  158A  249D  120A  158A  	fcall	___lwdiv
  6663  0BD8  1283               	bcf	3,5	;RP0=0, select bank0
  6664  0BD9  1303               	bcf	3,6	;RP1=0, select bank0
  6665  0BDA  084E               	movf	?___lwdiv+1,w
  6666  0BDB  00D7               	movwf	TEMP_GetAverage@AvgTemp+1
  6667  0BDC  084D               	movf	?___lwdiv,w
  6668  0BDD  00D6               	movwf	TEMP_GetAverage@AvgTemp
  6669  0BDE                     l2517:
  6670                           
  6671                           ;TEMP.c: 37:     return (uint8_t) AvgTemp;
  6672  0BDE  1283               	bcf	3,5	;RP0=0, select bank0
  6673  0BDF  0856               	movf	TEMP_GetAverage@AvgTemp,w
  6674  0BE0                     l187:
  6675  0BE0  0008               	return
  6676  0BE1                     __end_of_TEMP_GetAverage:
  6677                           
  6678                           	psect	text38
  6679  0C9D                     __ptext38:	
  6680 ;; *************** function ___lwdiv *****************
  6681 ;; Defined at:
  6682 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\lwdiv.c"
  6683 ;; Parameters:    Size  Location     Type
  6684 ;;  divisor         2    0[BANK0 ] unsigned int 
  6685 ;;  dividend        2    2[BANK0 ] unsigned int 
  6686 ;; Auto vars:     Size  Location     Type
  6687 ;;  quotient        2    4[BANK0 ] unsigned int 
  6688 ;;  counter         1    6[BANK0 ] unsigned char 
  6689 ;; Return value:  Size  Location     Type
  6690 ;;                  2    0[BANK0 ] unsigned int 
  6691 ;; Registers used:
  6692 ;;		wreg, status,2, status,0, btemp+1
  6693 ;; Tracked objects:
  6694 ;;		On entry : 0/0
  6695 ;;		On exit  : 0/0
  6696 ;;		Unchanged: 0/0
  6697 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6698 ;;      Params:         0       4       0       0       0
  6699 ;;      Locals:         0       3       0       0       0
  6700 ;;      Temps:          0       0       0       0       0
  6701 ;;      Totals:         0       7       0       0       0
  6702 ;;Total ram usage:        7 bytes
  6703 ;; Hardware stack levels used:    1
  6704 ;; Hardware stack levels required when called:    3
  6705 ;; This function calls:
  6706 ;;		Nothing
  6707 ;; This function is called by:
  6708 ;;		_TEMP_GetAverage
  6709 ;; This function uses a non-reentrant model
  6710 ;;
  6711                           
  6712                           
  6713                           ;psect for function ___lwdiv
  6714  0C9D                     ___lwdiv:
  6715  0C9D                     l2423:	
  6716                           ;incstack = 0
  6717                           ; Regs used in ___lwdiv: [wreg+status,2+status,0+btemp+1]
  6718                           
  6719  0C9D  1283               	bcf	3,5	;RP0=0, select bank0
  6720  0C9E  1303               	bcf	3,6	;RP1=0, select bank0
  6721  0C9F  01D1               	clrf	___lwdiv@quotient
  6722  0CA0  01D2               	clrf	___lwdiv@quotient+1
  6723  0CA1                     l2425:
  6724  0CA1  084D               	movf	___lwdiv@divisor,w
  6725  0CA2  044E               	iorwf	___lwdiv@divisor+1,w
  6726  0CA3  1903               	btfsc	3,2
  6727  0CA4  2CA6               	goto	u1271
  6728  0CA5  2CA7               	goto	u1270
  6729  0CA6                     u1271:
  6730  0CA6  2CDE               	goto	l2445
  6731  0CA7                     u1270:
  6732  0CA7                     l2427:
  6733  0CA7  01D3               	clrf	___lwdiv@counter
  6734  0CA8  0AD3               	incf	___lwdiv@counter,f
  6735  0CA9  2CB5               	goto	l2433
  6736  0CAA                     l2429:
  6737  0CAA  3001               	movlw	1
  6738  0CAB                     u1285:
  6739  0CAB  1003               	clrc
  6740  0CAC  0DCD               	rlf	___lwdiv@divisor,f
  6741  0CAD  0DCE               	rlf	___lwdiv@divisor+1,f
  6742  0CAE  3EFF               	addlw	-1
  6743  0CAF  1D03               	skipz
  6744  0CB0  2CAB               	goto	u1285
  6745  0CB1                     l2431:
  6746  0CB1  3001               	movlw	1
  6747  0CB2  00FF               	movwf	btemp+1
  6748  0CB3  087F               	movf	btemp+1,w
  6749  0CB4  07D3               	addwf	___lwdiv@counter,f
  6750  0CB5                     l2433:
  6751  0CB5  1FCE               	btfss	___lwdiv@divisor+1,7
  6752  0CB6  2CB8               	goto	u1291
  6753  0CB7  2CB9               	goto	u1290
  6754  0CB8                     u1291:
  6755  0CB8  2CAA               	goto	l2429
  6756  0CB9                     u1290:
  6757  0CB9                     l2435:
  6758  0CB9  3001               	movlw	1
  6759  0CBA                     u1305:
  6760  0CBA  1003               	clrc
  6761  0CBB  0DD1               	rlf	___lwdiv@quotient,f
  6762  0CBC  0DD2               	rlf	___lwdiv@quotient+1,f
  6763  0CBD  3EFF               	addlw	-1
  6764  0CBE  1D03               	skipz
  6765  0CBF  2CBA               	goto	u1305
  6766  0CC0  084E               	movf	___lwdiv@divisor+1,w
  6767  0CC1  0250               	subwf	___lwdiv@dividend+1,w
  6768  0CC2  1D03               	skipz
  6769  0CC3  2CC6               	goto	u1315
  6770  0CC4  084D               	movf	___lwdiv@divisor,w
  6771  0CC5  024F               	subwf	___lwdiv@dividend,w
  6772  0CC6                     u1315:
  6773  0CC6  1C03               	skipc
  6774  0CC7  2CC9               	goto	u1311
  6775  0CC8  2CCA               	goto	u1310
  6776  0CC9                     u1311:
  6777  0CC9  2CD1               	goto	l2441
  6778  0CCA                     u1310:
  6779  0CCA                     l2437:
  6780  0CCA  084D               	movf	___lwdiv@divisor,w
  6781  0CCB  02CF               	subwf	___lwdiv@dividend,f
  6782  0CCC  084E               	movf	___lwdiv@divisor+1,w
  6783  0CCD  1C03               	skipc
  6784  0CCE  03D0               	decf	___lwdiv@dividend+1,f
  6785  0CCF  02D0               	subwf	___lwdiv@dividend+1,f
  6786  0CD0                     l2439:
  6787  0CD0  1451               	bsf	___lwdiv@quotient,0
  6788  0CD1                     l2441:
  6789  0CD1  3001               	movlw	1
  6790  0CD2                     u1325:
  6791  0CD2  1003               	clrc
  6792  0CD3  0CCE               	rrf	___lwdiv@divisor+1,f
  6793  0CD4  0CCD               	rrf	___lwdiv@divisor,f
  6794  0CD5  3EFF               	addlw	-1
  6795  0CD6  1D03               	skipz
  6796  0CD7  2CD2               	goto	u1325
  6797  0CD8                     l2443:
  6798  0CD8  3001               	movlw	1
  6799  0CD9  02D3               	subwf	___lwdiv@counter,f
  6800  0CDA  1D03               	btfss	3,2
  6801  0CDB  2CDD               	goto	u1331
  6802  0CDC  2CDE               	goto	u1330
  6803  0CDD                     u1331:
  6804  0CDD  2CB9               	goto	l2435
  6805  0CDE                     u1330:
  6806  0CDE                     l2445:
  6807  0CDE  0852               	movf	___lwdiv@quotient+1,w
  6808  0CDF  00CE               	movwf	?___lwdiv+1
  6809  0CE0  0851               	movf	___lwdiv@quotient,w
  6810  0CE1  00CD               	movwf	?___lwdiv
  6811  0CE2                     l979:
  6812  0CE2  0008               	return
  6813  0CE3                     __end_of___lwdiv:
  6814                           
  6815                           	psect	text39
  6816  089B                     __ptext39:	
  6817 ;; *************** function _HCU_SetState *****************
  6818 ;; Defined at:
  6819 ;;		line 19 in file "HCU.c"
  6820 ;; Parameters:    Size  Location     Type
  6821 ;;  HCUx            1    wreg     unsigned char 
  6822 ;;  State           1    0[BANK0 ] unsigned char 
  6823 ;; Auto vars:     Size  Location     Type
  6824 ;;  HCUx            1    3[BANK0 ] unsigned char 
  6825 ;; Return value:  Size  Location     Type
  6826 ;;                  1    wreg      void 
  6827 ;; Registers used:
  6828 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  6829 ;; Tracked objects:
  6830 ;;		On entry : 0/0
  6831 ;;		On exit  : 0/0
  6832 ;;		Unchanged: 0/0
  6833 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6834 ;;      Params:         0       1       0       0       0
  6835 ;;      Locals:         0       1       0       0       0
  6836 ;;      Temps:          0       2       0       0       0
  6837 ;;      Totals:         0       4       0       0       0
  6838 ;;Total ram usage:        4 bytes
  6839 ;; Hardware stack levels used:    1
  6840 ;; Hardware stack levels required when called:    3
  6841 ;; This function calls:
  6842 ;;		Nothing
  6843 ;; This function is called by:
  6844 ;;		_WH_OperationMode
  6845 ;;		_WH_ResetMode
  6846 ;; This function uses a non-reentrant model
  6847 ;;
  6848                           
  6849                           
  6850                           ;psect for function _HCU_SetState
  6851  089B                     _HCU_SetState:
  6852                           
  6853                           ;incstack = 0
  6854                           ; Regs used in _HCU_SetState: [wreg-fsr0h+status,2+status,0+btemp+1]
  6855                           ;HCU_SetState@HCUx stored from wreg
  6856  089B  1283               	bcf	3,5	;RP0=0, select bank0
  6857  089C  1303               	bcf	3,6	;RP1=0, select bank0
  6858  089D  00D0               	movwf	HCU_SetState@HCUx
  6859  089E                     l2547:
  6860                           
  6861                           ;HCU.c: 19: void HCU_SetState(uint8_t HCUx, uint8_t State);HCU.c: 20: {;HCU.c: 21:     s
      +                          witch(HCUx)
  6862  089E  28A9               	goto	l2555
  6863  089F                     l2549:
  6864                           
  6865                           ;HCU.c: 24:             HCU_G[0].State = State;
  6866  089F  084D               	movf	HCU_SetState@State,w
  6867  08A0  00FF               	movwf	btemp+1
  6868  08A1  087F               	movf	btemp+1,w
  6869  08A2  00C5               	movwf	_HCU_G	;volatile
  6870                           
  6871                           ;HCU.c: 25:             break;
  6872  08A3  28B9               	goto	l559
  6873  08A4                     l2551:
  6874                           
  6875                           ;HCU.c: 27:             HCU_G[1].State = State;
  6876  08A4  084D               	movf	HCU_SetState@State,w
  6877  08A5  00FF               	movwf	btemp+1
  6878  08A6  087F               	movf	btemp+1,w
  6879  08A7  00C6               	movwf	_HCU_G+1	;volatile
  6880                           
  6881                           ;HCU.c: 28:             break;
  6882  08A8  28B9               	goto	l559
  6883  08A9                     l2555:
  6884  08A9  0850               	movf	HCU_SetState@HCUx,w
  6885  08AA  00CE               	movwf	??_HCU_SetState
  6886  08AB  01CF               	clrf	??_HCU_SetState+1
  6887                           
  6888                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6889                           ; Switch size 1, requested type "simple"
  6890                           ; Number of cases is 1, Range of values is 0 to 0
  6891                           ; switch strategies available:
  6892                           ; Name         Instructions Cycles
  6893                           ; simple_byte            4     3 (average)
  6894                           ; direct_byte           11     8 (fixed)
  6895                           ; jumptable            260     6 (fixed)
  6896                           ;	Chosen strategy is simple_byte
  6897  08AC  084F               	movf	??_HCU_SetState+1,w
  6898  08AD  3A00               	xorlw	0	; case 0
  6899  08AE  1903               	skipnz
  6900  08AF  28B1               	goto	l3643
  6901  08B0  28B9               	goto	l559
  6902  08B1                     l3643:
  6903                           
  6904                           ; Switch size 1, requested type "simple"
  6905                           ; Number of cases is 2, Range of values is 2 to 5
  6906                           ; switch strategies available:
  6907                           ; Name         Instructions Cycles
  6908                           ; simple_byte            7     4 (average)
  6909                           ; direct_byte           23    11 (fixed)
  6910                           ; jumptable            263     9 (fixed)
  6911                           ;	Chosen strategy is simple_byte
  6912  08B1  084E               	movf	??_HCU_SetState,w
  6913  08B2  3A02               	xorlw	2	; case 2
  6914  08B3  1903               	skipnz
  6915  08B4  28A4               	goto	l2551
  6916  08B5  3A07               	xorlw	7	; case 5
  6917  08B6  1903               	skipnz
  6918  08B7  289F               	goto	l2549
  6919  08B8  28B9               	goto	l559
  6920  08B9                     l559:
  6921  08B9  0008               	return
  6922  08BA                     __end_of_HCU_SetState:
  6923                           
  6924                           	psect	text40
  6925  096A                     __ptext40:	
  6926 ;; *************** function _WH_OffMode *****************
  6927 ;; Defined at:
  6928 ;;		line 66 in file "WH.c"
  6929 ;; Parameters:    Size  Location     Type
  6930 ;;		None
  6931 ;; Auto vars:     Size  Location     Type
  6932 ;;		None
  6933 ;; Return value:  Size  Location     Type
  6934 ;;                  1    wreg      void 
  6935 ;; Registers used:
  6936 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6937 ;; Tracked objects:
  6938 ;;		On entry : 0/0
  6939 ;;		On exit  : 0/0
  6940 ;;		Unchanged: 0/0
  6941 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6942 ;;      Params:         0       0       0       0       0
  6943 ;;      Locals:         0       0       0       0       0
  6944 ;;      Temps:          0       0       0       0       0
  6945 ;;      Totals:         0       0       0       0       0
  6946 ;;Total ram usage:        0 bytes
  6947 ;; Hardware stack levels used:    1
  6948 ;; Hardware stack levels required when called:    4
  6949 ;; This function calls:
  6950 ;;		_DISP_SetState
  6951 ;;		_SW_GetState
  6952 ;; This function is called by:
  6953 ;;		_WH_Task
  6954 ;; This function uses a non-reentrant model
  6955 ;;
  6956                           
  6957                           
  6958                           ;psect for function _WH_OffMode
  6959  096A                     _WH_OffMode:
  6960  096A                     l2755:	
  6961                           ;incstack = 0
  6962                           ; Regs used in _WH_OffMode: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6963                           
  6964                           
  6965                           ;WH.c: 68:     if(SW_GetState((0)))
  6966  096A  3000               	movlw	0
  6967  096B  120A  158A  21DE  120A  158A  	fcall	_SW_GetState
  6968  0970  3A00               	xorlw	0
  6969  0971  1903               	skipnz
  6970  0972  2974               	goto	u1701
  6971  0973  2975               	goto	u1700
  6972  0974                     u1701:
  6973  0974  298F               	goto	l404
  6974  0975                     u1700:
  6975  0975                     l2757:
  6976                           
  6977                           ;WH.c: 69:     {;WH.c: 70:         DISP_SetState(0, 1);
  6978  0975  1283               	bcf	3,5	;RP0=0, select bank0
  6979  0976  1303               	bcf	3,6	;RP1=0, select bank0
  6980  0977  01CD               	clrf	DISP_SetState@State
  6981  0978  0ACD               	incf	DISP_SetState@State,f
  6982  0979  3000               	movlw	0
  6983  097A  120A  158A  2267  120A  158A  	fcall	_DISP_SetState
  6984                           
  6985                           ;WH.c: 71:         DISP_SetState(2, 1);
  6986  097F  1283               	bcf	3,5	;RP0=0, select bank0
  6987  0980  1303               	bcf	3,6	;RP1=0, select bank0
  6988  0981  01CD               	clrf	DISP_SetState@State
  6989  0982  0ACD               	incf	DISP_SetState@State,f
  6990  0983  3002               	movlw	2
  6991  0984  120A  158A  2267  120A  158A  	fcall	_DISP_SetState
  6992  0989                     l2759:
  6993                           
  6994                           ;WH.c: 72:         WH_State_G = OperationMode;
  6995  0989  3001               	movlw	1
  6996  098A  00FF               	movwf	btemp+1
  6997  098B  087F               	movf	btemp+1,w
  6998  098C  1283               	bcf	3,5	;RP0=0, select bank0
  6999  098D  1303               	bcf	3,6	;RP1=0, select bank0
  7000  098E  00CB               	movwf	_WH_State_G	;volatile
  7001  098F                     l404:
  7002  098F  0008               	return
  7003  0990                     __end_of_WH_OffMode:
  7004                           
  7005                           	psect	text41
  7006  0A67                     __ptext41:	
  7007 ;; *************** function _DISP_SetState *****************
  7008 ;; Defined at:
  7009 ;;		line 73 in file "DISP.c"
  7010 ;; Parameters:    Size  Location     Type
  7011 ;;  DISPx           1    wreg     unsigned char 
  7012 ;;  State           1    0[BANK0 ] unsigned char 
  7013 ;; Auto vars:     Size  Location     Type
  7014 ;;  DISPx           1    3[BANK0 ] unsigned char 
  7015 ;; Return value:  Size  Location     Type
  7016 ;;                  1    wreg      void 
  7017 ;; Registers used:
  7018 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  7019 ;; Tracked objects:
  7020 ;;		On entry : 0/0
  7021 ;;		On exit  : 0/0
  7022 ;;		Unchanged: 0/0
  7023 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7024 ;;      Params:         0       1       0       0       0
  7025 ;;      Locals:         0       1       0       0       0
  7026 ;;      Temps:          0       2       0       0       0
  7027 ;;      Totals:         0       4       0       0       0
  7028 ;;Total ram usage:        4 bytes
  7029 ;; Hardware stack levels used:    1
  7030 ;; Hardware stack levels required when called:    3
  7031 ;; This function calls:
  7032 ;;		Nothing
  7033 ;; This function is called by:
  7034 ;;		_WH_OffMode
  7035 ;;		_WH_OperationMode
  7036 ;;		_WH_TempSetMode
  7037 ;;		_WH_ResetMode
  7038 ;; This function uses a non-reentrant model
  7039 ;;
  7040                           
  7041                           
  7042                           ;psect for function _DISP_SetState
  7043  0A67                     _DISP_SetState:
  7044                           
  7045                           ;incstack = 0
  7046                           ; Regs used in _DISP_SetState: [wreg-fsr0h+status,2+status,0+btemp+1]
  7047                           ;DISP_SetState@DISPx stored from wreg
  7048  0A67  1283               	bcf	3,5	;RP0=0, select bank0
  7049  0A68  1303               	bcf	3,6	;RP1=0, select bank0
  7050  0A69  00D0               	movwf	DISP_SetState@DISPx
  7051  0A6A                     l2527:
  7052                           
  7053                           ;DISP.c: 73: void DISP_SetState(uint8_t DISPx, uint8_t State);DISP.c: 74: {;DISP.c: 75: 
      +                              switch(DISPx)
  7054  0A6A  2A7F               	goto	l2539
  7055  0A6B                     l2529:
  7056                           
  7057                           ;DISP.c: 78:             DISP_G[0].State = State;
  7058  0A6B  084D               	movf	DISP_SetState@State,w
  7059  0A6C  00FF               	movwf	btemp+1
  7060  0A6D  087F               	movf	btemp+1,w
  7061  0A6E  00B3               	movwf	_DISP_G	;volatile
  7062                           
  7063                           ;DISP.c: 79:             break;
  7064  0A6F  2A95               	goto	l325
  7065  0A70                     l2531:
  7066                           
  7067                           ;DISP.c: 81:             DISP_G[0].Blink = State;
  7068  0A70  084D               	movf	DISP_SetState@State,w
  7069  0A71  00FF               	movwf	btemp+1
  7070  0A72  087F               	movf	btemp+1,w
  7071  0A73  00B4               	movwf	_DISP_G+1	;volatile
  7072                           
  7073                           ;DISP.c: 82:             break;
  7074  0A74  2A95               	goto	l325
  7075  0A75                     l2533:
  7076                           
  7077                           ;DISP.c: 84:             DISP_G[1].State = State;
  7078  0A75  084D               	movf	DISP_SetState@State,w
  7079  0A76  00FF               	movwf	btemp+1
  7080  0A77  087F               	movf	btemp+1,w
  7081  0A78  00B7               	movwf	_DISP_G+4	;volatile
  7082                           
  7083                           ;DISP.c: 85:             break;
  7084  0A79  2A95               	goto	l325
  7085  0A7A                     l2535:
  7086                           
  7087                           ;DISP.c: 87:             DISP_G[1].Blink = State;
  7088  0A7A  084D               	movf	DISP_SetState@State,w
  7089  0A7B  00FF               	movwf	btemp+1
  7090  0A7C  087F               	movf	btemp+1,w
  7091  0A7D  00B8               	movwf	_DISP_G+5	;volatile
  7092                           
  7093                           ;DISP.c: 88:             break;
  7094  0A7E  2A95               	goto	l325
  7095  0A7F                     l2539:
  7096  0A7F  0850               	movf	DISP_SetState@DISPx,w
  7097  0A80  00CE               	movwf	??_DISP_SetState
  7098  0A81  01CF               	clrf	??_DISP_SetState+1
  7099                           
  7100                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7101                           ; Switch size 1, requested type "simple"
  7102                           ; Number of cases is 1, Range of values is 0 to 0
  7103                           ; switch strategies available:
  7104                           ; Name         Instructions Cycles
  7105                           ; simple_byte            4     3 (average)
  7106                           ; direct_byte           11     8 (fixed)
  7107                           ; jumptable            260     6 (fixed)
  7108                           ;	Chosen strategy is simple_byte
  7109  0A82  084F               	movf	??_DISP_SetState+1,w
  7110  0A83  3A00               	xorlw	0	; case 0
  7111  0A84  1903               	skipnz
  7112  0A85  2A87               	goto	l3645
  7113  0A86  2A95               	goto	l325
  7114  0A87                     l3645:
  7115                           
  7116                           ; Switch size 1, requested type "simple"
  7117                           ; Number of cases is 4, Range of values is 0 to 3
  7118                           ; switch strategies available:
  7119                           ; Name         Instructions Cycles
  7120                           ; simple_byte           13     7 (average)
  7121                           ; direct_byte           20     8 (fixed)
  7122                           ; jumptable            260     6 (fixed)
  7123                           ;	Chosen strategy is simple_byte
  7124  0A87  084E               	movf	??_DISP_SetState,w
  7125  0A88  3A00               	xorlw	0	; case 0
  7126  0A89  1903               	skipnz
  7127  0A8A  2A6B               	goto	l2529
  7128  0A8B  3A01               	xorlw	1	; case 1
  7129  0A8C  1903               	skipnz
  7130  0A8D  2A70               	goto	l2531
  7131  0A8E  3A03               	xorlw	3	; case 2
  7132  0A8F  1903               	skipnz
  7133  0A90  2A75               	goto	l2533
  7134  0A91  3A01               	xorlw	1	; case 3
  7135  0A92  1903               	skipnz
  7136  0A93  2A7A               	goto	l2535
  7137  0A94  2A95               	goto	l325
  7138  0A95                     l325:
  7139  0A95  0008               	return
  7140  0A96                     __end_of_DISP_SetState:
  7141                           
  7142                           	psect	text42
  7143  046D                     __ptext42:	
  7144 ;; *************** function _WH_NormalMode *****************
  7145 ;; Defined at:
  7146 ;;		line 99 in file "WH.c"
  7147 ;; Parameters:    Size  Location     Type
  7148 ;;		None
  7149 ;; Auto vars:     Size  Location     Type
  7150 ;;		None
  7151 ;; Return value:  Size  Location     Type
  7152 ;;                  1    wreg      void 
  7153 ;; Registers used:
  7154 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7155 ;; Tracked objects:
  7156 ;;		On entry : 0/0
  7157 ;;		On exit  : 0/0
  7158 ;;		Unchanged: 0/0
  7159 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7160 ;;      Params:         0       0       0       0       0
  7161 ;;      Locals:         0       0       0       0       0
  7162 ;;      Temps:          0       2       0       0       0
  7163 ;;      Totals:         0       2       0       0       0
  7164 ;;Total ram usage:        2 bytes
  7165 ;; Hardware stack levels used:    1
  7166 ;; Hardware stack levels required when called:    4
  7167 ;; This function calls:
  7168 ;;		_SSD_SetSymbol
  7169 ;;		_SW_GetState
  7170 ;;		___awdiv
  7171 ;;		___awmod
  7172 ;; This function is called by:
  7173 ;;		_WH_Task
  7174 ;; This function uses a non-reentrant model
  7175 ;;
  7176                           
  7177                           
  7178                           ;psect for function _WH_NormalMode
  7179  046D                     _WH_NormalMode:
  7180  046D                     l2777:	
  7181                           ;incstack = 0
  7182                           ; Regs used in _WH_NormalMode: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7183                           
  7184                           
  7185                           ;WH.c: 101:     WH_PreState_G = WH_State_G;
  7186  046D  1283               	bcf	3,5	;RP0=0, select bank0
  7187  046E  1303               	bcf	3,6	;RP1=0, select bank0
  7188  046F  084B               	movf	_WH_State_G,w	;volatile
  7189  0470  00FF               	movwf	btemp+1
  7190  0471  087F               	movf	btemp+1,w
  7191  0472  00CA               	movwf	_WH_PreState_G	;volatile
  7192  0473                     l2779:
  7193                           
  7194                           ;WH.c: 102:     SSD_SetSymbol((5), WH_AvgTemp_G%10);
  7195  0473  300A               	movlw	10
  7196  0474  00D5               	movwf	___awmod@divisor
  7197  0475  3000               	movlw	0
  7198  0476  00D6               	movwf	___awmod@divisor+1
  7199  0477  0849               	movf	_WH_AvgTemp_G,w	;volatile
  7200  0478  00DF               	movwf	??_WH_NormalMode
  7201  0479  01E0               	clrf	??_WH_NormalMode+1
  7202  047A  085F               	movf	??_WH_NormalMode,w
  7203  047B  00D7               	movwf	___awmod@dividend
  7204  047C  0860               	movf	??_WH_NormalMode+1,w
  7205  047D  00D8               	movwf	___awmod@dividend+1
  7206  047E  120A  158A  2617  120A  118A  	fcall	___awmod
  7207  0483  1283               	bcf	3,5	;RP0=0, select bank0
  7208  0484  1303               	bcf	3,6	;RP1=0, select bank0
  7209  0485  0855               	movf	?___awmod,w
  7210  0486  00FF               	movwf	btemp+1
  7211  0487  087F               	movf	btemp+1,w
  7212  0488  00DB               	movwf	SSD_SetSymbol@Symbol
  7213  0489  3005               	movlw	5
  7214  048A  120A  158A  2238  120A  118A  	fcall	_SSD_SetSymbol
  7215  048F                     l2781:
  7216                           
  7217                           ;WH.c: 103:     SSD_SetSymbol((4), (WH_AvgTemp_G/10)%10);
  7218  048F  300A               	movlw	10
  7219  0490  1283               	bcf	3,5	;RP0=0, select bank0
  7220  0491  1303               	bcf	3,6	;RP1=0, select bank0
  7221  0492  00D5               	movwf	___awmod@divisor
  7222  0493  3000               	movlw	0
  7223  0494  00D6               	movwf	___awmod@divisor+1
  7224  0495  300A               	movlw	10
  7225  0496  00CD               	movwf	___awdiv@divisor
  7226  0497  3000               	movlw	0
  7227  0498  00CE               	movwf	___awdiv@divisor+1
  7228  0499  0849               	movf	_WH_AvgTemp_G,w	;volatile
  7229  049A  00DF               	movwf	??_WH_NormalMode
  7230  049B  01E0               	clrf	??_WH_NormalMode+1
  7231  049C  085F               	movf	??_WH_NormalMode,w
  7232  049D  00CF               	movwf	___awdiv@dividend
  7233  049E  0860               	movf	??_WH_NormalMode+1,w
  7234  049F  00D0               	movwf	___awdiv@dividend+1
  7235  04A0  120A  118A  2746  120A  118A  	fcall	___awdiv
  7236  04A5  1283               	bcf	3,5	;RP0=0, select bank0
  7237  04A6  1303               	bcf	3,6	;RP1=0, select bank0
  7238  04A7  084E               	movf	?___awdiv+1,w
  7239  04A8  00D8               	movwf	___awmod@dividend+1
  7240  04A9  084D               	movf	?___awdiv,w
  7241  04AA  00D7               	movwf	___awmod@dividend
  7242  04AB  120A  158A  2617  120A  118A  	fcall	___awmod
  7243  04B0  1283               	bcf	3,5	;RP0=0, select bank0
  7244  04B1  1303               	bcf	3,6	;RP1=0, select bank0
  7245  04B2  0855               	movf	?___awmod,w
  7246  04B3  00FF               	movwf	btemp+1
  7247  04B4  087F               	movf	btemp+1,w
  7248  04B5  00DB               	movwf	SSD_SetSymbol@Symbol
  7249  04B6  3004               	movlw	4
  7250  04B7  120A  158A  2238  120A  118A  	fcall	_SSD_SetSymbol
  7251  04BC                     l2783:
  7252                           
  7253                           ;WH.c: 104:     if(SW_GetState((2)) || SW_GetState((1)))
  7254  04BC  3002               	movlw	2
  7255  04BD  120A  158A  21DE  120A  118A  	fcall	_SW_GetState
  7256  04C2  3A00               	xorlw	0
  7257  04C3  1D03               	skipz
  7258  04C4  2CC6               	goto	u1741
  7259  04C5  2CC7               	goto	u1740
  7260  04C6                     u1741:
  7261  04C6  2CD2               	goto	l2787
  7262  04C7                     u1740:
  7263  04C7                     l2785:
  7264  04C7  3001               	movlw	1
  7265  04C8  120A  158A  21DE  120A  118A  	fcall	_SW_GetState
  7266  04CD  3A00               	xorlw	0
  7267  04CE  1903               	skipnz
  7268  04CF  2CD1               	goto	u1751
  7269  04D0  2CD2               	goto	u1750
  7270  04D1                     u1751:
  7271  04D1  2CD9               	goto	l2789
  7272  04D2                     u1750:
  7273  04D2                     l2787:
  7274                           
  7275                           ;WH.c: 105:     {;WH.c: 106:         WH_State_G = TempSetMode;
  7276  04D2  3003               	movlw	3
  7277  04D3  00FF               	movwf	btemp+1
  7278  04D4  087F               	movf	btemp+1,w
  7279  04D5  1283               	bcf	3,5	;RP0=0, select bank0
  7280  04D6  1303               	bcf	3,6	;RP1=0, select bank0
  7281  04D7  00CB               	movwf	_WH_State_G	;volatile
  7282                           
  7283                           ;WH.c: 107:     }else if((SW_GetState((0))))
  7284  04D8  2CF1               	goto	l421
  7285  04D9                     l2789:
  7286  04D9  3000               	movlw	0
  7287  04DA  120A  158A  21DE  120A  118A  	fcall	_SW_GetState
  7288  04DF  3A00               	xorlw	0
  7289  04E0  1903               	skipnz
  7290  04E1  2CE3               	goto	u1761
  7291  04E2  2CE4               	goto	u1760
  7292  04E3                     u1761:
  7293  04E3  2CEB               	goto	l2793
  7294  04E4                     u1760:
  7295  04E4                     l2791:
  7296                           
  7297                           ;WH.c: 108:     {;WH.c: 109:         WH_State_G = ResetMode;
  7298  04E4  3004               	movlw	4
  7299  04E5  00FF               	movwf	btemp+1
  7300  04E6  087F               	movf	btemp+1,w
  7301  04E7  1283               	bcf	3,5	;RP0=0, select bank0
  7302  04E8  1303               	bcf	3,6	;RP1=0, select bank0
  7303  04E9  00CB               	movwf	_WH_State_G	;volatile
  7304                           
  7305                           ;WH.c: 110:     }else
  7306  04EA  2CF1               	goto	l421
  7307  04EB                     l2793:
  7308                           
  7309                           ;WH.c: 111:     {;WH.c: 112:         WH_State_G = OperationMode;
  7310  04EB  3001               	movlw	1
  7311  04EC  00FF               	movwf	btemp+1
  7312  04ED  087F               	movf	btemp+1,w
  7313  04EE  1283               	bcf	3,5	;RP0=0, select bank0
  7314  04EF  1303               	bcf	3,6	;RP1=0, select bank0
  7315  04F0  00CB               	movwf	_WH_State_G	;volatile
  7316  04F1                     l421:
  7317  04F1  0008               	return
  7318  04F2                     __end_of_WH_NormalMode:
  7319                           
  7320                           	psect	text43
  7321  0E17                     __ptext43:	
  7322 ;; *************** function ___awmod *****************
  7323 ;; Defined at:
  7324 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\awmod.c"
  7325 ;; Parameters:    Size  Location     Type
  7326 ;;  divisor         2    8[BANK0 ] int 
  7327 ;;  dividend        2   10[BANK0 ] int 
  7328 ;; Auto vars:     Size  Location     Type
  7329 ;;  sign            1   13[BANK0 ] unsigned char 
  7330 ;;  counter         1   12[BANK0 ] unsigned char 
  7331 ;; Return value:  Size  Location     Type
  7332 ;;                  2    8[BANK0 ] int 
  7333 ;; Registers used:
  7334 ;;		wreg, status,2, status,0, btemp+1
  7335 ;; Tracked objects:
  7336 ;;		On entry : 0/0
  7337 ;;		On exit  : 0/0
  7338 ;;		Unchanged: 0/0
  7339 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7340 ;;      Params:         0       4       0       0       0
  7341 ;;      Locals:         0       2       0       0       0
  7342 ;;      Temps:          0       0       0       0       0
  7343 ;;      Totals:         0       6       0       0       0
  7344 ;;Total ram usage:        6 bytes
  7345 ;; Hardware stack levels used:    1
  7346 ;; Hardware stack levels required when called:    3
  7347 ;; This function calls:
  7348 ;;		Nothing
  7349 ;; This function is called by:
  7350 ;;		_WH_NormalMode
  7351 ;;		_WH_TempSetMode
  7352 ;; This function uses a non-reentrant model
  7353 ;;
  7354                           
  7355                           
  7356                           ;psect for function ___awmod
  7357  0E17                     ___awmod:
  7358  0E17                     l2633:	
  7359                           ;incstack = 0
  7360                           ; Regs used in ___awmod: [wreg+status,2+status,0+btemp+1]
  7361                           
  7362  0E17  1283               	bcf	3,5	;RP0=0, select bank0
  7363  0E18  1303               	bcf	3,6	;RP1=0, select bank0
  7364  0E19  01DA               	clrf	___awmod@sign
  7365  0E1A                     l2635:
  7366  0E1A  1FD8               	btfss	___awmod@dividend+1,7
  7367  0E1B  2E1D               	goto	u1561
  7368  0E1C  2E1E               	goto	u1560
  7369  0E1D                     u1561:
  7370  0E1D  2E25               	goto	l2641
  7371  0E1E                     u1560:
  7372  0E1E                     l2637:
  7373  0E1E  09D7               	comf	___awmod@dividend,f
  7374  0E1F  09D8               	comf	___awmod@dividend+1,f
  7375  0E20  0AD7               	incf	___awmod@dividend,f
  7376  0E21  1903               	skipnz
  7377  0E22  0AD8               	incf	___awmod@dividend+1,f
  7378  0E23                     l2639:
  7379  0E23  01DA               	clrf	___awmod@sign
  7380  0E24  0ADA               	incf	___awmod@sign,f
  7381  0E25                     l2641:
  7382  0E25  1FD6               	btfss	___awmod@divisor+1,7
  7383  0E26  2E28               	goto	u1571
  7384  0E27  2E29               	goto	u1570
  7385  0E28                     u1571:
  7386  0E28  2E2E               	goto	l2645
  7387  0E29                     u1570:
  7388  0E29                     l2643:
  7389  0E29  09D5               	comf	___awmod@divisor,f
  7390  0E2A  09D6               	comf	___awmod@divisor+1,f
  7391  0E2B  0AD5               	incf	___awmod@divisor,f
  7392  0E2C  1903               	skipnz
  7393  0E2D  0AD6               	incf	___awmod@divisor+1,f
  7394  0E2E                     l2645:
  7395  0E2E  0855               	movf	___awmod@divisor,w
  7396  0E2F  0456               	iorwf	___awmod@divisor+1,w
  7397  0E30  1903               	btfsc	3,2
  7398  0E31  2E33               	goto	u1581
  7399  0E32  2E34               	goto	u1580
  7400  0E33                     u1581:
  7401  0E33  2E63               	goto	l2663
  7402  0E34                     u1580:
  7403  0E34                     l2647:
  7404  0E34  01D9               	clrf	___awmod@counter
  7405  0E35  0AD9               	incf	___awmod@counter,f
  7406  0E36  2E42               	goto	l2653
  7407  0E37                     l2649:
  7408  0E37  3001               	movlw	1
  7409  0E38                     u1595:
  7410  0E38  1003               	clrc
  7411  0E39  0DD5               	rlf	___awmod@divisor,f
  7412  0E3A  0DD6               	rlf	___awmod@divisor+1,f
  7413  0E3B  3EFF               	addlw	-1
  7414  0E3C  1D03               	skipz
  7415  0E3D  2E38               	goto	u1595
  7416  0E3E                     l2651:
  7417  0E3E  3001               	movlw	1
  7418  0E3F  00FF               	movwf	btemp+1
  7419  0E40  087F               	movf	btemp+1,w
  7420  0E41  07D9               	addwf	___awmod@counter,f
  7421  0E42                     l2653:
  7422  0E42  1FD6               	btfss	___awmod@divisor+1,7
  7423  0E43  2E45               	goto	u1601
  7424  0E44  2E46               	goto	u1600
  7425  0E45                     u1601:
  7426  0E45  2E37               	goto	l2649
  7427  0E46                     u1600:
  7428  0E46                     l2655:
  7429  0E46  0856               	movf	___awmod@divisor+1,w
  7430  0E47  0258               	subwf	___awmod@dividend+1,w
  7431  0E48  1D03               	skipz
  7432  0E49  2E4C               	goto	u1615
  7433  0E4A  0855               	movf	___awmod@divisor,w
  7434  0E4B  0257               	subwf	___awmod@dividend,w
  7435  0E4C                     u1615:
  7436  0E4C  1C03               	skipc
  7437  0E4D  2E4F               	goto	u1611
  7438  0E4E  2E50               	goto	u1610
  7439  0E4F                     u1611:
  7440  0E4F  2E56               	goto	l2659
  7441  0E50                     u1610:
  7442  0E50                     l2657:
  7443  0E50  0855               	movf	___awmod@divisor,w
  7444  0E51  02D7               	subwf	___awmod@dividend,f
  7445  0E52  0856               	movf	___awmod@divisor+1,w
  7446  0E53  1C03               	skipc
  7447  0E54  03D8               	decf	___awmod@dividend+1,f
  7448  0E55  02D8               	subwf	___awmod@dividend+1,f
  7449  0E56                     l2659:
  7450  0E56  3001               	movlw	1
  7451  0E57                     u1625:
  7452  0E57  1003               	clrc
  7453  0E58  0CD6               	rrf	___awmod@divisor+1,f
  7454  0E59  0CD5               	rrf	___awmod@divisor,f
  7455  0E5A  3EFF               	addlw	-1
  7456  0E5B  1D03               	skipz
  7457  0E5C  2E57               	goto	u1625
  7458  0E5D                     l2661:
  7459  0E5D  3001               	movlw	1
  7460  0E5E  02D9               	subwf	___awmod@counter,f
  7461  0E5F  1D03               	btfss	3,2
  7462  0E60  2E62               	goto	u1631
  7463  0E61  2E63               	goto	u1630
  7464  0E62                     u1631:
  7465  0E62  2E46               	goto	l2655
  7466  0E63                     u1630:
  7467  0E63                     l2663:
  7468  0E63  085A               	movf	___awmod@sign,w
  7469  0E64  1903               	btfsc	3,2
  7470  0E65  2E67               	goto	u1641
  7471  0E66  2E68               	goto	u1640
  7472  0E67                     u1641:
  7473  0E67  2E6D               	goto	l2667
  7474  0E68                     u1640:
  7475  0E68                     l2665:
  7476  0E68  09D7               	comf	___awmod@dividend,f
  7477  0E69  09D8               	comf	___awmod@dividend+1,f
  7478  0E6A  0AD7               	incf	___awmod@dividend,f
  7479  0E6B  1903               	skipnz
  7480  0E6C  0AD8               	incf	___awmod@dividend+1,f
  7481  0E6D                     l2667:
  7482  0E6D  0858               	movf	___awmod@dividend+1,w
  7483  0E6E  00D6               	movwf	?___awmod+1
  7484  0E6F  0857               	movf	___awmod@dividend,w
  7485  0E70  00D5               	movwf	?___awmod
  7486  0E71                     l873:
  7487  0E71  0008               	return
  7488  0E72                     __end_of___awmod:
  7489                           
  7490                           	psect	text44
  7491  0746                     __ptext44:	
  7492 ;; *************** function ___awdiv *****************
  7493 ;; Defined at:
  7494 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\awdiv.c"
  7495 ;; Parameters:    Size  Location     Type
  7496 ;;  divisor         2    0[BANK0 ] int 
  7497 ;;  dividend        2    2[BANK0 ] int 
  7498 ;; Auto vars:     Size  Location     Type
  7499 ;;  quotient        2    6[BANK0 ] int 
  7500 ;;  sign            1    5[BANK0 ] unsigned char 
  7501 ;;  counter         1    4[BANK0 ] unsigned char 
  7502 ;; Return value:  Size  Location     Type
  7503 ;;                  2    0[BANK0 ] int 
  7504 ;; Registers used:
  7505 ;;		wreg, status,2, status,0, btemp+1
  7506 ;; Tracked objects:
  7507 ;;		On entry : 0/0
  7508 ;;		On exit  : 0/0
  7509 ;;		Unchanged: 0/0
  7510 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7511 ;;      Params:         0       4       0       0       0
  7512 ;;      Locals:         0       4       0       0       0
  7513 ;;      Temps:          0       0       0       0       0
  7514 ;;      Totals:         0       8       0       0       0
  7515 ;;Total ram usage:        8 bytes
  7516 ;; Hardware stack levels used:    1
  7517 ;; Hardware stack levels required when called:    3
  7518 ;; This function calls:
  7519 ;;		Nothing
  7520 ;; This function is called by:
  7521 ;;		_WH_NormalMode
  7522 ;;		_WH_TempSetMode
  7523 ;; This function uses a non-reentrant model
  7524 ;;
  7525                           
  7526                           
  7527                           ;psect for function ___awdiv
  7528  0746                     ___awdiv:
  7529  0746                     l2589:	
  7530                           ;incstack = 0
  7531                           ; Regs used in ___awdiv: [wreg+status,2+status,0+btemp+1]
  7532                           
  7533  0746  1283               	bcf	3,5	;RP0=0, select bank0
  7534  0747  1303               	bcf	3,6	;RP1=0, select bank0
  7535  0748  01D2               	clrf	___awdiv@sign
  7536  0749                     l2591:
  7537  0749  1FCE               	btfss	___awdiv@divisor+1,7
  7538  074A  2F4C               	goto	u1461
  7539  074B  2F4D               	goto	u1460
  7540  074C                     u1461:
  7541  074C  2F54               	goto	l2597
  7542  074D                     u1460:
  7543  074D                     l2593:
  7544  074D  09CD               	comf	___awdiv@divisor,f
  7545  074E  09CE               	comf	___awdiv@divisor+1,f
  7546  074F  0ACD               	incf	___awdiv@divisor,f
  7547  0750  1903               	skipnz
  7548  0751  0ACE               	incf	___awdiv@divisor+1,f
  7549  0752                     l2595:
  7550  0752  01D2               	clrf	___awdiv@sign
  7551  0753  0AD2               	incf	___awdiv@sign,f
  7552  0754                     l2597:
  7553  0754  1FD0               	btfss	___awdiv@dividend+1,7
  7554  0755  2F57               	goto	u1471
  7555  0756  2F58               	goto	u1470
  7556  0757                     u1471:
  7557  0757  2F61               	goto	l2603
  7558  0758                     u1470:
  7559  0758                     l2599:
  7560  0758  09CF               	comf	___awdiv@dividend,f
  7561  0759  09D0               	comf	___awdiv@dividend+1,f
  7562  075A  0ACF               	incf	___awdiv@dividend,f
  7563  075B  1903               	skipnz
  7564  075C  0AD0               	incf	___awdiv@dividend+1,f
  7565  075D                     l2601:
  7566  075D  3001               	movlw	1
  7567  075E  00FF               	movwf	btemp+1
  7568  075F  087F               	movf	btemp+1,w
  7569  0760  06D2               	xorwf	___awdiv@sign,f
  7570  0761                     l2603:
  7571  0761  01D3               	clrf	___awdiv@quotient
  7572  0762  01D4               	clrf	___awdiv@quotient+1
  7573  0763                     l2605:
  7574  0763  084D               	movf	___awdiv@divisor,w
  7575  0764  044E               	iorwf	___awdiv@divisor+1,w
  7576  0765  1903               	btfsc	3,2
  7577  0766  2F68               	goto	u1481
  7578  0767  2F69               	goto	u1480
  7579  0768                     u1481:
  7580  0768  2FA0               	goto	l2625
  7581  0769                     u1480:
  7582  0769                     l2607:
  7583  0769  01D1               	clrf	___awdiv@counter
  7584  076A  0AD1               	incf	___awdiv@counter,f
  7585  076B  2F77               	goto	l2613
  7586  076C                     l2609:
  7587  076C  3001               	movlw	1
  7588  076D                     u1495:
  7589  076D  1003               	clrc
  7590  076E  0DCD               	rlf	___awdiv@divisor,f
  7591  076F  0DCE               	rlf	___awdiv@divisor+1,f
  7592  0770  3EFF               	addlw	-1
  7593  0771  1D03               	skipz
  7594  0772  2F6D               	goto	u1495
  7595  0773                     l2611:
  7596  0773  3001               	movlw	1
  7597  0774  00FF               	movwf	btemp+1
  7598  0775  087F               	movf	btemp+1,w
  7599  0776  07D1               	addwf	___awdiv@counter,f
  7600  0777                     l2613:
  7601  0777  1FCE               	btfss	___awdiv@divisor+1,7
  7602  0778  2F7A               	goto	u1501
  7603  0779  2F7B               	goto	u1500
  7604  077A                     u1501:
  7605  077A  2F6C               	goto	l2609
  7606  077B                     u1500:
  7607  077B                     l2615:
  7608  077B  3001               	movlw	1
  7609  077C                     u1515:
  7610  077C  1003               	clrc
  7611  077D  0DD3               	rlf	___awdiv@quotient,f
  7612  077E  0DD4               	rlf	___awdiv@quotient+1,f
  7613  077F  3EFF               	addlw	-1
  7614  0780  1D03               	skipz
  7615  0781  2F7C               	goto	u1515
  7616  0782  084E               	movf	___awdiv@divisor+1,w
  7617  0783  0250               	subwf	___awdiv@dividend+1,w
  7618  0784  1D03               	skipz
  7619  0785  2F88               	goto	u1525
  7620  0786  084D               	movf	___awdiv@divisor,w
  7621  0787  024F               	subwf	___awdiv@dividend,w
  7622  0788                     u1525:
  7623  0788  1C03               	skipc
  7624  0789  2F8B               	goto	u1521
  7625  078A  2F8C               	goto	u1520
  7626  078B                     u1521:
  7627  078B  2F93               	goto	l2621
  7628  078C                     u1520:
  7629  078C                     l2617:
  7630  078C  084D               	movf	___awdiv@divisor,w
  7631  078D  02CF               	subwf	___awdiv@dividend,f
  7632  078E  084E               	movf	___awdiv@divisor+1,w
  7633  078F  1C03               	skipc
  7634  0790  03D0               	decf	___awdiv@dividend+1,f
  7635  0791  02D0               	subwf	___awdiv@dividend+1,f
  7636  0792                     l2619:
  7637  0792  1453               	bsf	___awdiv@quotient,0
  7638  0793                     l2621:
  7639  0793  3001               	movlw	1
  7640  0794                     u1535:
  7641  0794  1003               	clrc
  7642  0795  0CCE               	rrf	___awdiv@divisor+1,f
  7643  0796  0CCD               	rrf	___awdiv@divisor,f
  7644  0797  3EFF               	addlw	-1
  7645  0798  1D03               	skipz
  7646  0799  2F94               	goto	u1535
  7647  079A                     l2623:
  7648  079A  3001               	movlw	1
  7649  079B  02D1               	subwf	___awdiv@counter,f
  7650  079C  1D03               	btfss	3,2
  7651  079D  2F9F               	goto	u1541
  7652  079E  2FA0               	goto	u1540
  7653  079F                     u1541:
  7654  079F  2F7B               	goto	l2615
  7655  07A0                     u1540:
  7656  07A0                     l2625:
  7657  07A0  0852               	movf	___awdiv@sign,w
  7658  07A1  1903               	btfsc	3,2
  7659  07A2  2FA4               	goto	u1551
  7660  07A3  2FA5               	goto	u1550
  7661  07A4                     u1551:
  7662  07A4  2FAA               	goto	l2629
  7663  07A5                     u1550:
  7664  07A5                     l2627:
  7665  07A5  09D3               	comf	___awdiv@quotient,f
  7666  07A6  09D4               	comf	___awdiv@quotient+1,f
  7667  07A7  0AD3               	incf	___awdiv@quotient,f
  7668  07A8  1903               	skipnz
  7669  07A9  0AD4               	incf	___awdiv@quotient+1,f
  7670  07AA                     l2629:
  7671  07AA  0854               	movf	___awdiv@quotient+1,w
  7672  07AB  00CE               	movwf	?___awdiv+1
  7673  07AC  0853               	movf	___awdiv@quotient,w
  7674  07AD  00CD               	movwf	?___awdiv
  7675  07AE                     l860:
  7676  07AE  0008               	return
  7677  07AF                     __end_of___awdiv:
  7678                           
  7679                           	psect	text45
  7680  09DE                     __ptext45:	
  7681 ;; *************** function _SW_GetState *****************
  7682 ;; Defined at:
  7683 ;;		line 75 in file "SW.c"
  7684 ;; Parameters:    Size  Location     Type
  7685 ;;  SWx             1    wreg     unsigned char 
  7686 ;; Auto vars:     Size  Location     Type
  7687 ;;  SWx             1    2[BANK0 ] unsigned char 
  7688 ;;  State           1    3[BANK0 ] unsigned char 
  7689 ;; Return value:  Size  Location     Type
  7690 ;;                  1    wreg      unsigned char 
  7691 ;; Registers used:
  7692 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  7693 ;; Tracked objects:
  7694 ;;		On entry : 0/0
  7695 ;;		On exit  : 0/0
  7696 ;;		Unchanged: 0/0
  7697 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7698 ;;      Params:         0       0       0       0       0
  7699 ;;      Locals:         0       2       0       0       0
  7700 ;;      Temps:          0       2       0       0       0
  7701 ;;      Totals:         0       4       0       0       0
  7702 ;;Total ram usage:        4 bytes
  7703 ;; Hardware stack levels used:    1
  7704 ;; Hardware stack levels required when called:    3
  7705 ;; This function calls:
  7706 ;;		Nothing
  7707 ;; This function is called by:
  7708 ;;		_WH_OffMode
  7709 ;;		_WH_NormalMode
  7710 ;;		_WH_TempSetMode
  7711 ;; This function uses a non-reentrant model
  7712 ;;
  7713                           
  7714                           
  7715                           ;psect for function _SW_GetState
  7716  09DE                     _SW_GetState:
  7717                           
  7718                           ;incstack = 0
  7719                           ; Regs used in _SW_GetState: [wreg-fsr0h+status,2+status,0+btemp+1]
  7720                           ;SW_GetState@SWx stored from wreg
  7721  09DE  1283               	bcf	3,5	;RP0=0, select bank0
  7722  09DF  1303               	bcf	3,6	;RP1=0, select bank0
  7723  09E0  00CF               	movwf	SW_GetState@SWx
  7724  09E1                     l2471:
  7725                           
  7726                           ;SW.c: 75: uint8_t SW_GetState(uint8_t SWx);SW.c: 76: {;SW.c: 77:     uint8_t State;;SW.
      +                          c: 78:     switch(SWx)
  7727  09E1  29F4               	goto	l2487
  7728  09E2                     l2473:
  7729                           
  7730                           ;SW.c: 81:             State = SW_G[0].State;
  7731  09E2  082A               	movf	_SW_G,w	;volatile
  7732  09E3  00FF               	movwf	btemp+1
  7733  09E4  087F               	movf	btemp+1,w
  7734  09E5  00D0               	movwf	SW_GetState@State
  7735  09E6                     l2475:
  7736                           
  7737                           ;SW.c: 82:             SW_G[0].State = 0;
  7738  09E6  01AA               	clrf	_SW_G	;volatile
  7739                           
  7740                           ;SW.c: 83:             break;
  7741  09E7  2A07               	goto	l2489
  7742  09E8                     l2477:
  7743                           
  7744                           ;SW.c: 85:             State = SW_G[1].State;
  7745  09E8  082D               	movf	_SW_G+3,w	;volatile
  7746  09E9  00FF               	movwf	btemp+1
  7747  09EA  087F               	movf	btemp+1,w
  7748  09EB  00D0               	movwf	SW_GetState@State
  7749  09EC                     l2479:
  7750                           
  7751                           ;SW.c: 86:             SW_G[1].State = 0;
  7752  09EC  01AD               	clrf	_SW_G+3	;volatile
  7753                           
  7754                           ;SW.c: 87:             break;
  7755  09ED  2A07               	goto	l2489
  7756  09EE                     l2481:
  7757                           
  7758                           ;SW.c: 89:             State = SW_G[2].State;
  7759  09EE  0830               	movf	_SW_G+6,w	;volatile
  7760  09EF  00FF               	movwf	btemp+1
  7761  09F0  087F               	movf	btemp+1,w
  7762  09F1  00D0               	movwf	SW_GetState@State
  7763  09F2                     l2483:
  7764                           
  7765                           ;SW.c: 90:             SW_G[2].State = 0;
  7766  09F2  01B0               	clrf	_SW_G+6	;volatile
  7767                           
  7768                           ;SW.c: 91:             break;
  7769  09F3  2A07               	goto	l2489
  7770  09F4                     l2487:
  7771  09F4  084F               	movf	SW_GetState@SWx,w
  7772  09F5  00CD               	movwf	??_SW_GetState
  7773  09F6  01CE               	clrf	??_SW_GetState+1
  7774                           
  7775                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7776                           ; Switch size 1, requested type "simple"
  7777                           ; Number of cases is 1, Range of values is 0 to 0
  7778                           ; switch strategies available:
  7779                           ; Name         Instructions Cycles
  7780                           ; simple_byte            4     3 (average)
  7781                           ; direct_byte           11     8 (fixed)
  7782                           ; jumptable            260     6 (fixed)
  7783                           ;	Chosen strategy is simple_byte
  7784  09F7  084E               	movf	??_SW_GetState+1,w
  7785  09F8  3A00               	xorlw	0	; case 0
  7786  09F9  1903               	skipnz
  7787  09FA  29FC               	goto	l3647
  7788  09FB  2A07               	goto	l2489
  7789  09FC                     l3647:
  7790                           
  7791                           ; Switch size 1, requested type "simple"
  7792                           ; Number of cases is 3, Range of values is 0 to 2
  7793                           ; switch strategies available:
  7794                           ; Name         Instructions Cycles
  7795                           ; simple_byte           10     6 (average)
  7796                           ; direct_byte           17     8 (fixed)
  7797                           ; jumptable            260     6 (fixed)
  7798                           ;	Chosen strategy is simple_byte
  7799  09FC  084D               	movf	??_SW_GetState,w
  7800  09FD  3A00               	xorlw	0	; case 0
  7801  09FE  1903               	skipnz
  7802  09FF  29E2               	goto	l2473
  7803  0A00  3A01               	xorlw	1	; case 1
  7804  0A01  1903               	skipnz
  7805  0A02  29E8               	goto	l2477
  7806  0A03  3A03               	xorlw	3	; case 2
  7807  0A04  1903               	skipnz
  7808  0A05  29EE               	goto	l2481
  7809  0A06  2A07               	goto	l2489
  7810  0A07                     l2489:
  7811                           
  7812                           ;SW.c: 93:     return State;
  7813  0A07  0850               	movf	SW_GetState@State,w
  7814  0A08                     l146:
  7815  0A08  0008               	return
  7816  0A09                     __end_of_SW_GetState:
  7817                           
  7818                           	psect	text46
  7819  0A38                     __ptext46:	
  7820 ;; *************** function _SSD_SetSymbol *****************
  7821 ;; Defined at:
  7822 ;;		line 89 in file "SSD.c"
  7823 ;; Parameters:    Size  Location     Type
  7824 ;;  SSDx            1    wreg     unsigned char 
  7825 ;;  Symbol          1   14[BANK0 ] unsigned char 
  7826 ;; Auto vars:     Size  Location     Type
  7827 ;;  SSDx            1   17[BANK0 ] unsigned char 
  7828 ;; Return value:  Size  Location     Type
  7829 ;;                  1    wreg      void 
  7830 ;; Registers used:
  7831 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  7832 ;; Tracked objects:
  7833 ;;		On entry : 0/0
  7834 ;;		On exit  : 0/0
  7835 ;;		Unchanged: 0/0
  7836 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7837 ;;      Params:         0       1       0       0       0
  7838 ;;      Locals:         0       1       0       0       0
  7839 ;;      Temps:          0       2       0       0       0
  7840 ;;      Totals:         0       4       0       0       0
  7841 ;;Total ram usage:        4 bytes
  7842 ;; Hardware stack levels used:    1
  7843 ;; Hardware stack levels required when called:    3
  7844 ;; This function calls:
  7845 ;;		Nothing
  7846 ;; This function is called by:
  7847 ;;		_WH_NormalMode
  7848 ;;		_WH_TempSetMode
  7849 ;; This function uses a non-reentrant model
  7850 ;;
  7851                           
  7852                           
  7853                           ;psect for function _SSD_SetSymbol
  7854  0A38                     _SSD_SetSymbol:
  7855                           
  7856                           ;incstack = 0
  7857                           ; Regs used in _SSD_SetSymbol: [wreg-fsr0h+status,2+status,0+btemp+1]
  7858                           ;SSD_SetSymbol@SSDx stored from wreg
  7859  0A38  1283               	bcf	3,5	;RP0=0, select bank0
  7860  0A39  1303               	bcf	3,6	;RP1=0, select bank0
  7861  0A3A  00DE               	movwf	SSD_SetSymbol@SSDx
  7862  0A3B                     l2451:
  7863                           
  7864                           ;SSD.c: 89: void SSD_SetSymbol(uint8_t SSDx, uint8_t Symbol);SSD.c: 90: {;SSD.c: 91:    
      +                           switch(SSDx)
  7865  0A3B  2A50               	goto	l2463
  7866  0A3C                     l2453:
  7867                           
  7868                           ;SSD.c: 94:             SSD_G[0].Symbol = Symbol;
  7869  0A3C  085B               	movf	SSD_SetSymbol@Symbol,w
  7870  0A3D  00FF               	movwf	btemp+1
  7871  0A3E  087F               	movf	btemp+1,w
  7872  0A3F  00BC               	movwf	_SSD_G+1	;volatile
  7873                           
  7874                           ;SSD.c: 95:             break;
  7875  0A40  2A66               	goto	l100
  7876  0A41                     l2455:
  7877                           
  7878                           ;SSD.c: 97:             SSD_G[1].Symbol = Symbol;
  7879  0A41  085B               	movf	SSD_SetSymbol@Symbol,w
  7880  0A42  00FF               	movwf	btemp+1
  7881  0A43  087F               	movf	btemp+1,w
  7882  0A44  00BE               	movwf	_SSD_G+3	;volatile
  7883                           
  7884                           ;SSD.c: 98:             break;
  7885  0A45  2A66               	goto	l100
  7886  0A46                     l2457:
  7887                           
  7888                           ;SSD.c: 100:             SSD_G[2].Symbol = Symbol;
  7889  0A46  085B               	movf	SSD_SetSymbol@Symbol,w
  7890  0A47  00FF               	movwf	btemp+1
  7891  0A48  087F               	movf	btemp+1,w
  7892  0A49  00C0               	movwf	_SSD_G+5	;volatile
  7893                           
  7894                           ;SSD.c: 101:             break;
  7895  0A4A  2A66               	goto	l100
  7896  0A4B                     l2459:
  7897                           
  7898                           ;SSD.c: 103:             SSD_G[3].Symbol = Symbol;
  7899  0A4B  085B               	movf	SSD_SetSymbol@Symbol,w
  7900  0A4C  00FF               	movwf	btemp+1
  7901  0A4D  087F               	movf	btemp+1,w
  7902  0A4E  00C2               	movwf	_SSD_G+7	;volatile
  7903                           
  7904                           ;SSD.c: 104:             break;
  7905  0A4F  2A66               	goto	l100
  7906  0A50                     l2463:
  7907  0A50  085E               	movf	SSD_SetSymbol@SSDx,w
  7908  0A51  00DC               	movwf	??_SSD_SetSymbol
  7909  0A52  01DD               	clrf	??_SSD_SetSymbol+1
  7910                           
  7911                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7912                           ; Switch size 1, requested type "simple"
  7913                           ; Number of cases is 1, Range of values is 0 to 0
  7914                           ; switch strategies available:
  7915                           ; Name         Instructions Cycles
  7916                           ; simple_byte            4     3 (average)
  7917                           ; direct_byte           11     8 (fixed)
  7918                           ; jumptable            260     6 (fixed)
  7919                           ;	Chosen strategy is simple_byte
  7920  0A53  085D               	movf	??_SSD_SetSymbol+1,w
  7921  0A54  3A00               	xorlw	0	; case 0
  7922  0A55  1903               	skipnz
  7923  0A56  2A58               	goto	l3649
  7924  0A57  2A66               	goto	l100
  7925  0A58                     l3649:
  7926                           
  7927                           ; Switch size 1, requested type "simple"
  7928                           ; Number of cases is 4, Range of values is 2 to 5
  7929                           ; switch strategies available:
  7930                           ; Name         Instructions Cycles
  7931                           ; simple_byte           13     7 (average)
  7932                           ; direct_byte           23    11 (fixed)
  7933                           ; jumptable            263     9 (fixed)
  7934                           ;	Chosen strategy is simple_byte
  7935  0A58  085C               	movf	??_SSD_SetSymbol,w
  7936  0A59  3A02               	xorlw	2	; case 2
  7937  0A5A  1903               	skipnz
  7938  0A5B  2A4B               	goto	l2459
  7939  0A5C  3A01               	xorlw	1	; case 3
  7940  0A5D  1903               	skipnz
  7941  0A5E  2A46               	goto	l2457
  7942  0A5F  3A07               	xorlw	7	; case 4
  7943  0A60  1903               	skipnz
  7944  0A61  2A41               	goto	l2455
  7945  0A62  3A01               	xorlw	1	; case 5
  7946  0A63  1903               	skipnz
  7947  0A64  2A3C               	goto	l2453
  7948  0A65  2A66               	goto	l100
  7949  0A66                     l100:
  7950  0A66  0008               	return
  7951  0A67                     __end_of_SSD_SetSymbol:
  7952                           
  7953                           	psect	text47
  7954  07FC                     __ptext47:	
  7955 ;; *************** function _ADC_GetState *****************
  7956 ;; Defined at:
  7957 ;;		line 23 in file "ADC.c"
  7958 ;; Parameters:    Size  Location     Type
  7959 ;;		None
  7960 ;; Auto vars:     Size  Location     Type
  7961 ;;		None
  7962 ;; Return value:  Size  Location     Type
  7963 ;;                  1    wreg      unsigned char 
  7964 ;; Registers used:
  7965 ;;		wreg
  7966 ;; Tracked objects:
  7967 ;;		On entry : 0/0
  7968 ;;		On exit  : 0/0
  7969 ;;		Unchanged: 0/0
  7970 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7971 ;;      Params:         0       0       0       0       0
  7972 ;;      Locals:         0       0       0       0       0
  7973 ;;      Temps:          0       0       0       0       0
  7974 ;;      Totals:         0       0       0       0       0
  7975 ;;Total ram usage:        0 bytes
  7976 ;; Hardware stack levels used:    1
  7977 ;; Hardware stack levels required when called:    3
  7978 ;; This function calls:
  7979 ;;		Nothing
  7980 ;; This function is called by:
  7981 ;;		_TEMP_Update
  7982 ;; This function uses a non-reentrant model
  7983 ;;
  7984                           
  7985                           
  7986                           ;psect for function _ADC_GetState
  7987  07FC                     _ADC_GetState:
  7988  07FC                     l2699:	
  7989                           ;incstack = 0
  7990                           ; Regs used in _ADC_GetState: [wreg]
  7991                           
  7992                           
  7993                           ;ADC.c: 25:     return ADC_G[0].Result;
  7994  07FC  1283               	bcf	3,5	;RP0=0, select bank0
  7995  07FD  1303               	bcf	3,6	;RP1=0, select bank0
  7996  07FE  0829               	movf	_ADC_G+9,w	;volatile
  7997  07FF                     l168:
  7998  07FF  0008               	return
  7999  0800                     __end_of_ADC_GetState:
  8000                           
  8001                           	psect	text48
  8002  0842                     __ptext48:	
  8003 ;; *************** function _GPIO_GetPinState *****************
  8004 ;; Defined at:
  8005 ;;		line 13 in file "GPIO.c"
  8006 ;; Parameters:    Size  Location     Type
  8007 ;;  GPIOx           2    0[BANK0 ] PTR struct .
  8008 ;;		 -> PORTB(1), 
  8009 ;;  PINx            1    2[BANK0 ] unsigned char 
  8010 ;; Auto vars:     Size  Location     Type
  8011 ;;		None
  8012 ;; Return value:  Size  Location     Type
  8013 ;;                  1    wreg      unsigned char 
  8014 ;; Registers used:
  8015 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  8016 ;; Tracked objects:
  8017 ;;		On entry : 0/0
  8018 ;;		On exit  : 0/0
  8019 ;;		Unchanged: 0/0
  8020 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8021 ;;      Params:         0       3       0       0       0
  8022 ;;      Locals:         0       0       0       0       0
  8023 ;;      Temps:          0       2       0       0       0
  8024 ;;      Totals:         0       5       0       0       0
  8025 ;;Total ram usage:        5 bytes
  8026 ;; Hardware stack levels used:    1
  8027 ;; Hardware stack levels required when called:    3
  8028 ;; This function calls:
  8029 ;;		Nothing
  8030 ;; This function is called by:
  8031 ;;		_SW_Update
  8032 ;; This function uses a non-reentrant model
  8033 ;;
  8034                           
  8035                           
  8036                           ;psect for function _GPIO_GetPinState
  8037  0842                     _GPIO_GetPinState:
  8038  0842                     l2695:	
  8039                           ;incstack = 0
  8040                           ; Regs used in _GPIO_GetPinState: [wreg-fsr0h+status,2+status,0]
  8041                           
  8042                           
  8043                           ;GPIO.c: 13: uint8_t GPIO_GetPinState(GPIO_TypeDef* GPIOx, uint8_t PINx);GPIO.c: 14: {;G
      +                          PIO.c: 15:  return (GPIOx->PORT & (1<<PINx))>>PINx;
  8044  0842  1283               	bcf	3,5	;RP0=0, select bank0
  8045  0843  1303               	bcf	3,6	;RP1=0, select bank0
  8046  0844  084D               	movf	GPIO_GetPinState@GPIOx,w
  8047  0845  0084               	movwf	4
  8048  0846  1783               	bsf	3,7
  8049  0847  1C4E               	btfss	GPIO_GetPinState@GPIOx+1,0
  8050  0848  1383               	bcf	3,7
  8051  0849  3001               	movlw	1
  8052  084A  00D0               	movwf	??_GPIO_GetPinState
  8053  084B  0A4F               	incf	GPIO_GetPinState@PINx,w
  8054  084C  284F               	goto	u1674
  8055  084D                     u1675:
  8056  084D  1003               	clrc
  8057  084E  0DD0               	rlf	??_GPIO_GetPinState,f
  8058  084F                     u1674:
  8059  084F  3EFF               	addlw	-1
  8060  0850  1D03               	skipz
  8061  0851  284D               	goto	u1675
  8062  0852  0850               	movf	??_GPIO_GetPinState,w
  8063  0853  0500               	andwf	0,w
  8064  0854  00D1               	movwf	??_GPIO_GetPinState+1
  8065  0855  0A4F               	incf	GPIO_GetPinState@PINx,w
  8066  0856  2859               	goto	u1684
  8067  0857                     u1685:
  8068  0857  1003               	clrc
  8069  0858  0CD1               	rrf	??_GPIO_GetPinState+1,f
  8070  0859                     u1684:
  8071  0859  3EFF               	addlw	-1
  8072  085A  1D03               	skipz
  8073  085B  2857               	goto	u1685
  8074  085C  0851               	movf	??_GPIO_GetPinState+1,w
  8075  085D                     l589:
  8076  085D  0008               	return
  8077  085E                     __end_of_GPIO_GetPinState:
  8078                           
  8079                           	psect	text49
  8080  17A3                     __ptext49:	
  8081 ;; *************** function _GPIO_SetPortState *****************
  8082 ;; Defined at:
  8083 ;;		line 18 in file "GPIO.c"
  8084 ;; Parameters:    Size  Location     Type
  8085 ;;  GPIOx           2    0[BANK0 ] PTR struct .
  8086 ;;		 -> PORTD(1), 
  8087 ;;  PINx            1    2[BANK0 ] unsigned char 
  8088 ;;  State           1    3[BANK0 ] unsigned char 
  8089 ;; Auto vars:     Size  Location     Type
  8090 ;;		None
  8091 ;; Return value:  Size  Location     Type
  8092 ;;                  1    wreg      void 
  8093 ;; Registers used:
  8094 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  8095 ;; Tracked objects:
  8096 ;;		On entry : 0/0
  8097 ;;		On exit  : 0/0
  8098 ;;		Unchanged: 0/0
  8099 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8100 ;;      Params:         0       4       0       0       0
  8101 ;;      Locals:         0       0       0       0       0
  8102 ;;      Temps:          0       1       0       0       0
  8103 ;;      Totals:         0       5       0       0       0
  8104 ;;Total ram usage:        5 bytes
  8105 ;; Hardware stack levels used:    1
  8106 ;; Hardware stack levels required when called:    3
  8107 ;; This function calls:
  8108 ;;		Nothing
  8109 ;; This function is called by:
  8110 ;;		_SSD_Update
  8111 ;; This function uses a non-reentrant model
  8112 ;;
  8113                           
  8114                           
  8115                           ;psect for function _GPIO_SetPortState
  8116  17A3                     _GPIO_SetPortState:
  8117  17A3                     l2673:	
  8118                           ;incstack = 0
  8119                           ; Regs used in _GPIO_SetPortState: [wreg-fsr0h+status,2+status,0+btemp+1]
  8120                           
  8121                           
  8122                           ;GPIO.c: 18: void GPIO_SetPortState(GPIO_TypeDef* GPIOx, uint8_t PINx, uint8_t State);GP
      +                          IO.c: 19: {;GPIO.c: 20:  GPIOx->PORT = (GPIOx->PORT & ~PINx) | (State & PINx);
  8123  17A3  1283               	bcf	3,5	;RP0=0, select bank0
  8124  17A4  1303               	bcf	3,6	;RP1=0, select bank0
  8125  17A5  084F               	movf	GPIO_SetPortState@PINx,w
  8126  17A6  0550               	andwf	GPIO_SetPortState@State,w
  8127  17A7  00D1               	movwf	??_GPIO_SetPortState
  8128  17A8  084D               	movf	GPIO_SetPortState@GPIOx,w
  8129  17A9  0084               	movwf	4
  8130  17AA  1783               	bsf	3,7
  8131  17AB  1C4E               	btfss	GPIO_SetPortState@GPIOx+1,0
  8132  17AC  1383               	bcf	3,7
  8133  17AD  094F               	comf	GPIO_SetPortState@PINx,w
  8134  17AE  0500               	andwf	0,w
  8135  17AF  0451               	iorwf	??_GPIO_SetPortState,w
  8136  17B0  00FF               	movwf	btemp+1
  8137  17B1  084D               	movf	GPIO_SetPortState@GPIOx,w
  8138  17B2  0084               	movwf	4
  8139  17B3  1783               	bsf	3,7
  8140  17B4  1C4E               	btfss	GPIO_SetPortState@GPIOx+1,0
  8141  17B5  1383               	bcf	3,7
  8142  17B6  087F               	movf	btemp+1,w
  8143  17B7  0080               	movwf	0
  8144  17B8                     l592:
  8145  17B8  0008               	return
  8146  17B9                     __end_of_GPIO_SetPortState:
  8147                           
  8148                           	psect	text50
  8149  0C1C                     __ptext50:	
  8150 ;; *************** function _SCH_Report_Status *****************
  8151 ;; Defined at:
  8152 ;;		line 65 in file "SCH.c"
  8153 ;; Parameters:    Size  Location     Type
  8154 ;;		None
  8155 ;; Auto vars:     Size  Location     Type
  8156 ;;		None
  8157 ;; Return value:  Size  Location     Type
  8158 ;;                  1    wreg      void 
  8159 ;; Registers used:
  8160 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8161 ;; Tracked objects:
  8162 ;;		On entry : 0/0
  8163 ;;		On exit  : 0/0
  8164 ;;		Unchanged: 0/0
  8165 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8166 ;;      Params:         0       0       0       0       0
  8167 ;;      Locals:         0       0       0       0       0
  8168 ;;      Temps:          0       0       0       0       0
  8169 ;;      Totals:         0       0       0       0       0
  8170 ;;Total ram usage:        0 bytes
  8171 ;; Hardware stack levels used:    1
  8172 ;; Hardware stack levels required when called:    4
  8173 ;; This function calls:
  8174 ;;		_LED_SetState
  8175 ;; This function is called by:
  8176 ;;		_SCH_Dispatch_Tasks
  8177 ;; This function uses a non-reentrant model
  8178 ;;
  8179                           
  8180                           
  8181                           ;psect for function _SCH_Report_Status
  8182  0C1C                     _SCH_Report_Status:
  8183  0C1C                     l3119:	
  8184                           ;incstack = 0
  8185                           ; Regs used in _SCH_Report_Status: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  8186                           
  8187                           
  8188                           ;SCH.c: 67:  if(SCH_ErrorTickCount_G)
  8189  0C1C  087A               	movf	_SCH_ErrorTickCount_G,w	;volatile
  8190  0C1D  047B               	iorwf	_SCH_ErrorTickCount_G+1,w	;volatile
  8191  0C1E  1903               	btfsc	3,2
  8192  0C1F  2C21               	goto	u2261
  8193  0C20  2C22               	goto	u2260
  8194  0C21                     u2261:
  8195  0C21  2C29               	goto	l3123
  8196  0C22                     u2260:
  8197  0C22                     l3121:
  8198                           
  8199                           ;SCH.c: 68:  {;SCH.c: 69:   SCH_ErrorTickCount_G--;
  8200  0C22  3001               	movlw	1
  8201  0C23  02FA               	subwf	_SCH_ErrorTickCount_G,f	;volatile
  8202  0C24  3000               	movlw	0
  8203  0C25  1C03               	skipc
  8204  0C26  03FB               	decf	_SCH_ErrorTickCount_G+1,f	;volatile
  8205  0C27  02FB               	subwf	_SCH_ErrorTickCount_G+1,f	;volatile
  8206                           
  8207                           ;SCH.c: 70:  }else if(SCH_ErrorCode_G)
  8208  0C28  2C44               	goto	l3131
  8209  0C29                     l3123:
  8210  0C29  1283               	bcf	3,5	;RP0=0, select bank0
  8211  0C2A  1303               	bcf	3,6	;RP1=0, select bank0
  8212  0C2B  0848               	movf	_SCH_ErrorCode_G,w	;volatile
  8213  0C2C  1903               	btfsc	3,2
  8214  0C2D  2C2F               	goto	u2271
  8215  0C2E  2C30               	goto	u2270
  8216  0C2F                     u2271:
  8217  0C2F  2C3C               	goto	l3129
  8218  0C30                     u2270:
  8219  0C30                     l3125:
  8220                           
  8221                           ;SCH.c: 71:  {;SCH.c: 72:   SCH_ErrorTickCount_G = 5000;
  8222  0C30  3088               	movlw	136
  8223  0C31  00FA               	movwf	_SCH_ErrorTickCount_G	;volatile
  8224  0C32  3013               	movlw	19
  8225  0C33  00FB               	movwf	_SCH_ErrorTickCount_G+1	;volatile
  8226  0C34                     l3127:
  8227                           
  8228                           ;SCH.c: 73:   LED_SetState((7), (0));
  8229  0C34  01CD               	clrf	LED_SetState@State
  8230  0C35  3007               	movlw	7
  8231  0C36  120A  158A  207C  120A  158A  	fcall	_LED_SetState
  8232                           
  8233                           ;SCH.c: 74:  }else
  8234  0C3B  2C44               	goto	l3131
  8235  0C3C                     l3129:
  8236                           
  8237                           ;SCH.c: 75:  {;SCH.c: 76:   LED_SetState((7), (1));
  8238  0C3C  01CD               	clrf	LED_SetState@State
  8239  0C3D  0ACD               	incf	LED_SetState@State,f
  8240  0C3E  3007               	movlw	7
  8241  0C3F  120A  158A  207C  120A  158A  	fcall	_LED_SetState
  8242  0C44                     l3131:
  8243                           
  8244                           ;SCH.c: 78:  if(SCH_IntFlag_G)
  8245  0C44  1283               	bcf	3,5	;RP0=0, select bank0
  8246  0C45  1303               	bcf	3,6	;RP1=0, select bank0
  8247  0C46  0847               	movf	_SCH_IntFlag_G,w	;volatile
  8248  0C47  1903               	btfsc	3,2
  8249  0C48  2C4A               	goto	u2281
  8250  0C49  2C4B               	goto	u2280
  8251  0C4A                     u2281:
  8252  0C4A  2C51               	goto	l3137
  8253  0C4B                     u2280:
  8254  0C4B                     l3133:
  8255                           
  8256                           ;SCH.c: 79:  {;SCH.c: 80:   SCH_ErrorCode_G = 1;
  8257  0C4B  3001               	movlw	1
  8258  0C4C  00FF               	movwf	btemp+1
  8259  0C4D  087F               	movf	btemp+1,w
  8260  0C4E  00C8               	movwf	_SCH_ErrorCode_G	;volatile
  8261  0C4F                     l3135:
  8262                           
  8263                           ;SCH.c: 81:   SCH_IntFlag_G = 0;
  8264  0C4F  01C7               	clrf	_SCH_IntFlag_G	;volatile
  8265                           
  8266                           ;SCH.c: 82:  }else
  8267  0C50  2C52               	goto	l3139
  8268  0C51                     l3137:
  8269                           
  8270                           ;SCH.c: 83:  {;SCH.c: 84:   SCH_ErrorCode_G = 0;
  8271  0C51  01C8               	clrf	_SCH_ErrorCode_G	;volatile
  8272  0C52                     l3139:
  8273  0C52  0847               	movf	_SCH_IntFlag_G,w	;volatile
  8274  0C53  1903               	btfsc	3,2
  8275  0C54  2C56               	goto	u2291
  8276  0C55  2C57               	goto	u2290
  8277  0C56                     u2291:
  8278  0C56  2C52               	goto	l3139
  8279  0C57                     u2290:
  8280  0C57                     l3141:
  8281                           
  8282                           ;SCH.c: 87:  SCH_IntFlag_G = 0;
  8283  0C57  01C7               	clrf	_SCH_IntFlag_G	;volatile
  8284  0C58                     l479:
  8285  0C58  0008               	return
  8286  0C59                     __end_of_SCH_Report_Status:
  8287                           
  8288                           	psect	text51
  8289  0003                     __ptext51:	
  8290 ;; *************** function _SCH_Go_To_Sleep *****************
  8291 ;; Defined at:
  8292 ;;		line 90 in file "SCH.c"
  8293 ;; Parameters:    Size  Location     Type
  8294 ;;		None
  8295 ;; Auto vars:     Size  Location     Type
  8296 ;;		None
  8297 ;; Return value:  Size  Location     Type
  8298 ;;                  1    wreg      void 
  8299 ;; Registers used:
  8300 ;;		None
  8301 ;; Tracked objects:
  8302 ;;		On entry : 0/0
  8303 ;;		On exit  : 0/0
  8304 ;;		Unchanged: 0/0
  8305 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8306 ;;      Params:         0       0       0       0       0
  8307 ;;      Locals:         0       0       0       0       0
  8308 ;;      Temps:          0       0       0       0       0
  8309 ;;      Totals:         0       0       0       0       0
  8310 ;;Total ram usage:        0 bytes
  8311 ;; Hardware stack levels used:    1
  8312 ;; Hardware stack levels required when called:    3
  8313 ;; This function calls:
  8314 ;;		Nothing
  8315 ;; This function is called by:
  8316 ;;		_SCH_Dispatch_Tasks
  8317 ;; This function uses a non-reentrant model
  8318 ;;
  8319                           
  8320                           
  8321                           ;psect for function _SCH_Go_To_Sleep
  8322  0003                     _SCH_Go_To_Sleep:
  8323  0003                     l482:	
  8324                           ;incstack = 0
  8325                           ; Regs used in _SCH_Go_To_Sleep: []
  8326                           
  8327  0003  0008               	return
  8328  0004                     __end_of_SCH_Go_To_Sleep:
  8329                           
  8330                           	psect	text52
  8331  0E72                     __ptext52:	
  8332 ;; *************** function _SCH_Delete_Task *****************
  8333 ;; Defined at:
  8334 ;;		line 49 in file "SCH.c"
  8335 ;; Parameters:    Size  Location     Type
  8336 ;;  Index           1    wreg      unsigned char 
  8337 ;; Auto vars:     Size  Location     Type
  8338 ;;  Index           1    3[BANK0 ]  unsigned char 
  8339 ;; Return value:  Size  Location     Type
  8340 ;;                  1    wreg      unsigned char 
  8341 ;; Registers used:
  8342 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8343 ;; Tracked objects:
  8344 ;;		On entry : 0/0
  8345 ;;		On exit  : 0/0
  8346 ;;		Unchanged: 0/0
  8347 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8348 ;;      Params:         0       0       0       0       0
  8349 ;;      Locals:         0       1       0       0       0
  8350 ;;      Temps:          0       0       0       0       0
  8351 ;;      Totals:         0       1       0       0       0
  8352 ;;Total ram usage:        1 bytes
  8353 ;; Hardware stack levels used:    1
  8354 ;; Hardware stack levels required when called:    4
  8355 ;; This function calls:
  8356 ;;		___bmul
  8357 ;; This function is called by:
  8358 ;;		_SCH_Init
  8359 ;;		_SCH_Dispatch_Tasks
  8360 ;; This function uses a non-reentrant model
  8361 ;;
  8362                           
  8363                           
  8364                           ;psect for function _SCH_Delete_Task
  8365  0E72                     _SCH_Delete_Task:
  8366                           
  8367                           ;incstack = 0
  8368                           ; Regs used in _SCH_Delete_Task: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  8369                           ;SCH_Delete_Task@Index stored from wreg
  8370  0E72  1283               	bcf	3,5	;RP0=0, select bank0
  8371  0E73  1303               	bcf	3,6	;RP1=0, select bank0
  8372  0E74  00D0               	movwf	SCH_Delete_Task@Index	;volatile
  8373  0E75                     l3095:
  8374                           
  8375                           ;SCH.c: 49: uint8_t SCH_Delete_Task(volatile const uint8_t Index);SCH.c: 50: {;SCH.c: 51
      +                          :  if(SCH_Tasks[Index].Task_P != 0)
  8376  0E75  3006               	movlw	6
  8377  0E76  00FF               	movwf	btemp+1
  8378  0E77  087F               	movf	btemp+1,w
  8379  0E78  00CD               	movwf	___bmul@multiplicand
  8380  0E79  0850               	movf	SCH_Delete_Task@Index,w
  8381  0E7A  160A  118A  27B9  120A  158A  	fcall	___bmul
  8382  0E7F  3EA0               	addlw	(low (_SCH_Tasks| 0))& (0+255)
  8383  0E80  0084               	movwf	4
  8384  0E81  1383               	bcf	3,7	;select IRP bank1
  8385  0E82  0800               	movf	0,w
  8386  0E83  1903               	btfsc	3,2
  8387  0E84  2E86               	goto	u2231
  8388  0E85  2E87               	goto	u2230
  8389  0E86                     u2231:
  8390  0E86  2ECC               	goto	l3103
  8391  0E87                     u2230:
  8392  0E87                     l3097:
  8393                           
  8394                           ;SCH.c: 52:  {;SCH.c: 53:   SCH_Tasks[Index].Task_P = 0x0000;
  8395  0E87  3006               	movlw	6
  8396  0E88  00FF               	movwf	btemp+1
  8397  0E89  087F               	movf	btemp+1,w
  8398  0E8A  1283               	bcf	3,5	;RP0=0, select bank0
  8399  0E8B  1303               	bcf	3,6	;RP1=0, select bank0
  8400  0E8C  00CD               	movwf	___bmul@multiplicand
  8401  0E8D  0850               	movf	SCH_Delete_Task@Index,w
  8402  0E8E  160A  118A  27B9  120A  158A  	fcall	___bmul
  8403  0E93  3EA0               	addlw	(low (_SCH_Tasks| 0))& (0+255)
  8404  0E94  0084               	movwf	4
  8405  0E95  1383               	bcf	3,7	;select IRP bank1
  8406  0E96  0180               	clrf	0
  8407                           
  8408                           ;SCH.c: 54:   SCH_Tasks[Index].Delay = 0;
  8409  0E97  3006               	movlw	6
  8410  0E98  00FF               	movwf	btemp+1
  8411  0E99  087F               	movf	btemp+1,w
  8412  0E9A  1283               	bcf	3,5	;RP0=0, select bank0
  8413  0E9B  1303               	bcf	3,6	;RP1=0, select bank0
  8414  0E9C  00CD               	movwf	___bmul@multiplicand
  8415  0E9D  0850               	movf	SCH_Delete_Task@Index,w
  8416  0E9E  160A  118A  27B9  120A  158A  	fcall	___bmul
  8417  0EA3  3EA1               	addlw	(low ((_SCH_Tasks| 0+1)))& (0+255)
  8418  0EA4  0084               	movwf	4
  8419  0EA5  1383               	bcf	3,7	;select IRP bank1
  8420  0EA6  0180               	clrf	0
  8421  0EA7  0A84               	incf	4,f
  8422  0EA8  0180               	clrf	0
  8423                           
  8424                           ;SCH.c: 55:   SCH_Tasks[Index].Period = 0;
  8425  0EA9  3006               	movlw	6
  8426  0EAA  00FF               	movwf	btemp+1
  8427  0EAB  087F               	movf	btemp+1,w
  8428  0EAC  1283               	bcf	3,5	;RP0=0, select bank0
  8429  0EAD  1303               	bcf	3,6	;RP1=0, select bank0
  8430  0EAE  00CD               	movwf	___bmul@multiplicand
  8431  0EAF  0850               	movf	SCH_Delete_Task@Index,w
  8432  0EB0  160A  118A  27B9  120A  158A  	fcall	___bmul
  8433  0EB5  3EA3               	addlw	(low ((_SCH_Tasks| 0+3)))& (0+255)
  8434  0EB6  0084               	movwf	4
  8435  0EB7  1383               	bcf	3,7	;select IRP bank1
  8436  0EB8  0180               	clrf	0
  8437  0EB9  0A84               	incf	4,f
  8438  0EBA  0180               	clrf	0
  8439                           
  8440                           ;SCH.c: 56:   SCH_Tasks[Index].RunMe = 0;
  8441  0EBB  3006               	movlw	6
  8442  0EBC  00FF               	movwf	btemp+1
  8443  0EBD  087F               	movf	btemp+1,w
  8444  0EBE  1283               	bcf	3,5	;RP0=0, select bank0
  8445  0EBF  1303               	bcf	3,6	;RP1=0, select bank0
  8446  0EC0  00CD               	movwf	___bmul@multiplicand
  8447  0EC1  0850               	movf	SCH_Delete_Task@Index,w
  8448  0EC2  160A  118A  27B9  120A  158A  	fcall	___bmul
  8449  0EC7  3EA5               	addlw	(low ((_SCH_Tasks| 0+5)))& (0+255)
  8450  0EC8  0084               	movwf	4
  8451  0EC9  1383               	bcf	3,7	;select IRP bank1
  8452  0ECA  0180               	clrf	0
  8453  0ECB  2ED2               	goto	l466
  8454  0ECC                     l3103:
  8455                           
  8456                           ;SCH.c: 59:  {;SCH.c: 60:   SCH_ErrorCode_G = (2);
  8457  0ECC  3002               	movlw	2
  8458  0ECD  00FF               	movwf	btemp+1
  8459  0ECE  087F               	movf	btemp+1,w
  8460  0ECF  1283               	bcf	3,5	;RP0=0, select bank0
  8461  0ED0  1303               	bcf	3,6	;RP1=0, select bank0
  8462  0ED1  00C8               	movwf	_SCH_ErrorCode_G	;volatile
  8463  0ED2                     l466:
  8464  0ED2  0008               	return
  8465  0ED3                     __end_of_SCH_Delete_Task:
  8466                           
  8467                           	psect	text53
  8468  0944                     __ptext53:	
  8469 ;; *************** function _GPIO_SetPinState *****************
  8470 ;; Defined at:
  8471 ;;		line 8 in file "GPIO.c"
  8472 ;; Parameters:    Size  Location     Type
  8473 ;;  GPIOx           2    0[BANK0 ] PTR struct .
  8474 ;;		 -> PORTC(1), PORTB(1), PORTA(1), 
  8475 ;;  PINx            1    2[BANK0 ] unsigned char 
  8476 ;;  State           1    3[BANK0 ] unsigned char 
  8477 ;; Auto vars:     Size  Location     Type
  8478 ;;		None
  8479 ;; Return value:  Size  Location     Type
  8480 ;;                  1    wreg      void 
  8481 ;; Registers used:
  8482 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  8483 ;; Tracked objects:
  8484 ;;		On entry : 0/0
  8485 ;;		On exit  : 0/0
  8486 ;;		Unchanged: 0/0
  8487 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8488 ;;      Params:         0       4       0       0       0
  8489 ;;      Locals:         0       0       0       0       0
  8490 ;;      Temps:          0       2       0       0       0
  8491 ;;      Totals:         0       6       0       0       0
  8492 ;;Total ram usage:        6 bytes
  8493 ;; Hardware stack levels used:    1
  8494 ;; Hardware stack levels required when called:    3
  8495 ;; This function calls:
  8496 ;;		Nothing
  8497 ;; This function is called by:
  8498 ;;		_SSD_Update
  8499 ;;		_HCU_Update
  8500 ;;		_LED_Update
  8501 ;; This function uses a non-reentrant model
  8502 ;;
  8503                           
  8504                           
  8505                           ;psect for function _GPIO_SetPinState
  8506  0944                     _GPIO_SetPinState:
  8507  0944                     l2671:	
  8508                           ;incstack = 0
  8509                           ; Regs used in _GPIO_SetPinState: [wreg-fsr0h+status,2+status,0+btemp+1]
  8510                           
  8511                           
  8512                           ;GPIO.c: 8: void GPIO_SetPinState(GPIO_TypeDef* GPIOx, uint8_t PINx, uint8_t State);GPIO
      +                          .c: 9: {;GPIO.c: 10:  GPIOx->PORT = (GPIOx->PORT & ~(1<<PINx)) | (State<<PINx);
  8513  0944  1283               	bcf	3,5	;RP0=0, select bank0
  8514  0945  1303               	bcf	3,6	;RP1=0, select bank0
  8515  0946  0850               	movf	GPIO_SetPinState@State,w
  8516  0947  00D1               	movwf	??_GPIO_SetPinState
  8517  0948  0A4F               	incf	GPIO_SetPinState@PINx,w
  8518  0949  294C               	goto	u1654
  8519  094A                     u1655:
  8520  094A  1003               	clrc
  8521  094B  0DD1               	rlf	??_GPIO_SetPinState,f
  8522  094C                     u1654:
  8523  094C  3EFF               	addlw	-1
  8524  094D  1D03               	skipz
  8525  094E  294A               	goto	u1655
  8526  094F  084D               	movf	GPIO_SetPinState@GPIOx,w
  8527  0950  0084               	movwf	4
  8528  0951  1783               	bsf	3,7
  8529  0952  1C4E               	btfss	GPIO_SetPinState@GPIOx+1,0
  8530  0953  1383               	bcf	3,7
  8531  0954  3001               	movlw	1
  8532  0955  00D2               	movwf	??_GPIO_SetPinState+1
  8533  0956  0A4F               	incf	GPIO_SetPinState@PINx,w
  8534  0957  295A               	goto	u1664
  8535  0958                     u1665:
  8536  0958  1003               	clrc
  8537  0959  0DD2               	rlf	??_GPIO_SetPinState+1,f
  8538  095A                     u1664:
  8539  095A  3EFF               	addlw	-1
  8540  095B  1D03               	skipz
  8541  095C  2958               	goto	u1665
  8542  095D  0852               	movf	??_GPIO_SetPinState+1,w
  8543  095E  3AFF               	xorlw	255
  8544  095F  0500               	andwf	0,w
  8545  0960  0451               	iorwf	??_GPIO_SetPinState,w
  8546  0961  00FF               	movwf	btemp+1
  8547  0962  084D               	movf	GPIO_SetPinState@GPIOx,w
  8548  0963  0084               	movwf	4
  8549  0964  1783               	bsf	3,7
  8550  0965  1C4E               	btfss	GPIO_SetPinState@GPIOx+1,0
  8551  0966  1383               	bcf	3,7
  8552  0967  087F               	movf	btemp+1,w
  8553  0968  0080               	movwf	0
  8554  0969                     l586:
  8555  0969  0008               	return
  8556  096A                     __end_of_GPIO_SetPinState:
  8557                           
  8558                           	psect	text54
  8559  0D2A                     __ptext54:	
  8560 ;; *************** function ___lmul *****************
  8561 ;; Defined at:
  8562 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\Umul32.c"
  8563 ;; Parameters:    Size  Location     Type
  8564 ;;  multiplier      4    0[BANK0 ] unsigned long 
  8565 ;;  multiplicand    4    4[BANK0 ] unsigned long 
  8566 ;; Auto vars:     Size  Location     Type
  8567 ;;  product         4    9[BANK0 ] unsigned long 
  8568 ;; Return value:  Size  Location     Type
  8569 ;;                  4    0[BANK0 ] unsigned long 
  8570 ;; Registers used:
  8571 ;;		wreg, status,2, status,0
  8572 ;; Tracked objects:
  8573 ;;		On entry : 0/0
  8574 ;;		On exit  : 0/0
  8575 ;;		Unchanged: 0/0
  8576 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8577 ;;      Params:         0       8       0       0       0
  8578 ;;      Locals:         0       4       0       0       0
  8579 ;;      Temps:          0       1       0       0       0
  8580 ;;      Totals:         0      13       0       0       0
  8581 ;;Total ram usage:       13 bytes
  8582 ;; Hardware stack levels used:    1
  8583 ;; Hardware stack levels required when called:    3
  8584 ;; This function calls:
  8585 ;;		Nothing
  8586 ;; This function is called by:
  8587 ;;		_ADC_Update
  8588 ;;		_SysTick_Init
  8589 ;; This function uses a non-reentrant model
  8590 ;;
  8591                           
  8592                           
  8593                           ;psect for function ___lmul
  8594  0D2A                     ___lmul:
  8595  0D2A                     l2859:	
  8596                           ;incstack = 0
  8597                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  8598                           
  8599  0D2A  3000               	movlw	0
  8600  0D2B  1283               	bcf	3,5	;RP0=0, select bank0
  8601  0D2C  1303               	bcf	3,6	;RP1=0, select bank0
  8602  0D2D  00D9               	movwf	___lmul@product+3
  8603  0D2E  3000               	movlw	0
  8604  0D2F  00D8               	movwf	___lmul@product+2
  8605  0D30  3000               	movlw	0
  8606  0D31  00D7               	movwf	___lmul@product+1
  8607  0D32  3000               	movlw	0
  8608  0D33  00D6               	movwf	___lmul@product
  8609  0D34                     l2861:
  8610  0D34  1C4D               	btfss	___lmul@multiplier,0
  8611  0D35  2D37               	goto	u1861
  8612  0D36  2D38               	goto	u1860
  8613  0D37                     u1861:
  8614  0D37  2D4F               	goto	l2865
  8615  0D38                     u1860:
  8616  0D38                     l2863:
  8617  0D38  0851               	movf	___lmul@multiplicand,w
  8618  0D39  07D6               	addwf	___lmul@product,f
  8619  0D3A  0852               	movf	___lmul@multiplicand+1,w
  8620  0D3B  1103               	clrz
  8621  0D3C  1803               	skipnc
  8622  0D3D  3E01               	addlw	1
  8623  0D3E  1903               	skipnz
  8624  0D3F  2D41               	goto	u1871
  8625  0D40  07D7               	addwf	___lmul@product+1,f
  8626  0D41                     u1871:
  8627  0D41  0853               	movf	___lmul@multiplicand+2,w
  8628  0D42  1103               	clrz
  8629  0D43  1803               	skipnc
  8630  0D44  3E01               	addlw	1
  8631  0D45  1903               	skipnz
  8632  0D46  2D48               	goto	u1872
  8633  0D47  07D8               	addwf	___lmul@product+2,f
  8634  0D48                     u1872:
  8635  0D48  0854               	movf	___lmul@multiplicand+3,w
  8636  0D49  1103               	clrz
  8637  0D4A  1803               	skipnc
  8638  0D4B  3E01               	addlw	1
  8639  0D4C  1903               	skipnz
  8640  0D4D  2D4F               	goto	u1873
  8641  0D4E  07D9               	addwf	___lmul@product+3,f
  8642  0D4F                     u1873:
  8643  0D4F                     l2865:
  8644  0D4F  3001               	movlw	1
  8645  0D50  00D5               	movwf	??___lmul
  8646  0D51                     u1885:
  8647  0D51  1003               	clrc
  8648  0D52  0DD1               	rlf	___lmul@multiplicand,f
  8649  0D53  0DD2               	rlf	___lmul@multiplicand+1,f
  8650  0D54  0DD3               	rlf	___lmul@multiplicand+2,f
  8651  0D55  0DD4               	rlf	___lmul@multiplicand+3,f
  8652  0D56  0BD5               	decfsz	??___lmul,f
  8653  0D57  2D51               	goto	u1885
  8654  0D58                     l2867:
  8655  0D58  3001               	movlw	1
  8656  0D59                     u1895:
  8657  0D59  1003               	clrc
  8658  0D5A  0CD0               	rrf	___lmul@multiplier+3,f
  8659  0D5B  0CCF               	rrf	___lmul@multiplier+2,f
  8660  0D5C  0CCE               	rrf	___lmul@multiplier+1,f
  8661  0D5D  0CCD               	rrf	___lmul@multiplier,f
  8662  0D5E  3EFF               	addlw	-1
  8663  0D5F  1D03               	skipz
  8664  0D60  2D59               	goto	u1895
  8665  0D61  0850               	movf	___lmul@multiplier+3,w
  8666  0D62  044F               	iorwf	___lmul@multiplier+2,w
  8667  0D63  044E               	iorwf	___lmul@multiplier+1,w
  8668  0D64  044D               	iorwf	___lmul@multiplier,w
  8669  0D65  1D03               	skipz
  8670  0D66  2D68               	goto	u1901
  8671  0D67  2D69               	goto	u1900
  8672  0D68                     u1901:
  8673  0D68  2D34               	goto	l2861
  8674  0D69                     u1900:
  8675  0D69                     l2869:
  8676  0D69  0859               	movf	___lmul@product+3,w
  8677  0D6A  00D0               	movwf	?___lmul+3
  8678  0D6B  0858               	movf	___lmul@product+2,w
  8679  0D6C  00CF               	movwf	?___lmul+2
  8680  0D6D  0857               	movf	___lmul@product+1,w
  8681  0D6E  00CE               	movwf	?___lmul+1
  8682  0D6F  0856               	movf	___lmul@product,w
  8683  0D70  00CD               	movwf	?___lmul
  8684  0D71                     l721:
  8685  0D71  0008               	return
  8686  0D72                     __end_of___lmul:
  8687                           
  8688                           	psect	text55
  8689  0F98                     __ptext55:	
  8690 ;; *************** function ___lldiv *****************
  8691 ;; Defined at:
  8692 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\__lldiv.c"
  8693 ;; Parameters:    Size  Location     Type
  8694 ;;  divisor         4   13[BANK0 ] unsigned long 
  8695 ;;  dividend        4   17[BANK0 ] unsigned long 
  8696 ;; Auto vars:     Size  Location     Type
  8697 ;;  quotient        4   22[BANK0 ] unsigned long 
  8698 ;;  counter         1   26[BANK0 ] unsigned char 
  8699 ;; Return value:  Size  Location     Type
  8700 ;;                  4   13[BANK0 ] unsigned long 
  8701 ;; Registers used:
  8702 ;;		wreg, status,2, status,0, btemp+1
  8703 ;; Tracked objects:
  8704 ;;		On entry : 0/0
  8705 ;;		On exit  : 0/0
  8706 ;;		Unchanged: 0/0
  8707 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8708 ;;      Params:         0       8       0       0       0
  8709 ;;      Locals:         0       5       0       0       0
  8710 ;;      Temps:          0       1       0       0       0
  8711 ;;      Totals:         0      14       0       0       0
  8712 ;;Total ram usage:       14 bytes
  8713 ;; Hardware stack levels used:    1
  8714 ;; Hardware stack levels required when called:    3
  8715 ;; This function calls:
  8716 ;;		Nothing
  8717 ;; This function is called by:
  8718 ;;		_ADC_Update
  8719 ;;		_I2C_Master_Init
  8720 ;; This function uses a non-reentrant model
  8721 ;;
  8722                           
  8723                           
  8724                           ;psect for function ___lldiv
  8725  0F98                     ___lldiv:
  8726  0F98                     l2563:	
  8727                           ;incstack = 0
  8728                           ; Regs used in ___lldiv: [wreg+status,2+status,0+btemp+1]
  8729                           
  8730  0F98  3000               	movlw	0
  8731  0F99  1283               	bcf	3,5	;RP0=0, select bank0
  8732  0F9A  1303               	bcf	3,6	;RP1=0, select bank0
  8733  0F9B  00E6               	movwf	___lldiv@quotient+3
  8734  0F9C  3000               	movlw	0
  8735  0F9D  00E5               	movwf	___lldiv@quotient+2
  8736  0F9E  3000               	movlw	0
  8737  0F9F  00E4               	movwf	___lldiv@quotient+1
  8738  0FA0  3000               	movlw	0
  8739  0FA1  00E3               	movwf	___lldiv@quotient
  8740  0FA2  085D               	movf	___lldiv@divisor+3,w
  8741  0FA3  045C               	iorwf	___lldiv@divisor+2,w
  8742  0FA4  045B               	iorwf	___lldiv@divisor+1,w
  8743  0FA5  045A               	iorwf	___lldiv@divisor,w
  8744  0FA6  1903               	skipnz
  8745  0FA7  2FA9               	goto	u1391
  8746  0FA8  2FAA               	goto	u1390
  8747  0FA9                     u1391:
  8748  0FA9  2FF7               	goto	l2585
  8749  0FAA                     u1390:
  8750  0FAA                     l2565:
  8751  0FAA  01E7               	clrf	___lldiv@counter
  8752  0FAB  0AE7               	incf	___lldiv@counter,f
  8753  0FAC  2FBA               	goto	l2571
  8754  0FAD                     l2567:
  8755  0FAD  3001               	movlw	1
  8756  0FAE  00E2               	movwf	??___lldiv
  8757  0FAF                     u1405:
  8758  0FAF  1003               	clrc
  8759  0FB0  0DDA               	rlf	___lldiv@divisor,f
  8760  0FB1  0DDB               	rlf	___lldiv@divisor+1,f
  8761  0FB2  0DDC               	rlf	___lldiv@divisor+2,f
  8762  0FB3  0DDD               	rlf	___lldiv@divisor+3,f
  8763  0FB4  0BE2               	decfsz	??___lldiv,f
  8764  0FB5  2FAF               	goto	u1405
  8765  0FB6                     l2569:
  8766  0FB6  3001               	movlw	1
  8767  0FB7  00FF               	movwf	btemp+1
  8768  0FB8  087F               	movf	btemp+1,w
  8769  0FB9  07E7               	addwf	___lldiv@counter,f
  8770  0FBA                     l2571:
  8771  0FBA  1FDD               	btfss	___lldiv@divisor+3,7
  8772  0FBB  2FBD               	goto	u1411
  8773  0FBC  2FBE               	goto	u1410
  8774  0FBD                     u1411:
  8775  0FBD  2FAD               	goto	l2567
  8776  0FBE                     u1410:
  8777  0FBE                     l2573:
  8778  0FBE  3001               	movlw	1
  8779  0FBF  00E2               	movwf	??___lldiv
  8780  0FC0                     u1425:
  8781  0FC0  1003               	clrc
  8782  0FC1  0DE3               	rlf	___lldiv@quotient,f
  8783  0FC2  0DE4               	rlf	___lldiv@quotient+1,f
  8784  0FC3  0DE5               	rlf	___lldiv@quotient+2,f
  8785  0FC4  0DE6               	rlf	___lldiv@quotient+3,f
  8786  0FC5  0BE2               	decfsz	??___lldiv,f
  8787  0FC6  2FC0               	goto	u1425
  8788  0FC7                     l2575:
  8789  0FC7  085D               	movf	___lldiv@divisor+3,w
  8790  0FC8  0261               	subwf	___lldiv@dividend+3,w
  8791  0FC9  1D03               	skipz
  8792  0FCA  2FD5               	goto	u1435
  8793  0FCB  085C               	movf	___lldiv@divisor+2,w
  8794  0FCC  0260               	subwf	___lldiv@dividend+2,w
  8795  0FCD  1D03               	skipz
  8796  0FCE  2FD5               	goto	u1435
  8797  0FCF  085B               	movf	___lldiv@divisor+1,w
  8798  0FD0  025F               	subwf	___lldiv@dividend+1,w
  8799  0FD1  1D03               	skipz
  8800  0FD2  2FD5               	goto	u1435
  8801  0FD3  085A               	movf	___lldiv@divisor,w
  8802  0FD4  025E               	subwf	___lldiv@dividend,w
  8803  0FD5                     u1435:
  8804  0FD5  1C03               	skipc
  8805  0FD6  2FD8               	goto	u1431
  8806  0FD7  2FD9               	goto	u1430
  8807  0FD8                     u1431:
  8808  0FD8  2FE8               	goto	l2581
  8809  0FD9                     u1430:
  8810  0FD9                     l2577:
  8811  0FD9  085A               	movf	___lldiv@divisor,w
  8812  0FDA  02DE               	subwf	___lldiv@dividend,f
  8813  0FDB  085B               	movf	___lldiv@divisor+1,w
  8814  0FDC  1C03               	skipc
  8815  0FDD  0F5B               	incfsz	___lldiv@divisor+1,w
  8816  0FDE  02DF               	subwf	___lldiv@dividend+1,f
  8817  0FDF  085C               	movf	___lldiv@divisor+2,w
  8818  0FE0  1C03               	skipc
  8819  0FE1  0F5C               	incfsz	___lldiv@divisor+2,w
  8820  0FE2  02E0               	subwf	___lldiv@dividend+2,f
  8821  0FE3  085D               	movf	___lldiv@divisor+3,w
  8822  0FE4  1C03               	skipc
  8823  0FE5  0F5D               	incfsz	___lldiv@divisor+3,w
  8824  0FE6  02E1               	subwf	___lldiv@dividend+3,f
  8825  0FE7                     l2579:
  8826  0FE7  1463               	bsf	___lldiv@quotient,0
  8827  0FE8                     l2581:
  8828  0FE8  3001               	movlw	1
  8829  0FE9                     u1445:
  8830  0FE9  1003               	clrc
  8831  0FEA  0CDD               	rrf	___lldiv@divisor+3,f
  8832  0FEB  0CDC               	rrf	___lldiv@divisor+2,f
  8833  0FEC  0CDB               	rrf	___lldiv@divisor+1,f
  8834  0FED  0CDA               	rrf	___lldiv@divisor,f
  8835  0FEE  3EFF               	addlw	-1
  8836  0FEF  1D03               	skipz
  8837  0FF0  2FE9               	goto	u1445
  8838  0FF1                     l2583:
  8839  0FF1  3001               	movlw	1
  8840  0FF2  02E7               	subwf	___lldiv@counter,f
  8841  0FF3  1D03               	btfss	3,2
  8842  0FF4  2FF6               	goto	u1451
  8843  0FF5  2FF7               	goto	u1450
  8844  0FF6                     u1451:
  8845  0FF6  2FBE               	goto	l2573
  8846  0FF7                     u1450:
  8847  0FF7                     l2585:
  8848  0FF7  0866               	movf	___lldiv@quotient+3,w
  8849  0FF8  00DD               	movwf	?___lldiv+3
  8850  0FF9  0865               	movf	___lldiv@quotient+2,w
  8851  0FFA  00DC               	movwf	?___lldiv+2
  8852  0FFB  0864               	movf	___lldiv@quotient+1,w
  8853  0FFC  00DB               	movwf	?___lldiv+1
  8854  0FFD  0863               	movf	___lldiv@quotient,w
  8855  0FFE  00DA               	movwf	?___lldiv
  8856  0FFF                     l743:
  8857  0FFF  0008               	return
  8858  1000                     __end_of___lldiv:
  8859                           
  8860                           	psect	text56
  8861  05EB                     __ptext56:	
  8862 ;; *************** function _SCH_Add_Task *****************
  8863 ;; Defined at:
  8864 ;;		line 25 in file "SCH.c"
  8865 ;; Parameters:    Size  Location     Type
  8866 ;;  Task_P          1    wreg     PTR FTN()void 
  8867 ;;		 -> WH_Task(1), SSD_Update(1), DISP_Update(1), HCU_Update(1), 
  8868 ;;		 -> TEMP_Update(1), ADC_Update(1), SW_Update(1), LED_Update(1), 
  8869 ;;  Delay           2    3[BANK0 ]  unsigned short 
  8870 ;;  Period          2    5[BANK0 ]  unsigned short 
  8871 ;; Auto vars:     Size  Location     Type
  8872 ;;  Task_P          1    7[BANK0 ] PTR FTN()void 
  8873 ;;		 -> WH_Task(1), SSD_Update(1), DISP_Update(1), HCU_Update(1), 
  8874 ;;		 -> TEMP_Update(1), ADC_Update(1), SW_Update(1), LED_Update(1), 
  8875 ;;  Index           1    8[BANK0 ] unsigned char 
  8876 ;; Return value:  Size  Location     Type
  8877 ;;                  1    wreg      unsigned char 
  8878 ;; Registers used:
  8879 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8880 ;; Tracked objects:
  8881 ;;		On entry : 0/0
  8882 ;;		On exit  : 0/0
  8883 ;;		Unchanged: 0/0
  8884 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8885 ;;      Params:         0       4       0       0       0
  8886 ;;      Locals:         0       2       0       0       0
  8887 ;;      Temps:          0       0       0       0       0
  8888 ;;      Totals:         0       6       0       0       0
  8889 ;;Total ram usage:        6 bytes
  8890 ;; Hardware stack levels used:    1
  8891 ;; Hardware stack levels required when called:    4
  8892 ;; This function calls:
  8893 ;;		___bmul
  8894 ;; This function is called by:
  8895 ;;		_main
  8896 ;; This function uses a non-reentrant model
  8897 ;;
  8898                           
  8899                           
  8900                           ;psect for function _SCH_Add_Task
  8901  05EB                     _SCH_Add_Task:
  8902                           
  8903                           ;incstack = 0
  8904                           ; Regs used in _SCH_Add_Task: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  8905                           ;SCH_Add_Task@Task_P stored from wreg
  8906  05EB  1283               	bcf	3,5	;RP0=0, select bank0
  8907  05EC  1303               	bcf	3,6	;RP1=0, select bank0
  8908  05ED  00D4               	movwf	SCH_Add_Task@Task_P
  8909  05EE                     l3281:
  8910                           
  8911                           ;SCH.c: 25: uint8_t SCH_Add_Task(void(*Task_P)(void), volatile const uint16_t Delay, vol
      +                          atile const uint16_t Period);SCH.c: 26: {;SCH.c: 27:  uint8_t Index;;SCH.c: 28:  for(Ind
      +                          ex = 0; Index < (8); Index++)
  8912  05EE  01D5               	clrf	SCH_Add_Task@Index
  8913  05EF                     l3287:
  8914                           
  8915                           ;SCH.c: 29:  {;SCH.c: 30:   if(SCH_Tasks[Index].Task_P == 0)
  8916  05EF  3006               	movlw	6
  8917  05F0  00FF               	movwf	btemp+1
  8918  05F1  087F               	movf	btemp+1,w
  8919  05F2  00CD               	movwf	___bmul@multiplicand
  8920  05F3  0855               	movf	SCH_Add_Task@Index,w
  8921  05F4  160A  118A  27B9  120A  118A  	fcall	___bmul
  8922  05F9  3EA0               	addlw	(low (_SCH_Tasks| 0))& (0+255)
  8923  05FA  0084               	movwf	4
  8924  05FB  1383               	bcf	3,7	;select IRP bank1
  8925  05FC  0800               	movf	0,w
  8926  05FD  1D03               	btfss	3,2
  8927  05FE  2E00               	goto	u2371
  8928  05FF  2E01               	goto	u2370
  8929  0600                     u2371:
  8930  0600  2E02               	goto	l3291
  8931  0601                     u2370:
  8932  0601  2E0E               	goto	l3295
  8933  0602                     l3291:
  8934                           
  8935                           ;SCH.c: 34:  }
  8936  0602  3001               	movlw	1
  8937  0603  00FF               	movwf	btemp+1
  8938  0604  087F               	movf	btemp+1,w
  8939  0605  1283               	bcf	3,5	;RP0=0, select bank0
  8940  0606  1303               	bcf	3,6	;RP1=0, select bank0
  8941  0607  07D5               	addwf	SCH_Add_Task@Index,f
  8942  0608                     l3293:
  8943  0608  3008               	movlw	8
  8944  0609  0255               	subwf	SCH_Add_Task@Index,w
  8945  060A  1C03               	skipc
  8946  060B  2E0D               	goto	u2381
  8947  060C  2E0E               	goto	u2380
  8948  060D                     u2381:
  8949  060D  2DEF               	goto	l3287
  8950  060E                     u2380:
  8951  060E                     l3295:
  8952                           
  8953                           ;SCH.c: 35:  if(Index < (8))
  8954  060E  3008               	movlw	8
  8955  060F  1283               	bcf	3,5	;RP0=0, select bank0
  8956  0610  1303               	bcf	3,6	;RP1=0, select bank0
  8957  0611  0255               	subwf	SCH_Add_Task@Index,w
  8958  0612  1803               	skipnc
  8959  0613  2E15               	goto	u2391
  8960  0614  2E16               	goto	u2390
  8961  0615                     u2391:
  8962  0615  2E60               	goto	l3303
  8963  0616                     u2390:
  8964  0616                     l3297:
  8965                           
  8966                           ;SCH.c: 36:  {;SCH.c: 37:   SCH_Tasks[Index].Task_P = Task_P;
  8967  0616  3006               	movlw	6
  8968  0617  00FF               	movwf	btemp+1
  8969  0618  087F               	movf	btemp+1,w
  8970  0619  00CD               	movwf	___bmul@multiplicand
  8971  061A  0855               	movf	SCH_Add_Task@Index,w
  8972  061B  160A  118A  27B9  120A  118A  	fcall	___bmul
  8973  0620  3EA0               	addlw	(low (_SCH_Tasks| 0))& (0+255)
  8974  0621  0084               	movwf	4
  8975  0622  1283               	bcf	3,5	;RP0=0, select bank0
  8976  0623  1303               	bcf	3,6	;RP1=0, select bank0
  8977  0624  0854               	movf	SCH_Add_Task@Task_P,w
  8978  0625  00FF               	movwf	btemp+1
  8979  0626  087F               	movf	btemp+1,w
  8980  0627  1383               	bcf	3,7	;select IRP bank1
  8981  0628  0080               	movwf	0
  8982                           
  8983                           ;SCH.c: 38:   SCH_Tasks[Index].Delay = Delay;
  8984  0629  3006               	movlw	6
  8985  062A  00FF               	movwf	btemp+1
  8986  062B  087F               	movf	btemp+1,w
  8987  062C  00CD               	movwf	___bmul@multiplicand
  8988  062D  0855               	movf	SCH_Add_Task@Index,w
  8989  062E  160A  118A  27B9  120A  118A  	fcall	___bmul
  8990  0633  3EA1               	addlw	(low ((_SCH_Tasks| 0+1)))& (0+255)
  8991  0634  0084               	movwf	4
  8992  0635  1283               	bcf	3,5	;RP0=0, select bank0
  8993  0636  1303               	bcf	3,6	;RP1=0, select bank0
  8994  0637  0850               	movf	SCH_Add_Task@Delay,w	;volatile
  8995  0638  1383               	bcf	3,7	;select IRP bank1
  8996  0639  0080               	movwf	0
  8997  063A  0A84               	incf	4,f
  8998  063B  0851               	movf	SCH_Add_Task@Delay+1,w	;volatile
  8999  063C  0080               	movwf	0
  9000                           
  9001                           ;SCH.c: 39:   SCH_Tasks[Index].Period = Period;
  9002  063D  3006               	movlw	6
  9003  063E  00FF               	movwf	btemp+1
  9004  063F  087F               	movf	btemp+1,w
  9005  0640  00CD               	movwf	___bmul@multiplicand
  9006  0641  0855               	movf	SCH_Add_Task@Index,w
  9007  0642  160A  118A  27B9  120A  118A  	fcall	___bmul
  9008  0647  3EA3               	addlw	(low ((_SCH_Tasks| 0+3)))& (0+255)
  9009  0648  0084               	movwf	4
  9010  0649  1283               	bcf	3,5	;RP0=0, select bank0
  9011  064A  1303               	bcf	3,6	;RP1=0, select bank0
  9012  064B  0852               	movf	SCH_Add_Task@Period,w	;volatile
  9013  064C  1383               	bcf	3,7	;select IRP bank1
  9014  064D  0080               	movwf	0
  9015  064E  0A84               	incf	4,f
  9016  064F  0853               	movf	SCH_Add_Task@Period+1,w	;volatile
  9017  0650  0080               	movwf	0
  9018                           
  9019                           ;SCH.c: 40:   SCH_Tasks[Index].RunMe = 0;
  9020  0651  3006               	movlw	6
  9021  0652  00FF               	movwf	btemp+1
  9022  0653  087F               	movf	btemp+1,w
  9023  0654  00CD               	movwf	___bmul@multiplicand
  9024  0655  0855               	movf	SCH_Add_Task@Index,w
  9025  0656  160A  118A  27B9  120A  118A  	fcall	___bmul
  9026  065B  3EA5               	addlw	(low ((_SCH_Tasks| 0+5)))& (0+255)
  9027  065C  0084               	movwf	4
  9028  065D  1383               	bcf	3,7	;select IRP bank1
  9029  065E  0180               	clrf	0
  9030  065F  2E64               	goto	l461
  9031  0660                     l3303:
  9032                           
  9033                           ;SCH.c: 43:  {;SCH.c: 44:   SCH_ErrorCode_G = (1);
  9034  0660  3001               	movlw	1
  9035  0661  00FF               	movwf	btemp+1
  9036  0662  087F               	movf	btemp+1,w
  9037  0663  00C8               	movwf	_SCH_ErrorCode_G	;volatile
  9038  0664                     l461:
  9039  0664  0008               	return
  9040  0665                     __end_of_SCH_Add_Task:
  9041                           
  9042                           	psect	text57
  9043  17B9                     __ptext57:	
  9044 ;; *************** function ___bmul *****************
  9045 ;; Defined at:
  9046 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\Umul8.c"
  9047 ;; Parameters:    Size  Location     Type
  9048 ;;  multiplier      1    wreg     unsigned char 
  9049 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  9050 ;; Auto vars:     Size  Location     Type
  9051 ;;  multiplier      1    2[BANK0 ] unsigned char 
  9052 ;;  product         1    1[BANK0 ] unsigned char 
  9053 ;; Return value:  Size  Location     Type
  9054 ;;                  1    wreg      unsigned char 
  9055 ;; Registers used:
  9056 ;;		wreg, status,2, status,0, btemp+1
  9057 ;; Tracked objects:
  9058 ;;		On entry : 0/0
  9059 ;;		On exit  : 0/0
  9060 ;;		Unchanged: 0/0
  9061 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9062 ;;      Params:         0       1       0       0       0
  9063 ;;      Locals:         0       2       0       0       0
  9064 ;;      Temps:          0       0       0       0       0
  9065 ;;      Totals:         0       3       0       0       0
  9066 ;;Total ram usage:        3 bytes
  9067 ;; Hardware stack levels used:    1
  9068 ;; Hardware stack levels required when called:    3
  9069 ;; This function calls:
  9070 ;;		Nothing
  9071 ;; This function is called by:
  9072 ;;		_SCH_Add_Task
  9073 ;;		_SCH_Delete_Task
  9074 ;;		_SCH_Update
  9075 ;;		_SCH_Dispatch_Tasks
  9076 ;; This function uses a non-reentrant model
  9077 ;;
  9078                           
  9079                           
  9080                           ;psect for function ___bmul
  9081  17B9                     ___bmul:
  9082                           
  9083                           ;incstack = 0
  9084                           ; Regs used in ___bmul: [wreg+status,2+status,0+btemp+1]
  9085                           ;___bmul@multiplier stored from wreg
  9086  17B9  1283               	bcf	3,5	;RP0=0, select bank0
  9087  17BA  1303               	bcf	3,6	;RP1=0, select bank0
  9088  17BB  00CF               	movwf	___bmul@multiplier
  9089  17BC                     l2873:
  9090  17BC  01CE               	clrf	___bmul@product
  9091  17BD                     l2875:
  9092  17BD  1C4F               	btfss	___bmul@multiplier,0
  9093  17BE  2FC0               	goto	u1911
  9094  17BF  2FC1               	goto	u1910
  9095  17C0                     u1911:
  9096  17C0  2FC5               	goto	l2879
  9097  17C1                     u1910:
  9098  17C1                     l2877:
  9099  17C1  084D               	movf	___bmul@multiplicand,w
  9100  17C2  00FF               	movwf	btemp+1
  9101  17C3  087F               	movf	btemp+1,w
  9102  17C4  07CE               	addwf	___bmul@product,f
  9103  17C5                     l2879:
  9104  17C5  1003               	clrc
  9105  17C6  0DCD               	rlf	___bmul@multiplicand,f
  9106  17C7                     l2881:
  9107  17C7  1003               	clrc
  9108  17C8  0CCF               	rrf	___bmul@multiplier,f
  9109  17C9                     l2883:
  9110  17C9  084F               	movf	___bmul@multiplier,w
  9111  17CA  1D03               	btfss	3,2
  9112  17CB  2FCD               	goto	u1921
  9113  17CC  2FCE               	goto	u1920
  9114  17CD                     u1921:
  9115  17CD  2FBD               	goto	l2875
  9116  17CE                     u1920:
  9117  17CE                     l2885:
  9118  17CE  084E               	movf	___bmul@product,w
  9119  17CF                     l733:
  9120  17CF  0008               	return
  9121  17D0                     __end_of___bmul:
  9122                           
  9123                           	psect	text58
  9124  08FD                     __ptext58:	
  9125 ;; *************** function _LED_Init *****************
  9126 ;; Defined at:
  9127 ;;		line 5 in file "LED.c"
  9128 ;; Parameters:    Size  Location     Type
  9129 ;;		None
  9130 ;; Auto vars:     Size  Location     Type
  9131 ;;		None
  9132 ;; Return value:  Size  Location     Type
  9133 ;;                  1    wreg      void 
  9134 ;; Registers used:
  9135 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  9136 ;; Tracked objects:
  9137 ;;		On entry : 0/0
  9138 ;;		On exit  : 0/0
  9139 ;;		Unchanged: 0/0
  9140 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9141 ;;      Params:         0       0       0       0       0
  9142 ;;      Locals:         0       0       0       0       0
  9143 ;;      Temps:          0       0       0       0       0
  9144 ;;      Totals:         0       0       0       0       0
  9145 ;;Total ram usage:        0 bytes
  9146 ;; Hardware stack levels used:    1
  9147 ;; Hardware stack levels required when called:    4
  9148 ;; This function calls:
  9149 ;;		_GPIO_InitPin
  9150 ;; This function is called by:
  9151 ;;		_main
  9152 ;; This function uses a non-reentrant model
  9153 ;;
  9154                           
  9155                           
  9156                           ;psect for function _LED_Init
  9157  08FD                     _LED_Init:
  9158  08FD                     l3177:	
  9159                           ;incstack = 0
  9160                           ; Regs used in _LED_Init: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  9161                           
  9162                           
  9163                           ;LED.c: 7:     LED_G[0].State = 0;
  9164  08FD  1283               	bcf	3,5	;RP0=0, select bank0
  9165  08FE  1303               	bcf	3,6	;RP1=0, select bank0
  9166  08FF  01C3               	clrf	_LED_G	;volatile
  9167                           
  9168                           ;LED.c: 8:     LED_G[1].State = 0;
  9169  0900  01C4               	clrf	_LED_G+1	;volatile
  9170  0901                     l3179:
  9171                           
  9172                           ;LED.c: 9:     GPIO_InitPin((((GPIO_TypeDef*)&PORTB)), (7), (0));
  9173  0901  3006               	movlw	6
  9174  0902  00CD               	movwf	GPIO_InitPin@GPIOx
  9175  0903  3000               	movlw	0
  9176  0904  00CE               	movwf	GPIO_InitPin@GPIOx+1
  9177  0905  3007               	movlw	7
  9178  0906  00FF               	movwf	btemp+1
  9179  0907  087F               	movf	btemp+1,w
  9180  0908  00CF               	movwf	GPIO_InitPin@PINx
  9181  0909  01D0               	clrf	GPIO_InitPin@Mode
  9182  090A  120A  158A  22C5  120A  158A  	fcall	_GPIO_InitPin
  9183  090F                     l3181:
  9184                           
  9185                           ;LED.c: 10:     GPIO_InitPin((((GPIO_TypeDef*)&PORTB)), (6), (0));
  9186  090F  3006               	movlw	6
  9187  0910  1283               	bcf	3,5	;RP0=0, select bank0
  9188  0911  1303               	bcf	3,6	;RP1=0, select bank0
  9189  0912  00CD               	movwf	GPIO_InitPin@GPIOx
  9190  0913  3000               	movlw	0
  9191  0914  00CE               	movwf	GPIO_InitPin@GPIOx+1
  9192  0915  3006               	movlw	6
  9193  0916  00FF               	movwf	btemp+1
  9194  0917  087F               	movf	btemp+1,w
  9195  0918  00CF               	movwf	GPIO_InitPin@PINx
  9196  0919  01D0               	clrf	GPIO_InitPin@Mode
  9197  091A  120A  158A  22C5  120A  158A  	fcall	_GPIO_InitPin
  9198  091F                     l570:
  9199  091F  0008               	return
  9200  0920                     __end_of_LED_Init:
  9201                           
  9202                           	psect	text59
  9203  08DA                     __ptext59:	
  9204 ;; *************** function _HCU_Init *****************
  9205 ;; Defined at:
  9206 ;;		line 5 in file "HCU.c"
  9207 ;; Parameters:    Size  Location     Type
  9208 ;;		None
  9209 ;; Auto vars:     Size  Location     Type
  9210 ;;		None
  9211 ;; Return value:  Size  Location     Type
  9212 ;;                  1    wreg      void 
  9213 ;; Registers used:
  9214 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  9215 ;; Tracked objects:
  9216 ;;		On entry : 0/0
  9217 ;;		On exit  : 0/0
  9218 ;;		Unchanged: 0/0
  9219 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9220 ;;      Params:         0       0       0       0       0
  9221 ;;      Locals:         0       0       0       0       0
  9222 ;;      Temps:          0       0       0       0       0
  9223 ;;      Totals:         0       0       0       0       0
  9224 ;;Total ram usage:        0 bytes
  9225 ;; Hardware stack levels used:    1
  9226 ;; Hardware stack levels required when called:    4
  9227 ;; This function calls:
  9228 ;;		_GPIO_InitPin
  9229 ;; This function is called by:
  9230 ;;		_main
  9231 ;; This function uses a non-reentrant model
  9232 ;;
  9233                           
  9234                           
  9235                           ;psect for function _HCU_Init
  9236  08DA                     _HCU_Init:
  9237  08DA                     l3217:	
  9238                           ;incstack = 0
  9239                           ; Regs used in _HCU_Init: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  9240                           
  9241                           
  9242                           ;HCU.c: 7:     HCU_G[0].State = 0;
  9243  08DA  1283               	bcf	3,5	;RP0=0, select bank0
  9244  08DB  1303               	bcf	3,6	;RP1=0, select bank0
  9245  08DC  01C5               	clrf	_HCU_G	;volatile
  9246                           
  9247                           ;HCU.c: 8:     HCU_G[1].State = 0;
  9248  08DD  01C6               	clrf	_HCU_G+1	;volatile
  9249  08DE                     l3219:
  9250                           
  9251                           ;HCU.c: 9:     GPIO_InitPin((((GPIO_TypeDef*)&PORTC)), (5), (0));
  9252  08DE  3007               	movlw	7
  9253  08DF  00CD               	movwf	GPIO_InitPin@GPIOx
  9254  08E0  3000               	movlw	0
  9255  08E1  00CE               	movwf	GPIO_InitPin@GPIOx+1
  9256  08E2  3005               	movlw	5
  9257  08E3  00FF               	movwf	btemp+1
  9258  08E4  087F               	movf	btemp+1,w
  9259  08E5  00CF               	movwf	GPIO_InitPin@PINx
  9260  08E6  01D0               	clrf	GPIO_InitPin@Mode
  9261  08E7  120A  158A  22C5  120A  158A  	fcall	_GPIO_InitPin
  9262  08EC                     l3221:
  9263                           
  9264                           ;HCU.c: 10:     GPIO_InitPin((((GPIO_TypeDef*)&PORTC)), (2), (0));
  9265  08EC  3007               	movlw	7
  9266  08ED  1283               	bcf	3,5	;RP0=0, select bank0
  9267  08EE  1303               	bcf	3,6	;RP1=0, select bank0
  9268  08EF  00CD               	movwf	GPIO_InitPin@GPIOx
  9269  08F0  3000               	movlw	0
  9270  08F1  00CE               	movwf	GPIO_InitPin@GPIOx+1
  9271  08F2  3002               	movlw	2
  9272  08F3  00FF               	movwf	btemp+1
  9273  08F4  087F               	movf	btemp+1,w
  9274  08F5  00CF               	movwf	GPIO_InitPin@PINx
  9275  08F6  01D0               	clrf	GPIO_InitPin@Mode
  9276  08F7  120A  158A  22C5  120A  158A  	fcall	_GPIO_InitPin
  9277  08FC                     l549:
  9278  08FC  0008               	return
  9279  08FD                     __end_of_HCU_Init:
  9280                           
  9281                           	psect	text60
  9282  0AC5                     __ptext60:	
  9283 ;; *************** function _GPIO_InitPin *****************
  9284 ;; Defined at:
  9285 ;;		line 3 in file "GPIO.c"
  9286 ;; Parameters:    Size  Location     Type
  9287 ;;  GPIOx           2    0[BANK0 ] PTR struct .
  9288 ;;		 -> PORTC(1), PORTB(1), PORTA(1), PORTD(1), 
  9289 ;;  PINx            1    2[BANK0 ] unsigned char 
  9290 ;;  Mode            1    3[BANK0 ] unsigned char 
  9291 ;; Auto vars:     Size  Location     Type
  9292 ;;		None
  9293 ;; Return value:  Size  Location     Type
  9294 ;;                  1    wreg      void 
  9295 ;; Registers used:
  9296 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  9297 ;; Tracked objects:
  9298 ;;		On entry : 0/0
  9299 ;;		On exit  : 0/0
  9300 ;;		Unchanged: 0/0
  9301 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9302 ;;      Params:         0       4       0       0       0
  9303 ;;      Locals:         0       0       0       0       0
  9304 ;;      Temps:          0       6       0       0       0
  9305 ;;      Totals:         0      10       0       0       0
  9306 ;;Total ram usage:       10 bytes
  9307 ;; Hardware stack levels used:    1
  9308 ;; Hardware stack levels required when called:    3
  9309 ;; This function calls:
  9310 ;;		Nothing
  9311 ;; This function is called by:
  9312 ;;		_SSD_Init
  9313 ;;		_SW_Init
  9314 ;;		_I2C_Master_Init
  9315 ;;		_HCU_Init
  9316 ;;		_LED_Init
  9317 ;; This function uses a non-reentrant model
  9318 ;;
  9319                           
  9320                           
  9321                           ;psect for function _GPIO_InitPin
  9322  0AC5                     _GPIO_InitPin:
  9323  0AC5                     l2449:	
  9324                           ;incstack = 0
  9325                           ; Regs used in _GPIO_InitPin: [wreg-fsr0h+status,2+status,0+btemp+1]
  9326                           
  9327                           
  9328                           ;GPIO.c: 3: void GPIO_InitPin(GPIO_TypeDef* GPIOx, uint8_t PINx, uint8_t Mode);GPIO.c: 4
      +                          : {;GPIO.c: 5:  GPIOx->TRIS = (GPIOx->TRIS & ~(1<<PINx)) | (Mode<<PINx);
  9329  0AC5  1283               	bcf	3,5	;RP0=0, select bank0
  9330  0AC6  1303               	bcf	3,6	;RP1=0, select bank0
  9331  0AC7  0850               	movf	GPIO_InitPin@Mode,w
  9332  0AC8  00D1               	movwf	??_GPIO_InitPin
  9333  0AC9  0A4F               	incf	GPIO_InitPin@PINx,w
  9334  0ACA  2ACD               	goto	u1344
  9335  0ACB                     u1345:
  9336  0ACB  1003               	clrc
  9337  0ACC  0DD1               	rlf	??_GPIO_InitPin,f
  9338  0ACD                     u1344:
  9339  0ACD  3EFF               	addlw	-1
  9340  0ACE  1D03               	skipz
  9341  0ACF  2ACB               	goto	u1345
  9342  0AD0  084D               	movf	GPIO_InitPin@GPIOx,w
  9343  0AD1  3E80               	addlw	128
  9344  0AD2  00D2               	movwf	??_GPIO_InitPin+1
  9345  0AD3  084E               	movf	GPIO_InitPin@GPIOx+1,w
  9346  0AD4  1803               	skipnc
  9347  0AD5  3E01               	addlw	1
  9348  0AD6  3E00               	addlw	0
  9349  0AD7  00D3               	movwf	??_GPIO_InitPin+2
  9350  0AD8  0852               	movf	??_GPIO_InitPin+1,w
  9351  0AD9  0084               	movwf	4
  9352  0ADA  1783               	bsf	3,7
  9353  0ADB  1C53               	btfss	??_GPIO_InitPin+2,0
  9354  0ADC  1383               	bcf	3,7
  9355  0ADD  3001               	movlw	1
  9356  0ADE  00D4               	movwf	??_GPIO_InitPin+3
  9357  0ADF  0A4F               	incf	GPIO_InitPin@PINx,w
  9358  0AE0  2AE3               	goto	u1354
  9359  0AE1                     u1355:
  9360  0AE1  1003               	clrc
  9361  0AE2  0DD4               	rlf	??_GPIO_InitPin+3,f
  9362  0AE3                     u1354:
  9363  0AE3  3EFF               	addlw	-1
  9364  0AE4  1D03               	skipz
  9365  0AE5  2AE1               	goto	u1355
  9366  0AE6  0854               	movf	??_GPIO_InitPin+3,w
  9367  0AE7  3AFF               	xorlw	255
  9368  0AE8  0500               	andwf	0,w
  9369  0AE9  0451               	iorwf	??_GPIO_InitPin,w
  9370  0AEA  00FF               	movwf	btemp+1
  9371  0AEB  084D               	movf	GPIO_InitPin@GPIOx,w
  9372  0AEC  3E80               	addlw	128
  9373  0AED  00D5               	movwf	??_GPIO_InitPin+4
  9374  0AEE  084E               	movf	GPIO_InitPin@GPIOx+1,w
  9375  0AEF  1803               	skipnc
  9376  0AF0  3E01               	addlw	1
  9377  0AF1  3E00               	addlw	0
  9378  0AF2  00D6               	movwf	??_GPIO_InitPin+5
  9379  0AF3  0855               	movf	??_GPIO_InitPin+4,w
  9380  0AF4  0084               	movwf	4
  9381  0AF5  1783               	bsf	3,7
  9382  0AF6  1C56               	btfss	??_GPIO_InitPin+5,0
  9383  0AF7  1383               	bcf	3,7
  9384  0AF8  087F               	movf	btemp+1,w
  9385  0AF9  0080               	movwf	0
  9386  0AFA                     l583:
  9387  0AFA  0008               	return
  9388  0AFB                     __end_of_GPIO_InitPin:
  9389                           
  9390                           	psect	text61
  9391  0920                     __ptext61:	
  9392 ;; *************** function _DISP_Init *****************
  9393 ;; Defined at:
  9394 ;;		line 7 in file "DISP.c"
  9395 ;; Parameters:    Size  Location     Type
  9396 ;;		None
  9397 ;; Auto vars:     Size  Location     Type
  9398 ;;		None
  9399 ;; Return value:  Size  Location     Type
  9400 ;;                  1    wreg      void 
  9401 ;; Registers used:
  9402 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  9403 ;; Tracked objects:
  9404 ;;		On entry : 0/0
  9405 ;;		On exit  : 0/0
  9406 ;;		Unchanged: 0/0
  9407 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9408 ;;      Params:         0       0       0       0       0
  9409 ;;      Locals:         0       0       0       0       0
  9410 ;;      Temps:          0       0       0       0       0
  9411 ;;      Totals:         0       0       0       0       0
  9412 ;;Total ram usage:        0 bytes
  9413 ;; Hardware stack levels used:    1
  9414 ;; Hardware stack levels required when called:    4
  9415 ;; This function calls:
  9416 ;;		_LED_SetState
  9417 ;;		_SSD_SetState
  9418 ;; This function is called by:
  9419 ;;		_main
  9420 ;; This function uses a non-reentrant model
  9421 ;;
  9422                           
  9423                           
  9424                           ;psect for function _DISP_Init
  9425  0920                     _DISP_Init:
  9426  0920                     l3223:	
  9427                           ;incstack = 0
  9428                           ; Regs used in _DISP_Init: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  9429                           
  9430                           
  9431                           ;DISP.c: 9:     DISP_G[0].State = 0;
  9432  0920  1283               	bcf	3,5	;RP0=0, select bank0
  9433  0921  1303               	bcf	3,6	;RP1=0, select bank0
  9434  0922  01B3               	clrf	_DISP_G	;volatile
  9435                           
  9436                           ;DISP.c: 10:     DISP_G[0].Blink = 0;
  9437  0923  01B4               	clrf	_DISP_G+1	;volatile
  9438                           
  9439                           ;DISP.c: 11:     DISP_G[0].Counter = 0;
  9440  0924  01B5               	clrf	_DISP_G+2	;volatile
  9441  0925  01B6               	clrf	_DISP_G+3	;volatile
  9442                           
  9443                           ;DISP.c: 12:     DISP_G[1].State = 0;
  9444  0926  01B7               	clrf	_DISP_G+4	;volatile
  9445                           
  9446                           ;DISP.c: 13:     DISP_G[1].Blink = 0;
  9447  0927  01B8               	clrf	_DISP_G+5	;volatile
  9448                           
  9449                           ;DISP.c: 14:     DISP_G[1].Counter = 0;
  9450  0928  01B9               	clrf	_DISP_G+6	;volatile
  9451  0929  01BA               	clrf	_DISP_G+7	;volatile
  9452  092A                     l3225:
  9453                           
  9454                           ;DISP.c: 15:     LED_SetState((6), (0));
  9455  092A  01CD               	clrf	LED_SetState@State
  9456  092B  3006               	movlw	6
  9457  092C  120A  158A  207C  120A  158A  	fcall	_LED_SetState
  9458  0931                     l3227:
  9459                           
  9460                           ;DISP.c: 16:     SSD_SetState((5), (0));
  9461  0931  1283               	bcf	3,5	;RP0=0, select bank0
  9462  0932  1303               	bcf	3,6	;RP1=0, select bank0
  9463  0933  01CD               	clrf	SSD_SetState@State
  9464  0934  3005               	movlw	5
  9465  0935  120A  158A  2209  120A  158A  	fcall	_SSD_SetState
  9466  093A                     l3229:
  9467                           
  9468                           ;DISP.c: 17:     SSD_SetState((4), (0));
  9469  093A  1283               	bcf	3,5	;RP0=0, select bank0
  9470  093B  1303               	bcf	3,6	;RP1=0, select bank0
  9471  093C  01CD               	clrf	SSD_SetState@State
  9472  093D  3004               	movlw	4
  9473  093E  120A  158A  2209  120A  158A  	fcall	_SSD_SetState
  9474  0943                     l297:
  9475  0943  0008               	return
  9476  0944                     __end_of_DISP_Init:
  9477                           
  9478                           	psect	text62
  9479  0A09                     __ptext62:	
  9480 ;; *************** function _SSD_SetState *****************
  9481 ;; Defined at:
  9482 ;;		line 49 in file "SSD.c"
  9483 ;; Parameters:    Size  Location     Type
  9484 ;;  SSDx            1    wreg     unsigned char 
  9485 ;;  State           1    0[BANK0 ] unsigned char 
  9486 ;; Auto vars:     Size  Location     Type
  9487 ;;  SSDx            1    3[BANK0 ] unsigned char 
  9488 ;; Return value:  Size  Location     Type
  9489 ;;                  1    wreg      void 
  9490 ;; Registers used:
  9491 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  9492 ;; Tracked objects:
  9493 ;;		On entry : 0/0
  9494 ;;		On exit  : 0/0
  9495 ;;		Unchanged: 0/0
  9496 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9497 ;;      Params:         0       1       0       0       0
  9498 ;;      Locals:         0       1       0       0       0
  9499 ;;      Temps:          0       2       0       0       0
  9500 ;;      Totals:         0       4       0       0       0
  9501 ;;Total ram usage:        4 bytes
  9502 ;; Hardware stack levels used:    1
  9503 ;; Hardware stack levels required when called:    3
  9504 ;; This function calls:
  9505 ;;		Nothing
  9506 ;; This function is called by:
  9507 ;;		_DISP_Init
  9508 ;;		_DISP_Update
  9509 ;; This function uses a non-reentrant model
  9510 ;;
  9511                           
  9512                           
  9513                           ;psect for function _SSD_SetState
  9514  0A09                     _SSD_SetState:
  9515                           
  9516                           ;incstack = 0
  9517                           ; Regs used in _SSD_SetState: [wreg-fsr0h+status,2+status,0+btemp+1]
  9518                           ;SSD_SetState@SSDx stored from wreg
  9519  0A09  1283               	bcf	3,5	;RP0=0, select bank0
  9520  0A0A  1303               	bcf	3,6	;RP1=0, select bank0
  9521  0A0B  00D0               	movwf	SSD_SetState@SSDx
  9522  0A0C                     l2675:
  9523                           
  9524                           ;SSD.c: 49: void SSD_SetState(uint8_t SSDx, uint8_t State);SSD.c: 50: {;SSD.c: 51:     s
      +                          witch(SSDx)
  9525  0A0C  2A21               	goto	l2687
  9526  0A0D                     l2677:
  9527                           
  9528                           ;SSD.c: 54:             SSD_G[0].State = State;
  9529  0A0D  084D               	movf	SSD_SetState@State,w
  9530  0A0E  00FF               	movwf	btemp+1
  9531  0A0F  087F               	movf	btemp+1,w
  9532  0A10  00BB               	movwf	_SSD_G	;volatile
  9533                           
  9534                           ;SSD.c: 55:             break;
  9535  0A11  2A37               	goto	l82
  9536  0A12                     l2679:
  9537                           
  9538                           ;SSD.c: 57:             SSD_G[1].State = State;
  9539  0A12  084D               	movf	SSD_SetState@State,w
  9540  0A13  00FF               	movwf	btemp+1
  9541  0A14  087F               	movf	btemp+1,w
  9542  0A15  00BD               	movwf	_SSD_G+2	;volatile
  9543                           
  9544                           ;SSD.c: 58:             break;
  9545  0A16  2A37               	goto	l82
  9546  0A17                     l2681:
  9547                           
  9548                           ;SSD.c: 60:             SSD_G[2].State = State;
  9549  0A17  084D               	movf	SSD_SetState@State,w
  9550  0A18  00FF               	movwf	btemp+1
  9551  0A19  087F               	movf	btemp+1,w
  9552  0A1A  00BF               	movwf	_SSD_G+4	;volatile
  9553                           
  9554                           ;SSD.c: 61:             break;
  9555  0A1B  2A37               	goto	l82
  9556  0A1C                     l2683:
  9557                           
  9558                           ;SSD.c: 63:             SSD_G[3].State = State;
  9559  0A1C  084D               	movf	SSD_SetState@State,w
  9560  0A1D  00FF               	movwf	btemp+1
  9561  0A1E  087F               	movf	btemp+1,w
  9562  0A1F  00C1               	movwf	_SSD_G+6	;volatile
  9563                           
  9564                           ;SSD.c: 64:             break;
  9565  0A20  2A37               	goto	l82
  9566  0A21                     l2687:
  9567  0A21  0850               	movf	SSD_SetState@SSDx,w
  9568  0A22  00CE               	movwf	??_SSD_SetState
  9569  0A23  01CF               	clrf	??_SSD_SetState+1
  9570                           
  9571                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9572                           ; Switch size 1, requested type "simple"
  9573                           ; Number of cases is 1, Range of values is 0 to 0
  9574                           ; switch strategies available:
  9575                           ; Name         Instructions Cycles
  9576                           ; simple_byte            4     3 (average)
  9577                           ; direct_byte           11     8 (fixed)
  9578                           ; jumptable            260     6 (fixed)
  9579                           ;	Chosen strategy is simple_byte
  9580  0A24  084F               	movf	??_SSD_SetState+1,w
  9581  0A25  3A00               	xorlw	0	; case 0
  9582  0A26  1903               	skipnz
  9583  0A27  2A29               	goto	l3651
  9584  0A28  2A37               	goto	l82
  9585  0A29                     l3651:
  9586                           
  9587                           ; Switch size 1, requested type "simple"
  9588                           ; Number of cases is 4, Range of values is 2 to 5
  9589                           ; switch strategies available:
  9590                           ; Name         Instructions Cycles
  9591                           ; simple_byte           13     7 (average)
  9592                           ; direct_byte           23    11 (fixed)
  9593                           ; jumptable            263     9 (fixed)
  9594                           ;	Chosen strategy is simple_byte
  9595  0A29  084E               	movf	??_SSD_SetState,w
  9596  0A2A  3A02               	xorlw	2	; case 2
  9597  0A2B  1903               	skipnz
  9598  0A2C  2A1C               	goto	l2683
  9599  0A2D  3A01               	xorlw	1	; case 3
  9600  0A2E  1903               	skipnz
  9601  0A2F  2A17               	goto	l2681
  9602  0A30  3A07               	xorlw	7	; case 4
  9603  0A31  1903               	skipnz
  9604  0A32  2A12               	goto	l2679
  9605  0A33  3A01               	xorlw	1	; case 5
  9606  0A34  1903               	skipnz
  9607  0A35  2A0D               	goto	l2677
  9608  0A36  2A37               	goto	l82
  9609  0A37                     l82:
  9610  0A37  0008               	return
  9611  0A38                     __end_of_SSD_SetState:
  9612                           
  9613                           	psect	text63
  9614  087C                     __ptext63:	
  9615 ;; *************** function _LED_SetState *****************
  9616 ;; Defined at:
  9617 ;;		line 19 in file "LED.c"
  9618 ;; Parameters:    Size  Location     Type
  9619 ;;  LEDx            1    wreg     unsigned char 
  9620 ;;  State           1    0[BANK0 ] unsigned char 
  9621 ;; Auto vars:     Size  Location     Type
  9622 ;;  LEDx            1    3[BANK0 ] unsigned char 
  9623 ;; Return value:  Size  Location     Type
  9624 ;;                  1    wreg      void 
  9625 ;; Registers used:
  9626 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  9627 ;; Tracked objects:
  9628 ;;		On entry : 0/0
  9629 ;;		On exit  : 0/0
  9630 ;;		Unchanged: 0/0
  9631 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9632 ;;      Params:         0       1       0       0       0
  9633 ;;      Locals:         0       1       0       0       0
  9634 ;;      Temps:          0       2       0       0       0
  9635 ;;      Totals:         0       4       0       0       0
  9636 ;;Total ram usage:        4 bytes
  9637 ;; Hardware stack levels used:    1
  9638 ;; Hardware stack levels required when called:    3
  9639 ;; This function calls:
  9640 ;;		Nothing
  9641 ;; This function is called by:
  9642 ;;		_DISP_Init
  9643 ;;		_DISP_Update
  9644 ;;		_SCH_Report_Status
  9645 ;; This function uses a non-reentrant model
  9646 ;;
  9647                           
  9648                           
  9649                           ;psect for function _LED_SetState
  9650  087C                     _LED_SetState:
  9651                           
  9652                           ;incstack = 0
  9653                           ; Regs used in _LED_SetState: [wreg-fsr0h+status,2+status,0+btemp+1]
  9654                           ;LED_SetState@LEDx stored from wreg
  9655  087C  1283               	bcf	3,5	;RP0=0, select bank0
  9656  087D  1303               	bcf	3,6	;RP1=0, select bank0
  9657  087E  00D0               	movwf	LED_SetState@LEDx
  9658  087F                     l2739:
  9659                           
  9660                           ;LED.c: 19: void LED_SetState(uint8_t LEDx, uint8_t State);LED.c: 20: {;LED.c: 21:     s
      +                          witch(LEDx)
  9661  087F  288A               	goto	l2747
  9662  0880                     l2741:
  9663                           
  9664                           ;LED.c: 24:             LED_G[0].State = State;
  9665  0880  084D               	movf	LED_SetState@State,w
  9666  0881  00FF               	movwf	btemp+1
  9667  0882  087F               	movf	btemp+1,w
  9668  0883  00C3               	movwf	_LED_G	;volatile
  9669                           
  9670                           ;LED.c: 25:             break;
  9671  0884  289A               	goto	l580
  9672  0885                     l2743:
  9673                           
  9674                           ;LED.c: 27:             LED_G[1].State = State;
  9675  0885  084D               	movf	LED_SetState@State,w
  9676  0886  00FF               	movwf	btemp+1
  9677  0887  087F               	movf	btemp+1,w
  9678  0888  00C4               	movwf	_LED_G+1	;volatile
  9679                           
  9680                           ;LED.c: 28:             break;
  9681  0889  289A               	goto	l580
  9682  088A                     l2747:
  9683  088A  0850               	movf	LED_SetState@LEDx,w
  9684  088B  00CE               	movwf	??_LED_SetState
  9685  088C  01CF               	clrf	??_LED_SetState+1
  9686                           
  9687                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9688                           ; Switch size 1, requested type "simple"
  9689                           ; Number of cases is 1, Range of values is 0 to 0
  9690                           ; switch strategies available:
  9691                           ; Name         Instructions Cycles
  9692                           ; simple_byte            4     3 (average)
  9693                           ; direct_byte           11     8 (fixed)
  9694                           ; jumptable            260     6 (fixed)
  9695                           ;	Chosen strategy is simple_byte
  9696  088D  084F               	movf	??_LED_SetState+1,w
  9697  088E  3A00               	xorlw	0	; case 0
  9698  088F  1903               	skipnz
  9699  0890  2892               	goto	l3653
  9700  0891  289A               	goto	l580
  9701  0892                     l3653:
  9702                           
  9703                           ; Switch size 1, requested type "simple"
  9704                           ; Number of cases is 2, Range of values is 6 to 7
  9705                           ; switch strategies available:
  9706                           ; Name         Instructions Cycles
  9707                           ; simple_byte            7     4 (average)
  9708                           ; direct_byte           17    11 (fixed)
  9709                           ; jumptable            263     9 (fixed)
  9710                           ;	Chosen strategy is simple_byte
  9711  0892  084E               	movf	??_LED_SetState,w
  9712  0893  3A06               	xorlw	6	; case 6
  9713  0894  1903               	skipnz
  9714  0895  2885               	goto	l2743
  9715  0896  3A01               	xorlw	1	; case 7
  9716  0897  1903               	skipnz
  9717  0898  2880               	goto	l2741
  9718  0899  289A               	goto	l580
  9719  089A                     l580:
  9720  089A  0008               	return
  9721  089B                     __end_of_LED_SetState:
  9722                           
  9723                           	psect	text64
  9724  08BA                     __ptext64:	
  9725 ;; *************** function _ADC_Init *****************
  9726 ;; Defined at:
  9727 ;;		line 5 in file "ADC.c"
  9728 ;; Parameters:    Size  Location     Type
  9729 ;;		None
  9730 ;; Auto vars:     Size  Location     Type
  9731 ;;		None
  9732 ;; Return value:  Size  Location     Type
  9733 ;;                  1    wreg      void 
  9734 ;; Registers used:
  9735 ;;		wreg, status,2, btemp+1
  9736 ;; Tracked objects:
  9737 ;;		On entry : 0/0
  9738 ;;		On exit  : 0/0
  9739 ;;		Unchanged: 0/0
  9740 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9741 ;;      Params:         0       0       0       0       0
  9742 ;;      Locals:         0       0       0       0       0
  9743 ;;      Temps:          0       0       0       0       0
  9744 ;;      Totals:         0       0       0       0       0
  9745 ;;Total ram usage:        0 bytes
  9746 ;; Hardware stack levels used:    1
  9747 ;; Hardware stack levels required when called:    3
  9748 ;; This function calls:
  9749 ;;		Nothing
  9750 ;; This function is called by:
  9751 ;;		_main
  9752 ;; This function uses a non-reentrant model
  9753 ;;
  9754                           
  9755                           
  9756                           ;psect for function _ADC_Init
  9757  08BA                     _ADC_Init:
  9758  08BA                     l3191:	
  9759                           ;incstack = 0
  9760                           ; Regs used in _ADC_Init: [wreg+status,2+btemp+1]
  9761                           
  9762                           
  9763                           ;ADC.c: 7:     ADC_G[0].Channel = 2;
  9764  08BA  3002               	movlw	2
  9765  08BB  00FF               	movwf	btemp+1
  9766  08BC  087F               	movf	btemp+1,w
  9767  08BD  1283               	bcf	3,5	;RP0=0, select bank0
  9768  08BE  1303               	bcf	3,6	;RP1=0, select bank0
  9769  08BF  00A0               	movwf	_ADC_G	;volatile
  9770  08C0                     l3193:
  9771                           
  9772                           ;ADC.c: 8:     ADC_G[0].VoltMulti = 488281;
  9773  08C0  3000               	movlw	0
  9774  08C1  00A4               	movwf	_ADC_G+4	;volatile
  9775  08C2  3007               	movlw	7
  9776  08C3  00A3               	movwf	_ADC_G+3	;volatile
  9777  08C4  3073               	movlw	115
  9778  08C5  00A2               	movwf	_ADC_G+2	;volatile
  9779  08C6  3059               	movlw	89
  9780  08C7  00A1               	movwf	_ADC_G+1	;volatile
  9781  08C8                     l3195:
  9782                           
  9783                           ;ADC.c: 9:     ADC_G[0].VoltDivide = 1000000;
  9784  08C8  3000               	movlw	0
  9785  08C9  00A8               	movwf	_ADC_G+8	;volatile
  9786  08CA  300F               	movlw	15
  9787  08CB  00A7               	movwf	_ADC_G+7	;volatile
  9788  08CC  3042               	movlw	66
  9789  08CD  00A6               	movwf	_ADC_G+6	;volatile
  9790  08CE  3040               	movlw	64
  9791  08CF  00A5               	movwf	_ADC_G+5	;volatile
  9792  08D0                     l3197:
  9793                           
  9794                           ;ADC.c: 10:     ADC_G[0].Result = 0;
  9795  08D0  01A9               	clrf	_ADC_G+9	;volatile
  9796  08D1                     l3199:
  9797                           
  9798                           ;ADC.c: 11:     ADCON0 = ADCON0 | 0x41;
  9799  08D1  081F               	movf	31,w	;volatile
  9800  08D2  3841               	iorlw	65
  9801  08D3  009F               	movwf	31	;volatile
  9802  08D4                     l3201:
  9803                           
  9804                           ;ADC.c: 12:     ADCON1 = ADCON1 | 0xC0;
  9805  08D4  1683               	bsf	3,5	;RP0=1, select bank1
  9806  08D5  1303               	bcf	3,6	;RP1=0, select bank1
  9807  08D6  081F               	movf	31,w	;volatile
  9808  08D7  38C0               	iorlw	192
  9809  08D8  009F               	movwf	31	;volatile
  9810  08D9                     l159:
  9811  08D9  0008               	return
  9812  08DA                     __end_of_ADC_Init:
  9813                           
  9814                           	psect	text65
  9815  178E                     __ptext65:	
  9816 ;; *************** function _SysTick_Handler *****************
  9817 ;; Defined at:
  9818 ;;		line 17 in file "SCH_CONFIG.c"
  9819 ;; Parameters:    Size  Location     Type
  9820 ;;		None
  9821 ;; Auto vars:     Size  Location     Type
  9822 ;;		None
  9823 ;; Return value:  Size  Location     Type
  9824 ;;                  1    wreg      void 
  9825 ;; Registers used:
  9826 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  9827 ;; Tracked objects:
  9828 ;;		On entry : 0/0
  9829 ;;		On exit  : 0/0
  9830 ;;		Unchanged: 0/0
  9831 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9832 ;;      Params:         0       0       0       0       0
  9833 ;;      Locals:         0       0       0       0       0
  9834 ;;      Temps:          4       0       0       0       0
  9835 ;;      Totals:         4       0       0       0       0
  9836 ;;Total ram usage:        4 bytes
  9837 ;; Hardware stack levels used:    1
  9838 ;; Hardware stack levels required when called:    2
  9839 ;; This function calls:
  9840 ;;		_SCH_Update
  9841 ;; This function is called by:
  9842 ;;		Interrupt level 1
  9843 ;; This function uses a non-reentrant model
  9844 ;;
  9845                           
  9846                           
  9847                           ;psect for function _SysTick_Handler
  9848  178E                     _SysTick_Handler:
  9849  178E                     i1l3437:
  9850                           
  9851                           ;SCH_CONFIG.c: 19:     (PIR1 = PIR1 & (~0x04));
  9852  178E  080C               	movf	12,w	;volatile
  9853  178F  39FB               	andlw	251
  9854  1790  008C               	movwf	12	;volatile
  9855  1791                     i1l3439:
  9856                           
  9857                           ;SCH_CONFIG.c: 20:  SCH_Update();
  9858  1791  120A  118A  2338  160A  118A  	fcall	_SCH_Update
  9859  1796                     i1l517:
  9860  1796  0879               	movf	??_SysTick_Handler+3,w
  9861  1797  1283               	bcf	3,5	;RP0=0, select bank0
  9862  1798  1303               	bcf	3,6	;RP1=0, select bank0
  9863  1799  00FF               	movwf	btemp+1
  9864  179A  0878               	movf	??_SysTick_Handler+2,w
  9865  179B  008A               	movwf	10
  9866  179C  0877               	movf	??_SysTick_Handler+1,w
  9867  179D  0084               	movwf	4
  9868  179E  0E76               	swapf	??_SysTick_Handler^(0+4294967168),w
  9869  179F  0083               	movwf	3
  9870  17A0  0EFE               	swapf	btemp,f
  9871  17A1  0E7E               	swapf	btemp,w
  9872  17A2  0009               	retfie
  9873  17A3                     __end_of_SysTick_Handler:
  9874                           
  9875                           	psect	intentry
  9876  0004                     __pintentry:	
  9877                           ;incstack = 0
  9878 ;; hardware stack exceeded
  9879                           ; Regs used in _SysTick_Handler: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  9880                           
  9881  0004                     interrupt_function:
  9882  007E                     saved_w	set	btemp
  9883  0004  00FE               	movwf	btemp
  9884  0005  0E03               	swapf	3,w
  9885  0006  00F6               	movwf	??_SysTick_Handler
  9886  0007  0804               	movf	4,w
  9887  0008  00F7               	movwf	??_SysTick_Handler+1
  9888  0009  080A               	movf	10,w
  9889  000A  00F8               	movwf	??_SysTick_Handler+2
  9890  000B  1283               	bcf	3,5	;RP0=0, select bank0
  9891  000C  1303               	bcf	3,6	;RP1=0, select bank0
  9892  000D  087F               	movf	btemp+1,w
  9893  000E  00F9               	movwf	??_SysTick_Handler+3
  9894  000F  160A  118A  2F8E   	ljmp	_SysTick_Handler
  9895                           
  9896                           	psect	text66
  9897  0338                     __ptext66:	
  9898 ;; *************** function _SCH_Update *****************
  9899 ;; Defined at:
  9900 ;;		line 95 in file "SCH.c"
  9901 ;; Parameters:    Size  Location     Type
  9902 ;;		None
  9903 ;; Auto vars:     Size  Location     Type
  9904 ;;  Index           1    5[COMMON] unsigned char 
  9905 ;; Return value:  Size  Location     Type
  9906 ;;                  1    wreg      void 
  9907 ;; Registers used:
  9908 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  9909 ;; Tracked objects:
  9910 ;;		On entry : 0/0
  9911 ;;		On exit  : 0/0
  9912 ;;		Unchanged: 0/0
  9913 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9914 ;;      Params:         0       0       0       0       0
  9915 ;;      Locals:         1       0       0       0       0
  9916 ;;      Temps:          2       0       0       0       0
  9917 ;;      Totals:         3       0       0       0       0
  9918 ;;Total ram usage:        3 bytes
  9919 ;; Hardware stack levels used:    1
  9920 ;; Hardware stack levels required when called:    1
  9921 ;; This function calls:
  9922 ;;		i1___bmul
  9923 ;; This function is called by:
  9924 ;;		_SysTick_Handler
  9925 ;; This function uses a non-reentrant model
  9926 ;;
  9927                           
  9928                           
  9929                           ;psect for function _SCH_Update
  9930  0338                     _SCH_Update:
  9931  0338                     i1l3329:	
  9932                           ;incstack = 0
  9933 ;; hardware stack exceeded
  9934                           ; Regs used in _SCH_Update: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  9935                           
  9936                           
  9937                           ;SCH.c: 97:  uint8_t Index;;SCH.c: 98:  for(Index = 0; Index < (8); Index++)
  9938  0338  01F5               	clrf	SCH_Update@Index
  9939  0339                     i1l3335:
  9940                           
  9941                           ;SCH.c: 99:  {;SCH.c: 100:   if(SCH_Tasks[Index].Task_P != 0)
  9942  0339  3006               	movlw	6
  9943  033A  00FF               	movwf	btemp+1
  9944  033B  087F               	movf	btemp+1,w
  9945  033C  00F0               	movwf	i1___bmul@multiplicand
  9946  033D  0875               	movf	SCH_Update@Index,w
  9947  033E  160A  118A  2779  120A  118A  	fcall	i1___bmul
  9948  0343  3EA0               	addlw	(low (_SCH_Tasks| 0))& (0+255)
  9949  0344  0084               	movwf	4
  9950  0345  1383               	bcf	3,7	;select IRP bank1
  9951  0346  0800               	movf	0,w
  9952  0347  1903               	btfsc	3,2
  9953  0348  2B4A               	goto	u243_21
  9954  0349  2B4B               	goto	u243_20
  9955  034A                     u243_21:
  9956  034A  2BC5               	goto	i1l3343
  9957  034B                     u243_20:
  9958  034B                     i1l3337:
  9959                           
  9960                           ;SCH.c: 101:   {;SCH.c: 102:    if(SCH_Tasks[Index].Delay == 0)
  9961  034B  3006               	movlw	6
  9962  034C  00FF               	movwf	btemp+1
  9963  034D  087F               	movf	btemp+1,w
  9964  034E  00F0               	movwf	i1___bmul@multiplicand
  9965  034F  0875               	movf	SCH_Update@Index,w
  9966  0350  160A  118A  2779  120A  118A  	fcall	i1___bmul
  9967  0355  3EA1               	addlw	(low ((_SCH_Tasks| 0+1)))& (0+255)
  9968  0356  0084               	movwf	4
  9969  0357  1383               	bcf	3,7	;select IRP bank1
  9970  0358  0800               	movf	0,w
  9971  0359  00F3               	movwf	??_SCH_Update
  9972  035A  0A84               	incf	4,f
  9973  035B  0800               	movf	0,w
  9974  035C  00F4               	movwf	??_SCH_Update+1
  9975  035D  0873               	movf	??_SCH_Update,w
  9976  035E  0474               	iorwf	??_SCH_Update+1,w
  9977  035F  1D03               	btfss	3,2
  9978  0360  2B62               	goto	u244_21
  9979  0361  2B63               	goto	u244_20
  9980  0362                     u244_21:
  9981  0362  2B98               	goto	i1l488
  9982  0363                     u244_20:
  9983  0363                     i1l3339:
  9984                           
  9985                           ;SCH.c: 103:    {;SCH.c: 104:     SCH_Tasks[Index].RunMe = 1;
  9986  0363  3006               	movlw	6
  9987  0364  00FF               	movwf	btemp+1
  9988  0365  087F               	movf	btemp+1,w
  9989  0366  00F0               	movwf	i1___bmul@multiplicand
  9990  0367  0875               	movf	SCH_Update@Index,w
  9991  0368  160A  118A  2779  120A  118A  	fcall	i1___bmul
  9992  036D  3EA5               	addlw	(low ((_SCH_Tasks| 0+5)))& (0+255)
  9993  036E  0084               	movwf	4
  9994  036F  3001               	movlw	1
  9995  0370  00FF               	movwf	btemp+1
  9996  0371  087F               	movf	btemp+1,w
  9997  0372  1383               	bcf	3,7	;select IRP bank1
  9998  0373  0080               	movwf	0
  9999                           
 10000                           ;SCH.c: 105:     SCH_Tasks[Index].Delay = SCH_Tasks[Index].Period;
 10001  0374  3006               	movlw	6
 10002  0375  00FF               	movwf	btemp+1
 10003  0376  087F               	movf	btemp+1,w
 10004  0377  00F0               	movwf	i1___bmul@multiplicand
 10005  0378  0875               	movf	SCH_Update@Index,w
 10006  0379  160A  118A  2779  120A  118A  	fcall	i1___bmul
 10007  037E  3EA3               	addlw	(low ((_SCH_Tasks| 0+3)))& (0+255)
 10008  037F  0084               	movwf	4
 10009  0380  1383               	bcf	3,7	;select IRP bank1
 10010  0381  0800               	movf	0,w
 10011  0382  00F3               	movwf	??_SCH_Update
 10012  0383  0A84               	incf	4,f
 10013  0384  0800               	movf	0,w
 10014  0385  00F4               	movwf	??_SCH_Update+1
 10015  0386  3006               	movlw	6
 10016  0387  00FF               	movwf	btemp+1
 10017  0388  087F               	movf	btemp+1,w
 10018  0389  00F0               	movwf	i1___bmul@multiplicand
 10019  038A  0875               	movf	SCH_Update@Index,w
 10020  038B  160A  118A  2779  120A  118A  	fcall	i1___bmul
 10021  0390  3EA1               	addlw	(low ((_SCH_Tasks| 0+1)))& (0+255)
 10022  0391  0084               	movwf	4
 10023  0392  0873               	movf	??_SCH_Update,w
 10024  0393  1383               	bcf	3,7	;select IRP bank1
 10025  0394  0080               	movwf	0
 10026  0395  0A84               	incf	4,f
 10027  0396  0874               	movf	??_SCH_Update+1,w
 10028  0397  0080               	movwf	0
 10029  0398                     i1l488:	
 10030                           ;SCH.c: 106:    }
 10031                           
 10032                           
 10033                           ;SCH.c: 107:    if(SCH_Tasks[Index].Delay != 0)
 10034  0398  3006               	movlw	6
 10035  0399  00FF               	movwf	btemp+1
 10036  039A  087F               	movf	btemp+1,w
 10037  039B  00F0               	movwf	i1___bmul@multiplicand
 10038  039C  0875               	movf	SCH_Update@Index,w
 10039  039D  160A  118A  2779  120A  118A  	fcall	i1___bmul
 10040  03A2  3EA1               	addlw	(low ((_SCH_Tasks| 0+1)))& (0+255)
 10041  03A3  0084               	movwf	4
 10042  03A4  1383               	bcf	3,7	;select IRP bank1
 10043  03A5  0800               	movf	0,w
 10044  03A6  00F3               	movwf	??_SCH_Update
 10045  03A7  0A84               	incf	4,f
 10046  03A8  0800               	movf	0,w
 10047  03A9  00F4               	movwf	??_SCH_Update+1
 10048  03AA  0873               	movf	??_SCH_Update,w
 10049  03AB  0474               	iorwf	??_SCH_Update+1,w
 10050  03AC  1903               	btfsc	3,2
 10051  03AD  2BAF               	goto	u245_21
 10052  03AE  2BB0               	goto	u245_20
 10053  03AF                     u245_21:
 10054  03AF  2BC5               	goto	i1l3343
 10055  03B0                     u245_20:
 10056  03B0                     i1l3341:
 10057                           
 10058                           ;SCH.c: 108:    {;SCH.c: 109:     SCH_Tasks[Index].Delay--;
 10059  03B0  3006               	movlw	6
 10060  03B1  00FF               	movwf	btemp+1
 10061  03B2  087F               	movf	btemp+1,w
 10062  03B3  00F0               	movwf	i1___bmul@multiplicand
 10063  03B4  0875               	movf	SCH_Update@Index,w
 10064  03B5  160A  118A  2779  120A  118A  	fcall	i1___bmul
 10065  03BA  3EA1               	addlw	(low ((_SCH_Tasks| 0+1)))& (0+255)
 10066  03BB  0084               	movwf	4
 10067  03BC  3001               	movlw	1
 10068  03BD  1383               	bcf	3,7	;select IRP bank1
 10069  03BE  0280               	subwf	0,f
 10070  03BF  0F84               	incfsz	4,f
 10071  03C0  3000               	movlw	0
 10072  03C1  1C03               	skipc
 10073  03C2  0380               	decf	0,f
 10074  03C3  0280               	subwf	0,f
 10075  03C4  0384               	decf	4,f
 10076  03C5                     i1l3343:
 10077                           
 10078                           ;SCH.c: 112:  }
 10079  03C5  3001               	movlw	1
 10080  03C6  00FF               	movwf	btemp+1
 10081  03C7  087F               	movf	btemp+1,w
 10082  03C8  07F5               	addwf	SCH_Update@Index,f
 10083  03C9                     i1l3345:
 10084  03C9  3008               	movlw	8
 10085  03CA  0275               	subwf	SCH_Update@Index,w
 10086  03CB  1C03               	skipc
 10087  03CC  2BCE               	goto	u246_21
 10088  03CD  2BCF               	goto	u246_20
 10089  03CE                     u246_21:
 10090  03CE  2B39               	goto	i1l3335
 10091  03CF                     u246_20:
 10092  03CF                     i1l3347:
 10093                           
 10094                           ;SCH.c: 113:  SCH_IntFlag_G = 1;
 10095  03CF  3001               	movlw	1
 10096  03D0  00FF               	movwf	btemp+1
 10097  03D1  087F               	movf	btemp+1,w
 10098  03D2  1283               	bcf	3,5	;RP0=0, select bank0
 10099  03D3  1303               	bcf	3,6	;RP1=0, select bank0
 10100  03D4  00C7               	movwf	_SCH_IntFlag_G	;volatile
 10101  03D5                     i1l490:
 10102  03D5  0008               	return
 10103  03D6                     __end_of_SCH_Update:
 10104                           
 10105                           	psect	text67
 10106  1779                     __ptext67:	
 10107 ;; *************** function i1___bmul *****************
 10108 ;; Defined at:
 10109 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\Umul8.c"
 10110 ;; Parameters:    Size  Location     Type
 10111 ;;  multiplier      1    wreg     unsigned char 
 10112 ;;  multiplicand    1    0[COMMON] unsigned char 
 10113 ;; Auto vars:     Size  Location     Type
 10114 ;;  multiplier      1    2[COMMON] unsigned char 
 10115 ;;  product         1    1[COMMON] unsigned char 
 10116 ;; Return value:  Size  Location     Type
 10117 ;;                  1    wreg      unsigned char 
 10118 ;; Registers used:
 10119 ;;		wreg, status,2, status,0, btemp+1
 10120 ;; Tracked objects:
 10121 ;;		On entry : 0/0
 10122 ;;		On exit  : 0/0
 10123 ;;		Unchanged: 0/0
 10124 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10125 ;;      Params:         1       0       0       0       0
 10126 ;;      Locals:         2       0       0       0       0
 10127 ;;      Temps:          0       0       0       0       0
 10128 ;;      Totals:         3       0       0       0       0
 10129 ;;Total ram usage:        3 bytes
 10130 ;; Hardware stack levels used:    1
 10131 ;; This function calls:
 10132 ;;		Nothing
 10133 ;; This function is called by:
 10134 ;;		_SCH_Update
 10135 ;; This function uses a non-reentrant model
 10136 ;;
 10137                           
 10138                           
 10139                           ;psect for function i1___bmul
 10140  1779                     i1___bmul:
 10141                           
 10142                           ;incstack = 0
 10143 ;; hardware stack exceeded
 10144                           ; Regs used in i1___bmul: [wreg+status,2+status,0+btemp+1]
 10145                           ;i1___bmul@multiplier stored from wreg
 10146  1779  00F2               	movwf	i1___bmul@multiplier
 10147  177A                     i1l3147:
 10148  177A  01F1               	clrf	i1___bmul@product
 10149  177B                     i1l3149:
 10150  177B  1C72               	btfss	i1___bmul@multiplier,0
 10151  177C  2F7E               	goto	u230_21
 10152  177D  2F7F               	goto	u230_20
 10153  177E                     u230_21:
 10154  177E  2F83               	goto	i1l3153
 10155  177F                     u230_20:
 10156  177F                     i1l3151:
 10157  177F  0870               	movf	i1___bmul@multiplicand,w
 10158  1780  00FF               	movwf	btemp+1
 10159  1781  087F               	movf	btemp+1,w
 10160  1782  07F1               	addwf	i1___bmul@product,f
 10161  1783                     i1l3153:
 10162  1783  1003               	clrc
 10163  1784  0DF0               	rlf	i1___bmul@multiplicand,f
 10164  1785                     i1l3155:
 10165  1785  1003               	clrc
 10166  1786  0CF2               	rrf	i1___bmul@multiplier,f
 10167  1787                     i1l3157:
 10168  1787  0872               	movf	i1___bmul@multiplier,w
 10169  1788  1D03               	btfss	3,2
 10170  1789  2F8B               	goto	u231_21
 10171  178A  2F8C               	goto	u231_20
 10172  178B                     u231_21:
 10173  178B  2F7B               	goto	i1l3149
 10174  178C                     u231_20:
 10175  178C                     i1l3159:
 10176  178C  0871               	movf	i1___bmul@product,w
 10177  178D                     i1l733:
 10178  178D  0008               	return
 10179  178E                     __end_ofi1___bmul:
 10180  0010                     
 10181                           	psect	functab
 10182  0055                     __pfunctab:
 10183  0055                     __fptable:
 10184  0055                     fptable:
 10185  0055  00FF               	movwf	(btemp+1)& (0+127)
 10186  0056  3000               	movlw	high fptable
 10187  0057  008A               	movwf	10
 10188  0058  087F               	movf	(btemp+1)& (0+127),w
 10189  0059  0782               	addwf	2,f
 10190  005A                     fpbase:
 10191  005A  285A               	goto	fpbase	; Call via a null pointer and you will get stuck here.
 10192  005B                     fp__WH_Task:
 10193  005B  120A  158A  2CE3   	ljmp	_WH_Task
 10194  005E                     fp__LED_Update:
 10195  005E  120A  158A  2990   	ljmp	_LED_Update
 10196  0061                     fp__SW_Update:
 10197  0061  120A  118A  2BD6   	ljmp	_SW_Update
 10198  0064                     fp__ADC_Update:
 10199  0064  120A  158A  2F34   	ljmp	_ADC_Update
 10200  0067                     fp__TEMP_Update:
 10201  0067  120A  158A  285E   	ljmp	_TEMP_Update
 10202  006A                     fp__HCU_Update:
 10203  006A  120A  158A  29B7   	ljmp	_HCU_Update
 10204  006D                     fp__DISP_Update:
 10205  006D  120A  118A  2A97   	ljmp	_DISP_Update
 10206  0070                     fp__SSD_Update:
 10207  0070  120A  118A  2D70   	ljmp	_SSD_Update
 10208  0073                     __end_of__fptable:
 10209  007E                     btemp	set	126	;btemp
 10210  007E                     wtemp0	set	126
 10211                           
 10212                           	psect	config
 10213                           
 10214                           ;Config register CONFIG @ 0x2007
 10215                           ;	Oscillator Selection bits
 10216                           ;	FOSC = HS, HS oscillator
 10217                           ;	Watchdog Timer Enable bit
 10218                           ;	WDTE = OFF, WDT disabled
 10219                           ;	Power-up Timer Enable bit
 10220                           ;	PWRTE = OFF, PWRT disabled
 10221                           ;	Brown-out Reset Enable bit
 10222                           ;	BOREN = OFF, BOR disabled
 10223                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
 10224                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
 10225                           ;	Data EEPROM Memory Code Protection bit
 10226                           ;	CPD = OFF, Data EEPROM code protection off
 10227                           ;	Flash Program Memory Write Enable bits
 10228                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
 10229                           ;	In-Circuit Debugger Mode bit
 10230                           ;	DEBUG = 0x1, unprogrammed default
 10231                           ;	Flash Program Memory Code Protection bit
 10232                           ;	CP = OFF, Code protection off
 10233  2007                     	org	8199
 10234  2007  3F3A               	dw	16186

Data Sizes:
    Strings     0
    Constant    0
    Data        20
    BSS         117
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      14
    BANK0            80     33      80
    BANK1            80      0      76
    BANK3            96      0      10
    BANK2            96      0       0

Pointer List with Targets:

    GPIO_SetPortState@GPIOx	PTR struct . size(2) Largest target is 1
		 -> PORTD(SFR0[1]), 

    GPIO_GetPinState@GPIOx	PTR struct . size(2) Largest target is 1
		 -> PORTB(SFR0[1]), 

    GPIO_SetPinState@GPIOx	PTR struct . size(2) Largest target is 1
		 -> PORTC(SFR0[1]), PORTB(SFR0[1]), PORTA(SFR0[1]), 

    GPIO_InitPin@GPIOx	PTR struct . size(2) Largest target is 1
		 -> PORTC(SFR0[1]), PORTB(SFR0[1]), PORTA(SFR0[1]), PORTD(SFR0[1]), 

    SCH_Add_Task@Task_P	PTR FTN()void  size(1) Largest target is 1
		 -> WH_Task(), SSD_Update(), DISP_Update(), HCU_Update(), 
		 -> TEMP_Update(), ADC_Update(), SW_Update(), LED_Update(), 

    S389$Task_P	PTR FTN()void  size(1) Largest target is 1
		 -> Absolute function(), WH_Task(), SSD_Update(), DISP_Update(), 
		 -> HCU_Update(), TEMP_Update(), ADC_Update(), SW_Update(), 
		 -> LED_Update(), 

    SCH_Tasks.Task_P	PTR FTN()void  size(1) Largest target is 1
		 -> Absolute function(), WH_Task(), SSD_Update(), DISP_Update(), 
		 -> HCU_Update(), TEMP_Update(), ADC_Update(), SW_Update(), 
		 -> LED_Update(), 

    EEPROM_ReadPage@Data_P	PTR unsigned char  size(1) Largest target is 8
		 -> WH_PasswordRead_G(BANK1[8]), 

    EEPROM_WritePage@Data_P	PTR unsigned char  size(1) Largest target is 8
		 -> WH_EEPROMPassword_G(BANK1[8]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _SysTick_Handler in COMMON

    _SysTick_Handler->_SCH_Update
    _SCH_Update->i1___bmul

Critical Paths under _main in BANK0

    _main->_WH_Init
    _SW_Delay_ms->_SW_Delay_us
    _EEPROM_WritePage->_I2C_Master_Write
    _EEPROM_ReadPage->_I2C_Master_Write
    _EEPROM_Read->_I2C_Master_Write
    _EEPROM_Init->_I2C_Master_Init
    _I2C_Master_Init->___lldiv
    _SW_Init->_GPIO_InitPin
    _SSD_Init->_GPIO_InitPin
    _SCH_Start->_SysTick_Init
    _SysTick_Init->___lmul
    _SCH_Init->_SCH_Delete_Task
    _SCH_Dispatch_Tasks->_ADC_Update
    _WH_Task->_WH_NormalMode
    _WH_Task->_WH_TempSetMode
    _WH_TempSetMode->_SSD_SetSymbol
    _EEPROM_Write->_I2C_Master_Write
    _WH_ResetMode->_DISP_SetState
    _WH_ResetMode->_HCU_SetState
    _WH_OperationMode->_TEMP_GetAverage
    _TEMP_GetAverage->___lwdiv
    _WH_OffMode->_DISP_SetState
    _WH_OffMode->_SW_GetState
    _WH_NormalMode->_SSD_SetSymbol
    ___awmod->___awdiv
    _SSD_SetSymbol->___awmod
    _SW_Update->_GPIO_GetPinState
    _SSD_Update->_GPIO_SetPinState
    _SCH_Report_Status->_LED_SetState
    _SCH_Delete_Task->___bmul
    _LED_Update->_GPIO_SetPinState
    _HCU_Update->_GPIO_SetPinState
    _DISP_Update->_LED_SetState
    _DISP_Update->_SSD_SetState
    _ADC_Update->___lldiv
    ___lldiv->___lmul
    _SCH_Add_Task->___bmul
    _LED_Init->_GPIO_InitPin
    _HCU_Init->_GPIO_InitPin
    _DISP_Init->_LED_SetState
    _DISP_Init->_SSD_SetState

Critical Paths under _SysTick_Handler in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _SysTick_Handler in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _SysTick_Handler in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _SysTick_Handler in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   48728
                           _ADC_Init
                          _DISP_Init
                           _HCU_Init
                           _LED_Init
                       _SCH_Add_Task
                 _SCH_Dispatch_Tasks
                           _SCH_Init
                          _SCH_Start
                           _SSD_Init
                            _SW_Init
                          _TEMP_Init
                            _WH_Init
 ---------------------------------------------------------------------------------
 (1) _WH_Init                                              2     2      0    6249
                                             31 BANK0      2     2      0
                        _EEPROM_Init
                        _EEPROM_Read
                    _EEPROM_ReadPage
                       _EEPROM_Write
                   _EEPROM_WritePage
                        _SW_Delay_ms
 ---------------------------------------------------------------------------------
 (2) _SW_Delay_ms                                          8     4      4     219
                                              9 BANK0      8     4      4
                        _SW_Delay_us
 ---------------------------------------------------------------------------------
 (3) _SW_Delay_us                                          9     5      4     121
                                              0 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (2) _EEPROM_WritePage                                     7     5      2     286
                                              1 BANK0      7     5      2
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _EEPROM_ReadPage                                      7     5      2     286
                                              1 BANK0      7     5      2
                            _I2C_ACK
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                           _I2C_Read
 ---------------------------------------------------------------------------------
 (3) _I2C_ACK                                              0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _EEPROM_Read                                          2     2      0      67
                                              1 BANK0      2     2      0
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                           _I2C_NACK
                           _I2C_Read
 ---------------------------------------------------------------------------------
 (3) _I2C_Read                                             0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_NACK                                             0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _EEPROM_Init                                          0     0      0    5006
                    _I2C_Master_Init
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Init                                      4     0      4    5006
                                             27 BANK0      4     0      4
                       _GPIO_InitPin
                            ___lldiv
 ---------------------------------------------------------------------------------
 (1) _TEMP_Init                                            1     1      0      69
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _SW_Init                                              0     0      0    4442
                       _GPIO_InitPin
 ---------------------------------------------------------------------------------
 (1) _SSD_Init                                             0     0      0    4442
                       _GPIO_InitPin
 ---------------------------------------------------------------------------------
 (1) _SCH_Start                                            0     0      0     659
                       _SysTick_Init
 ---------------------------------------------------------------------------------
 (2) _SysTick_Init                                        12     8      4     659
                                             13 BANK0     12     8      4
                          _TIM1_Init
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) _TIM1_Init                                            2     0      2     120
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _SCH_Init                                             1     1      0     683
                                              4 BANK0      1     1      0
                    _SCH_Delete_Task
 ---------------------------------------------------------------------------------
 (1) _SCH_Dispatch_Tasks                                   3     3      0   20089
                                             29 BANK0      3     3      0
                   Absolute function *
                         _ADC_Update *
                        _DISP_Update *
                         _HCU_Update *
                         _LED_Update *
                    _SCH_Delete_Task
                    _SCH_Go_To_Sleep
                  _SCH_Report_Status
                         _SSD_Update *
                          _SW_Update *
                        _TEMP_Update *
                            _WH_Task *
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) _WH_Task                                              2     2      0    9527
                                             20 BANK0      2     2      0
                       _EEPROM_Write
                      _WH_NormalMode
                         _WH_OffMode
                   _WH_OperationMode
                       _WH_ResetMode
                     _WH_TempSetMode
 ---------------------------------------------------------------------------------
 (3) _WH_TempSetMode                                       2     2      0    3133
                                             18 BANK0      2     2      0
                      _DISP_SetState
                       _EEPROM_Write
                      _SSD_SetSymbol
                        _SW_GetState
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) _EEPROM_Write                                         2     1      1     294
                                              1 BANK0      2     1      1
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Write                                     1     1      0      22
                                              0 BANK0      1     1      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_RepeatedStart                             0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (4) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _WH_ResetMode                                         0     0      0    1392
                      _DISP_SetState
                       _HCU_SetState
 ---------------------------------------------------------------------------------
 (3) _WH_OperationMode                                     3     3      0    1822
                                             12 BANK0      3     3      0
                      _DISP_SetState
                       _HCU_SetState
                    _TEMP_GetAverage
 ---------------------------------------------------------------------------------
 (4) _TEMP_GetAverage                                      5     5      0     430
                                              7 BANK0      5     5      0
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (5) ___lwdiv                                              7     3      4     314
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (4) _HCU_SetState                                         4     3      1     522
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (3) _WH_OffMode                                           0     0      0     917
                      _DISP_SetState
                        _SW_GetState
 ---------------------------------------------------------------------------------
 (4) _DISP_SetState                                        4     3      1     870
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (3) _WH_NormalMode                                        2     2      0    1969
                                             18 BANK0      2     2      0
                      _SSD_SetSymbol
                        _SW_GetState
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              6     2      4     904
                                              8 BANK0      6     2      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4     604
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (4) _SW_GetState                                          4     4      0      47
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (4) _SSD_SetSymbol                                        4     3      1     414
                                             14 BANK0      4     3      1
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _TEMP_Update                                          0     0      0       0
                       _ADC_GetState
 ---------------------------------------------------------------------------------
 (3) _ADC_GetState                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SW_Update                                            0     0      0     522
                   _GPIO_GetPinState
 ---------------------------------------------------------------------------------
 (3) _GPIO_GetPinState                                     5     2      3     522
                                              0 BANK0      5     2      3
 ---------------------------------------------------------------------------------
 (2) _SSD_Update                                           1     1      0    2272
                                              6 BANK0      1     1      0
                   _GPIO_SetPinState
                  _GPIO_SetPortState
 ---------------------------------------------------------------------------------
 (3) _GPIO_SetPortState                                    5     1      4     338
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (2) _SCH_Report_Status                                    0     0      0     522
                       _LED_SetState
 ---------------------------------------------------------------------------------
 (2) _SCH_Go_To_Sleep                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SCH_Delete_Task                                      1     1      0     615
                                              3 BANK0      1     1      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) _LED_Update                                           0     0      0    1934
                   _GPIO_SetPinState
 ---------------------------------------------------------------------------------
 (2) _HCU_Update                                           0     0      0    1934
                   _GPIO_SetPinState
 ---------------------------------------------------------------------------------
 (3) _GPIO_SetPinState                                     6     2      4    1934
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) _DISP_Update                                          0     0      0    1240
                       _LED_SetState
                       _SSD_SetState
 ---------------------------------------------------------------------------------
 (2) _ADC_Update                                           2     2      0     862
                                             27 BANK0      2     2      0
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              13     5      8     396
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (4) ___lldiv                                             14     6      8     466
                                             13 BANK0     14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (2) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SCH_Add_Task                                         6     2      4    1971
                                              3 BANK0      6     2      4
                             ___bmul
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               3     2      1     505
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (1) _LED_Init                                             0     0      0    4442
                       _GPIO_InitPin
 ---------------------------------------------------------------------------------
 (1) _HCU_Init                                             0     0      0    4442
                       _GPIO_InitPin
 ---------------------------------------------------------------------------------
 (4) _GPIO_InitPin                                        10     6      4    4442
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (1) _DISP_Init                                            0     0      0    1240
                       _LED_SetState
                       _SSD_SetState
 ---------------------------------------------------------------------------------
 (3) _SSD_SetState                                         4     3      1     718
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (3) _LED_SetState                                         4     3      1     522
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _SysTick_Handler                                      4     4      0     401
                                              6 COMMON     4     4      0
                         _SCH_Update
 ---------------------------------------------------------------------------------
 (8) _SCH_Update                                           3     3      0     401
                                              3 COMMON     3     3      0
                           i1___bmul
 ---------------------------------------------------------------------------------
 (9) i1___bmul                                             3     2      1     201
                                              0 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
   _DISP_Init
     _LED_SetState
     _SSD_SetState
   _HCU_Init
     _GPIO_InitPin
   _LED_Init
     _GPIO_InitPin
   _SCH_Add_Task
     ___bmul
   _SCH_Dispatch_Tasks
     Absolute function(Fake) *
     _ADC_Update *
       ___lldiv
         ___lmul (ARG)
       ___lmul
     _DISP_Update *
       _LED_SetState
       _SSD_SetState
     _HCU_Update *
       _GPIO_SetPinState
     _LED_Update *
       _GPIO_SetPinState
     _SCH_Delete_Task *
       ___bmul
     _SCH_Go_To_Sleep *
     _SCH_Report_Status *
       _LED_SetState
     _SSD_Update *
       _GPIO_SetPinState
       _GPIO_SetPortState
     _SW_Update *
       _GPIO_GetPinState
     _TEMP_Update *
       _ADC_GetState
     _WH_Task *
       _EEPROM_Write
         _I2C_Master_RepeatedStart
           _I2C_Master_Wait
         _I2C_Master_Start
           _I2C_Master_Wait
         _I2C_Master_Stop
           _I2C_Master_Wait
         _I2C_Master_Write
           _I2C_Master_Wait
       _WH_NormalMode
         _SSD_SetSymbol
           ___awdiv (ARG)
           ___awmod (ARG)
             ___awdiv (ARG)
         _SW_GetState
         ___awdiv
         ___awmod
           ___awdiv (ARG)
       _WH_OffMode
         _DISP_SetState
         _SW_GetState
       _WH_OperationMode
         _DISP_SetState
         _HCU_SetState
         _TEMP_GetAverage
           ___lwdiv
       _WH_ResetMode
         _DISP_SetState
         _HCU_SetState
       _WH_TempSetMode
         _DISP_SetState
         _EEPROM_Write
           _I2C_Master_RepeatedStart
             _I2C_Master_Wait
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Master_Write
             _I2C_Master_Wait
         _SSD_SetSymbol
           ___awdiv (ARG)
           ___awmod (ARG)
             ___awdiv (ARG)
         _SW_GetState
         ___awdiv
         ___awmod
           ___awdiv (ARG)
     ___bmul *
   _SCH_Init
     _SCH_Delete_Task
       ___bmul
   _SCH_Start
     _SysTick_Init
       _TIM1_Init
       ___lmul
   _SSD_Init
     _GPIO_InitPin
   _SW_Init
     _GPIO_InitPin
   _TEMP_Init
   _WH_Init
     _EEPROM_Init
       _I2C_Master_Init
         _GPIO_InitPin
         ___lldiv
           ___lmul (ARG)
     _EEPROM_Read
       _I2C_Master_RepeatedStart
         _I2C_Master_Wait
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
       _I2C_NACK
         _I2C_Master_Wait
       _I2C_Read
         _I2C_Master_Wait
     _EEPROM_ReadPage
       _I2C_ACK
         _I2C_Master_Wait
       _I2C_Master_RepeatedStart
         _I2C_Master_Wait
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
       _I2C_Read
         _I2C_Master_Wait
     _EEPROM_Write
       _I2C_Master_RepeatedStart
         _I2C_Master_Wait
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     _EEPROM_WritePage
       _I2C_Master_RepeatedStart
         _I2C_Master_Wait
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     _SW_Delay_ms
       _SW_Delay_us

 _SysTick_Handler (ROOT)
   _SCH_Update
     i1___bmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       A       9       10.4%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0      4C       7       95.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     21      50       5      100.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      A       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      B4      12        0.0%
ABS                  0      0      B4       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Fri Jan 22 00:31:46 2021

            __size_of_SysTick_Init 0059                __end_of_SW_Delay_ms 0C1C  
              __end_of_SW_Delay_us 0B6C                    _SCH_Delete_Task 0E72  
                                pc 0002                         _SSD_Update 0570  
                  ??_DISP_SetState 004E                     ___bmul@product 004E  
              __end_of_SW_GetState 0A09                                 l73 05EA  
                               l82 0A37                                 l67 0296  
                     ___awdiv@sign 0052                                 fsr 0004  
         __size_of_SysTick_Handler 0015                        ?_HCU_Update 0070  
                     _SSD_SetState 0A09                                l100 0A66  
                              l120 0B32                                l212 0AC4  
                              l221 07FB                                l206 1732  
                              l230 0EE1                                l215 07BD  
                              l400 0D29                                l224 0C67  
                              l209 0AA4                                l146 0A08  
                              l138 046C                                l162 0F45  
                              l227 0C9C                                l404 098F  
                              l412 056F                                l316 0337  
                              l236 0F33                                l421 04F1  
                              l325 0A95                                l261 080C  
                              l165 0F97                                l181 087B  
                              l270 1712                                l159 08D9  
                              l511 0E16                                l255 0DBD  
                              l168 07FF                                l432 0BA5  
                              l264 1707                                l273 17DC  
                              l177 17FF                                l258 0800  
                              l282 0841                                l187 0BE0  
                              l267 16FC                                l451 0826  
                              l276 17E7                                l461 0664  
                              l429 013F                                l621 1765  
                              l285 1752                                l454 1722  
                              l390 0745                                l279 0831  
                              l552 09DD                                l288 1742  
                      ?_LED_Update 0070                                l297 0943  
                              l721 0D71                                l529 0C1B  
                              l570 091F                                l466 0ED2  
                              l482 0003                                l538 0B6B  
                              l580 089A                                l549 08FC  
                              l733 17CF                                l573 09B6  
                              l583 0AFA                                l743 0FFF  
                              l479 0C58                                l559 08B9  
                              l592 17B8                                l497 06D7  
                              l586 0969                                l860 07AE  
                              l589 085D                                l873 0E71  
                              l979 0CE2                    __end_of_I2C_ACK 1753  
                              fsr0 0004                __size_of_ADC_Update 0064  
                              indf 0000                       ___awmod@sign 005A  
                       _WH_OffMode 096A                      _SSD_SetSymbol 0A38  
                             l3001 0C8F                               l3003 0C94  
                             l3011 0EDC                               l3005 0C99  
                             l3021 0F19                               l3013 0EEC  
                             l3103 0ECC                               l3031 02A3  
                             l3111 0E0C                               l3023 0F21  
                             l3015 0EFF                               l3201 08D4  
                             l3121 0C22                               l2401 0806  
                             l3041 02C7                               l3033 02AA  
                             l3113 0E15                               l3025 0F2E  
                             l3017 0F04                               l3009 0ED6  
                             l3131 0C44                               l3123 0C29  
                             l2403 16FD                               l2411 17D3  
                             l3051 02E5                               l3043 02CF  
                             l3035 02AC                               l3027 0297  
                             l3107 0DBE                               l3211 17F1  
                             l3203 17E8                               l3019 0F14  
                             l3221 08EC                               l3141 0C57  
                             l3133 0C4B                               l3125 0C30  
                             l2501 0BAA                               l2405 1702  
                             l2421 170D                               l2413 17D8  
                             l3061 0313                               l3053 02EC  
                             l3037 02B5                               l3029 029E  
                             l3045 02D2                               l3109 0DF9  
                             l3213 17F5                               l3223 0920  
                             l3303 0660                               l3135 0C4F  
                             l3127 0C34                               l3119 0C1C  
                             l2431 0CB1                               l2423 0C9D  
                             l2511 0BC1                               l2503 0BB1  
                             l2407 16F2                               l2415 17E0  
                             l3143 09B7                               l3063 0324  
                             l3055 02EE                               l3047 02D9  
                             l3039 02BE                               l3231 01F3  
                             l3215 17FB                               l3071 0BEF  
                  _SCH_Go_To_Sleep 0003                               l3225 092A  
                             l3217 08DA                               l3137 0C51  
                             l3129 0C3C                               l2601 075D  
                             l2441 0CD1                               l2433 0CB5  
                             l2425 0CA1                               l2513 0BC5  
                             l2409 16F7                               l2521 0A99  
                             l3081 0CF6                               l3073 0CE3  
                             l3145 0990                               l3057 02F7  
                             l3049 02E0                               l3065 0327  
                             l3321 06C1                               l3241 0236  
                             l3233 01FD                               l3209 17EC  
                             l3227 0931                               l3219 08DE  
                             l3139 0C52                               l2451 0A3B  
                             l2611 0773                               l2603 0761  
                             l2531 0A70                               l2443 0CD8  
                             l2435 0CB9                               l2427 0CA7  
                             l2515 0BCB                               l2419 1708  
                             l2523 0A9F                               l3083 0CFC  
                             l3075 0CE4                               l3059 030A  
                             l3323 06C7                               l3315 0668  
                             l3171 0816                               l3163 080D  
                             l3307 1713                               l3251 0286  
                             l3243 0246                               l3235 0208  
                             l3067 0BE1                               l3229 093A  
                             l3181 090F                               l2453 0A3C  
                             l2621 0793                               l2613 0777  
                             l2605 0763                               l2533 0A75  
                             l2437 0CCA                               l2429 0CAA  
                             l2445 0CDE                               l2509 0BB4  
                             l2517 0BDE                               l2525 0AAF  
                             l3085 0D01                               l3077 0CEA  
                             l3325 06CD                               l3317 067A  
                             l3309 0665                               l3173 081C  
                             l3245 0256                               l3237 0216  
                             l3069 0BE2                               l3253 06D8  
                             l3191 08BA                               l3095 0E75  
                             l2455 0A41                               l2463 0A50  
                             l2471 09E1                               l2623 079A  
                             l2615 077B                               l2607 0769  
                             l2535 0A7A                               l2527 0A6A  
                             l2551 08A4                               l2439 0CD0  
                             l3079 0CF0                               l3327 06D2  
                             l3319 06BB                               l3175 0822  
                             l3247 0266                               l3239 0226  
                             l3183 0AFB                               l2711 0D9B  
                             l2703 0D72                               l3271 070B  
                             l3263 06F0                               l3255 06D8  
                             l3351 014F                               l3193 08C0  
                             l2449 0AC5                               l3177 08FD  
                             l3281 05EE                               l3097 0E87  
                             l2457 0A46                               l2481 09EE  
                             l2473 09E2                               l2617 078C  
                             l2609 076C                               l2625 07A0  
                             l2641 0E25                               l2633 0E17  
                             l2529 0A6B                               l2801 009F  
                             l3089 0D0E                               l3169 0810  
                             l3249 0276                               l3185 0B06  
                             l2713 0DAC                               l2705 0D75  
                             l2721 0839                               l3273 0710  
                             l3265 06FF                               l3257 06DD  
                             l3361 0168                               l3353 0154  
                             l3195 08C8                               l3179 0901  
                             l3291 0602                               l2571 0FBA  
                             l2563 0F98                               l2459 0A4B  
                             l2483 09F2                               l2475 09E6  
                             l2627 07A5                               l2619 0792  
                             l2651 0E3E                               l2643 0E29  
                             l2635 0E1A                               l2539 0A7F  
                             l2555 08A9                               l2547 089E  
                             l2811 00E5                               l2803 00CC  
                             l3187 0B12                               l2707 0D7A  
                             l2731 173D                               l2723 083E  
                             l2715 0827                               l3275 071C  
                             l3267 0701                               l3371 01A9  
                             l3363 016D                               l3355 0159  
                             l3197 08D0                               l2741 0880  
                             l3293 0608                               l2581 0FE8  
                             l2573 0FBE                               l2565 0FAA  
                             l2477 09E8                               l2629 07AA  
                             l2661 0E5D                               l2653 0E42  
                             l2645 0E2E                               l2637 0E1E  
                             l2549 089F                               l2821 0107  
                             l2813 00F0                               l2805 00D7  
                             l2901 05E3                               l3189 0B21  
                             l2709 0D7D                               l2717 082C  
                             l2733 1743                               l3277 072A  
                             l3269 0705                               l3381 01EA  
                             l3373 01B8                               l3365 017C  
                             l3357 015E                               l3349 0140  
                             l3199 08D1                               l2743 0885  
                             l3295 060E                               l3287 05EF  
                             l2583 0FF1                               l2575 0FC7  
                             l2567 0FAD                               l2671 0944  
                             l2479 09EC                               l2487 09F4  
                             l2591 0749                               l2655 0E46  
                             l2647 0E34                               l2663 0E63  
                             l2639 0E23                               l2399 0800  
                             l2831 012D                               l2823 010E  
                             l2815 00F8                               l2807 00DF  
                             l2911 03EF                               l2903 05E9  
                             l2727 1733                               l2719 0836  
                             l2735 1748                               l3279 0739  
                             l3375 01C7                               l3367 018B  
                             l3359 0163                               l2681 0A17  
                             l3297 0616                               l2577 0FD9  
                             l2569 0FB6                               l2585 0FF7  
                             l2673 17A3                               l2489 0A07  
                             l2593 074D                               l2665 0E68  
                             l2657 0E50                               l2649 0E37  
                             l2761 04F2                               l2833 0139  
                             l2825 0114                               l2817 00FA  
                             l2809 00E3                               l3641 0D18  
                             l2913 03F5                               l2921 0405  
                             l2905 03D6                               l2841 1757  
                             l2729 1738                               l2737 174D  
                             l3377 01D6                               l3369 019A  
                             l2747 088A                               l2739 087F  
                             l3651 0A29                               l2683 0A1C  
                             l2675 0A0C                               l2579 0FE7  
                             l2595 0752                               l2667 0E6D  
                             l2659 0E56                               l2755 096A  
                             l3643 08B1                               l2499 0BA6  
                             l2771 055E                               l2763 04FC  
                             l2835 0B6C                               l2827 0124  
                             l2819 00FC                               l2931 0426  
                             l2915 03FB                               l2923 0408  
                             l2907 03DD                               l2843 175B  
                             l2851 0B33                               l3379 01E5  
                             l3653 0892                               l2677 0A0D  
                             l2861 0D34                               l2597 0754  
                             l2589 0746                               l2781 048F  
                             l3645 0A87                               l2757 0975  
                             l2773 0566                               l2765 0510  
                             l2837 0BA2                               l2829 0126  
                             l2933 042C                               l2941 0439  
                             l2925 040D                               l2917 03FF  
                             l2909 03E0                               l2845 175D  
                             l2853 0B34                               l2679 0A12  
                             l2687 0A21                               l2863 0D38  
                             l2695 0842                               l3647 09FC  
                             l2599 0758                               l2791 04E4  
                             l2783 04BC                               l2759 0989  
                             l2775 056B                               l2767 052E  
                             l2951 045F                               l2943 043E  
                             l2935 0430                               l2927 0410  
                             l2919 0400                               l2847 175F  
                             l2839 1753                               l2855 0B38  
                             l2881 17C7                               l2873 17BC  
                             l2865 0D4F                               l3649 0A58  
                             l2793 04EB                               l2785 04C7  
                             l2777 046D                               l2769 0542  
                             l2953 0463                               l2945 0441  
                             l2937 0431                               l2929 0420  
                             l2961 0F42                               l2849 1763  
                             l2857 0B3F                               l2883 17C9  
                             l2875 17BD                               l2867 0D58  
                             l2859 0D2A                               l2699 07FC  
                             l2787 04D2                               l2779 0473  
                             l2795 0073                               l2955 0464  
                             l2947 0453                               l2939 0436  
                             l2963 0F49                               l2971 0876  
                             l2891 05AD                               l2885 17CE  
                             l2877 17C1                               l2869 0D69  
                             l2789 04D9                               l2797 0079  
                             l2949 0459                               l2957 0469  
                             l2973 0877                               l2965 085E  
                             l2893 05B4                               l2981 07C8  
                             l2879 17C5                               l2799 0081  
                             l2959 0F34                               l2967 086C  
                             l2895 05C5                               l2975 1723  
                             l2991 07F6                               l2983 07D0  
                             l2969 0870                               l2897 05CC  
                             l2889 0570                               l2993 0C5C  
                             l2985 07D5                               l2977 07B2  
                             l2899 05DD                               l2995 0C62  
                             l2987 07E1                               l2979 07B8  
                             l2997 0C72                               l2989 07E9  
                             l2999 0C85                 __size_of_DISP_Init 0024  
                             u2000 0420                               u2001 041F  
                             u2010 042C                               u2011 042B  
                             u2020 043E                               u2100 0C72  
                             u2021 043D                               u2101 0C71  
                             u1310 0CCA                               u2030 0453  
                             u2110 0EEC                               u1311 0CC9  
                             u2031 0452                               u2111 0EEB  
                             u1240 0806                               u2040 045F  
                             u2200 0313                               u2120 0F2E  
                             u1305 0CBA                               u1241 0805  
                             u2041 045E                               u2201 0312  
                             u2121 0F2D                               u1410 0FBE  
                             u1330 0CDE                               u1250 080C  
                             u2130 029E                               u2210 0C0D  
                             u1411 0FBD                               u1331 0CDD  
                             u1315 0CC6                               u1251 080B  
                             u2131 029D                               u1500 077B  
                             u1260 17E0                               u2060 0F49  
                             u2140 02A3                               u2220 0C1B  
                             u1405 0FAF                               u1501 077A  
                             u1325 0CD2                               u1261 17DF  
                             u2061 0F48                               u2141 02A2  
                             u2125 0F2A                               u2221 0C1A  
                             u1430 0FD9                               u2230 0E87  
                             u1270 0CA7                               u2070 0876  
                             u2150 02B5                               u1431 0FD8  
                             u2231 0E86                               u1271 0CA6  
                             u2055 0F39                               u2071 0875  
                             u2151 02B4                               u2215 0C00  
                             u1344 0ACD                               u1520 078C  
                             u1600 0E46                               u1360 0BB1  
                             u2160 02C7                               u2400 067A  
                             u2320 0822                               u2240 0DE6  
                             u2080 07C8                               u2216 0C01  
                             u1345 0ACB                               u1425 0FC0  
                             u1521 078B                               u1601 0E45  
                             u1361 0BB0                               u2161 02C6  
                             u2401 0679                               u2321 0821  
                             u2241 0DE7                               u2081 07C7  
                             u2217 0C06                               u1354 0AE3  
                             u1450 0FF7                               u1610 0E50  
                             u1290 0CB9                               u1370 0BCB  
                             u2170 02E0                               u2410 06BB  
                             u2250 0E0C                               u2242 0DEC  
                             u2330 17FB                               u2090 07F6  
                             u2218 0C07                               u1355 0AE1  
                             u1451 0FF6                               u1435 0FD5  
                             u1515 077C                               u1611 0E4F  
                             u1291 0CB8                               u1371 0BCA  
                             u2171 02DF                               u2411 06BA  
                             u2251 0E0B                               u2243 0DED  
                             u2331 17FA                               u2091 07F5  
                             u2219 0C0C                               u2260 0C22  
                             u1540 07A0                               u1460 074D  
                             u1700 0975                               u1380 0AAF  
                             u2180 02E5                               u2420 06CD  
                             u2340 06FF                               u1445 0FE9  
                             u2261 0C21                               u1541 079F  
                             u1525 0788                               u1461 074C  
                             u1701 0974                               u1285 0CAB  
                             u1381 0AAE                               u2181 02E4  
                             u2421 06CC                               u2253 0E08  
                             u2341 06FE                               u1390 0FAA  
                             u2270 0C30                               u1550 07A5  
                             u1470 0758                               u1630 0E63  
                             u1710 0510                               u2190 02F7  
                             u2350 070B                               u1391 0FA9  
                             u2271 0C2F                               u1551 07A4  
                             u1535 0794                               u1471 0757  
                             u1631 0E62                               u1615 0E4C  
                             u1711 050F                               u2191 02F6  
                             u2095 07F2                               u2351 070A  
                             u2280 0C4B                               u1480 0769  
                             u1640 0E68                               u1560 0E1E  
                             u1720 0542                               u1800 00F8  
                             u2360 0710                               u2281 0C4A  
                             u1481 0768                               u1641 0E67  
                             u1625 0E57                               u1561 0E1D  
                             u1721 0541                               u1801 00F7  
                             u2361 070F                               u2370 0601  
                             u2290 0C57                               u1570 0E29  
                             u1730 0566                               u1810 0107  
                             u2371 0600                               u2291 0C56  
                             u1571 0E28                               u1731 0565  
                             u1715 050C                               u1811 0106  
                             u2380 060E                               u1900 0D69  
                             u1580 0E34                               u1740 04C7  
                             u1820 0124                               u2381 060D  
                             u1901 0D68                               u1581 0E33  
                             u1741 04C6                               u1725 053E  
                             u1821 0123                               u1910 17C1  
                             u2390 0616                               u1654 094C  
                             u1750 04D2                               u1830 0B3F  
                             u1911 17C0                               u2391 0615  
                             u1655 094A                               u1495 076D  
                             u1751 04D1                               u1831 0B3E  
                             _PIE1 008C                               u1920 17CE  
                             u1664 095A                               u1760 04E4  
                             u1840 0B5D                               u1921 17CD  
                             u1665 0958                               u1761 04E3  
                             u1674 084F                               u1770 00D7  
                             u1930 05B4                               u1690 0836  
                             u1850 0B6B                               u1675 084D  
                             u1595 0E38                               u1771 00D6  
                             u1931 05B3                               u1691 0835  
                             u1851 0B6A                               u1860 0D38  
                             u1684 0859                               u1780 00DF  
                             u1940 05CC                               u1861 0D37  
                             u1685 0857                               u1781 00DE  
                             u1941 05CB                               u1845 0B50  
                             u1790 00F0                               u1950 05E9  
                             u1846 0B51                               u1871 0D41  
                             u1791 00EF                               u1951 05E8  
                             u1847 0B56                               u1872 0D48  
                             u1960 03DD                               u1848 0B57  
                             u1873 0D4F                               u1961 03DC  
                             u1849 0B5C                               u1970 03EF  
                             u1971 03EE                               u1980 03FB  
                             u1885 0D51                               u1981 03FA  
                             u1990 040D                               u1895 0D59  
                             u1991 040C                               _PIR1 000C  
                             _TMR0 0001                               _SW_G 002A  
                 __end_of_I2C_NACK 1743                      ?_HCU_SetState 004D  
                     _SysTick_Init 0DBE   __end_of_I2C_Master_RepeatedStart 16FD  
                             _main 0140                         _WH_State_G 004B  
                 __end_of_I2C_Read 0842                               btemp 007E  
      __size_of_SCH_Dispatch_Tasks 0073                   __end_of_ADC_Init 08DA  
               DISP_SetState@DISPx 0050                               start 0012  
                  __end_of_WH_Init 0746                    __end_of_WH_Task 0D2A  
         __size_of_EEPROM_ReadPage 0061                    __end_of_SW_Init 0B33  
                    ?_GPIO_InitPin 004D                  ___bmul@multiplier 004F  
               DISP_SetState@State 004D              __size_of_ADC_GetState 0004  
             __end_of_EEPROM_Write 0AC5                      ?_LED_SetState 004D  
                 __end_of_HCU_Init 08FD                   ?_I2C_Master_Init 0068  
                 ?_I2C_Master_Wait 0070                   __end_of_LED_Init 0920  
                      ?_SCH_Update 0070                   ?_I2C_Master_Stop 0070  
                            ?_main 0070                              _ADC_G 0020  
                  __end_of___awdiv 07AF                    __end_of___awmod 0E72  
                  __end_of___lldiv 1000                    ___awdiv@divisor 004D  
                            _T1CON 0010                 __size_of_TIM1_Init 0013  
                            _HCU_G 0045                    __end_of___lwdiv 0CE3  
                            _LED_G 0043                              i1l517 1796  
                            i1l490 03D5                              i1l733 178D  
                            i1l488 0398                    ___awdiv@counter 0051  
                            _TMR1H 000F                              _TMR1L 000E  
                            _PORTA 0005                              _PORTB 0006  
                            _PORTC 0007                              _PORTD 0008  
               __size_of_SCH_Start 0010                              _SSD_G 003B  
                 __end_of_SCH_Init 0827                 __size_of_TEMP_Init 0018  
              ___lmul@multiplicand 0051                     ?_SSD_SetSymbol 005B  
                 _WH_OperationMode 04F2                              fpbase 005A  
                 __end_of_SSD_Init 0297                   __end_ofi1___bmul 178E  
                            pclath 000A                     ??_HCU_SetState 004E  
                            status 0003                              wtemp0 007E  
              __size_of_HCU_Update 0027                   EEPROM_Write@Data 004E  
                     _ADC_GetState 07FC                        _SW_Delay_ms 0BE1  
                      _SW_Delay_us 0B33            __end_of_SCH_Delete_Task 0ED3  
              __size_of_LED_Update 0027                     ??_GPIO_InitPin 0051  
                      _SW_GetState 09DE               __size_of_EEPROM_Init 0010  
             __size_of_EEPROM_Read 0044                       _WH_AvgTemp_G 0049  
                  __initialization 0015                     TEMP_Init@Index 004D  
                     __end_of_main 01F3                     ??_LED_SetState 004E  
                      ?_SSD_Update 0070                  ?_GPIO_SetPinState 004D  
              _SSD_SymbolPattern_G 0190              __size_of_WH_ResetMode 003A  
                        ??_I2C_ACK 004D                     fp__TEMP_Update 0067  
                __end_of_DISP_Init 0944                 ??_GPIO_SetPinState 0051  
         __size_of_TEMP_GetAverage 003B                   ??_WH_TempSetMode 005F  
                           ??_main 006E                  _SCH_Report_Status 0C1C  
                     _WH_Counter_G 007C            __end_of_SCH_Go_To_Sleep 0004  
               __size_of_SW_Update 0097                 ?_SCH_Report_Status 0070  
                ?_I2C_Master_Start 0070                  ?_I2C_Master_Write 0070  
                ??_SysTick_Handler 0076                    _SCH_ErrorCode_G 0048  
               ??_I2C_Master_Start 004D                        ?_WH_OffMode 0070  
                           _ADCON0 001F                             _ADCON1 009F  
               ??_I2C_Master_Write 004D                             _ADRESH 001E  
                           _ADRESL 009E                             _CCPR1H 0016  
                           _CCPR1L 0015                   ___awdiv@dividend 004F  
                           _DISP_G 0033                ??_SCH_Report_Status 0051  
                           i1l3151 177F                             i1l3153 1783  
                           i1l3155 1785                             i1l3147 177A  
                           i1l3157 1787                             i1l3149 177B  
                           i1l3341 03B0                             i1l3159 178C  
                           i1l3343 03C5                             i1l3335 0339  
                           i1l3345 03C9                             i1l3337 034B  
                           i1l3329 0338                             i1l3347 03CF  
                           i1l3339 0363                             i1l3437 178E  
                           i1l3439 1791                          ??_WH_Init 006C  
                           u230_20 177F                             u230_21 177E  
                           u231_20 178C                             u231_21 178B  
                        ??_WH_Task 0061                             _INTCON 000B  
                           u243_20 034B                             u243_21 034A  
                           u244_20 0363                             u244_21 0362  
                           u245_20 03B0                             u245_21 03AF  
                           u246_20 03CF                             u246_21 03CE  
             __size_of_DISP_Update 00A1             EEPROM_WritePage@Data_P 004E  
                        ??_SW_Init 0057                             _TEMP_G 00D0  
                     ?_TEMP_Update 0070                __size_of_SCH_Update 009E  
                           _SSPADD 0093                             _SSPCON 0014  
                           _SSPBUF 0013                   __end_of__fptable 0073  
                     ??_ADC_Update 0068             EEPROM_WritePage@Length 004F  
                __end_of_TIM1_Init 1766                       _WH_ResetMode 0B6C  
                __end_of_SCH_Start 1723                  __end_of_TEMP_Init 1800  
         _I2C_Master_RepeatedStart 16F2                             ___bmul 17B9  
                           ___lmul 0D2A                          ??___awdiv 0051  
                        ??___awmod 0059                          ??___lldiv 0062  
                        ??___lwdiv 0051          __end_of_SCH_Report_Status 0C59  
                ??_EEPROM_ReadPage 0050                   ___awdiv@quotient 0053  
                  ___awmod@divisor 0055                    ___awmod@counter 0059  
         __end_of_EEPROM_WritePage 07FC                          ?_I2C_NACK 0070  
                           fptable 0055            I2C_Master_Init@BaudRate 0068  
                           fptotal 0010                          ?_I2C_Read 0070  
                LED_SetState@State 004D                          ?_ADC_Init 0070  
                  ??_SSD_SetSymbol 005C                 __end_of_ADC_Update 0F98  
                           saved_w 007E          __size_of_GPIO_GetPinState 001C  
              __size_of_SSD_Update 007B                   GPIO_InitPin@PINx 004F  
                 GPIO_InitPin@Mode 0050            __end_of__initialization 0051  
                        ?_HCU_Init 0070                          ?_LED_Init 0070  
                EEPROM_WritePage@i 0053                   ?_SCH_Delete_Task 0070  
                __end_of_SW_Update 046D              __size_of_EEPROM_Write 002F  
              ___bmul@multiplicand 004D                      ?_SCH_Add_Task 0050  
                   __pcstackCOMMON 0070                          ?_SCH_Init 0070  
                     __pidataBANK0 16D6                       __pidataBANK1 16E0  
                     __pidataBANK3 16E8                __size_of_WH_OffMode 0026  
                SCH_Add_Task@Delay 0050                  SCH_Add_Task@Index 0055  
                     ??_HCU_Update 0053                          ?_SSD_Init 0070  
                        ?i1___bmul 0070               __end_of_HCU_SetState 08BA  
                     ??_LED_Update 0053                         ??_I2C_NACK 004D  
           __size_of_WH_NormalMode 0085                _WH_EEPROMPassword_G 00E4  
                       ??_I2C_Read 004D                   ?_SCH_Go_To_Sleep 0070  
                       ??_ADC_Init 004D               __end_of_GPIO_InitPin 0AFB  
                ??_TEMP_GetAverage 0054                  _GPIO_SetPortState 17A3  
                 i1___bmul@product 0071               __end_of_LED_SetState 089B  
               ?_GPIO_SetPortState 004D                       _EEPROM_Write 0A96  
                       __pbssBANK0 0020                         __pbssBANK1 00A0  
                       ??_HCU_Init 0057                         ??_LED_Init 0057  
               __end_of_HCU_Update 09DE                ??_GPIO_SetPortState 0051  
                   ??_SCH_Add_Task 0054                 __end_of_LED_Update 09B7  
                    SCH_Init@Index 0051                         __pmaintext 0140  
                       ??_SCH_Init 0051                            ?___bmul 004D  
                          ?___lmul 004D           __end_of_WH_OperationMode 0570  
                       __pintentry 0004                            _I2C_ACK 1743  
                          _CCP1CON 0017         __size_of_SCH_Report_Status 003D  
                     ??_SCH_Update 0073                     ___lmul@product 0056  
           EEPROM_ReadPage@Address 0052              __end_of_DISP_SetState 0A96  
                       ??_SSD_Init 0057                         ??i1___bmul 0071  
        __end_of_GPIO_SetPortState 17B9            EEPROM_WritePage@Address 0052  
                          _SSPCON2 0091                            _SSPSTAT 0094  
                    _WH_PreState_G 004A         __end_of_SCH_Dispatch_Tasks 06D8  
                          _WH_Init 06D8                            _WH_Task 0CE3  
                          _SW_Init 0AFB                       ?_SW_Delay_ms 0056  
                     ?_SW_Delay_us 004D                 __end_of_SCH_Update 03D6  
                 SW_GetState@State 0050                      _WH_NormalMode 046D  
             __size_of_TEMP_Update 001E                       ?_SW_GetState 0070  
                    fp__ADC_Update 0064               TEMP_GetAverage@Index 0058  
                  __size_of___bmul 0017                       ??_SSD_Update 0053  
                          ___awdiv 0746                    __size_of___lmul 0048  
                          ___awmod 0E17                            ___lldiv 0F98  
                  _SysTick_Handler 178E                            ___lwdiv 0C9D  
                          __ptext1 06D8                            __ptext2 0BE1  
                          __ptext3 0B33                            __ptext4 07AF  
                          __ptext5 0ED3                            __ptext6 1743  
                          __ptext7 0C59                            __ptext8 0827  
                          __ptext9 1733                          _DISP_Init 0920  
                 ___awmod@dividend 0057                i1___bmul@multiplier 0072  
         __size_of_I2C_Master_Init 004C           __size_of_I2C_Master_Wait 000D  
                 _GPIO_GetPinState 0842           __size_of_I2C_Master_Stop 000B  
                     ??_WH_OffMode 0051          __size_of_GPIO_SetPinState 0026  
                          clrloop0 16D9               end_of_initialization 0051  
                     WH_Init@Index 006D         ??_I2C_Master_RepeatedStart 004D  
               __end_of_SSD_Update 05EB                      ??_EEPROM_Init 006C  
                    ??_EEPROM_Read 004E                     ?_WH_NormalMode 0070  
                       fp__WH_Task 005B                    _EEPROM_ReadPage 0ED3  
        __size_of_I2C_Master_Start 000B               GPIO_GetPinState@PINx 004F  
        __size_of_I2C_Master_Write 0018                    ___lldiv@divisor 005A  
                  ___lldiv@counter 0067                          _TIM1_Init 1753  
            __size_of_HCU_SetState 001F                          _SCH_Tasks 00A0  
                        _SCH_Start 1713                          _TEMP_Init 17E8  
               __end_of_WH_OffMode 0990              __size_of_GPIO_InitPin 0036  
                ?_EEPROM_WritePage 004E                  GPIO_InitPin@GPIOx 004D  
                       ?_DISP_Init 0070         __size_of_GPIO_SetPortState 0016  
                    fp__HCU_Update 006A                 ??_EEPROM_WritePage 0050  
            __size_of_LED_SetState 001F               __end_of_SCH_Add_Task 0665  
                __size_of_I2C_NACK 0010                      fp__LED_Update 005E  
                        _SSD_Num_G 004C                  __size_of_I2C_Read 001B  
                    ??_DISP_Update 0051                  __size_of_ADC_Init 0020  
                 TIM1_Init@Ticks_N 004D                       _HCU_SetState 089B  
          __end_of_SysTick_Handler 17A3                    _WH_TargetTemp_G 006E  
                __size_of_HCU_Init 0023                  __size_of_LED_Init 0023  
                    _SCH_IntFlag_G 0047                       _GPIO_InitPin 0AC5  
              __end_of_EEPROM_Init 1733                __end_of_EEPROM_Read 0C9D  
                       ?_TIM1_Init 004D                SysTick_Init@Ticks_N 0062  
                       ?_SCH_Start 0070                          _SW_Update 03D6  
                   __end_of___bmul 17D0                    _TEMP_GetAverage 0BA6  
                   __end_of___lmul 0D72                         ?_TEMP_Init 0070  
                __size_of_SCH_Init 001A               _SCH_ErrorTickCount_G 007A  
                     _LED_SetState 087C                      ?_SSD_SetState 004D  
                __size_of_SSD_Init 00A4                  __size_ofi1___bmul 0015  
                SSD_SetState@State 004D                start_initialization 0015  
               SCH_Add_Task@Period 0052                 SCH_Add_Task@Task_P 0054  
            __end_of_SSD_SetSymbol 0A67                SSD_SetSymbol@Symbol 005B  
          __end_of_EEPROM_ReadPage 0F34            __size_of_WH_TempSetMode 00CD  
                  ??_WH_NormalMode 005F                      ?_SysTick_Init 005A  
                ??_I2C_Master_Init 006C                  ??_I2C_Master_Wait 004D  
                ??_I2C_Master_Stop 004D            SCH_Dispatch_Tasks@Index 006C  
              __end_of_DISP_Update 0338                     SW_GetState@SWx 004F  
             __size_of_SW_Delay_ms 003B               __size_of_SW_Delay_us 0039  
                HCU_SetState@State 004D                           ??___bmul 004E  
             __size_of_SW_GetState 002B                           ??___lmul 0055  
                       init_fetch0 1766                         ?_SW_Update 0070  
                 LED_SetState@LEDx 0050                  ?_WH_OperationMode 0070  
                      __pdataBANK0 006E                        __pdataBANK1 00E4  
                      __pdataBANK3 0190                           ?_I2C_ACK 0070  
         __size_of_SCH_Delete_Task 0061             TEMP_GetAverage@AvgTemp 0056  
                   ??_SSD_SetState 004E                 ??_WH_OperationMode 0059  
                    fp__SSD_Update 0070             GPIO_SetPortState@GPIOx 004D  
                      ??_DISP_Init 0051                        __pbssCOMMON 007A  
                        ___latbits 0002                      __pcstackBANK0 004D  
           GPIO_SetPortState@State 0050                  __size_of__fptable 001E  
                 _GPIO_SetPinState 0944                  SSD_SetSymbol@SSDx 005E  
                   ??_SysTick_Init 005E                           ?_WH_Init 0070  
                         ?_WH_Task 0070           __size_of_SCH_Go_To_Sleep 0001  
                         ?_SW_Init 0070                        _EEPROM_Init 1723  
                      _EEPROM_Read 0C59                      ?_ADC_GetState 0070  
                 _I2C_Master_Start 16FD                   _I2C_Master_Write 17D0  
                 ?_SysTick_Handler 0070            __end_of_TEMP_GetAverage 0BE1  
                 ___lwdiv@dividend 004F           __end_of_GPIO_GetPinState 085E  
                        __pfunctab 0055                        ??_TIM1_Init 004F  
               _SCH_Dispatch_Tasks 0665                           ?___awdiv 004D  
                      ??_SCH_Start 0066                           ?___awmod 0055  
            EEPROM_ReadPage@Data_P 004E                           ?___lldiv 005A  
                         ?___lwdiv 004D                        ??_TEMP_Init 004D  
             I2C_Master_Write@Data 004D              EEPROM_ReadPage@Length 004F  
            __size_of_SCH_Add_Task 007A                ?_SCH_Dispatch_Tasks 0070  
                         _I2C_NACK 1733                           _I2C_Read 0827  
                         _ADC_Init 08BA                   ___lwdiv@quotient 0051  
                      _DISP_Update 0297                   ?_EEPROM_ReadPage 004E  
                    ??_TEMP_Update 004D                     ??_ADC_GetState 004D  
                interrupt_function 0004                           _HCU_Init 08DA  
             ??_SCH_Dispatch_Tasks 006A             __size_of_DISP_SetState 002F  
                         _LED_Init 08FD                      ?_WH_ResetMode 0070  
                        clear_ram0 16D8              i1___bmul@multiplicand 0070  
                     _SCH_Add_Task 05EB                           _SCH_Init 080D  
                      ??_SW_Update 0052                   __size_of_I2C_ACK 0010  
                         _SSD_Init 01F3                           i1___bmul 1779  
                  SCH_Update@Index 0075                  ??_SCH_Delete_Task 0050  
       SysTick_Init@TicksPeriod_ms 005A                     _WH_TempSetMode 0073  
                ___lmul@multiplier 004D                   SSD_SetState@SSDx 0050  
             __end_of_SSD_SetState 0A38          __size_of_EEPROM_WritePage 004D  
                 __size_of_WH_Init 006E                   __size_of_WH_Task 0047  
                   ??_WH_ResetMode 0051                   __size_of_SW_Init 0038  
                       _ADC_Update 0F34                   HCU_SetState@HCUx 0050  
                 ?_TEMP_GetAverage 0070                  ??_SCH_Go_To_Sleep 004D  
              __end_of_TEMP_Update 087C  __size_of_I2C_Master_RepeatedStart 000B  
                 __size_of___awdiv 0069                   __size_of___awmod 005B  
        ?_I2C_Master_RepeatedStart 0070                   __size_of___lldiv 0068  
            GPIO_SetPortState@PINx 004F                   __size_of___lwdiv 0046  
             __end_of_SysTick_Init 0E17                      _DISP_SetState 0A67  
                         __fptable 0055                    _I2C_Master_Init 0D72  
                  _I2C_Master_Wait 0800                    _I2C_Master_Stop 1708  
              SW_Delay_ms@Delay_ms 0056             __end_of_WH_TempSetMode 0140  
                  ___lwdiv@divisor 004D                    ___lwdiv@counter 0053  
                         __ptext10 1723                           __ptext11 0D72  
                         __ptext20 0570                           __ptext12 17E8  
                         __ptext21 0297                           __ptext13 0AFB  
                         __ptext30 17D0                           __ptext22 09B7  
                         __ptext14 01F3                           __ptext31 1708  
                         __ptext23 085E                           __ptext15 1713  
                         __ptext40 096A                           __ptext32 16FD  
                         __ptext24 0F34                           __ptext16 0DBE  
                         __ptext41 0A67                           __ptext33 16F2  
                         __ptext25 03D6                           __ptext17 1753  
                         __ptext50 0C1C                           __ptext42 046D  
                         __ptext34 0800                           __ptext26 0990  
                         __ptext18 080D                           __ptext51 0003  
                         __ptext43 0E17                           __ptext35 0B6C  
                         __ptext27 0CE3                           __ptext19 0665  
                         __ptext60 0AC5                           __ptext52 0E72  
                         __ptext44 0746                           __ptext36 04F2  
                         __ptext28 0073                           __ptext61 0920  
                         __ptext53 0944                           __ptext45 09DE  
                         __ptext37 0BA6                           __ptext29 0A96  
                         __ptext62 0A09                           __ptext54 0D2A  
                         __ptext46 0A38                           __ptext38 0C9D  
                         __ptext63 087C                           __ptext55 0F98  
                         __ptext47 07FC                           __ptext39 089B  
                         __ptext64 08BA                           __ptext56 05EB  
                         __ptext48 0842                           __ptext65 178E  
                         __ptext57 17B9                           __ptext49 17A3  
                         __ptext66 0338                           __ptext58 08FD  
                         __ptext67 1779                           __ptext59 08DA  
                    ?_EEPROM_Write 004E                       fp__SW_Update 0061  
                    __size_of_main 00B3           __end_of_GPIO_SetPinState 096A  
                   ?_DISP_SetState 004D                         _HCU_Update 09B7  
             __end_of_ADC_GetState 0800                         _LED_Update 0990  
         __end_of_I2C_Master_Start 1708           __end_of_I2C_Master_Write 17E8  
                       _INTCONbits 000B                 EEPROM_Read@Address 004E  
                  ?_WH_TempSetMode 0070                           init_ram0 176A  
                   ??_EEPROM_Write 004F          __size_of_WH_OperationMode 007E  
                         intlevel1 0055              GPIO_GetPinState@GPIOx 004D  
            GPIO_SetPinState@GPIOx 004D                        _TEMP_Update 085E  
                     ?_EEPROM_Init 0070                       ?_EEPROM_Read 0070  
                 ___lldiv@dividend 005E                      ??_SW_Delay_ms 005A  
                    ??_SW_Delay_us 0051              __end_of_WH_NormalMode 04F2  
                      ?_ADC_Update 0070                      ??_SW_GetState 004D  
            GPIO_SetPinState@State 0050                     fp__DISP_Update 006D  
                ?_GPIO_GetPinState 004D             __size_of_SSD_SetSymbol 002F  
          __end_of_I2C_Master_Init 0DBE            __end_of_I2C_Master_Wait 080D  
               ??_GPIO_GetPinState 0050            __end_of_I2C_Master_Stop 1713  
                       _SCH_Update 0338                         _OPTION_REG 0081  
             __end_of_WH_ResetMode 0BA6                   ___lldiv@quotient 0063  
             GPIO_SetPinState@PINx 004F                EEPROM_Write@Address 004F  
              SW_Delay_us@Delay_us 004D              __size_of_SSD_SetState 002F  
                     ?_DISP_Update 0070                  _WH_PasswordFlag_G 006F  
                 _EEPROM_WritePage 07AF                  _WH_PasswordRead_G 00DC  
                  EEPROM_Read@Data 004F               SCH_Delete_Task@Index 0050  
                 EEPROM_ReadPage@i 0053                   SW_Delay_us@Delay 0055  
